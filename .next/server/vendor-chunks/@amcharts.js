"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@amcharts";
exports.ids = ["vendor-chunks/@amcharts"];
exports.modules = {

/***/ "(ssr)/./node_modules/@amcharts/amcharts5-geodata/worldLow.js":
/*!**************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5-geodata/worldLow.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst map = { \"type\": \"FeatureCollection\", \"features\": [\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[179.2223, -8.554], [179.2023, -8.4653], [179.2312, -8.5048], [179.2223, -8.554]]] }, \"properties\": { \"name\": \"Tuvalu\", \"id\": \"TV\" }, \"id\": \"TV\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[3.4624, -54.4471], [3.3461, -54.4511], [3.3669, -54.3997], [3.4814, -54.4001], [3.4624, -54.4471]]] }, \"properties\": { \"name\": \"Bouvet Island\", \"id\": \"BV\" }, \"id\": \"BV\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-5.3345, 36.1623], [-5.3382, 36.1122], [-5.3562, 36.1264], [-5.3551, 36.1455], [-5.3345, 36.1623]]] }, \"properties\": { \"name\": \"Gibraltar\", \"id\": \"GI\" }, \"id\": \"GI\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[47.3029, -11.5752], [47.282, -11.5747], [47.2789, -11.5574], [47.2971, -11.5543], [47.3029, -11.5752]]] }, \"properties\": { \"name\": \"Glorioso Islands\", \"id\": \"GO\" }, \"id\": \"GO\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[42.7579, -17.075], [42.7415, -17.0741], [42.7379, -17.0519], [42.761, -17.0652], [42.7579, -17.075]]] }, \"properties\": { \"name\": \"Juan De Nova Island\", \"id\": \"JU\" }, \"id\": \"JU\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-160.0213, -0.398], [-160.0453, -0.3802], [-160.0178, -0.3744], [-160.0213, -0.398]]] }, \"properties\": { \"name\": \"Jarvis Island\", \"id\": \"UM-DQ\" }, \"id\": \"UM-DQ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-176.456, 0.2226], [-176.4615, 0.215], [-176.4675, 0.2195], [-176.456, 0.2226]]] }, \"properties\": { \"name\": \"Baker Island\", \"id\": \"UM-FQ\" }, \"id\": \"UM-FQ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-176.6311, 0.7952], [-176.6433, 0.7934], [-176.6429, 0.8081], [-176.6329, 0.8085], [-176.6311, 0.7952]]] }, \"properties\": { \"name\": \"Howland Island\", \"id\": \"UM-HQ\" }, \"id\": \"UM-HQ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-169.5237, 16.7305], [-169.5388, 16.7243], [-169.5388, 16.7296], [-169.5237, 16.7305]]] }, \"properties\": { \"name\": \"Johnston Atoll\", \"id\": \"UM-JQ\" }, \"id\": \"UM-JQ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-177.3881, 28.1865], [-177.3879, 28.2144], [-177.3646, 28.2042], [-177.3881, 28.1865]]] }, \"properties\": { \"name\": \"Midway Islands\", \"id\": \"UM-MQ\" }, \"id\": \"UM-MQ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[166.6588, 19.2829], [166.6087, 19.3073], [166.6277, 19.3246], [166.6588, 19.3117], [166.6588, 19.2829]]] }, \"properties\": { \"name\": \"Wake Island\", \"id\": \"UM-WQ\" }, \"id\": \"UM-WQ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-68.2058, 12.1446], [-68.2873, 12.1717], [-68.3711, 12.2574], [-68.3694, 12.3018], [-68.2196, 12.2312], [-68.2058, 12.1446]]] }, \"properties\": { \"name\": \"Bonair, Saint Eustachius and Saba\", \"id\": \"BQ\" }, \"id\": \"BQ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[4.2263, 51.3865], [3.9023, 51.2076], [3.35, 51.3776], [4.2263, 51.3865]]], [[[4.2263, 51.3865], [3.5871, 51.454], [4.4829, 52.3091], [4.7687, 52.9412], [5.1203, 52.3881], [5.5611, 52.5948], [5.3755, 53.0957], [6.0622, 53.4071], [6.8164, 53.4413], [7.1973, 53.2823], [7.0352, 52.3801], [6.7418, 51.9109], [5.9486, 51.7625], [6.1932, 51.4888], [5.8949, 50.9843], [5.9939, 50.7504], [5.7972, 50.7546], [5.6938, 50.7748], [5.827, 51.1257], [4.5033, 51.4746], [4.2263, 51.3865]]]] }, \"properties\": { \"name\": \"Netherlands\", \"id\": \"NL\" }, \"id\": \"NL\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[31.2877, -22.4021], [30.4603, -22.3289], [29.6631, -22.1465], [29.3648, -22.194], [29.0372, -21.8113], [28.0455, -21.5729], [27.6696, -21.0642], [27.6997, -20.5307], [27.2807, -20.4788], [27.2217, -20.1458], [26.6784, -19.8928], [26.1683, -19.5381], [25.7613, -18.6495], [25.2242, -17.9153], [25.2588, -17.7936], [25.8634, -17.9521], [27.0206, -17.9583], [27.9323, -16.8961], [28.7606, -16.5321], [28.9129, -15.9879], [29.7297, -15.6448], [30.3959, -15.643], [30.4377, -15.9954], [31.2362, -16.0239], [31.9398, -16.4287], [32.2434, -16.4487], [32.9479, -16.7123], [32.9932, -18.3596], [32.7166, -19.0019], [33.0069, -19.8737], [32.4778, -20.7131], [32.3713, -21.335], [31.2877, -22.4021]]] }, \"properties\": { \"name\": \"Zimbabwe\", \"id\": \"ZW\" }, \"id\": \"ZW\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[32.9199, -9.4072], [33.3509, -9.8622], [33.659, -10.5906], [33.2613, -10.8934], [33.3798, -11.1579], [33.2262, -11.5348], [33.2524, -12.1127], [33.398, -12.49], [33.0216, -12.6303], [32.9679, -13.2251], [32.6722, -13.6104], [32.9812, -14.0095], [33.2018, -14.0135], [31.729, -14.496], [30.2317, -14.9905], [30.3959, -15.643], [29.7297, -15.6448], [28.9129, -15.9879], [28.7606, -16.5321], [27.9323, -16.8961], [27.0206, -17.9583], [25.8634, -17.9521], [25.2588, -17.7936], [24.9325, -17.5433], [24.2751, -17.4812], [23.3807, -17.6405], [22.1507, -16.5974], [21.9798, -15.9555], [21.9789, -13.0009], [23.8432, -13.0009], [23.9915, -12.4221], [23.9666, -10.8716], [24.32, -11.0718], [24.5184, -11.4384], [25.1847, -11.2431], [25.3493, -11.6231], [26.0258, -11.8903], [26.5962, -11.972], [26.9496, -11.8988], [27.0459, -11.616], [27.5333, -12.1953], [28.3576, -12.482], [29.0141, -13.3689], [29.5543, -13.2491], [29.7954, -13.3929], [29.7954, -12.1553], [29.4274, -12.4314], [29.0643, -12.3489], [28.4823, -11.8122], [28.3572, -11.4828], [28.639, -10.6692], [28.6301, -9.8311], [28.4007, -9.2248], [28.9178, -8.7005], [28.9724, -8.4648], [30.7511, -8.1936], [31.0764, -8.6117], [31.3508, -8.6069], [31.9425, -9.0539], [32.4334, -9.1564], [32.9199, -9.4072]]] }, \"properties\": { \"name\": \"Zambia\", \"id\": \"ZM\" }, \"id\": \"ZM\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[31.2877, -22.4021], [31.5456, -23.4821], [31.7995, -23.8923], [31.986, -24.4605], [31.9482, -25.9577], [31.4151, -25.7464], [31.2074, -25.8432], [30.8034, -26.4136], [30.7941, -26.7643], [31.0636, -27.1123], [31.4697, -27.2956], [31.9584, -27.3058], [32.1129, -26.8393], [32.8862, -26.8495], [32.5346, -28.1998], [32.2856, -28.6215], [31.7782, -28.9371], [31.3352, -29.3779], [30.2885, -30.9701], [28.8561, -32.2943], [27.8604, -33.0538], [27.0774, -33.5212], [26.4293, -33.7596], [25.9894, -33.7112], [25.6383, -34.0112], [25.0031, -33.9735], [24.8273, -34.1688], [23.5858, -33.9851], [23.2684, -34.0814], [22.2456, -34.0694], [21.7889, -34.3726], [21.06, -34.3646], [20.53, -34.4631], [20.0204, -34.7858], [19.6351, -34.7534], [18.8086, -34.108], [18.3545, -33.9389], [18.4331, -33.7174], [17.8782, -32.9614], [18.2511, -32.652], [18.3105, -32.1225], [18.2107, -31.7425], [17.6776, -31.019], [17.1893, -30.0997], [16.95, -29.4036], [16.4475, -28.6175], [16.7556, -28.4524], [17.0561, -28.0311], [17.3855, -28.3534], [17.4481, -28.6983], [18.1028, -28.8719], [19.2458, -28.9016], [19.6715, -28.5039], [19.9805, -28.4515], [19.9805, -26.5312], [19.9805, -24.777], [20.3453, -25.03], [20.7932, -25.9155], [20.6268, -26.4438], [20.74, -26.849], [21.6464, -26.8544], [22.0907, -26.5801], [22.6403, -26.0714], [22.8786, -25.4579], [23.2662, -25.2666], [23.8938, -25.6008], [24.7483, -25.8174], [25.5837, -25.6062], [25.9122, -24.7477], [26.3974, -24.6136], [26.835, -24.2407], [27.1462, -23.5243], [27.8906, -23.0737], [28.2102, -22.6938], [28.8397, -22.4807], [29.3648, -22.194], [29.6631, -22.1465], [30.4603, -22.3289], [31.2877, -22.4021]], [[27.8303, -28.9091], [27.2945, -29.5195], [27.0517, -29.6642], [27.3886, -30.3158], [28.018, -30.6421], [28.3922, -30.1476], [29.098, -29.919], [29.3905, -29.2696], [29.3013, -29.0898], [28.6257, -28.5816], [27.8303, -28.9091]]] }, \"properties\": { \"name\": \"South Africa\", \"id\": \"ZA\" }, \"id\": \"ZA\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[53.0855, 16.6484], [52.3278, 16.2937], [52.2177, 15.6554], [51.6038, 15.3367], [50.5269, 15.0384], [50.1669, 14.8511], [49.3497, 14.638], [48.6683, 14.0503], [47.9901, 14.0481], [47.4077, 13.6614], [46.7889, 13.4657], [45.6574, 13.3387], [45.0386, 12.8158], [44.6178, 12.8171], [43.9298, 12.6165], [43.4752, 12.8389], [43.232, 13.2672], [43.2826, 13.6397], [43.089, 14.0108], [43.0211, 14.555], [42.7171, 15.6545], [42.7992, 16.3718], [43.1649, 16.6892], [43.1911, 17.3595], [43.418, 17.5162], [43.9169, 17.3249], [44.1557, 17.3986], [45.1483, 17.4274], [45.4066, 17.32], [46.3104, 17.2312], [46.6819, 17.2685], [46.9758, 16.9533], [47.4418, 17.1118], [47.5795, 17.4483], [48.172, 18.1567], [49.0421, 18.582], [51.9775, 18.9961], [52.729, 17.3005], [53.0855, 16.6484]]] }, \"properties\": { \"name\": \"Yemen\", \"id\": \"YE\" }, \"id\": \"YE\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-172.3335, -13.4653], [-172.225, -13.8044], [-172.5357, -13.7915], [-172.7441, -13.5789], [-172.3335, -13.4653]]] }, \"properties\": { \"name\": \"Samoa\", \"id\": \"WS\" }, \"id\": \"WS\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-178.0467, -14.3184], [-178.1585, -14.3118], [-178.1423, -14.2425], [-178.0467, -14.3184]]] }, \"properties\": { \"name\": \"Wallis and Futuna\", \"id\": \"WF\" }, \"id\": \"WF\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[34.2454, 31.2085], [34.1983, 31.3226], [34.4775, 31.5849], [34.2454, 31.2085]]], [[[35.4505, 31.4793], [34.9507, 31.6022], [34.9561, 32.1611], [35.1931, 32.5344], [35.5513, 32.3955], [35.5589, 31.7656], [35.4505, 31.4793]]]] }, \"properties\": { \"name\": \"Palestinian Territories\", \"id\": \"PS\" }, \"id\": \"PS\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[166.7458, -14.8267], [166.8102, -15.1574], [167.1316, -15.1352], [167.1995, -15.4859], [166.8257, -15.635], [166.6313, -15.406], [166.5274, -14.8502], [166.7458, -14.8267]]], [[[167.4125, -16.0958], [167.8365, -16.4495], [167.4494, -16.5552], [167.4125, -16.0958]]]] }, \"properties\": { \"name\": \"Vanuatu\", \"id\": \"VU\" }, \"id\": \"VU\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[107.9727, 21.5081], [107.4099, 21.2848], [107.3544, 21.0553], [106.6757, 20.9603], [106.7534, 20.7348], [106.5181, 20.2887], [105.9841, 19.9389], [105.6219, 18.9664], [105.8882, 18.5025], [106.499, 17.9463], [106.479, 17.7195], [107.1804, 16.8978], [108.0296, 16.331], [108.8215, 15.378], [109.0847, 14.7161], [109.3035, 13.8563], [109.272, 13.2792], [109.4238, 12.9561], [109.2187, 12.6458], [109.1988, 11.7247], [108.8206, 11.3155], [108.2715, 10.9342], [107.2616, 10.3984], [106.8128, 10.4334], [106.5723, 9.6411], [105.5011, 9.0933], [105.3223, 8.8013], [104.8921, 8.5833], [104.8184, 8.8017], [104.8451, 9.606], [105.028, 10.0672], [104.6635, 10.1698], [104.4265, 10.4112], [104.8504, 10.5347], [105.3866, 10.9399], [106.1679, 11.0123], [105.8558, 11.2941], [105.8514, 11.6351], [106.3401, 11.6817], [106.4138, 11.9484], [106.9305, 12.0776], [107.5062, 12.3644], [107.4756, 13.0302], [107.6056, 13.4377], [107.3313, 14.1266], [107.5195, 14.705], [107.6531, 15.255], [107.1897, 15.7473], [107.3966, 16.0429], [106.6961, 16.4588], [106.5021, 16.9542], [105.6916, 17.7377], [105.4581, 18.1545], [105.0857, 18.4501], [105.115, 18.6787], [104.7163, 18.8035], [103.8965, 19.3401], [104.0319, 19.6753], [104.5463, 19.6105], [104.9281, 20.018], [104.6187, 20.3744], [104.5832, 20.6465], [104.0518, 20.9413], [103.635, 20.6971], [103.1046, 20.8915], [102.8511, 21.2657], [102.9488, 21.5698], [102.1276, 22.379], [102.5173, 22.7408], [103.0051, 22.4532], [103.3008, 22.7643], [104.3719, 22.704], [104.7958, 22.9112], [104.8646, 23.1363], [105.2752, 23.3454], [105.8429, 22.9228], [106.5421, 22.9081], [106.7804, 22.779], [106.5363, 22.3954], [106.7294, 22.0004], [107.3513, 21.6089], [107.9727, 21.5081]]] }, \"properties\": { \"name\": \"Vietnam\", \"id\": \"VN\" }, \"id\": \"VN\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-64.7656, 17.7945], [-64.6862, 17.7062], [-64.889, 17.7017], [-64.8848, 17.7723], [-64.7656, 17.7945]]] }, \"properties\": { \"name\": \"US Virgin Islands\", \"id\": \"VI\" }, \"id\": \"VI\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-64.3952, 18.4648], [-64.4261, 18.5132], [-64.3246, 18.5176], [-64.3952, 18.4648]]] }, \"properties\": { \"name\": \"British Virgin Islands\", \"id\": \"VG\" }, \"id\": \"VG\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-60.0175, 8.5491], [-59.8315, 8.3059], [-60.0324, 8.0537], [-60.5136, 7.8131], [-60.7191, 7.4989], [-60.3951, 6.9453], [-61.1457, 6.6945], [-61.1286, 6.2142], [-61.3767, 5.9071], [-60.7422, 5.2022], [-60.6046, 4.9944], [-61.0028, 4.5354], [-62.1531, 4.0982], [-62.7122, 4.0179], [-62.9685, 3.594], [-63.2948, 3.9224], [-64.0214, 3.9291], [-64.2556, 4.1404], [-64.5679, 3.8998], [-64.2212, 3.5873], [-64.2188, 3.2047], [-63.9242, 2.4523], [-63.3893, 2.4119], [-63.394, 2.2223], [-64.0354, 1.9045], [-64.1149, 1.6191], [-65.1037, 1.1082], [-65.3609, 0.8685], [-65.6814, 0.9834], [-66.06, 0.7854], [-66.4293, 0.8218], [-66.8761, 1.2231], [-67.2108, 2.3901], [-67.8347, 2.8926], [-67.3111, 3.416], [-67.6616, 3.8643], [-67.8553, 4.507], [-67.8249, 5.2705], [-67.4394, 6.0256], [-67.8591, 6.2897], [-68.4717, 6.1565], [-69.4392, 6.1348], [-70.095, 6.9378], [-70.6552, 7.0829], [-71.0134, 6.9946], [-72.0843, 7.0967], [-72.443, 7.4549], [-72.4166, 8.3818], [-72.6654, 8.6277], [-72.7963, 9.1089], [-73.3563, 9.2269], [-73.0065, 9.7894], [-72.8693, 10.4911], [-72.6902, 10.8361], [-72.2485, 11.1965], [-71.958, 11.6666], [-71.3197, 11.8619], [-71.8686, 11.6275], [-71.9469, 11.4144], [-71.5942, 10.6572], [-72.1129, 9.8155], [-71.6868, 9.0725], [-71.2979, 9.1257], [-71.0858, 9.3481], [-71.0527, 9.7059], [-71.3867, 10.2639], [-71.5445, 10.7788], [-71.4695, 10.9643], [-70.2326, 11.3732], [-70.2865, 11.8859], [-70.004, 12.1779], [-69.6316, 11.4801], [-68.8279, 11.4318], [-68.3987, 11.161], [-68.234, 10.5693], [-67.8715, 10.4721], [-66.9891, 10.6106], [-66.2471, 10.6323], [-65.8518, 10.2577], [-65.1292, 10.0699], [-64.8504, 10.0979], [-63.8734, 10.6638], [-62.7024, 10.7499], [-62.8429, 10.4179], [-62.5151, 10.176], [-60.7923, 9.3606], [-61.0531, 9.0951], [-61.3039, 8.4102], [-60.801, 8.5922], [-60.0175, 8.5491]]] }, \"properties\": { \"name\": \"Venezuela\", \"id\": \"VE\" }, \"id\": \"VE\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-61.1745, 13.1581], [-61.2773, 13.2095], [-61.1821, 13.356], [-61.1239, 13.2939], [-61.1745, 13.1581]]] }, \"properties\": { \"name\": \"Saint Vincent and the Grenadines\", \"id\": \"VC\" }, \"id\": \"VC\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[12.4392, 41.8983], [12.4307, 41.8974], [12.4307, 41.9054], [12.4383, 41.9063], [12.4392, 41.8983]]] }, \"properties\": { \"name\": \"Vatican City\", \"id\": \"VA\" }, \"id\": \"VA\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[70.9468, 42.2485], [70.8421, 42.0195], [70.1811, 41.5716], [70.7826, 41.2626], [71.4085, 41.1361], [71.7924, 41.4131], [72.6585, 40.8698], [73.113, 40.7859], [71.6926, 40.1525], [70.9579, 40.239], [70.3826, 40.4534], [70.7511, 40.7397], [70.4417, 41.0234], [69.7128, 40.6572], [69.2063, 40.5666], [69.2281, 40.1875], [68.6528, 40.1827], [68.4632, 39.5368], [67.7193, 39.6216], [67.3495, 39.242], [67.6767, 39.0086], [68.1037, 38.9619], [68.0478, 38.6694], [68.2941, 38.0329], [67.8143, 37.4869], [67.7592, 37.1722], [67.069, 37.3346], [66.5221, 37.3484], [66.5745, 38.0107], [65.8572, 38.2686], [65.613, 38.2384], [64.1628, 38.9535], [62.6505, 39.8586], [61.903, 41.0935], [60.455, 41.2218], [60.0897, 41.3994], [60.107, 41.9076], [59.8584, 42.2951], [59.4509, 42.2996], [58.5889, 42.7785], [58.2595, 42.688], [57.8143, 42.1899], [57.3819, 42.1562], [56.9642, 41.8566], [57.0179, 41.2635], [55.9774, 41.3221], [55.9766, 42.929], [55.9757, 44.9949], [58.5551, 45.5555], [61.0081, 44.3939], [61.1608, 44.1688], [61.9904, 43.4923], [63.2071, 43.6281], [64.4434, 43.5513], [64.9054, 43.7147], [65.4963, 43.3108], [65.803, 42.8771], [66.1004, 42.9907], [66.0094, 42.0048], [66.4986, 41.9951], [66.6686, 41.2706], [66.8142, 41.1423], [67.9359, 41.1965], [68.2919, 40.6563], [69.0652, 41.367], [70.0954, 41.8206], [70.4159, 42.0785], [70.9468, 42.2485]]] }, \"properties\": { \"name\": \"Uzbekistan\", \"id\": \"UZ\" }, \"id\": \"UZ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-166.1355, 60.3835], [-165.7298, 60.3143], [-165.5917, 59.9132], [-166.1876, 59.7738], [-167.1389, 60.0086], [-166.1355, 60.3835]]], [[[-171.4631, 63.6401], [-170.4304, 63.6989], [-169.7778, 63.0937], [-171.4631, 63.6401]]], [[[-141.0021, 69.6509], [-141.0021, 68.4819], [-141.0021, 65.56], [-141.0021, 63.2222], [-141.0021, 60.3003], [-139.1852, 60.0837], [-137.5932, 59.2263], [-137.4385, 58.9031], [-136.5787, 59.1522], [-136.3219, 59.6049], [-135.4759, 59.7934], [-134.9439, 59.2882], [-133.8208, 58.7049], [-131.8661, 56.7929], [-131.5752, 56.5989], [-130.4772, 56.2307], [-130.0251, 55.8882], [-130.0366, 55.2978], [-130.2142, 55.026], [-130.5753, 54.7696], [-131.0478, 55.1576], [-130.9186, 55.736], [-131.8439, 56.1601], [-132.8143, 57.0408], [-133.4659, 57.1722], [-133.5543, 57.6951], [-134.0634, 58.2111], [-134.7761, 58.4539], [-135.3025, 58.2559], [-135.8618, 58.5771], [-136.5827, 58.2453], [-137.544, 58.5811], [-138.3525, 59.0873], [-140.2168, 59.7266], [-140.8432, 59.749], [-141.6702, 59.9698], [-142.9457, 60.097], [-143.8051, 60.0129], [-144.9012, 60.3351], [-145.8989, 60.4783], [-146.8741, 61.005], [-148.3445, 60.8536], [-148.1976, 60.1678], [-148.4306, 59.9891], [-149.4323, 60.0011], [-150.9608, 59.244], [-151.7383, 59.1886], [-151.7345, 59.9882], [-151.4515, 60.2026], [-151.3217, 60.7428], [-150.4412, 61.0236], [-150.6124, 61.3013], [-151.7341, 60.9106], [-151.7505, 60.7548], [-153.1061, 59.875], [-154.0883, 59.3632], [-154.1298, 59.12], [-153.327, 58.8843], [-154.0199, 58.493], [-154.2469, 58.1594], [-155.0069, 58.016], [-156.4784, 57.328], [-156.4751, 57.1051], [-157.5784, 56.6344], [-158.4144, 56.4358], [-158.2757, 56.1963], [-159.5233, 55.8101], [-159.9623, 55.7948], [-161.0995, 55.4057], [-161.7416, 55.3911], [-162.0741, 55.1394], [-162.8651, 54.9545], [-162.9621, 55.1838], [-162.1571, 55.7195], [-161.2156, 56.0214], [-160.8514, 55.7719], [-160.3021, 56.3141], [-159.2831, 56.6886], [-158.321, 57.2978], [-157.6077, 57.6014], [-157.5235, 58.4213], [-158.5032, 58.8503], [-159.0827, 58.4697], [-159.6702, 58.9111], [-160.3631, 59.0512], [-161.7554, 58.6119], [-161.8286, 59.5887], [-162.2425, 60.1782], [-163.2193, 59.8455], [-163.9069, 59.8067], [-164.6622, 60.3038], [-165.3538, 60.5413], [-164.8051, 60.892], [-165.566, 61.1024], [-166.0789, 61.8031], [-165.1944, 62.4736], [-164.409, 63.2151], [-163.3589, 63.0458], [-161.974, 63.453], [-161.0997, 63.558], [-160.7786, 63.819], [-160.932, 64.5792], [-161.7594, 64.8162], [-162.807, 64.3743], [-163.7132, 64.5883], [-164.8995, 64.4607], [-166.1428, 64.5827], [-167.4039, 65.4221], [-168.0884, 65.6578], [-164.6742, 66.5549], [-163.7755, 66.5312], [-163.6954, 66.0838], [-161.8164, 66.0536], [-161.557, 66.2504], [-160.2317, 66.4202], [-160.864, 66.6708], [-161.8566, 66.7003], [-161.9653, 67.0497], [-163.0016, 67.0272], [-163.7205, 67.1955], [-164.1251, 67.6067], [-166.3805, 68.4251], [-166.2092, 68.8854], [-164.3024, 68.9364], [-163.1614, 69.3879], [-162.9521, 69.7581], [-161.881, 70.3318], [-160.9963, 70.3045], [-159.3144, 70.8785], [-157.9985, 70.8454], [-156.7833, 71.319], [-155.1669, 71.0993], [-154.1952, 70.801], [-153.2329, 70.9326], [-152.233, 70.8103], [-151.9447, 70.4521], [-149.2694, 70.5007], [-147.7053, 70.2173], [-145.8232, 70.16], [-145.1973, 70.0086], [-143.2184, 70.1163], [-141.4078, 69.6533], [-141.0021, 69.6509]]], [[[-155.5813, 19.0121], [-155.8814, 19.0707], [-156.0487, 19.7498], [-155.8316, 20.2759], [-155.1989, 19.9944], [-154.8043, 19.5244], [-155.5813, 19.0121]]], [[[-72.5098, 40.9861], [-73.1943, 40.6541], [-73.5738, 40.9195], [-72.5098, 40.9861]]], [[[-93.3778, 48.6166], [-92.9963, 48.6117], [-91.5183, 48.0582], [-90.8403, 48.2007], [-89.4556, 47.996], [-88.3782, 48.3032], [-84.8759, 46.9001], [-84.5617, 46.4575], [-84.1921, 46.5494], [-83.9777, 46.0851], [-83.5926, 45.817], [-82.5511, 45.3473], [-82.1378, 43.5709], [-82.5453, 42.6245], [-83.0731, 42.3005], [-83.1419, 41.976], [-82.439, 41.675], [-81.2778, 42.209], [-80.2475, 42.3662], [-79.0368, 42.8025], [-79.1719, 43.4666], [-78.7205, 43.625], [-76.82, 43.6286], [-76.4646, 44.0574], [-75.1793, 44.8994], [-74.7088, 45.0038], [-71.5175, 45.0078], [-71.3272, 45.2901], [-70.898, 45.2626], [-70.2963, 45.9062], [-70.0078, 46.7088], [-69.243, 47.4629], [-68.8288, 47.2032], [-68.311, 47.3546], [-67.8067, 47.083], [-67.7845, 45.7016], [-67.4328, 45.603], [-67.4725, 45.2759], [-67.1249, 45.1693], [-67.1067, 44.8852], [-67.9071, 44.4538], [-68.2775, 44.5075], [-69.7916, 43.8053], [-70.1789, 43.7662], [-70.829, 42.8251], [-71.0463, 42.3311], [-70.7382, 42.229], [-70.4046, 41.6271], [-70.6572, 41.5343], [-71.4265, 41.6333], [-71.5228, 41.3789], [-72.8471, 41.2657], [-73.5831, 41.022], [-74.2267, 40.6079], [-73.9575, 40.3282], [-74.1761, 39.7268], [-74.4289, 39.3872], [-74.897, 39.1453], [-75.3922, 39.0929], [-75.036, 38.5034], [-75.6592, 37.9539], [-76.2948, 38.4945], [-76.2635, 37.3568], [-75.8905, 36.6568], [-76.4788, 36.0283], [-75.7722, 35.9], [-75.7739, 35.647], [-76.513, 35.2705], [-76.7449, 34.9412], [-77.7508, 34.2851], [-78.0134, 33.9118], [-78.5778, 33.8732], [-78.9202, 33.6588], [-79.276, 33.1354], [-80.8492, 32.114], [-81.5203, 30.8747], [-81.2496, 29.7938], [-80.9, 29.0498], [-80.524, 28.4861], [-80.6501, 28.1811], [-80.2262, 27.2072], [-80.0413, 26.5685], [-80.1263, 25.8334], [-80.3669, 25.3313], [-80.7366, 25.1565], [-81.0978, 25.3194], [-81.365, 25.8312], [-81.7154, 25.983], [-81.8666, 26.4349], [-82.4414, 27.0599], [-82.6609, 27.7186], [-82.8436, 27.846], [-82.6607, 28.4857], [-82.6516, 28.8874], [-83.2906, 29.452], [-83.6943, 29.9261], [-84.0443, 30.1036], [-84.3828, 29.9074], [-85.3189, 29.6802], [-85.3536, 29.8759], [-86.2573, 30.4929], [-87.7903, 30.2918], [-88.9051, 30.4152], [-89.5885, 30.1658], [-90.2253, 30.3793], [-90.4131, 30.1405], [-89.5894, 29.915], [-90.1014, 29.1817], [-90.3793, 29.2953], [-90.7511, 29.1311], [-91.2902, 29.2891], [-91.331, 29.5137], [-91.8932, 29.836], [-92.2608, 29.5568], [-93.1756, 29.7792], [-93.6947, 29.7698], [-94.8884, 29.3708], [-95.2734, 28.9637], [-95.8534, 28.6401], [-96.4487, 28.5944], [-96.5616, 28.3671], [-97.1564, 28.1443], [-97.1715, 27.8797], [-97.5546, 26.9675], [-97.4024, 26.3967], [-97.1462, 25.9617], [-97.3582, 25.8707], [-98.0828, 26.0642], [-99.1078, 26.4469], [-99.4436, 27.0368], [-99.5053, 27.5482], [-100.2961, 28.3276], [-100.6587, 29.0685], [-101.4404, 29.7769], [-102.269, 29.871], [-102.7342, 29.6438], [-102.892, 29.2163], [-103.2577, 29.001], [-104.1107, 29.3863], [-104.504, 29.6775], [-104.9179, 30.5835], [-106.2558, 31.5445], [-106.4533, 31.77], [-108.2118, 31.7793], [-108.2145, 31.3292], [-111.042, 31.3243], [-112.939, 31.916], [-114.836, 32.5082], [-114.7248, 32.7155], [-117.1282, 32.5335], [-117.4674, 33.2957], [-118.5063, 34.0174], [-119.1437, 34.112], [-119.6061, 34.4178], [-120.4812, 34.4715], [-120.6448, 34.5798], [-120.6337, 35.0766], [-120.8603, 35.3655], [-121.8774, 36.331], [-121.79, 36.7323], [-122.3948, 37.2077], [-122.4669, 37.838], [-122.9681, 38.0968], [-122.9865, 38.277], [-123.7012, 38.9073], [-123.8845, 39.8608], [-124.324, 40.2519], [-124.3717, 40.4912], [-124.0685, 41.3843], [-124.5397, 42.8127], [-124.1486, 43.6916], [-123.9293, 45.5768], [-124.0716, 46.7447], [-124.3761, 47.6587], [-124.6211, 47.9042], [-124.6327, 48.3751], [-123.9757, 48.1683], [-122.2421, 48.0107], [-122.7888, 48.993], [-120.1281, 48.993], [-118.4226, 48.993], [-115.8643, 48.993], [-112.4532, 48.993], [-109.895, 48.993], [-106.4839, 48.993], [-103.9256, 48.993], [-102.2201, 48.993], [-99.2354, 48.993], [-97.5297, 48.9932], [-95.162, 48.9917], [-94.6209, 48.7427], [-93.7078, 48.5256], [-93.3778, 48.6166]]], [[[-163.4761, 54.9807], [-163.3581, 54.7357], [-164.5907, 54.4043], [-164.8877, 54.6078], [-164.5297, 54.8808], [-163.4761, 54.9807]]], [[[-130.9792, 55.4892], [-131.0827, 55.2668], [-131.8111, 55.223], [-131.6249, 55.8316], [-130.9792, 55.4892]]], [[[-133.566, 56.3392], [-133.2029, 56.3199], [-131.9764, 55.2086], [-131.9809, 54.8049], [-132.7823, 55.0484], [-133.4471, 55.797], [-133.566, 56.3392]]], [[[-133.3663, 57.0035], [-132.9541, 56.8803], [-133.2127, 56.4646], [-133.6029, 56.4642], [-133.8661, 57.0687], [-133.3663, 57.0035]]], [[[-134.9698, 57.3515], [-134.6207, 56.7183], [-135.787, 57.3173], [-134.9698, 57.3515]]], [[[-152.898, 57.8238], [-152.4121, 57.4547], [-153.7933, 56.9895], [-154.3391, 56.9209], [-154.7059, 57.3353], [-154.2813, 57.638], [-153.8184, 57.5956], [-152.898, 57.8238]]], [[[-135.7304, 58.2442], [-135.002, 58.0511], [-135.0848, 57.5111], [-136.0767, 57.6747], [-136.5123, 58.0959], [-135.7304, 58.2442]]], [[[-134.6802, 58.1616], [-133.9611, 57.6143], [-133.9253, 57.3369], [-134.4354, 57.057], [-134.66, 57.638], [-134.6802, 58.1616]]]] }, \"properties\": { \"name\": \"United States\", \"id\": \"US\" }, \"id\": \"US\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-53.3707, -33.7422], [-53.7853, -34.3806], [-54.1686, -34.6709], [-54.9023, -34.9328], [-55.6732, -34.7756], [-56.1179, -34.9079], [-56.8552, -34.6766], [-57.1706, -34.4525], [-57.8291, -34.4773], [-58.4002, -33.9123], [-58.3534, -33.2602], [-58.0824, -32.8935], [-58.2011, -32.4718], [-58.1889, -31.9241], [-57.8105, -30.8587], [-57.8724, -30.5911], [-57.609, -30.188], [-57.2144, -30.2834], [-56.8328, -30.1072], [-56.1761, -30.6283], [-55.8736, -31.0696], [-55.5573, -30.876], [-55.2546, -31.2258], [-54.5876, -31.4851], [-54.2205, -31.8553], [-53.7618, -32.0568], [-53.6017, -32.403], [-53.1254, -32.7368], [-53.5314, -33.171], [-53.3707, -33.7422]]] }, \"properties\": { \"name\": \"Uruguay\", \"id\": \"UY\" }, \"id\": \"UY\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[38.2142, 47.0914], [37.5435, 47.0745], [37.3398, 46.9169], [36.2793, 46.6586], [35.827, 46.6244], [34.8495, 46.1898], [35.0231, 45.7011], [35.558, 45.3109], [36.1705, 45.453], [36.3934, 45.0655], [35.5695, 45.1192], [35.0879, 44.8027], [34.7168, 44.8071], [33.9098, 44.3876], [33.4508, 44.5537], [33.5551, 45.0979], [32.508, 45.4037], [33.6648, 45.947], [33.2022, 46.1756], [32.4769, 46.0838], [32.0357, 46.2609], [31.9744, 46.7088], [30.7963, 46.5521], [30.2193, 45.8667], [29.6018, 45.6825], [29.7061, 45.2599], [29.2236, 45.4028], [28.7606, 45.2341], [28.2124, 45.4503], [28.9475, 46.05], [29.1464, 46.5268], [29.838, 46.3505], [29.8779, 46.829], [29.5494, 47.2467], [29.1597, 47.4558], [29.1948, 47.8824], [27.5493, 48.4777], [26.6189, 48.2597], [26.1625, 47.9925], [24.8935, 47.7177], [23.2027, 48.0844], [22.8764, 47.9472], [22.132, 48.4053], [22.5386, 49.0727], [22.6496, 49.539], [23.7118, 50.3773], [24.1056, 50.8449], [23.6053, 51.5179], [24.3617, 51.8674], [25.9251, 51.9136], [27.1422, 51.752], [27.2701, 51.6135], [28.5991, 51.5427], [29.1357, 51.6173], [29.3466, 51.3825], [30.5331, 51.5964], [30.9806, 52.0461], [31.7636, 52.1012], [32.508, 52.3084], [33.7353, 52.3448], [34.3976, 51.7804], [34.2809, 51.3117], [35.3121, 51.0438], [35.4115, 50.5398], [36.3059, 50.2805], [37.4228, 50.4115], [38.0469, 49.9201], [38.2586, 50.0524], [39.1748, 49.8559], [39.7807, 49.5721], [40.0701, 49.2003], [39.6866, 49.0079], [39.9609, 48.238], [39.7359, 47.8447], [38.9005, 47.8553], [38.2875, 47.5592], [38.2142, 47.0914]]] }, \"properties\": { \"name\": \"Ukraine\", \"id\": \"UA\" }, \"id\": \"UA\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[33.9031, -1.0021], [32.1942, -1.0021], [30.8447, -1.0021], [30.51, -1.0674], [30.1016, -1.3688], [29.577, -1.3878], [29.5619, -0.9772], [29.7177, 0.0983], [29.9343, 0.4991], [29.9427, 0.8192], [30.9424, 1.683], [31.2527, 2.0448], [31.1763, 2.2703], [30.7284, 2.4554], [30.8385, 3.4905], [31.1523, 3.7857], [31.4799, 3.6805], [31.7982, 3.8026], [32.0996, 3.5291], [32.3358, 3.7063], [32.8382, 3.7986], [33.4894, 3.7551], [33.9759, 4.2203], [34.165, 3.8128], [34.3928, 3.6916], [34.4478, 3.1634], [34.7425, 2.818], [34.964, 2.0625], [34.9654, 1.6435], [34.7874, 1.2307], [34.4815, 1.042], [33.9431, 0.1738], [33.9031, -1.0021]]] }, \"properties\": { \"name\": \"Uganda\", \"id\": \"UG\" }, \"id\": \"UG\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[33.9031, -1.0021], [34.7709, -1.4416], [36.2633, -2.2747], [37.6438, -3.0453], [37.6087, -3.4604], [37.7974, -3.6743], [39.2219, -4.6922], [38.8192, -5.8778], [38.8738, -6.3315], [39.4722, -6.8788], [39.5193, -7.1243], [39.2884, -7.518], [39.4411, -8.0116], [39.304, -8.444], [39.7838, -9.9146], [40.4634, -10.4641], [39.9889, -10.821], [39.3217, -11.1224], [38.7948, -11.2289], [38.4917, -11.4131], [37.9204, -11.2946], [37.5417, -11.675], [36.9789, -11.5667], [36.5185, -11.7163], [35.7852, -11.4531], [35.6312, -11.5818], [34.9596, -11.5783], [34.608, -11.0807], [34.6617, -10.71], [34.5241, -10.03], [34.3208, -9.7317], [32.9199, -9.4072], [32.4334, -9.1564], [31.9425, -9.0539], [31.3508, -8.6069], [31.0764, -8.6117], [30.7511, -8.1936], [30.3134, -7.2037], [29.7097, -6.6169], [29.4802, -6.0252], [29.5943, -5.651], [29.3426, -4.9829], [29.4034, -4.4494], [29.7177, -4.456], [30.1469, -4.0854], [30.4252, -3.5891], [30.7901, -3.2744], [30.5149, -2.9175], [30.5535, -2.3999], [30.8287, -2.3387], [30.8128, -1.5632], [30.51, -1.0674], [30.8447, -1.0021], [32.1942, -1.0021], [33.9031, -1.0021]]] }, \"properties\": { \"name\": \"Tanzania\", \"id\": \"TZ\" }, \"id\": \"TZ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[121.009, 22.6205], [120.5815, 22.3564], [120.3258, 22.5424], [120.0723, 23.1496], [120.1589, 23.7089], [121.0405, 25.0326], [121.5936, 25.2754], [121.9291, 24.9736], [121.2957, 22.9667], [121.009, 22.6205]]] }, \"properties\": { \"name\": \"Taiwan\", \"id\": \"TW\" }, \"id\": \"TW\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[41.5101, 41.5174], [42.4663, 41.4398], [42.7876, 41.5636], [43.4393, 41.1073], [43.7225, 40.7193], [43.5693, 40.4823], [43.7917, 40.0703], [44.2893, 40.0406], [44.7683, 39.7037], [44.8171, 39.6504], [44.023, 39.3774], [44.4309, 38.3569], [44.2112, 37.9081], [44.5614, 37.7448], [44.7652, 37.1424], [44.2818, 36.9782], [44.1562, 37.2831], [43.5161, 37.2445], [42.7748, 37.3719], [42.3588, 37.1087], [42.2683, 37.2765], [41.5154, 37.0892], [40.7058, 37.0976], [40.0164, 36.8259], [39.3568, 36.6817], [38.7669, 36.6932], [38.1916, 36.9014], [37.4365, 36.6435], [36.6584, 36.8024], [36.1275, 35.8316], [35.8927, 35.9164], [35.811, 36.3097], [36.1883, 36.659], [36.0489, 36.9107], [35.5375, 36.5969], [34.6014, 36.7847], [33.6945, 36.1819], [32.7947, 36.0358], [32.3775, 36.1836], [32.0219, 36.5352], [31.3525, 36.8011], [30.6441, 36.8654], [30.4838, 36.3106], [29.6893, 36.1565], [29.1433, 36.3971], [29.0381, 36.6937], [28.4837, 36.8037], [28.1339, 37.0297], [27.3491, 37.0195], [27.0779, 37.6875], [27.2323, 37.9787], [26.6828, 38.1985], [26.7636, 38.7098], [27.0135, 38.8869], [26.6819, 39.2922], [26.1133, 39.4675], [26.1812, 39.99], [26.7378, 40.4002], [27.4756, 40.3198], [28.2892, 40.4033], [29.3648, 40.8094], [29.3222, 41.2276], [31.2549, 41.1077], [31.4582, 41.3199], [32.3065, 41.7296], [33.3816, 42.0177], [34.7505, 41.9569], [35.2978, 41.7287], [36.0516, 41.6826], [36.5097, 41.2626], [38.3811, 40.9244], [39.4265, 41.1064], [40.2654, 40.9612], [40.9597, 41.2116], [41.5101, 41.5174]]], [[[28.0145, 41.9689], [28.3465, 41.4664], [29.0572, 41.2298], [28.7802, 40.9741], [28.172, 41.0806], [27.4996, 40.9732], [27.2581, 40.6874], [26.1053, 40.6114], [26.0391, 40.7269], [26.6246, 41.4016], [26.321, 41.7167], [26.6153, 41.9649], [27.2949, 42.0794], [28.0145, 41.9689]]]] }, \"properties\": { \"name\": \"Türkiye\", \"id\": \"TR\" }, \"id\": \"TR\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[11.5043, 33.182], [11.5048, 32.4137], [10.8265, 32.0807], [10.115, 31.4637], [10.2162, 30.7832], [9.8952, 30.3873], [9.5188, 30.2293], [9.0439, 32.0723], [8.3332, 32.5437], [8.2111, 32.9268], [7.7628, 33.2331], [7.5, 33.8323], [7.5138, 34.0805], [8.2457, 34.7339], [8.3944, 35.204], [8.2457, 35.8707], [8.2306, 36.5454], [8.5764, 36.9374], [9.6879, 37.3404], [10.1962, 37.2059], [10.5713, 36.8796], [11.1266, 36.8739], [10.5256, 36.3235], [10.5908, 35.8871], [11.0045, 35.6336], [11.1199, 35.2404], [10.5349, 34.5448], [10.0648, 34.2119], [10.1589, 33.8501], [10.7227, 33.5145], [11.0844, 33.5629], [11.2025, 33.2491], [11.5043, 33.182]]] }, \"properties\": { \"name\": \"Tunisia\", \"id\": \"TN\" }, \"id\": \"TN\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-61.0121, 10.1343], [-61.5967, 10.0646], [-61.4648, 10.5391], [-61.0338, 10.67], [-61.0121, 10.1343]]] }, \"properties\": { \"name\": \"Trinidad and Tobago\", \"id\": \"TT\" }, \"id\": \"TT\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-175.162, -21.1695], [-175.1567, -21.2636], [-175.3354, -21.1579], [-175.2255, -21.1188], [-175.162, -21.1695]]] }, \"properties\": { \"name\": \"Tonga\", \"id\": \"TO\" }, \"id\": \"TO\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[125.0679, -9.512], [124.9223, -8.9424], [125.178, -8.6477], [125.8043, -8.4923], [126.6198, -8.4595], [126.9149, -8.7152], [126.3823, -8.9575], [125.4079, -9.2758], [125.0679, -9.512]]] }, \"properties\": { \"name\": \"Timor-Leste\", \"id\": \"TL\" }, \"id\": \"TL\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[66.5221, 37.3484], [65.7648, 37.569], [65.5549, 37.2512], [64.8162, 37.1322], [64.5108, 36.3408], [63.8623, 36.0123], [63.1086, 35.8187], [63.0566, 35.4459], [62.6105, 35.2333], [61.262, 35.6194], [61.1195, 36.6426], [60.3413, 36.6377], [60.0626, 36.9631], [59.5623, 37.1788], [59.2409, 37.5206], [58.8157, 37.6835], [58.4357, 37.6387], [57.4236, 37.9477], [57.1937, 38.2162], [56.4409, 38.2495], [56.2287, 38.0733], [55.5784, 38.0999], [55.0755, 37.9024], [54.7452, 37.502], [53.9142, 37.3435], [53.8237, 37.9281], [53.8685, 38.9491], [53.6177, 39.2159], [53.125, 39.432], [53.4721, 39.6686], [53.4042, 39.9603], [52.9874, 39.9878], [52.7335, 40.3988], [53.1454, 40.825], [53.8698, 40.6487], [54.7101, 40.8911], [54.5921, 41.1934], [54.0949, 41.5192], [53.8463, 42.0914], [52.9701, 41.9764], [52.4938, 41.7802], [53.2502, 42.2059], [54.1211, 42.3351], [54.9037, 41.9192], [55.5451, 41.2626], [55.9774, 41.3221], [57.0179, 41.2635], [56.9642, 41.8566], [57.3819, 42.1562], [57.8143, 42.1899], [58.2595, 42.688], [58.5889, 42.7785], [59.4509, 42.2996], [59.8584, 42.2951], [60.107, 41.9076], [60.0897, 41.3994], [60.455, 41.2218], [61.903, 41.0935], [62.6505, 39.8586], [64.1628, 38.9535], [65.613, 38.2384], [65.8572, 38.2686], [66.5745, 38.0107], [66.5221, 37.3484]]] }, \"properties\": { \"name\": \"Turkmenistan\", \"id\": \"TM\" }, \"id\": \"TM\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-172.4791, -8.5807], [-172.4836, -8.5829], [-172.4987, -8.5478], [-172.4874, -8.5563], [-172.4791, -8.5807]]] }, \"properties\": { \"name\": \"Tokelau\", \"id\": \"TK\" }, \"id\": \"TK\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[70.9579, 40.239], [70.4514, 40.049], [69.9667, 40.2022], [69.5304, 40.0974], [69.229, 39.761], [69.5987, 39.5736], [70.6077, 39.5643], [70.7333, 39.4134], [71.4045, 39.598], [71.8062, 39.2758], [72.0428, 39.3521], [73.2351, 39.3743], [73.6315, 39.4489], [73.8015, 38.6068], [74.2773, 38.6597], [74.7452, 38.5101], [74.8912, 37.2317], [74.2596, 37.4154], [73.7496, 37.2317], [73.4814, 37.4718], [72.8955, 37.2676], [71.8022, 36.6941], [71.4329, 37.1273], [71.5518, 37.933], [71.2558, 38.3068], [70.8789, 38.4564], [70.2148, 37.9246], [70.2512, 37.664], [69.4922, 37.553], [69.2649, 37.1083], [68.9604, 37.3249], [68.0677, 36.9498], [67.7592, 37.1722], [67.8143, 37.4869], [68.2941, 38.0329], [68.0478, 38.6694], [68.1037, 38.9619], [67.6767, 39.0086], [67.3495, 39.242], [67.7193, 39.6216], [68.4632, 39.5368], [68.6528, 40.1827], [69.2281, 40.1875], [69.2063, 40.5666], [69.7128, 40.6572], [70.4417, 41.0234], [70.7511, 40.7397], [70.3826, 40.4534], [70.9579, 40.239]]] }, \"properties\": { \"name\": \"Tajikistan\", \"id\": \"TJ\" }, \"id\": \"TJ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[100.1225, 20.3167], [100.5429, 20.0885], [100.3977, 19.7561], [100.6254, 19.4999], [101.1546, 19.5794], [101.2864, 18.977], [101.0507, 18.4071], [101.1133, 18.0333], [100.9086, 17.5837], [101.1053, 17.4793], [102.1014, 18.2104], [102.7175, 17.8922], [103.0913, 18.1381], [103.3669, 18.4235], [103.9497, 18.3192], [104.8162, 17.3005], [104.7505, 16.6475], [105.047, 16.1601], [105.4062, 15.9874], [105.6223, 15.6998], [105.5131, 15.3606], [105.4754, 14.5301], [105.1833, 14.3464], [104.7789, 14.428], [103.1996, 14.3326], [102.729, 13.8421], [102.3198, 13.5398], [102.4995, 12.6698], [102.7557, 12.4261], [102.7366, 12.0896], [102.9341, 11.7065], [102.7628, 12.0124], [101.7236, 12.6893], [101.4449, 12.6187], [100.8634, 12.7146], [100.9628, 13.4319], [100.6561, 13.5212], [100.0173, 13.3534], [100.0901, 13.0457], [99.964, 12.6902], [99.9889, 12.1708], [99.6271, 11.4628], [99.4869, 10.8898], [99.165, 10.3198], [99.1606, 9.7339], [99.3936, 9.2136], [99.7239, 9.3144], [99.9046, 9.1129], [99.9605, 8.6712], [100.2792, 8.2686], [100.4537, 7.4425], [100.5864, 7.1762], [101.0178, 6.861], [101.4977, 6.8654], [102.1009, 6.2422], [101.8737, 5.8254], [101.5563, 5.908], [101.2571, 5.7894], [101.0533, 6.2427], [100.3453, 6.5498], [100.119, 6.442], [99.6959, 6.8765], [99.7203, 7.106], [99.051, 7.8877], [98.5791, 8.3445], [98.2382, 8.4231], [98.3714, 9.2904], [98.7025, 10.1902], [98.7571, 10.6612], [99.1903, 11.1051], [99.6147, 11.7811], [99.4052, 12.5477], [99.2196, 12.7399], [99.1366, 13.7165], [98.2462, 14.8147], [98.1911, 15.204], [98.5653, 15.4037], [98.6892, 16.3052], [98.4388, 16.9755], [97.793, 17.6813], [97.4849, 18.4941], [97.7539, 18.621], [97.8169, 19.46], [98.1112, 19.7623], [98.9169, 19.7729], [99.0208, 20.0419], [99.3382, 20.0788], [99.8904, 20.4246], [100.1225, 20.3167]]] }, \"properties\": { \"name\": \"Thailand\", \"id\": \"TH\" }, \"id\": \"TH\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[0.9007, 10.9932], [0.7799, 10.3598], [1.3299, 9.9971], [1.4244, 9.2851], [1.6002, 9.0498], [1.6224, 6.2169], [1.1874, 6.0895], [0.7369, 6.4526], [0.5256, 6.8508], [0.6348, 7.3537], [0.5837, 8.1456], [0.688, 8.3041], [0.4153, 8.6525], [0.5291, 9.3583], [0.2619, 9.4955], [0.3627, 10.2364], [-0.0577, 10.6305], [-0.0686, 11.1157], [0.9007, 10.9932]]] }, \"properties\": { \"name\": \"Togo\", \"id\": \"TG\" }, \"id\": \"TG\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[22.86, 10.9195], [22.4938, 10.9963], [21.7063, 10.5746], [21.7258, 10.3664], [21.2638, 9.9745], [20.7733, 9.4058], [20.3422, 9.1271], [19.1455, 9.0161], [19.1087, 8.6561], [18.4553, 8.032], [17.6496, 7.9836], [16.7849, 7.5508], [16.3787, 7.6835], [15.8452, 7.4753], [15.4803, 7.5237], [15.443, 7.8518], [15.1163, 8.5571], [14.3324, 9.2034], [13.9773, 9.6917], [14.2432, 9.9798], [15.5411, 9.9603], [15.1323, 10.6483], [15.0297, 11.1135], [15.0812, 11.8455], [14.7612, 12.6556], [14.5162, 12.9796], [14.0638, 13.0786], [13.6062, 13.7045], [13.4481, 14.3805], [14.3679, 15.7499], [15.4745, 16.9085], [15.7351, 19.9039], [15.949, 20.3034], [15.5873, 20.7335], [15.6072, 20.9546], [15.182, 21.5232], [15.1722, 21.9223], [14.9791, 22.996], [15.9841, 23.4452], [17.7521, 22.5721], [19.6684, 21.6257], [21.5847, 20.6794], [23.9804, 19.4968], [23.9822, 17.2663], [23.9835, 15.7801], [23.105, 15.7024], [22.9323, 15.1622], [22.6709, 14.7223], [22.3815, 14.5505], [22.5098, 14.1275], [22.1076, 13.7302], [22.2283, 13.3294], [21.8253, 12.7905], [22.3522, 12.6604], [22.5564, 11.6697], [22.9226, 11.3448], [22.86, 10.9195]]] }, \"properties\": { \"name\": \"Chad\", \"id\": \"TD\" }, \"id\": \"TD\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-71.6615, 21.7651], [-71.8304, 21.7904], [-71.8062, 21.8521], [-71.6684, 21.8335], [-71.6615, 21.7651]]] }, \"properties\": { \"name\": \"Turks and Caicos Islands\", \"id\": \"TC\" }, \"id\": \"TC\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[42.3588, 37.1087], [41.7884, 36.5973], [41.4169, 36.5148], [41.2456, 36.0735], [41.3543, 35.6403], [41.1945, 34.7689], [40.9872, 34.4289], [40.6894, 34.3322], [38.7735, 33.372], [36.8182, 32.3173], [36.3721, 32.387], [35.7875, 32.735], [35.8691, 33.4319], [35.9424, 33.6676], [36.5851, 34.2212], [36.4329, 34.6136], [35.9761, 34.6291], [35.9433, 35.2239], [35.7644, 35.5715], [35.8927, 35.9164], [36.1275, 35.8316], [36.6584, 36.8024], [37.4365, 36.6435], [38.1916, 36.9014], [38.7669, 36.6932], [39.3568, 36.6817], [40.0164, 36.8259], [40.7058, 37.0976], [41.5154, 37.0892], [42.2683, 37.2765], [42.3588, 37.1087]]] }, \"properties\": { \"name\": \"Syria\", \"id\": \"SY\" }, \"id\": \"SY\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[55.5402, -4.6931], [55.3835, -4.6092], [55.4559, -4.5586], [55.5402, -4.6931]]] }, \"properties\": { \"name\": \"Seychelles\", \"id\": \"SC\" }, \"id\": \"SC\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-63.123, 18.0688], [-63.0111, 18.0688], [-63.0231, 18.0191], [-63.123, 18.0688]]] }, \"properties\": { \"name\": \"Sint Maarten\", \"id\": \"SX\" }, \"id\": \"SX\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[31.9482, -25.9577], [32.1129, -26.8393], [31.9584, -27.3058], [31.4697, -27.2956], [31.0636, -27.1123], [30.7941, -26.7643], [30.8034, -26.4136], [31.2074, -25.8432], [31.4151, -25.7464], [31.9482, -25.9577]]] }, \"properties\": { \"name\": \"Eswatini\", \"id\": \"SZ\" }, \"id\": \"SZ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[24.1557, 65.8052], [23.1024, 65.7353], [21.5656, 65.4081], [21.1381, 64.8087], [21.4653, 64.3796], [20.7626, 63.8678], [19.0345, 63.2377], [18.4632, 62.8959], [17.8955, 62.8305], [17.4174, 61.7407], [17.1307, 61.5758], [17.251, 60.7009], [17.9559, 60.5897], [18.5573, 60.2537], [18.9706, 59.7572], [17.876, 59.2709], [17.4569, 58.8585], [16.6522, 58.4344], [16.5279, 57.0681], [15.9965, 56.2227], [14.782, 56.1619], [14.2152, 55.8325], [14.3417, 55.5278], [13.3212, 55.3464], [12.5923, 56.1377], [12.8835, 56.6178], [12.4214, 56.9063], [11.4493, 58.1183], [11.147, 58.9886], [11.3885, 59.0365], [11.7982, 59.29], [11.6806, 59.5923], [12.4862, 60.1067], [12.5888, 60.4508], [12.294, 61.0027], [12.8809, 61.3523], [12.1555, 61.7207], [12.3034, 62.2856], [12.2181, 63.0007], [11.9997, 63.2917], [12.6625, 63.9404], [13.9604, 64.0141], [14.0776, 64.464], [13.6501, 64.5816], [14.4798, 65.3014], [14.5432, 66.1292], [15.423, 66.4899], [16.4036, 67.055], [16.1275, 67.4259], [17.3247, 68.1039], [17.9168, 67.965], [18.3785, 68.5624], [19.9698, 68.3565], [20.6223, 69.037], [21.9975, 68.5207], [22.7823, 68.3911], [23.639, 67.9543], [23.4681, 67.45], [23.9884, 66.8106], [23.7012, 66.4808], [24.1557, 65.8052]]], [[[19.0767, 57.836], [18.6998, 57.2428], [18.1365, 57.5566], [18.5374, 57.8305], [19.0767, 57.836]]]] }, \"properties\": { \"name\": \"Sweden\", \"id\": \"SE\" }, \"id\": \"SE\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[16.5163, 46.4997], [15.6361, 46.2005], [15.6246, 45.8338], [15.3396, 45.4672], [13.8787, 45.4286], [13.5778, 45.5169], [13.7198, 45.5875], [13.3993, 46.3177], [13.6998, 46.5201], [14.5037, 46.4171], [15.0009, 46.6262], [15.9575, 46.6777], [16.0929, 46.8632], [16.5163, 46.4997]]] }, \"properties\": { \"name\": \"Slovenia\", \"id\": \"SI\" }, \"id\": \"SI\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[22.5386, 49.0727], [22.132, 48.4053], [21.4515, 48.5522], [20.4901, 48.5269], [19.8988, 48.1314], [18.7917, 48.0005], [18.7242, 47.787], [17.7619, 47.7701], [17.1475, 48.0058], [16.9531, 48.5988], [17.1884, 48.861], [17.7583, 48.888], [18.161, 49.2574], [18.8321, 49.5108], [19.4416, 49.5976], [19.802, 49.1923], [20.6161, 49.3916], [21.6397, 49.4121], [22.5386, 49.0727]]] }, \"properties\": { \"name\": \"Slovakia\", \"id\": \"SK\" }, \"id\": \"SK\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-54.1559, 5.3589], [-54.4522, 5.0135], [-54.3508, 4.0543], [-53.9904, 3.5895], [-54.2032, 3.1381], [-54.1954, 2.818], [-54.6163, 2.3266], [-55.0058, 2.593], [-56.1295, 2.2996], [-56.0198, 1.8424], [-56.4828, 1.9422], [-56.7043, 2.0363], [-57.2097, 2.8828], [-57.3036, 3.3769], [-57.5497, 3.3529], [-57.8327, 3.6761], [-58.0544, 4.1719], [-57.7111, 4.9909], [-57.3309, 5.0202], [-57.1948, 5.5484], [-56.9698, 5.9927], [-55.9395, 5.7957], [-55.8283, 5.9617], [-54.8338, 5.9883], [-54.0543, 5.8081], [-54.1559, 5.3589]]] }, \"properties\": { \"name\": \"Suriname\", \"id\": \"SR\" }, \"id\": \"SR\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[6.6602, 0.1205], [6.5243, 0.3402], [6.6868, 0.4041], [6.7498, 0.2435], [6.6602, 0.1205]]] }, \"properties\": { \"name\": \"Sao Tome and Principe\", \"id\": \"ST\" }, \"id\": \"ST\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[20.2419, 46.1086], [20.775, 45.7499], [20.7741, 45.4845], [21.4919, 45.1223], [21.3845, 44.8701], [22.7051, 44.2376], [22.421, 44.0077], [22.5546, 43.4546], [22.9767, 43.1878], [22.4667, 42.8425], [22.3442, 42.3138], [21.5625, 42.2476], [21.7529, 42.6698], [21.3907, 42.7515], [21.0569, 43.0915], [20.3445, 42.8278], [19.5517, 43.2122], [19.1943, 43.5331], [19.4882, 43.7036], [19.1517, 44.3024], [19.3568, 44.8586], [19.007, 44.8693], [19.0549, 45.5271], [18.9054, 45.9315], [19.5308, 46.1552], [20.2419, 46.1086]]] }, \"properties\": { \"name\": \"Serbia\", \"id\": \"RS\" }, \"id\": \"RS\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-56.2671, 46.8384], [-56.3869, 47.0679], [-56.2873, 47.071], [-56.3148, 46.9538], [-56.2671, 46.8384]]] }, \"properties\": { \"name\": \"Saint Pierre and Miquelon\", \"id\": \"PM\" }, \"id\": \"PM\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[41.5328, -1.6955], [40.9788, -0.8703], [40.9699, 1.378], [40.9646, 2.8145], [41.3419, 3.2016], [41.8839, 3.9779], [42.0241, 4.1377], [42.7916, 4.2922], [43.0158, 4.5634], [43.5383, 4.8404], [44.0283, 4.9509], [44.9405, 4.9119], [45.9348, 5.9972], [47.9781, 7.9969], [46.9784, 7.9969], [44.023, 8.9859], [43.4828, 9.3796], [43.1818, 9.8799], [42.8418, 10.2031], [42.6594, 10.6212], [42.9226, 10.9994], [43.2462, 11.4997], [43.853, 10.7841], [44.3865, 10.4303], [44.9427, 10.4365], [45.8168, 10.8361], [46.5652, 10.7459], [47.405, 11.1739], [48.0193, 11.1392], [48.6745, 11.3226], [48.9031, 11.2546], [50.1101, 11.5294], [50.7923, 11.9835], [51.2549, 11.8308], [51.0844, 11.3354], [51.1408, 10.6567], [50.8984, 10.2532], [50.8247, 9.428], [50.4297, 8.8452], [50.103, 8.1998], [49.3484, 6.9906], [49.0492, 6.1739], [48.6492, 5.4943], [47.9754, 4.4968], [46.879, 3.2854], [46.0511, 2.4753], [44.9201, 1.81], [44.3328, 1.3909], [43.4677, 0.6217], [41.9798, -0.9728], [41.5328, -1.6955]]] }, \"properties\": { \"name\": \"Somalia\", \"id\": \"SO\" }, \"id\": \"SO\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[12.4853, 43.9016], [12.397, 43.9344], [12.441, 43.9824], [12.5146, 43.9531], [12.4853, 43.9016]]] }, \"properties\": { \"name\": \"San Marino\", \"id\": \"SM\" }, \"id\": \"SM\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-89.3626, 14.416], [-89.0572, 14.329], [-88.4491, 13.851], [-88.151, 13.9872], [-87.7153, 13.8128], [-87.8143, 13.3991], [-87.9308, 13.1807], [-88.5121, 13.1838], [-89.2776, 13.4781], [-89.8043, 13.5602], [-90.0952, 13.7364], [-89.8726, 14.0454], [-89.3626, 14.416]]] }, \"properties\": { \"name\": \"El Salvador\", \"id\": \"SV\" }, \"id\": \"SV\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-10.2832, 8.4852], [-10.6474, 7.7594], [-11.2678, 7.2325], [-11.5075, 6.9067], [-11.7334, 7.0887], [-12.4856, 7.3861], [-12.5104, 7.6658], [-12.8809, 7.8566], [-13.2284, 8.696], [-13.2928, 9.0494], [-12.7559, 9.3734], [-12.5016, 9.8622], [-11.911, 9.9931], [-11.2056, 9.9776], [-10.6905, 9.3144], [-10.5005, 8.6876], [-10.2832, 8.4852]]] }, \"properties\": { \"name\": \"Sierra Leone\", \"id\": \"SL\" }, \"id\": \"SL\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[161.7152, -10.3873], [162.1054, -10.4539], [162.1236, -10.8245], [161.5381, -10.5666], [161.7152, -10.3873]]], [[[159.7505, -9.2727], [159.9707, -9.4334], [160.3547, -9.4214], [160.6254, -9.5888], [160.6494, -9.9288], [159.8535, -9.7916], [159.6218, -9.5319], [159.7505, -9.2727]]], [[[160.7493, -8.3139], [160.9979, -8.6122], [161.2584, -9.3171], [160.8736, -9.1568], [160.5904, -8.3729], [160.7493, -8.3139]]], [[[159.8793, -8.5341], [158.944, -8.0409], [159.1095, -7.9037], [159.8433, -8.3272], [159.8793, -8.5341]]]] }, \"properties\": { \"name\": \"Solomon Islands\", \"id\": \"SB\" }, \"id\": \"SB\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-5.6923, -15.9977], [-5.775, -15.9568], [-5.7078, -15.9062], [-5.6923, -15.9977]]] }, \"properties\": { \"name\": \"Saint Helena\", \"id\": \"SH\" }, \"id\": \"SH\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-37.1034, -54.0658], [-36.3264, -54.2509], [-35.7986, -54.7636], [-36.0855, -54.8666], [-37.1034, -54.0658]]] }, \"properties\": { \"name\": \"South Georgia and South Sandwich Islands\", \"id\": \"GS\" }, \"id\": \"GS\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[103.9697, 1.3314], [103.8201, 1.2653], [103.6501, 1.3257], [103.8179, 1.4473], [103.9697, 1.3314]]] }, \"properties\": { \"name\": \"Singapore\", \"id\": \"SG\" }, \"id\": \"SG\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-12.2807, 14.8089], [-12.0193, 14.2065], [-12.0543, 13.633], [-11.6349, 13.3698], [-11.3903, 12.9419], [-11.3894, 12.4043], [-12.2912, 12.328], [-13.0828, 12.6334], [-13.7294, 12.6738], [-15.1962, 12.68], [-15.5748, 12.4904], [-16.7119, 12.3551], [-16.7634, 13.064], [-16.6488, 13.1541], [-15.8343, 13.1563], [-15.5096, 13.5864], [-16.5623, 13.5873], [-17.168, 14.6407], [-17.1471, 14.9221], [-16.5352, 15.8383], [-16.4411, 16.2045], [-16.1683, 16.5472], [-15.6208, 16.5068], [-15.1128, 16.6448], [-14.3, 16.5805], [-13.8685, 16.1481], [-13.4095, 16.0593], [-13.2579, 15.7002], [-12.8584, 15.2426], [-12.2807, 14.8089]]] }, \"properties\": { \"name\": \"Senegal\", \"id\": \"SN\" }, \"id\": \"SN\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[34.078, 9.4613], [34.0945, 8.5824], [33.9533, 8.4435], [33.2342, 8.3964], [33.0127, 7.9516], [33.2262, 7.7608], [33.6661, 7.6711], [34.0643, 7.2259], [34.7106, 6.6604], [35.0821, 5.6731], [35.2681, 5.4925], [33.9759, 4.2203], [33.4894, 3.7551], [32.8382, 3.7986], [32.3358, 3.7063], [32.0996, 3.5291], [31.7982, 3.8026], [31.4799, 3.6805], [31.1523, 3.7857], [30.8385, 3.4905], [30.5083, 3.8359], [30.1949, 3.9819], [29.6768, 4.5869], [29.1513, 4.3881], [28.7269, 4.5048], [28.192, 4.3503], [27.7881, 4.6446], [27.4032, 5.1094], [27.0836, 5.777], [26.5141, 6.0691], [26.3619, 6.6355], [25.8891, 7.0647], [25.3809, 7.3333], [25.2472, 7.7244], [24.8535, 8.1376], [24.2915, 8.2912], [24.1473, 8.6654], [24.5321, 8.8869], [24.7852, 9.7747], [25.067, 10.2936], [25.7981, 10.4206], [25.8913, 10.2026], [26.5514, 9.5257], [27.0743, 9.614], [27.8857, 9.5998], [28.0491, 9.3286], [28.8445, 9.3259], [28.9995, 9.61], [29.4731, 9.7685], [29.6054, 10.065], [30.0031, 10.2772], [30.7395, 9.7427], [31.2247, 9.7991], [31.6548, 10.2213], [31.9331, 10.6625], [32.4041, 11.0576], [32.3353, 11.7158], [32.0721, 12.0066], [32.7366, 12.0097], [33.1991, 12.2174], [33.0731, 11.5916], [33.172, 10.8503], [33.892, 10.1991], [34.078, 9.4613]]] }, \"properties\": { \"name\": \"South Sudan\", \"id\": \"SS\" }, \"id\": \"SS\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[36.8714, 21.9968], [36.9269, 21.5867], [37.1507, 21.1037], [37.2274, 20.5568], [37.2483, 19.5821], [37.4711, 18.8203], [37.9217, 18.5558], [38.6093, 18.0049], [38.2537, 17.5845], [37.7823, 17.458], [37.4112, 17.0616], [37.0091, 17.059], [36.9136, 16.2964], [36.4267, 15.132], [36.5243, 14.2567], [36.3907, 13.6259], [36.2123, 13.2712], [36.1075, 12.7266], [35.5961, 12.5375], [35.1123, 11.8166], [34.9312, 10.8649], [34.5716, 10.88], [34.2756, 10.528], [34.2915, 10.1249], [34.078, 9.4613], [33.892, 10.1991], [33.172, 10.8503], [33.0731, 11.5916], [33.1991, 12.2174], [32.7366, 12.0097], [32.0721, 12.0066], [32.3353, 11.7158], [32.4041, 11.0576], [31.9331, 10.6625], [31.6548, 10.2213], [31.2247, 9.7991], [30.7395, 9.7427], [30.0031, 10.2772], [29.6054, 10.065], [29.4731, 9.7685], [28.9995, 9.61], [28.8445, 9.3259], [28.0491, 9.3286], [27.8857, 9.5998], [27.0743, 9.614], [26.5514, 9.5257], [25.8913, 10.2026], [25.7981, 10.4206], [25.067, 10.2936], [24.7852, 9.7747], [24.5321, 8.8869], [24.1473, 8.6654], [23.5374, 8.8159], [23.6461, 9.8231], [23.2559, 10.4579], [22.86, 10.9195], [22.9226, 11.3448], [22.5564, 11.6697], [22.3522, 12.6604], [21.8253, 12.7905], [22.2283, 13.3294], [22.1076, 13.7302], [22.5098, 14.1275], [22.3815, 14.5505], [22.6709, 14.7223], [22.9323, 15.1622], [23.105, 15.7024], [23.9835, 15.7801], [23.9822, 17.2663], [23.9804, 19.4968], [23.9804, 19.9958], [24.9796, 20.0024], [24.9805, 21.9959], [27.2723, 21.9955], [30.3285, 21.9951], [32.6061, 21.9959], [34.2467, 21.9964], [36.8714, 21.9968]]] }, \"properties\": { \"name\": \"Sudan\", \"id\": \"SD\" }, \"id\": \"SD\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[46.5314, 29.0964], [47.4334, 28.9895], [47.6713, 28.5331], [48.4424, 28.5429], [48.9067, 27.6289], [49.4052, 27.1811], [49.9862, 26.829], [50.214, 26.3084], [50.0315, 26.1108], [50.558, 25.0868], [50.8043, 24.7894], [51.2682, 24.6074], [51.5683, 24.286], [51.5927, 24.0787], [52.555, 22.933], [55.1043, 22.6214], [55.186, 22.704], [55.641, 22.0017], [54.9774, 19.9958], [53.667, 19.559], [51.9775, 18.9961], [49.0421, 18.582], [48.172, 18.1567], [47.5795, 17.4483], [47.4418, 17.1118], [46.9758, 16.9533], [46.6819, 17.2685], [46.3104, 17.2312], [45.4066, 17.32], [45.1483, 17.4274], [44.1557, 17.3986], [43.9169, 17.3249], [43.418, 17.5162], [43.1911, 17.3595], [43.1649, 16.6892], [42.7992, 16.3718], [42.6989, 16.7372], [42.3833, 17.1225], [42.294, 17.435], [41.7498, 17.8855], [41.2296, 18.6783], [41.1159, 19.0822], [40.7591, 19.7556], [40.0808, 20.2661], [39.6138, 20.5178], [39.0936, 21.3101], [38.9879, 21.8819], [39.0958, 22.3928], [38.9413, 22.882], [38.4641, 23.712], [37.9195, 24.1852], [37.5431, 24.2918], [37.1808, 24.82], [37.1489, 25.291], [36.7627, 25.7513], [36.2496, 26.5947], [35.5815, 27.4323], [35.1807, 28.0347], [34.616, 28.1483], [34.7798, 28.5074], [34.9507, 29.3535], [36.0156, 29.1906], [36.4759, 29.4951], [36.7551, 29.8662], [37.4694, 29.9949], [37.6336, 30.3132], [37.9803, 30.5], [36.9584, 31.4917], [38.9622, 31.9951], [39.1455, 32.1247], [40.3693, 31.9391], [42.0743, 31.0802], [42.8578, 30.4952], [44.7163, 29.1937], [46.3565, 29.0636], [46.5314, 29.0964]]] }, \"properties\": { \"name\": \"Saudi Arabia\", \"id\": \"SA\" }, \"id\": \"SA\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-8.6834, 27.6565], [-8.6834, 27.2858], [-8.6821, 25.9954], [-10.5624, 25.9954], [-12.0164, 25.9954], [-12.0235, 23.4674], [-12.6203, 23.2712], [-13.0316, 23], [-13.0944, 22.4958], [-13.0163, 21.3341], [-15.0018, 21.3314], [-16.9647, 21.3292], [-17.0481, 20.8063], [-16.9309, 21.9001], [-16.5143, 22.3333], [-16.2103, 23.0981], [-15.5864, 24.0729], [-15.0388, 24.5488], [-14.856, 24.8715], [-14.7949, 25.4041], [-14.4138, 26.2538], [-13.5758, 26.7349], [-13.1774, 27.652], [-8.6834, 27.6565]]] }, \"properties\": { \"name\": \"Western Sahara\", \"id\": \"EH\" }, \"id\": \"EH\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[30.51, -1.0674], [30.8128, -1.5632], [30.8287, -2.3387], [30.5535, -2.3999], [29.9303, -2.3396], [29.8682, -2.7164], [29.3901, -2.8087], [29.0146, -2.7204], [28.8765, -2.4004], [29.1064, -2.2335], [29.1295, -1.8601], [29.577, -1.3878], [30.1016, -1.3688], [30.51, -1.0674]]] }, \"properties\": { \"name\": \"Rwanda\", \"id\": \"RW\" }, \"id\": \"RW\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-178.8765, 71.5769], [-177.5322, 71.2631], [-177.8218, 71.0675], [-179.5066, 70.9235], [-180, 70.993], [-180, 71.1843], [-180, 71.3998], [-180, 71.5379], [-178.8765, 71.5769]]], [[[178.8614, 70.8265], [178.8911, 71.2311], [180, 71.5379], [180, 70.993], [178.8614, 70.8265]]], [[[60.4505, 69.935], [59.5783, 69.7385], [58.473, 70.2668], [59.0052, 70.4652], [60.4505, 69.935]]], [[[169.201, 69.5805], [167.789, 69.8369], [168.358, 70.0157], [169.375, 69.8826], [169.201, 69.5805]]], [[[50.265, 69.1857], [49.6262, 68.8596], [48.667, 68.7331], [48.279, 69.0403], [48.6315, 69.436], [49.225, 69.5113], [50.265, 69.1857]]], [[[-179.7985, 68.9404], [-178.8739, 68.7542], [-177.4075, 68.2451], [-175.3451, 67.678], [-174.4476, 67.1031], [-173.6797, 67.1449], [-172.6405, 66.9249], [-171.7956, 66.9318], [-170.192, 66.2014], [-170.6663, 65.6214], [-172.2115, 65.4252], [-172.2133, 65.0482], [-172.9239, 64.705], [-173.0092, 64.2975], [-173.7298, 64.3646], [-174.318, 64.6376], [-175.3951, 64.8025], [-175.8538, 65.0109], [-176.0933, 65.471], [-177.0563, 65.6137], [-178.3103, 65.4849], [-178.8794, 65.9364], [-179.7283, 65.8039], [-179.3521, 65.5167], [-180, 65.0672], [-180, 65.312], [-180, 65.5569], [-180, 65.8014], [-180, 66.0462], [-180, 66.291], [-180, 66.5359], [-180, 66.7807], [-180, 67.0252], [-180, 67.2701], [-180, 67.5149], [-180, 67.7597], [-180, 68.0045], [-180, 68.2491], [-180, 68.4939], [-180, 68.7387], [-180, 68.9835], [-179.7985, 68.9404]]], [[[163.635, 58.6033], [163.7611, 59.015], [164.6156, 58.8856], [163.635, 58.6033]]], [[[21.2358, 55.2641], [22.8311, 54.8384], [22.7663, 54.3568], [19.6045, 54.4591], [19.9747, 54.9212], [20.5202, 54.9949], [20.8998, 55.2867], [20.9579, 55.279], [21.2358, 55.2641]]], [[[142.761, 54.3939], [142.9181, 53.7942], [143.2235, 53.2961], [143.3234, 52.6136], [143.1556, 52.0838], [143.4552, 51.4715], [143.8161, 50.2825], [144.272, 49.3113], [143.105, 49.1988], [142.5741, 48.0719], [142.5568, 47.7381], [143.0056, 47.2228], [143.2821, 46.5592], [142.5781, 46.7008], [142.2088, 46.0891], [141.8302, 46.4508], [142.0388, 47.1402], [141.9642, 47.5872], [142.1817, 48.0133], [141.8661, 48.75], [142.1422, 49.5692], [142.0712, 50.5149], [142.2066, 51.2225], [141.7223, 51.7363], [141.8235, 53.3394], [142.5262, 53.4475], [142.761, 54.3939]]], [[[148.5995, 45.3176], [147.9137, 44.9904], [147.7694, 45.1906], [148.5995, 45.3176]]], [[[96.5265, 81.0755], [97.8316, 80.7983], [97.1751, 80.241], [94.565, 80.1261], [93.8725, 80.0102], [91.5239, 80.3584], [93.2626, 80.7912], [93.0651, 80.9885], [95.8008, 81.2804], [96.5265, 81.0755]]], [[[54.719, 81.1159], [57.694, 80.7923], [55.7124, 80.6372], [54.0665, 80.8136], [54.719, 81.1159]]], [[[62.168, 80.8347], [61.0511, 80.4186], [59.3044, 80.5216], [59.5921, 80.8165], [62.168, 80.8347]]], [[[97.6744, 80.1582], [100.0613, 79.7772], [99.4394, 78.8341], [97.5555, 78.8266], [94.6524, 79.1275], [93.0708, 79.4953], [94.9871, 80.0968], [97.6744, 80.1582]]], [[[102.8848, 79.254], [105.146, 78.8188], [105.3125, 78.4999], [103.7194, 78.2582], [101.2043, 78.192], [100.2841, 78.6792], [101.5905, 79.3504], [102.8848, 79.254]]], [[[130.6871, 42.3027], [130.5269, 42.5353], [130.5771, 42.8118], [131.0684, 42.9024], [131.262, 43.4333], [131.2553, 44.0716], [131.0822, 44.9101], [131.9775, 45.2439], [132.9359, 45.03], [133.1858, 45.4947], [133.8614, 46.2475], [134.1677, 47.3022], [134.7523, 47.7155], [134.5636, 48.3219], [134.2933, 48.3733], [133.4686, 48.0972], [133.1441, 48.1057], [132.5617, 47.7683], [131.0027, 47.6915], [130.712, 48.1279], [130.8043, 48.3414], [130.1962, 48.8916], [129.5339, 49.3235], [128.5267, 49.5943], [127.9998, 49.5685], [127.5027, 49.8735], [127.5901, 50.2091], [126.9247, 51.1002], [126.313, 52.3997], [125.649, 53.0422], [124.8122, 53.1339], [123.6079, 53.5465], [122.338, 53.485], [120.704, 53.1718], [120.0945, 52.7872], [120.6561, 52.5666], [120.7497, 52.0965], [120.067, 51.6007], [119.1921, 50.3797], [119.26, 50.0664], [118.4517, 49.8444], [117.8733, 49.5135], [116.6832, 49.8238], [116.1346, 50.0109], [115.2743, 49.9489], [114.743, 50.2337], [114.2969, 50.2743], [113.1641, 49.7971], [113.0557, 49.6162], [111.3366, 49.3559], [110.8279, 49.1661], [110.1997, 49.1704], [109.2365, 49.3348], [108.6137, 49.3228], [108.034, 49.594], [107.9479, 49.9247], [107.2332, 49.9893], [106.7112, 50.3125], [106.218, 50.3045], [105.3835, 50.4736], [103.6328, 50.1387], [102.6833, 50.3871], [102.2883, 50.585], [102.1116, 51.3534], [101.3814, 51.4526], [100.4687, 51.7261], [98.8485, 52.0701], [97.947, 51.3483], [97.8254, 50.9852], [98.2795, 50.5333], [98.1032, 50.0779], [97.2088, 49.7308], [96.986, 49.8828], [95.8518, 50.0129], [95.5229, 49.9112], [94.6147, 50.0237], [94.2511, 50.5564], [91.8044, 50.6936], [89.644, 49.903], [89.6542, 49.7175], [88.8317, 49.4485], [88.1925, 49.4518], [87.8143, 49.1624], [87.3229, 49.0858], [86.6144, 49.6098], [86.1807, 49.4993], [85.21, 49.6648], [84.9893, 50.0615], [84.2578, 50.2883], [83.9453, 50.7746], [83.3571, 50.9945], [82.4938, 50.7275], [81.4657, 50.7397], [80.8771, 51.2815], [79.9862, 50.7746], [79.4687, 51.493], [78.4757, 52.6385], [77.7042, 53.3791], [76.5758, 53.9424], [76.2664, 54.312], [74.4518, 53.6472], [73.2857, 53.5984], [73.3993, 53.8115], [72.9141, 54.1073], [71.0933, 54.2123], [71.1856, 54.5994], [70.7382, 55.3052], [70.1824, 55.1625], [68.9773, 55.3895], [68.2062, 55.1609], [68.0739, 54.9596], [66.2225, 54.6673], [65.4767, 54.6233], [65.1576, 54.3643], [64.4611, 54.3841], [63.0739, 54.1053], [61.9287, 53.9464], [61.3339, 54.0492], [60.9797, 53.6217], [61.1994, 53.2872], [62.0148, 53.1079], [61.974, 52.9437], [61.0476, 52.9725], [60.8021, 52.7448], [60.9375, 52.2805], [60.0657, 51.9764], [60.4647, 51.6513], [61.3632, 51.442], [61.5851, 51.2298], [61.3894, 50.8609], [60.6379, 50.6638], [59.9552, 50.7992], [59.8122, 50.5819], [58.8836, 50.6945], [58.3594, 51.0638], [57.8387, 51.0917], [57.4423, 50.8889], [57.0117, 51.0651], [56.4915, 51.0196], [55.7977, 50.6021], [55.5424, 50.6017], [54.727, 50.9981], [54.4216, 50.7804], [54.0416, 51.1153], [53.3381, 51.4824], [52.571, 51.4817], [52.3309, 51.6812], [51.6091, 51.4839], [50.7941, 51.7292], [50.2468, 51.2895], [49.498, 51.0835], [48.8086, 50.6012], [48.8432, 50.0131], [48.4344, 49.8284], [47.706, 50.378], [47.3264, 50.2734], [46.8022, 49.367], [47.0144, 49.0984], [46.7028, 48.8055], [46.661, 48.4124], [47.0042, 48.2846], [47.0934, 47.9477], [48.1099, 47.7452], [48.9595, 46.7744], [48.6102, 46.5663], [49.2321, 46.3372], [48.1592, 45.7371], [47.5244, 45.6017], [46.7529, 44.4205], [47.2301, 44.1923], [47.5089, 43.5096], [47.4632, 43.0351], [48.5729, 41.8446], [47.8609, 41.2129], [47.2612, 41.315], [46.7494, 41.8126], [46.4298, 41.8907], [45.6388, 42.205], [45.7275, 42.4749], [45.1602, 42.6751], [44.5059, 42.7488], [43.9573, 42.5664], [43.7824, 42.747], [42.4192, 43.2242], [41.5807, 43.2193], [40.6481, 43.534], [39.9782, 43.42], [38.7171, 44.2882], [38.1814, 44.4196], [37.8516, 44.6988], [37.4112, 44.7352], [36.9411, 45.2896], [37.6474, 45.3771], [37.9332, 46.0016], [38.1836, 46.0948], [37.9679, 46.6182], [39.2933, 47.1056], [38.2142, 47.0914], [38.2875, 47.5592], [38.9005, 47.8553], [39.7359, 47.8447], [39.9609, 48.238], [39.6866, 49.0079], [40.0701, 49.2003], [39.7807, 49.5721], [39.1748, 49.8559], [38.2586, 50.0524], [38.0469, 49.9201], [37.4228, 50.4115], [36.3059, 50.2805], [35.4115, 50.5398], [35.3121, 51.0438], [34.2809, 51.3117], [34.3976, 51.7804], [33.7353, 52.3448], [32.508, 52.3084], [31.7636, 52.1012], [31.5771, 52.3122], [31.4178, 53.196], [32.1422, 53.0913], [32.7042, 53.3363], [31.792, 54.0558], [31.4036, 54.1959], [31.1213, 54.6484], [30.9069, 55.5699], [30.2335, 55.8452], [29.4824, 55.6845], [29.375, 55.9386], [28.7948, 55.9426], [28.1481, 56.143], [27.8063, 56.867], [27.797, 57.3169], [27.3517, 57.5282], [27.753, 57.8411], [27.4272, 58.7331], [28.0127, 59.4842], [28.014, 59.7248], [28.9471, 59.8289], [29.0692, 60.1915], [28.6506, 60.611], [27.7978, 60.5362], [29.6902, 61.5461], [31.2855, 62.5679], [31.5341, 62.8855], [31.1807, 63.2082], [30.0555, 63.689], [30.5038, 64.0205], [30.1083, 64.3661], [30.0728, 64.7649], [29.604, 64.9685], [29.9032, 66.0911], [29.0869, 66.9709], [29.9414, 67.5475], [29.3439, 68.062], [28.4708, 68.4883], [28.9657, 69.0219], [30.8696, 69.7834], [31.9846, 69.9536], [32.9417, 69.7519], [32.3775, 69.4791], [33.6843, 69.3102], [35.858, 69.1917], [40.3809, 67.8318], [40.9663, 67.7135], [41.1887, 66.8262], [40.5216, 66.4466], [39.2889, 66.1321], [38.3975, 66.0644], [35.5136, 66.3958], [34.8247, 66.6111], [32.4636, 66.9163], [33.5667, 66.321], [34.7865, 65.8645], [34.4065, 65.3957], [34.8034, 64.986], [34.8695, 64.5601], [35.6472, 64.3783], [36.365, 64.0028], [37.4423, 63.8135], [38.0708, 64.0259], [37.9537, 64.3202], [37.1835, 64.4085], [36.5283, 64.8473], [36.883, 65.1724], [38.0096, 64.8788], [39.7581, 64.577], [40.281, 64.998], [39.8167, 65.5979], [41.4759, 66.1235], [42.2106, 66.5197], [44.0971, 66.2351], [44.4886, 66.6719], [44.292, 67.0996], [43.7824, 67.2545], [44.2254, 67.9956], [44.0483, 68.5489], [45.8922, 68.4797], [46.6903, 67.8489], [45.5287, 67.7577], [44.9396, 67.4776], [45.9859, 66.853], [46.6908, 66.8255], [47.7091, 67.045], [47.8746, 67.5841], [48.8778, 67.7315], [50.839, 68.3498], [52.5502, 68.5924], [53.8019, 68.9959], [53.9679, 68.2273], [54.5614, 68.273], [56.0436, 68.649], [57.1267, 68.554], [58.9191, 69.0039], [59.8975, 68.422], [60.9335, 68.9868], [60.1704, 69.5909], [61.0161, 69.8515], [63.3616, 69.6753], [68.5041, 68.3485], [69.1406, 68.9506], [68.5427, 68.9671], [68.006, 69.48], [67.0645, 69.6937], [66.9265, 70.0142], [67.2847, 70.7386], [66.6664, 70.9006], [66.9176, 71.2824], [68.2693, 71.6828], [69.039, 72.67], [69.6449, 72.8975], [71.5003, 72.9137], [72.8121, 72.6915], [72.6243, 72.0794], [71.9118, 71.5478], [72.7317, 70.823], [72.5297, 70.1724], [72.5275, 69.0805], [73.548, 68.5744], [73.1521, 67.8651], [72.5945, 67.587], [71.5514, 66.7605], [70.9393, 66.5481], [69.877, 66.8455], [69.1943, 66.5787], [70.3396, 66.3423], [71.9172, 66.2467], [72.4174, 66.5607], [73.7922, 66.9953], [74.0745, 67.4141], [74.7696, 67.7663], [74.3914, 68.4206], [74.5796, 68.7511], [76.4591, 68.9784], [77.2385, 68.4697], [77.6509, 68.9029], [76.001, 69.2349], [74.8149, 69.0907], [73.7757, 69.1983], [73.56, 69.7072], [74.3111, 70.6536], [73.0864, 71.4449], [73.6719, 71.845], [75.7413, 72.2962], [76.0325, 71.9103], [78.4828, 72.395], [79.422, 72.3808], [80.7626, 72.0892], [81.511, 71.7463], [82.9861, 71.7487], [82.1835, 72.2376], [80.827, 72.4882], [80.5096, 73.0861], [80.5833, 73.5684], [83.5449, 73.6665], [86.5913, 73.8943], [86.6513, 74.6824], [87.6713, 75.1296], [90.1851, 75.591], [93.5498, 75.854], [94.5756, 76.1517], [96.879, 75.9311], [100.3223, 76.479], [100.9899, 76.9904], [103.1312, 77.6265], [104.0146, 77.7304], [105.8944, 77.4889], [104.9121, 77.1748], [107.4299, 76.9265], [108.0278, 76.7185], [111.1151, 76.723], [112.6194, 76.3836], [113.8712, 75.856], [113.6137, 75.293], [111.8683, 74.7401], [109.8402, 74.3219], [108.1996, 73.6941], [107.2709, 73.621], [106.4782, 73.1394], [107.7503, 73.1731], [109.8553, 73.4726], [110.2614, 74.0174], [112.1471, 73.7089], [114.0607, 73.5846], [115.3378, 73.7025], [118.4504, 73.5897], [118.4304, 73.2466], [119.7505, 72.9792], [123.1605, 72.955], [123.6222, 73.1933], [123.3052, 73.5329], [124.3883, 73.7549], [125.617, 73.5207], [127.7406, 73.4817], [128.8885, 73.1902], [129.4118, 72.3156], [128.3589, 72.0883], [129.7621, 71.1195], [131.1572, 70.7422], [131.562, 70.9011], [132.5621, 71.8952], [134.1029, 71.3789], [135.8847, 71.6306], [137.3153, 71.3594], [138.1183, 71.5663], [139.695, 71.7003], [139.6014, 72.496], [142.0614, 72.7208], [145.4856, 72.5422], [146.594, 72.3025], [148.402, 72.312], [149.5015, 72.1644], [150.5997, 71.5201], [151.5825, 71.2871], [152.5089, 70.8345], [153.7944, 70.88], [155.8953, 71.0955], [158.0371, 71.0394], [159.3506, 70.7908], [160.0062, 70.3096], [159.8326, 69.7849], [161.5367, 69.3796], [162.3757, 69.6491], [164.1597, 69.7192], [164.5135, 69.6091], [166.8204, 69.4995], [167.6283, 69.7403], [168.303, 69.2716], [169.3106, 69.0796], [169.6098, 68.7862], [170.5375, 68.8254], [170.9952, 69.0454], [170.5824, 69.5834], [170.4869, 70.1076], [172.5595, 69.9682], [173.2772, 69.8238], [176.1075, 69.8604], [176.9243, 69.646], [178.8485, 69.3872], [180, 68.9835], [180, 65.0672], [178.5196, 64.6029], [177.4671, 64.7368], [177.433, 64.4445], [178.6501, 63.9653], [178.7065, 63.5216], [179.3324, 63.1902], [179.5703, 62.6875], [179.1206, 62.3204], [177.3513, 62.5874], [175.2681, 62.1025], [174.5144, 61.8237], [173.6235, 61.7161], [172.8564, 61.4693], [172.3926, 61.0618], [170.6081, 60.435], [169.9827, 60.067], [169.2267, 60.5959], [168.1374, 60.5739], [166.9642, 60.3069], [166.3521, 60.4847], [165.0843, 60.0985], [163.7802, 60.041], [163.41, 59.8349], [163.2728, 59.3026], [162.1418, 58.4475], [161.9602, 58.0768], [162.4671, 57.7661], [163.2138, 57.6869], [162.7792, 57.3577], [162.8027, 56.8115], [163.2564, 56.6881], [163.3354, 56.2325], [162.5284, 56.2606], [162.085, 56.0897], [161.7294, 55.358], [162.1058, 54.7521], [161.7258, 54.533], [160.7728, 54.5414], [160.0746, 54.1892], [159.8437, 53.7837], [159.8975, 53.3807], [158.6088, 52.8735], [158.4637, 52.3049], [158.1037, 51.8095], [156.7476, 50.9692], [156.5003, 51.475], [156.3645, 52.5093], [156.0986, 53.0065], [155.6201, 54.8646], [155.5549, 55.3484], [155.9828, 56.6952], [156.7285, 57.1522], [157.4503, 57.7994], [158.2102, 58.0253], [159.0367, 58.4239], [159.8473, 59.1271], [161.7534, 60.1522], [162.0037, 60.4201], [162.9732, 60.7828], [163.71, 60.9168], [164.0052, 61.3439], [164.2556, 62.6966], [163.3318, 62.5508], [163.0091, 61.7915], [162.3926, 61.6621], [160.7666, 60.7533], [159.8832, 61.2917], [160.3174, 61.7933], [159.5525, 61.7194], [159.0767, 61.9223], [158.07, 61.7536], [157.4694, 61.7989], [156.6801, 61.4806], [156.63, 61.2724], [155.8532, 60.7772], [154.9707, 60.3766], [154.2929, 59.8333], [154.5827, 59.5401], [155.1669, 59.3601], [154.011, 59.0756], [153.3611, 59.2147], [152.8822, 58.9391], [151.99, 59.1601], [151.4857, 59.5241], [150.4572, 59.5907], [149.6427, 59.7705], [149.205, 59.4882], [147.8746, 59.3881], [147.5146, 59.2687], [146.4444, 59.4305], [145.9317, 59.1983], [145.5544, 59.4136], [143.192, 59.3701], [142.0255, 58.9997], [141.7547, 58.7453], [140.6849, 58.2122], [140.447, 57.8136], [140.0022, 57.6875], [138.6621, 56.9655], [137.6913, 56.1395], [136.175, 55.3522], [135.2623, 54.9434], [135.8514, 54.5838], [136.7973, 54.6209], [136.6828, 53.9313], [137.1555, 53.8217], [137.3282, 53.5389], [138.2923, 53.5924], [138.6608, 53.7449], [138.6958, 54.3199], [139.7075, 54.2771], [140.3471, 53.8126], [141.4022, 53.184], [141.1696, 52.3684], [141.4853, 52.1786], [140.6876, 51.2322], [140.4763, 50.546], [140.5171, 49.596], [140.1704, 48.5238], [139.3728, 47.8873], [139.0012, 47.3835], [138.5866, 47.0572], [138.3367, 46.5432], [137.6855, 45.8183], [136.8035, 45.1711], [136.1421, 44.4893], [135.8745, 44.3734], [135.1309, 43.5256], [133.7092, 42.83], [133.1601, 42.6969], [132.4813, 42.9099], [132.3344, 43.2388], [131.7946, 43.2553], [131.1586, 42.6258], [130.6871, 42.3027]]], [[[67.7654, 76.2376], [66.2824, 75.9837], [61.3561, 75.3149], [60.2224, 74.7965], [58.5347, 74.4988], [58.4415, 74.1288], [56.9638, 73.3665], [55.0067, 73.4539], [53.7629, 73.7662], [54.6427, 73.9595], [57.0876, 75.3837], [58.8814, 75.8547], [62.9714, 76.2367], [65.8629, 76.6133], [67.5351, 77.0077], [68.4859, 76.9338], [68.9, 76.5729], [67.7654, 76.2376]]], [[[140.0488, 75.829], [140.9442, 75.7004], [142.4605, 75.9035], [143.6856, 75.8636], [145.2552, 75.5857], [144.0199, 75.0446], [141.9873, 74.9913], [139.0993, 74.6566], [138.0921, 74.7974], [137.0064, 75.235], [137.5013, 75.9097], [138.8139, 76.1996], [140.0488, 75.829]]], [[[146.7951, 75.3709], [150.1039, 75.2193], [150.6463, 74.9445], [149.5969, 74.7725], [148.0926, 74.8258], [146.1483, 75.1984], [146.7951, 75.3709]]], [[[113.3873, 74.4005], [112.7823, 74.0951], [111.6428, 74.2729], [112.0845, 74.549], [113.3873, 74.4005]]], [[[142.1848, 73.8958], [143.3438, 73.5687], [143.1934, 73.2206], [140.6627, 73.4519], [141.0849, 73.8658], [142.1848, 73.8958]]], [[[55.32, 73.3083], [56.4293, 73.2011], [55.356, 72.4651], [55.2978, 71.9354], [57.1458, 70.589], [54.6009, 70.68], [53.7225, 70.8145], [53.3638, 71.5416], [51.8124, 71.4912], [51.5825, 72.0712], [52.6221, 72.3009], [53.7531, 73.2932], [55.32, 73.3083]]]] }, \"properties\": { \"name\": \"Russia\", \"id\": \"RU\" }, \"id\": \"RU\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[28.2124, 45.4503], [28.7606, 45.2341], [29.2236, 45.4028], [29.7061, 45.2599], [29.5574, 44.8435], [29.0483, 44.7574], [28.6452, 44.2958], [28.5853, 43.7422], [27.0867, 44.1675], [26.2158, 44.0072], [25.4972, 43.6708], [23.2244, 43.8741], [22.7051, 44.2376], [21.3845, 44.8701], [21.4919, 45.1223], [20.7741, 45.4845], [20.775, 45.7499], [20.2419, 46.1086], [21.1519, 46.3044], [22.2905, 47.7279], [22.8764, 47.9472], [23.2027, 48.0844], [24.8935, 47.7177], [26.1625, 47.9925], [26.6189, 48.2597], [26.9806, 48.155], [27.3366, 47.6396], [28.0717, 46.9786], [28.2444, 46.4513], [28.0997, 45.9728], [28.2124, 45.4503]]] }, \"properties\": { \"name\": \"Romania\", \"id\": \"RO\" }, \"id\": \"RO\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[55.7972, -21.3395], [55.3627, -21.2738], [55.3112, -20.904], [55.6618, -20.9062], [55.7972, -21.3395]]] }, \"properties\": { \"name\": \"Reunion\", \"id\": \"RE\" }, \"id\": \"RE\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[51.2682, 24.6074], [50.8043, 24.7894], [50.763, 25.4445], [51.0032, 25.9816], [51.2624, 26.1534], [51.543, 25.9022], [51.4853, 25.5249], [51.602, 25.148], [51.2682, 24.6074]]] }, \"properties\": { \"name\": \"Qatar\", \"id\": \"QA\" }, \"id\": \"QA\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-149.3215, -17.6902], [-149.579, -17.7351], [-149.6114, -17.5318], [-149.3792, -17.5224], [-149.3215, -17.6902]]] }, \"properties\": { \"name\": \"French Polynesia\", \"id\": \"PF\" }, \"id\": \"PF\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-58.1598, -20.1645], [-57.8303, -20.9981], [-57.9856, -22.0461], [-56.9374, -22.2712], [-56.5239, -22.1025], [-55.8492, -22.3076], [-55.6541, -22.8105], [-55.3662, -23.9913], [-54.6254, -23.8124], [-54.2418, -24.0472], [-54.4731, -25.2204], [-54.6158, -25.576], [-54.7552, -26.533], [-55.1358, -26.9312], [-55.4266, -27.0093], [-55.7147, -27.415], [-56.0673, -27.3076], [-56.3705, -27.5375], [-57.1118, -27.4701], [-58.6186, -27.1323], [-58.1914, -26.6302], [-58.2031, -26.3816], [-57.8906, -26.0065], [-57.5872, -25.4051], [-57.8216, -25.1365], [-58.3654, -24.9594], [-59.373, -24.4538], [-59.8924, -24.0934], [-61.0329, -23.7556], [-61.7984, -23.1821], [-62.3726, -22.439], [-62.6509, -22.2339], [-62.2767, -21.066], [-62.2763, -20.5627], [-61.917, -20.0553], [-61.7569, -19.6451], [-60.0073, -19.2976], [-59.0905, -19.286], [-58.1803, -19.8178], [-58.1598, -20.1645]]] }, \"properties\": { \"name\": \"Paraguay\", \"id\": \"PY\" }, \"id\": \"PY\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-7.4061, 37.1793], [-7.8343, 37.0057], [-8.5977, 37.1211], [-8.8141, 37.431], [-8.9147, 38.5123], [-9.4742, 38.7307], [-9.3748, 39.3384], [-9.1482, 39.5426], [-8.8867, 40.1795], [-8.6557, 41.0296], [-8.7771, 41.9409], [-8.2131, 42.1336], [-7.9208, 41.8836], [-7.4037, 41.8335], [-6.6182, 41.9422], [-6.2125, 41.5321], [-6.9285, 41.0092], [-6.8102, 40.3429], [-7.0146, 40.2084], [-7.0368, 39.7139], [-7.4452, 39.5363], [-7.0461, 38.9069], [-7.3431, 38.4572], [-7.1855, 38.0062], [-7.5036, 37.5854], [-7.4061, 37.1793]]] }, \"properties\": { \"name\": \"Portugal\", \"id\": \"PT\" }, \"id\": \"PT\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[130.5269, 42.5353], [130.6871, 42.3027], [130.4576, 42.3018], [129.7563, 41.7123], [129.7088, 40.8574], [128.3043, 40.0362], [127.5684, 39.7818], [127.3943, 39.2079], [127.7863, 39.084], [128.3745, 38.6233], [128.0389, 38.3085], [127.1697, 38.3045], [126.634, 37.7816], [125.9419, 37.8735], [125.4492, 37.7301], [125.1931, 38.0378], [124.691, 38.1292], [125.0675, 38.5567], [125.4097, 39.2882], [125.3609, 39.5266], [124.5574, 39.7907], [124.3621, 40.0042], [124.8895, 40.4596], [125.989, 40.9049], [126.9034, 41.7811], [127.1795, 41.5312], [128.1112, 41.3891], [128.291, 41.5627], [128.0451, 41.9875], [128.9236, 42.0381], [129.3137, 42.4137], [129.7199, 42.4749], [129.8983, 42.9983], [130.2406, 42.8917], [130.5269, 42.5353]]] }, \"properties\": { \"name\": \"North Korea\", \"id\": \"KP\" }, \"id\": \"KP\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-66.1295, 18.4448], [-65.6288, 18.3813], [-65.9708, 17.9743], [-67.1968, 17.9943], [-67.1587, 18.4994], [-66.1295, 18.4448]]] }, \"properties\": { \"name\": \"Puerto Rico\", \"id\": \"PR\" }, \"id\": \"PR\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[19.6045, 54.4591], [22.7663, 54.3568], [23.37, 54.2005], [23.4845, 53.9398], [23.8872, 53.0276], [23.8445, 52.6642], [23.1969, 52.257], [23.6523, 52.0403], [23.6053, 51.5179], [24.1056, 50.8449], [23.7118, 50.3773], [22.6496, 49.539], [22.5386, 49.0727], [21.6397, 49.4121], [20.6161, 49.3916], [19.802, 49.1923], [19.4416, 49.5976], [18.8321, 49.5108], [18.5622, 49.8792], [17.8746, 49.9722], [17.152, 50.3784], [16.6792, 50.0974], [16.0072, 50.6117], [14.8096, 50.8589], [15.0164, 51.2527], [14.6018, 51.8324], [14.7527, 52.0818], [14.6196, 52.5284], [14.1286, 52.8782], [14.4145, 53.2835], [14.2587, 53.7296], [14.2139, 53.8707], [14.2112, 53.9504], [16.1865, 54.2904], [16.5598, 54.5539], [17.2621, 54.7294], [18.3234, 54.8382], [18.6697, 54.4309], [19.6045, 54.4591]]] }, \"properties\": { \"name\": \"Poland\", \"id\": \"PL\" }, \"id\": \"PL\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[152.9656, -4.7565], [152.6807, -4.4986], [152.5985, -3.9948], [153.1241, -4.2523], [152.9656, -4.7565]]], [[[155.9575, -6.687], [155.7191, -6.8628], [155.344, -6.7217], [155.202, -6.3075], [154.782, -5.9706], [154.7412, -5.5453], [154.9969, -5.54], [155.467, -6.145], [155.8225, -6.3803], [155.9575, -6.687]]], [[[151.9158, -4.2967], [152.4054, -4.3406], [152.4001, -4.7312], [152.0135, -5.0038], [152.1431, -5.3571], [151.8652, -5.5649], [151.515, -5.5524], [151.2291, -5.92], [150.4283, -6.2764], [149.6524, -6.2906], [149.3825, -6.078], [149.1264, -6.1277], [148.4011, -5.7651], [148.3447, -5.5449], [148.999, -5.4845], [149.2454, -5.5729], [150.2987, -5.5356], [150.953, -5.4237], [151.3268, -4.9603], [151.6712, -4.8835], [151.5518, -4.3455], [151.9158, -4.2967]]], [[[140.9761, -9.1187], [140.9748, -6.3461], [140.9739, -4.0232], [140.9734, -2.6099], [141.1856, -2.6276], [142.2115, -3.0835], [142.9053, -3.3206], [143.509, -3.4311], [144.0159, -3.7835], [144.4775, -3.8253], [145.0879, -4.349], [145.3347, -4.3854], [145.767, -4.8231], [145.8527, -5.4712], [146.4036, -5.6164], [147.0344, -5.9191], [147.3766, -5.9506], [147.8018, -6.315], [147.8453, -6.6626], [147.1191, -6.7217], [146.9607, -6.929], [147.1902, -7.3782], [147.7242, -7.8762], [148.1268, -8.1035], [148.2471, -8.5545], [148.5831, -9.0516], [149.2476, -9.0712], [149.2032, -9.4068], [149.7612, -9.8058], [149.8744, -10.0131], [150.6672, -10.2573], [150.4825, -10.6368], [150.0169, -10.5773], [149.7541, -10.3531], [147.7685, -10.0699], [146.6965, -9.0255], [146.0334, -8.0764], [144.9738, -7.8021], [144.5099, -7.5673], [143.6137, -8.2003], [143.0948, -8.3112], [143.366, -8.9611], [142.6474, -9.3277], [142.2297, -9.1697], [141.1332, -9.2212], [140.9761, -9.1187]]]] }, \"properties\": { \"name\": \"Papua New Guinea\", \"id\": \"PG\" }, \"id\": \"PG\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[134.5956, 7.3821], [134.5064, 7.4372], [134.5561, 7.5939], [134.6595, 7.6631], [134.5956, 7.3821]]] }, \"properties\": { \"name\": \"Palau\", \"id\": \"PW\" }, \"id\": \"PW\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[126.0059, 9.3211], [126.1932, 9.2767], [126.3197, 8.8448], [126.4355, 7.8327], [126.5816, 7.2476], [126.08, 6.7332], [125.8243, 7.3333], [125.4008, 6.7957], [125.5886, 6.4659], [125.6681, 5.9785], [125.4559, 5.6643], [124.6364, 5.9981], [124.078, 6.4042], [123.9853, 6.9937], [124.2068, 7.3963], [123.9684, 7.6644], [123.493, 7.8078], [123.3909, 7.4074], [122.4978, 7.6729], [122.176, 7.0044], [122.0472, 7.3635], [122.132, 7.8105], [122.3371, 8.0284], [122.911, 8.1563], [123.0176, 8.3982], [123.4344, 8.7032], [124.2258, 8.2712], [124.4513, 8.6064], [124.731, 8.5629], [124.869, 8.9722], [125.5336, 9.1408], [125.5211, 9.7592], [126.0059, 9.3211]]], [[[124.5938, 9.7871], [124.3599, 9.63], [123.9355, 9.6238], [123.817, 9.8173], [124.1726, 10.1351], [124.577, 10.0268], [124.5938, 9.7871]]], [[[123.1308, 9.064], [122.5626, 9.4826], [122.4716, 9.9616], [122.8556, 10.0868], [122.8169, 10.5036], [122.9834, 10.8867], [123.2564, 10.9941], [123.5676, 10.7806], [123.1618, 9.8644], [123.3083, 9.357], [123.1308, 9.064]]], [[[123.3705, 9.4498], [123.386, 9.9669], [123.7114, 10.4738], [123.952, 10.3167], [123.6435, 10.0202], [123.3705, 9.4498]]], [[[117.3109, 8.4395], [117.35, 8.7134], [117.8848, 9.2407], [118.1148, 9.3468], [119.0239, 10.3535], [119.2241, 10.4774], [119.2614, 10.8449], [119.5268, 10.9532], [119.6844, 10.5515], [119.1917, 10.061], [118.782, 9.9163], [118.4348, 9.2562], [117.9896, 8.8772], [117.3109, 8.4395]]], [[[124.5747, 11.343], [124.9299, 11.3727], [125.0133, 10.7854], [125.2535, 10.2639], [125.0266, 10.0331], [124.7807, 10.168], [124.7869, 10.7815], [124.4456, 10.9235], [124.5747, 11.343]]], [[[122.4964, 11.6151], [123.1583, 11.5356], [123.0167, 11.1166], [122.7699, 10.8236], [122.1977, 10.623], [121.9642, 10.8716], [122.1036, 11.643], [122.4964, 11.6151]]], [[[125.2397, 12.5277], [125.5358, 12.1913], [125.4568, 11.9524], [125.6281, 11.1321], [125.2335, 11.145], [124.8841, 11.7753], [124.3848, 12.2441], [124.2946, 12.5695], [125.2397, 12.5277]]], [[[120.7045, 13.4794], [121.2029, 13.4324], [121.5225, 13.131], [121.5407, 12.6383], [121.2367, 12.2188], [120.922, 12.5117], [120.7635, 12.9698], [120.5082, 13.2601], [120.7045, 13.4794]]], [[[121.1017, 18.6153], [121.8457, 18.2952], [122.2998, 18.4026], [122.1511, 17.7563], [122.2368, 17.435], [122.5191, 17.1247], [122.1351, 16.185], [121.5953, 15.9333], [121.3925, 15.3242], [121.6957, 14.7374], [121.8004, 14.1138], [122.4907, 14.3224], [122.856, 14.2509], [123.2315, 13.7475], [123.4322, 13.9664], [123.726, 13.8843], [123.6079, 13.5283], [124.1428, 13.036], [124.0598, 12.5672], [123.311, 13.044], [123.1632, 13.4417], [122.5954, 13.9078], [122.4068, 13.4927], [121.7778, 13.9375], [121.2034, 13.6401], [120.6166, 14.1879], [120.922, 14.4933], [120.8882, 14.7157], [120.0821, 14.8511], [119.8309, 16.3266], [120.1598, 16.0478], [120.3893, 16.2218], [120.3054, 16.5294], [120.4088, 16.9555], [120.3582, 17.6383], [120.5997, 18.5078], [121.1017, 18.6153]]]] }, \"properties\": { \"name\": \"Philippines\", \"id\": \"PH\" }, \"id\": \"PH\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-69.9658, -4.2359], [-70.7995, -4.1733], [-70.9737, -4.3504], [-71.8448, -4.5044], [-72.6987, -5.0673], [-72.8871, -5.1228], [-72.9799, -5.635], [-73.2355, -6.0984], [-73.1374, -6.466], [-73.758, -6.9059], [-73.7496, -7.3356], [-74.0021, -7.5562], [-73.5491, -8.3459], [-72.9741, -8.993], [-73.2093, -9.4116], [-72.379, -9.5102], [-72.1815, -10.0038], [-71.238, -9.9661], [-70.637, -9.4782], [-70.6423, -11.0101], [-70.2202, -11.0478], [-69.5785, -10.9519], [-68.6852, -12.502], [-68.9786, -12.8802], [-69.0741, -13.6828], [-68.8803, -14.199], [-69.235, -14.5972], [-69.3748, -14.963], [-69.1726, -15.2368], [-69.4185, -15.6035], [-69.2176, -16.149], [-68.9134, -16.2618], [-69.0208, -16.6422], [-69.6249, -17.2002], [-69.5108, -17.506], [-69.8522, -17.704], [-69.9263, -18.206], [-70.4184, -18.3454], [-71.337, -17.6827], [-71.5323, -17.2943], [-72.1114, -17.0026], [-72.4676, -16.7079], [-73.825, -16.153], [-74.1471, -15.9124], [-75.1043, -15.4117], [-75.5336, -14.899], [-75.934, -14.6336], [-76.2891, -14.1333], [-76.1839, -13.5154], [-76.8322, -12.3489], [-77.1527, -12.0603], [-77.2204, -11.6635], [-77.6332, -11.288], [-77.7362, -10.8365], [-78.1856, -10.089], [-78.7622, -8.6171], [-79.3772, -7.8354], [-79.7621, -7.0666], [-80.1103, -6.6497], [-80.8117, -6.2822], [-81.1805, -5.9426], [-80.8827, -5.7589], [-81.1084, -5.0278], [-81.3366, -4.6695], [-81.2833, -4.3224], [-80.7986, -3.7312], [-80.3247, -3.388], [-80.1793, -3.8776], [-80.51, -4.0694], [-80.4885, -4.3939], [-80.1396, -4.2962], [-79.6385, -4.4547], [-79.3308, -4.9279], [-79.0763, -4.9905], [-78.4198, -3.7769], [-78.3472, -3.4311], [-77.8607, -2.9819], [-76.679, -2.5628], [-76.0898, -2.1331], [-75.5706, -1.5312], [-75.2632, -0.5555], [-75.2845, -0.1063], [-74.8018, -0.2], [-74.4178, -0.5809], [-74.2465, -0.9706], [-73.6643, -1.2489], [-73.4963, -1.6932], [-73.1969, -1.8304], [-73.1545, -2.2783], [-72.3957, -2.4288], [-71.7525, -2.1527], [-71.3969, -2.3342], [-70.9146, -2.2184], [-70.0741, -2.7502], [-70.7351, -3.7818], [-70.3396, -3.8142], [-69.9658, -4.2359]]] }, \"properties\": { \"name\": \"Peru\", \"id\": \"PE\" }, \"id\": \"PE\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-128.2901, -24.3974], [-128.3205, -24.3997], [-128.3503, -24.3402], [-128.3037, -24.3335], [-128.2901, -24.3974]]] }, \"properties\": { \"name\": \"Pitcairn Islands\", \"id\": \"PN\" }, \"id\": \"PN\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-77.3742, 8.6583], [-77.2124, 8.0338], [-77.3509, 7.7057], [-77.7439, 7.537], [-77.9011, 7.2294], [-78.1701, 7.5437], [-78.4215, 8.0608], [-78.1139, 8.3796], [-79.0865, 8.997], [-79.4416, 9.0059], [-79.7505, 8.5953], [-80.3687, 8.289], [-80.4581, 8.0768], [-80.0752, 7.6671], [-80.4388, 7.2752], [-80.8456, 7.2201], [-81.0352, 7.7111], [-81.5041, 7.7213], [-81.7276, 8.1376], [-82.6796, 8.3218], [-82.8793, 8.0706], [-82.9976, 8.3676], [-82.917, 8.7404], [-82.9399, 9.4493], [-82.5635, 9.5767], [-82.2441, 9.0316], [-81.3548, 8.7804], [-80.8387, 8.8874], [-80.1272, 9.2101], [-79.5774, 9.598], [-78.5043, 9.4063], [-78.0828, 9.2363], [-77.3742, 8.6583]]] }, \"properties\": { \"name\": \"Panama\", \"id\": \"PA\" }, \"id\": \"PA\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[77.7992, 35.496], [77.0486, 35.1099], [76.5945, 34.7357], [75.7093, 34.5031], [74.3004, 34.7654], [73.9613, 34.6535], [74.1499, 33.507], [73.9941, 33.2424], [74.6578, 32.5189], [75.3334, 32.2792], [74.5099, 31.7127], [74.6329, 31.0345], [73.8991, 30.4352], [73.809, 30.0934], [73.3816, 29.9345], [72.903, 29.029], [72.342, 28.752], [71.8701, 27.9623], [70.7373, 27.7293], [70.4035, 28.0249], [70.1447, 27.8491], [69.5681, 27.1744], [69.47, 26.8046], [70.1567, 26.4713], [70.0777, 26.0718], [70.2646, 25.7064], [70.6521, 25.4228], [71.048, 24.6877], [71.044, 24.4001], [70.5469, 24.4183], [69.7163, 24.1728], [69.5592, 24.2731], [68.7282, 24.2656], [68.7242, 23.9646], [68.1649, 23.8572], [67.6687, 23.811], [67.3096, 24.175], [67.1715, 24.7561], [66.7032, 24.8608], [66.6988, 25.2261], [66.4284, 25.5755], [65.6796, 25.3553], [64.7767, 25.3074], [64.6591, 25.184], [63.7207, 25.3859], [63.4912, 25.2106], [62.5723, 25.2546], [62.3153, 25.1347], [61.5878, 25.2022], [61.6686, 25.769], [61.8697, 26.2422], [62.4392, 26.5609], [63.1681, 26.6657], [63.1667, 27.2525], [62.7632, 27.2503], [62.7397, 28.0023], [62.3531, 28.4146], [61.8901, 28.5465], [61.6229, 28.7915], [61.3184, 29.3725], [60.8434, 29.8586], [62.4765, 29.4085], [63.5676, 29.4982], [64.0989, 29.3921], [64.521, 29.5643], [65.0954, 29.5594], [66.1772, 29.8355], [66.3974, 30.9124], [66.9243, 31.3057], [67.2874, 31.2178], [67.5781, 31.5063], [68.2138, 31.8073], [68.869, 31.6342], [69.2791, 31.9369], [69.2414, 32.4336], [69.5015, 33.02], [69.9201, 33.1123], [70.2841, 33.3689], [69.8682, 33.8976], [71.0516, 34.0498], [70.9655, 34.5306], [71.6206, 35.1831], [71.4276, 35.8338], [71.1852, 36.042], [71.6206, 36.4366], [72.623, 36.8295], [73.7691, 36.8885], [74.0017, 36.8233], [74.5415, 37.0221], [75.3467, 36.9134], [75.8403, 36.6497], [75.945, 36.0176], [76.2518, 35.8108], [77.4467, 35.4756], [77.7992, 35.496]]] }, \"properties\": { \"name\": \"Pakistan\", \"id\": \"PK\" }, \"id\": \"PK\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[56.388, 24.9793], [56.6406, 24.4702], [57.2199, 23.9229], [58.5782, 23.6437], [59.7998, 22.2201], [59.3714, 21.4988], [58.8956, 21.1126], [58.4743, 20.4068], [57.8618, 20.2439], [57.7153, 19.6069], [57.8116, 19.017], [57.1764, 18.9025], [56.6553, 18.5873], [56.551, 18.166], [56.2704, 17.9508], [55.479, 17.8433], [55.0644, 17.039], [54.0683, 17.0057], [53.6097, 16.7598], [53.0855, 16.6484], [52.729, 17.3005], [51.9775, 18.9961], [53.667, 19.559], [54.9774, 19.9958], [55.641, 22.0017], [55.186, 22.704], [55.1997, 23.0346], [55.7608, 24.2425], [55.7959, 24.8679], [56.064, 24.7388], [56.388, 24.9793]]] }, \"properties\": { \"name\": \"Oman\", \"id\": \"OM\" }, \"id\": \"OM\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[173.1152, -41.2791], [173.738, -40.9888], [174.3026, -41.0194], [174.0922, -41.505], [174.2831, -41.7407], [173.5449, -42.518], [173.2213, -42.9765], [172.7184, -43.2589], [172.9208, -43.8914], [172.3855, -43.8297], [171.4426, -44.136], [171.1133, -45.0393], [170.7005, -45.6843], [169.6866, -46.5516], [168.382, -46.6054], [168.1889, -46.3621], [167.682, -46.193], [166.7316, -46.1979], [166.7338, -45.5436], [167.1946, -44.9634], [167.7872, -44.595], [168.3665, -44.0818], [168.8064, -43.9922], [169.6613, -43.5913], [170.3027, -43.1075], [170.7417, -42.9273], [171.2571, -42.4652], [171.4861, -41.7949], [172.0108, -41.4447], [172.1396, -40.9471], [172.6407, -40.5183], [172.9887, -40.8481], [173.1152, -41.2791]]], [[[173.2693, -34.935], [173.8441, -35.0264], [174.3204, -35.2466], [174.5437, -35.5822], [174.391, -35.7739], [174.802, -36.3093], [174.7226, -36.8411], [175.2996, -36.9933], [175.4608, -36.4757], [175.8762, -36.9578], [176.1084, -37.6449], [177.3358, -37.9907], [178.0091, -37.5548], [178.536, -37.692], [178.2679, -38.5509], [177.9763, -38.7223], [177.9656, -39.1426], [177.4077, -39.0809], [176.954, -39.3677], [177.1098, -39.6731], [176.8421, -40.1578], [175.9828, -41.2134], [175.3098, -41.6107], [174.6356, -41.2893], [175.1625, -40.6217], [175.2543, -40.2892], [175.0093, -39.9523], [173.9342, -39.5093], [173.8441, -39.1395], [174.5974, -38.7849], [174.9281, -37.8043], [174.7292, -37.4487], [174.782, -36.9436], [174.4758, -36.9418], [174.4469, -36.4509], [173.9453, -36.1761], [173.1166, -35.2053], [173.2693, -34.935]]]] }, \"properties\": { \"name\": \"New Zealand\", \"id\": \"NZ\" }, \"id\": \"NZ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[20.898, 80.2499], [22.4507, 80.4022], [26.8608, 80.16], [27.1986, 79.9065], [25.641, 79.403], [23.9475, 79.1943], [20.8611, 79.3978], [18.7251, 79.7607], [18.3438, 80.0595], [20.898, 80.2499]]], [[[16.7867, 79.9068], [18.5813, 79.5716], [19.0896, 79.157], [20.4581, 79.1293], [21.3889, 78.7404], [19.7687, 78.6228], [18.4393, 78.0251], [16.7005, 76.5794], [14.3657, 77.2345], [14.921, 77.6889], [13.6807, 78.028], [11.7738, 78.7165], [10.866, 79.7965], [12.7535, 79.7758], [13.3838, 79.4809], [15.8163, 79.6819], [16.7867, 79.9068]]], [[[21.6082, 78.5957], [23.1166, 77.9916], [24.2383, 77.8986], [23.8414, 77.4978], [22.057, 77.5011], [21.6082, 77.9161], [20.2282, 78.4779], [21.6082, 78.5957]]]] }, \"properties\": { \"name\": \"Svalbard and Jan Mayen\", \"id\": \"SJ\" }, \"id\": \"SJ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[166.9584, -0.5165], [166.9163, -0.5467], [166.9136, -0.4992], [166.9584, -0.5165]]] }, \"properties\": { \"name\": \"Nauru\", \"id\": \"NR\" }, \"id\": \"NR\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[88.1099, 27.8704], [87.9843, 27.134], [88.1614, 26.7247], [88.0549, 26.43], [87.2874, 26.3603], [87.0166, 26.5556], [86.7014, 26.4349], [86.3663, 26.5743], [85.293, 26.7412], [84.6853, 27.0412], [84.6103, 27.2987], [84.0909, 27.4913], [83.2897, 27.371], [82.7335, 27.5189], [81.9877, 27.9139], [81.8528, 27.8669], [80.5868, 28.6494], [80.0706, 28.8301], [80.4017, 29.7303], [81.0103, 30.1645], [81.4169, 30.3376], [82.0432, 30.3269], [82.1591, 30.1152], [82.8542, 29.6833], [83.1556, 29.6127], [83.5835, 29.1834], [84.1016, 29.2198], [84.2285, 28.9118], [84.7141, 28.5957], [85.1589, 28.5922], [85.1225, 28.3161], [85.6783, 28.2775], [86.4089, 27.9286], [86.5545, 28.0853], [87.1413, 27.8385], [88.1099, 27.8704]]] }, \"properties\": { \"name\": \"Nepal\", \"id\": \"NP\" }, \"id\": \"NP\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[30.8696, 69.7834], [28.9657, 69.0219], [29.1415, 69.6715], [27.8897, 70.0617], [26.5257, 69.915], [26.0116, 69.6526], [25.7484, 68.9901], [24.9414, 68.5933], [23.8539, 68.8059], [22.4108, 68.7198], [21.622, 69.2707], [20.6223, 69.037], [19.9698, 68.3565], [18.3785, 68.5624], [17.9168, 67.965], [17.3247, 68.1039], [16.1275, 67.4259], [16.4036, 67.055], [15.423, 66.4899], [14.5432, 66.1292], [14.4798, 65.3014], [13.6501, 64.5816], [14.0776, 64.464], [13.9604, 64.0141], [12.6625, 63.9404], [11.9997, 63.2917], [12.2181, 63.0007], [12.3034, 62.2856], [12.1555, 61.7207], [12.8809, 61.3523], [12.294, 61.0027], [12.5888, 60.4508], [12.4862, 60.1067], [11.6806, 59.5923], [11.7982, 59.29], [11.3885, 59.0365], [10.8345, 59.1839], [9.6182, 58.946], [8.1663, 58.1452], [7.0051, 58.0242], [5.7067, 58.5236], [5.8452, 59.3535], [5.1314, 59.2265], [5.2441, 60.5695], [5.0493, 60.7076], [4.9276, 61.7107], [5.5336, 62.3109], [6.353, 62.6112], [7.2838, 62.6023], [7.0086, 62.9576], [8.1006, 63.091], [8.398, 63.5351], [9.6968, 63.6246], [9.7079, 63.865], [11.3499, 64.9059], [12.1595, 65.1789], [12.2727, 65.5682], [12.9763, 66.0192], [13.1046, 66.5394], [14.755, 67.4991], [14.7989, 67.8094], [16.0644, 68.2], [16.6517, 68.6257], [18.1015, 69.1564], [18.2932, 69.4751], [20.0688, 69.8835], [21.163, 69.8895], [21.4005, 70.1744], [22.6847, 70.3749], [23.0464, 70.1019], [24.4198, 70.702], [24.6582, 71.001], [25.7684, 70.8531], [27.5972, 71.0913], [29.1024, 70.8607], [30.9442, 70.2745], [29.6014, 69.9767], [29.7923, 69.7279], [30.8696, 69.7834]]] }, \"properties\": { \"name\": \"Norway\", \"id\": \"NO\" }, \"id\": \"NO\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-169.8034, -19.0832], [-169.9039, -19.1378], [-169.9483, -19.0729], [-169.834, -18.966], [-169.8034, -19.0832]]] }, \"properties\": { \"name\": \"Niue\", \"id\": \"NU\" }, \"id\": \"NU\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-83.1576, 14.9931], [-83.2992, 14.749], [-83.1878, 14.3401], [-83.4124, 13.9966], [-83.5673, 13.3205], [-83.511, 12.4119], [-83.7693, 11.9316], [-83.6517, 11.6422], [-83.8679, 11.2999], [-83.6419, 10.9173], [-84.1684, 10.7806], [-84.3484, 10.9799], [-84.9092, 10.9453], [-85.6215, 11.1845], [-85.7444, 11.062], [-86.4688, 11.7385], [-86.7556, 12.1566], [-87.6676, 12.9037], [-87.3373, 12.9792], [-87.0592, 12.9916], [-86.7108, 13.3134], [-86.7336, 13.7635], [-86.3317, 13.7702], [-86.1512, 13.9948], [-85.7868, 13.8443], [-85.1796, 14.3432], [-84.9851, 14.7525], [-84.646, 14.6611], [-83.8674, 14.7947], [-83.1576, 14.9931]]] }, \"properties\": { \"name\": \"Nicaragua\", \"id\": \"NI\" }, \"id\": \"NI\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[13.6062, 13.7045], [14.0638, 13.0786], [14.1974, 12.3839], [14.6271, 12.1087], [14.5597, 11.4921], [13.892, 11.1401], [13.5352, 10.6052], [13.2697, 10.0362], [13.1756, 9.5394], [12.9297, 9.4263], [12.8067, 8.8865], [12.4037, 8.5957], [12.0162, 7.5899], [11.7676, 7.272], [11.5518, 6.6972], [11.1532, 6.438], [11.0325, 6.6981], [10.6064, 7.063], [10.1438, 6.9964], [9.0603, 6.0092], [8.801, 5.1973], [8.556, 4.7552], [8.2932, 4.5576], [7.1546, 4.5146], [6.7569, 4.3437], [6.0764, 4.2904], [5.5877, 4.6473], [5.2326, 5.4836], [4.8611, 6.0265], [4.4314, 6.3487], [4.126, 6.4113], [2.7064, 6.3692], [2.7748, 6.7119], [2.686, 7.874], [2.7748, 9.0485], [3.0451, 9.084], [3.3252, 9.7783], [3.5573, 9.9074], [3.5764, 10.2683], [3.8343, 10.6074], [3.7163, 11.0797], [3.4877, 11.3954], [3.5955, 11.6963], [3.6466, 12.5299], [3.948, 12.775], [4.1477, 13.4577], [4.8233, 13.76], [5.4918, 13.8727], [6.3863, 13.6037], [6.8044, 13.1074], [7.0565, 13], [7.7885, 13.3378], [8.0953, 13.2912], [8.7504, 12.9081], [9.616, 12.8105], [10.1847, 13.2699], [10.9588, 13.3716], [11.412, 13.3538], [12.4632, 13.0937], [12.6549, 13.3267], [13.3239, 13.6707], [13.6062, 13.7045]]] }, \"properties\": { \"name\": \"Nigeria\", \"id\": \"NG\" }, \"id\": \"NG\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[167.9394, -29.0175], [167.979, -29.0756], [167.9204, -29.0827], [167.9394, -29.0175]]] }, \"properties\": { \"name\": \"Norfolk Island\", \"id\": \"NF\" }, \"id\": \"NF\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[14.9791, 22.996], [15.1722, 21.9223], [15.182, 21.5232], [15.6072, 20.9546], [15.5873, 20.7335], [15.949, 20.3034], [15.7351, 19.9039], [15.4745, 16.9085], [14.3679, 15.7499], [13.4481, 14.3805], [13.6062, 13.7045], [13.3239, 13.6707], [12.6549, 13.3267], [12.4632, 13.0937], [11.412, 13.3538], [10.9588, 13.3716], [10.1847, 13.2699], [9.616, 12.8105], [8.7504, 12.9081], [8.0953, 13.2912], [7.7885, 13.3378], [7.0565, 13], [6.8044, 13.1074], [6.3863, 13.6037], [5.4918, 13.8727], [4.8233, 13.76], [4.1477, 13.4577], [3.948, 12.775], [3.6466, 12.5299], [3.5955, 11.6963], [2.8782, 12.3679], [2.3659, 12.2219], [2.389, 11.897], [2.0912, 12.2778], [2.0739, 12.7142], [1.5652, 12.6356], [0.9872, 13.0418], [0.9779, 13.5518], [0.6183, 13.7036], [0.1638, 14.4973], [0.2175, 14.9114], [0.9601, 14.9869], [1.3002, 15.2723], [3.5041, 15.3562], [3.8769, 15.7553], [4.1823, 16.5818], [4.2347, 16.9964], [4.2276, 19.1426], [5.8367, 19.4791], [7.4818, 20.8729], [9.3785, 21.9915], [11.9678, 23.518], [13.4814, 23.1802], [14.2307, 22.6183], [14.9791, 22.996]]] }, \"properties\": { \"name\": \"Niger\", \"id\": \"NE\" }, \"id\": \"NE\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[164.2023, -20.2462], [164.4358, -20.2821], [165.1918, -20.7691], [165.6627, -21.2671], [166.9425, -22.0901], [166.7742, -22.3759], [166.096, -21.9565], [165.2419, -21.5255], [164.4549, -20.829], [164.1699, -20.4801], [164.2023, -20.2462]]] }, \"properties\": { \"name\": \"New Caledonia\", \"id\": \"NC\" }, \"id\": \"NC\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[23.3807, -17.6405], [24.2751, -17.4812], [24.9325, -17.5433], [25.2588, -17.7936], [24.359, -17.9783], [23.5804, -18.4528], [23.2986, -18.0276], [20.9739, -18.3188], [20.9779, -20.9684], [20.9708, -22], [19.9774, -22], [19.9805, -24.777], [19.9805, -26.5312], [19.9805, -28.4515], [19.6715, -28.5039], [19.2458, -28.9016], [18.1028, -28.8719], [17.4481, -28.6983], [17.3855, -28.3534], [17.0561, -28.0311], [16.7556, -28.4524], [16.4475, -28.6175], [15.7191, -27.9659], [15.3413, -27.3866], [14.9676, -26.3182], [14.8451, -25.7256], [14.8371, -25.0331], [14.5015, -24.2021], [14.474, -23.281], [14.5259, -22.7027], [14.3217, -22.19], [13.9733, -21.7678], [13.4504, -20.9169], [13.1685, -20.1845], [12.4583, -18.9269], [12.0956, -18.5412], [11.776, -18.0018], [11.7432, -17.2494], [12.5479, -17.2126], [13.101, -16.9676], [13.4038, -17.008], [13.9382, -17.3888], [16.9136, -17.3915], [18.3962, -17.3995], [18.8259, -17.7661], [19.6396, -17.8687], [20.3928, -17.8873], [20.625, -17.9965], [21.4169, -18.0005], [23.3807, -17.6405]]] }, \"properties\": { \"name\": \"Namibia\", \"id\": \"NA\" }, \"id\": \"NA\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[45.1802, -12.9765], [45.0692, -12.8957], [45.1349, -12.7093], [45.2233, -12.7519], [45.1802, -12.9765]]] }, \"properties\": { \"name\": \"Mayotte\", \"id\": \"YT\" }, \"id\": \"YT\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[102.1009, 6.2422], [102.9825, 5.5249], [103.4157, 4.8502], [103.4686, 4.3934], [103.362, 3.7693], [103.4397, 2.933], [103.8121, 2.5805], [104.2884, 1.4806], [103.6945, 1.4495], [102.7273, 1.8557], [101.2953, 2.8851], [101.2997, 3.2535], [100.7155, 3.9664], [100.6143, 4.6522], [100.3524, 5.5875], [100.3431, 5.9843], [100.119, 6.442], [100.3453, 6.5498], [101.0533, 6.2427], [101.2571, 5.7894], [101.5563, 5.908], [101.8737, 5.8254], [102.1009, 6.2422]]], [[[117.5746, 4.1706], [117.1005, 4.337], [115.8962, 4.3486], [115.5686, 3.9389], [115.4545, 3.0342], [115.0861, 2.8411], [115.1509, 2.4931], [114.7865, 2.2503], [114.8304, 1.98], [114.5459, 1.4673], [113.9022, 1.4344], [113.6222, 1.236], [112.476, 1.5592], [112.1857, 1.4393], [112.0783, 1.1432], [111.7698, 0.9994], [110.9379, 1.0172], [110.5056, 0.8618], [109.6542, 1.6151], [109.6289, 2.0275], [109.9845, 1.7176], [110.3493, 1.7198], [110.9402, 1.5174], [111.1541, 1.7389], [111.242, 2.4358], [111.7276, 2.854], [112.7375, 3.0706], [113.0446, 3.2051], [113.924, 4.2434], [114.0638, 4.5927], [114.6085, 4.0241], [114.8402, 4.3934], [114.7465, 4.7179], [115.0266, 4.8999], [115.1398, 4.8999], [115.5198, 5.049], [115.419, 5.413], [115.7968, 5.536], [116.1386, 6.1295], [116.4946, 6.5219], [117.294, 6.6768], [117.6456, 6.4735], [117.6172, 5.9408], [118.0038, 6.0531], [118.1157, 5.8627], [118.5946, 5.5919], [119.2236, 5.4126], [119.1322, 5.1005], [118.1854, 4.8284], [118.4979, 4.3623], [117.5746, 4.1706]]]] }, \"properties\": { \"name\": \"Malaysia\", \"id\": \"MY\" }, \"id\": \"MY\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[34.9596, -11.5783], [34.6595, -11.5885], [34.3608, -12.2104], [34.5636, -13.3601], [35.2477, -13.8967], [35.8474, -14.6709], [35.7555, -16.0585], [35.3587, -16.1606], [35.1673, -16.5601], [35.2903, -17.0967], [34.3954, -16.1992], [34.248, -15.8876], [34.541, -15.2972], [34.5055, -14.5981], [34.3324, -14.4085], [33.6364, -14.5683], [33.2018, -14.0135], [32.9812, -14.0095], [32.6722, -13.6104], [32.9679, -13.2251], [33.0216, -12.6303], [33.398, -12.49], [33.2524, -12.1127], [33.2262, -11.5348], [33.3798, -11.1579], [33.2613, -10.8934], [33.659, -10.5906], [33.3509, -9.8622], [32.9199, -9.4072], [34.3208, -9.7317], [34.5241, -10.03], [34.6617, -10.71], [34.608, -11.0807], [34.9596, -11.5783]]] }, \"properties\": { \"name\": \"Malawi\", \"id\": \"MW\" }, \"id\": \"MW\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[57.6514, -20.485], [57.3859, -20.2284], [57.5759, -19.9971], [57.7921, -20.2124], [57.6514, -20.485]]] }, \"properties\": { \"name\": \"Mauritius\", \"id\": \"MU\" }, \"id\": \"MU\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-60.8263, 14.4946], [-61.0638, 14.4671], [-61.2198, 14.8044], [-60.9186, 14.7352], [-60.8263, 14.4946]]] }, \"properties\": { \"name\": \"Martinique\", \"id\": \"MQ\" }, \"id\": \"MQ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-62.1484, 16.7403], [-62.1542, 16.6812], [-62.2217, 16.6994], [-62.223, 16.7518], [-62.1484, 16.7403]]] }, \"properties\": { \"name\": \"Montserrat\", \"id\": \"MS\" }, \"id\": \"MS\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-12.2807, 14.8089], [-12.8584, 15.2426], [-13.2579, 15.7002], [-13.4095, 16.0593], [-13.8685, 16.1481], [-14.3, 16.5805], [-15.1128, 16.6448], [-15.6208, 16.5068], [-16.1683, 16.5472], [-16.4411, 16.2045], [-16.5352, 15.8383], [-16.5356, 16.2866], [-16.0789, 17.5459], [-16.0849, 18.5212], [-16.2132, 19.0032], [-16.5146, 19.3619], [-16.2835, 19.7871], [-16.2105, 20.2279], [-16.4298, 20.6523], [-17.0481, 20.8063], [-16.9647, 21.3292], [-15.0018, 21.3314], [-13.0163, 21.3341], [-13.0944, 22.4958], [-13.0316, 23], [-12.6203, 23.2712], [-12.0235, 23.4674], [-12.0164, 25.9954], [-10.5624, 25.9954], [-8.6821, 25.9954], [-8.6834, 27.2858], [-6.2387, 25.848], [-4.8227, 24.9958], [-6.594, 24.9944], [-6.3113, 22.5291], [-6.1404, 21.0367], [-5.8556, 18.5505], [-5.6286, 16.5685], [-5.36, 16.2831], [-5.5125, 15.4965], [-7.3555, 15.496], [-9.1768, 15.496], [-9.9414, 15.374], [-10.6965, 15.4228], [-10.8956, 15.1502], [-11.5026, 15.6367], [-11.7603, 15.4255], [-11.8728, 14.9953], [-12.2807, 14.8089]]] }, \"properties\": { \"name\": \"Mauritania\", \"id\": \"MR\" }, \"id\": \"MR\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[32.8862, -26.8495], [32.1129, -26.8393], [31.9482, -25.9577], [31.986, -24.4605], [31.7995, -23.8923], [31.5456, -23.4821], [31.2877, -22.4021], [32.3713, -21.335], [32.4778, -20.7131], [33.0069, -19.8737], [32.7166, -19.0019], [32.9932, -18.3596], [32.9479, -16.7123], [32.2434, -16.4487], [31.9398, -16.4287], [31.2362, -16.0239], [30.4377, -15.9954], [30.3959, -15.643], [30.2317, -14.9905], [31.729, -14.496], [33.2018, -14.0135], [33.6364, -14.5683], [34.3324, -14.4085], [34.5055, -14.5981], [34.541, -15.2972], [34.248, -15.8876], [34.3954, -16.1992], [35.2903, -17.0967], [35.1673, -16.5601], [35.3587, -16.1606], [35.7555, -16.0585], [35.8474, -14.6709], [35.2477, -13.8967], [34.5636, -13.3601], [34.3608, -12.2104], [34.6595, -11.5885], [34.9596, -11.5783], [35.6312, -11.5818], [35.7852, -11.4531], [36.5185, -11.7163], [36.9789, -11.5667], [37.5417, -11.675], [37.9204, -11.2946], [38.4917, -11.4131], [38.7948, -11.2289], [39.3217, -11.1224], [39.9889, -10.821], [40.4634, -10.4641], [40.5447, -11.0656], [40.403, -11.3319], [40.5806, -12.6356], [40.5451, -13.463], [40.6401, -14.3899], [40.835, -14.7916], [40.5589, -15.4734], [40.1087, -15.9795], [39.8446, -16.4358], [39.0842, -16.9729], [38.145, -17.2428], [37.2443, -17.7399], [36.5403, -18.5181], [35.6512, -19.1639], [34.9481, -19.8129], [34.7559, -19.8218], [34.6981, -20.4042], [34.9822, -20.8063], [35.2677, -21.6511], [35.3156, -22.3968], [35.5753, -22.9632], [35.3702, -23.7982], [35.4381, -24.171], [35.1558, -24.5413], [34.6072, -24.8214], [33.3474, -25.2608], [32.7921, -25.6443], [32.5905, -26.0039], [32.9337, -26.2525], [32.8862, -26.8495]]] }, \"properties\": { \"name\": \"Mozambique\", \"id\": \"MZ\" }, \"id\": \"MZ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[145.7519, 15.1334], [145.6845, 15.1249], [145.7133, 15.2155], [145.7821, 15.1747], [145.7519, 15.1334]]] }, \"properties\": { \"name\": \"Northern Mariana Islands\", \"id\": \"MP\" }, \"id\": \"MP\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[116.6832, 49.8238], [115.5575, 47.945], [115.8984, 47.6871], [116.7605, 47.87], [117.3508, 47.652], [117.7685, 47.988], [118.4983, 47.9841], [119.711, 47.15], [119.8979, 46.8579], [119.7066, 46.6062], [118.3088, 46.7172], [117.3335, 46.3621], [116.5625, 46.2897], [116.2407, 45.7961], [115.6809, 45.4583], [114.517, 45.3646], [114.0305, 44.9425], [113.5871, 44.7459], [111.8981, 45.0641], [111.4022, 44.3672], [111.9331, 43.7116], [111.0072, 43.3414], [110.4004, 42.7736], [109.4434, 42.4558], [108.1712, 42.4474], [106.7702, 42.2889], [105.1971, 41.738], [104.4984, 41.6586], [104.4984, 41.877], [103.7109, 41.7514], [103.0726, 42.0062], [101.9731, 42.2157], [101.7139, 42.4656], [99.984, 42.6773], [99.4678, 42.5681], [97.2057, 42.7896], [96.3854, 42.7204], [95.9126, 43.2064], [95.3502, 44.278], [94.7119, 44.3508], [93.6563, 44.9008], [92.7876, 45.0357], [91.5842, 45.0766], [90.8771, 45.196], [90.6618, 45.5253], [91.0019, 46.0358], [91.0338, 46.529], [90.87, 46.9547], [90.4963, 47.2854], [90.3134, 47.676], [89.561, 48.004], [89.0478, 48.0027], [88.517, 48.3844], [87.9798, 48.5549], [87.8143, 49.1624], [88.1925, 49.4518], [88.8317, 49.4485], [89.6542, 49.7175], [89.644, 49.903], [91.8044, 50.6936], [94.2511, 50.5564], [94.6147, 50.0237], [95.5229, 49.9112], [95.8518, 50.0129], [96.986, 49.8828], [97.2088, 49.7308], [98.1032, 50.0779], [98.2795, 50.5333], [97.8254, 50.9852], [97.947, 51.3483], [98.8485, 52.0701], [100.4687, 51.7261], [101.3814, 51.4526], [102.1116, 51.3534], [102.2883, 50.585], [102.6833, 50.3871], [103.6328, 50.1387], [105.3835, 50.4736], [106.218, 50.3045], [106.7112, 50.3125], [107.2332, 49.9893], [107.9479, 49.9247], [108.034, 49.594], [108.6137, 49.3228], [109.2365, 49.3348], [110.1997, 49.1704], [110.8279, 49.1661], [111.3366, 49.3559], [113.0557, 49.6162], [113.1641, 49.7971], [114.2969, 50.2743], [114.743, 50.2337], [115.2743, 49.9489], [116.1346, 50.0109], [116.6832, 49.8238]]] }, \"properties\": { \"name\": \"Mongolia\", \"id\": \"MN\" }, \"id\": \"MN\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[19.1943, 43.5331], [19.5517, 43.2122], [20.3445, 42.8278], [20.0639, 42.5473], [19.6546, 42.6285], [19.2809, 42.1726], [19.3426, 41.869], [18.5174, 42.4327], [18.4362, 42.5597], [18.4437, 42.9685], [18.9404, 43.4967], [19.1943, 43.5331]]] }, \"properties\": { \"name\": \"Montenegro\", \"id\": \"ME\" }, \"id\": \"ME\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[101.139, 21.5676], [100.7564, 21.3128], [100.2495, 20.7304], [100.1225, 20.3167], [99.8904, 20.4246], [99.3382, 20.0788], [99.0208, 20.0419], [98.9169, 19.7729], [98.1112, 19.7623], [97.8169, 19.46], [97.7539, 18.621], [97.4849, 18.4941], [97.793, 17.6813], [98.4388, 16.9755], [98.6892, 16.3052], [98.5653, 15.4037], [98.1911, 15.204], [98.2462, 14.8147], [99.1366, 13.7165], [99.2196, 12.7399], [99.4052, 12.5477], [99.6147, 11.7811], [99.1903, 11.1051], [98.7571, 10.6612], [98.7025, 10.1902], [98.465, 10.6758], [98.6754, 10.987], [98.7416, 11.5916], [98.576, 13.162], [98.2453, 13.7333], [97.8121, 14.859], [97.7104, 15.8756], [97.5843, 16.0194], [97.6194, 16.5374], [97.3757, 16.5228], [97.1782, 17.0621], [96.6224, 16.564], [95.7635, 16.169], [95.3897, 15.7229], [94.9427, 15.8183], [94.5876, 16.2888], [94.2143, 16.1268], [94.589, 17.5695], [94.4309, 18.2016], [94.07, 18.8936], [93.7056, 19.0267], [93.9981, 19.4409], [93.3625, 20.0584], [93.002, 20.0748], [92.7357, 20.5626], [92.3242, 20.7917], [92.1795, 21.2933], [92.5937, 21.4673], [92.575, 21.9782], [92.9643, 22.0039], [93.1618, 22.3604], [93.0788, 22.7182], [93.366, 23.1323], [93.4149, 23.6823], [93.3074, 24.0219], [94.1277, 23.8763], [94.2929, 24.3219], [94.7075, 25.0486], [94.6227, 25.4099], [95.1323, 26.0411], [95.1287, 26.5973], [96.0613, 27.217], [96.6659, 27.3391], [97.3353, 27.9379], [97.3224, 28.218], [97.5377, 28.5101], [98.0988, 28.1421], [98.299, 27.5499], [98.651, 27.5726], [98.7318, 26.5836], [98.6546, 25.9177], [98.0109, 25.2923], [97.8196, 25.2519], [97.5315, 24.4915], [97.686, 23.898], [98.2124, 24.1106], [98.7642, 24.116], [98.8636, 23.1913], [99.3408, 23.0959], [99.3377, 22.498], [99.193, 22.126], [99.9179, 22.0279], [100.2148, 21.4628], [101.139, 21.5676]]] }, \"properties\": { \"name\": \"Myanmar\", \"id\": \"MM\" }, \"id\": \"MM\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[14.5663, 35.8529], [14.4363, 35.8219], [14.3524, 35.8725], [14.4482, 35.9572], [14.5663, 35.8529]]] }, \"properties\": { \"name\": \"Malta\", \"id\": \"MT\" }, \"id\": \"MT\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[4.2276, 19.1426], [4.2347, 16.9964], [4.1823, 16.5818], [3.8769, 15.7553], [3.5041, 15.3562], [1.3002, 15.2723], [0.9601, 14.9869], [0.2175, 14.9114], [-0.2359, 15.0592], [-0.7604, 15.0477], [-1.0496, 14.8195], [-1.7678, 14.4862], [-2.1132, 14.1684], [-2.4572, 14.274], [-3.1985, 13.673], [-3.3017, 13.2806], [-3.5758, 13.194], [-4.0512, 13.3822], [-4.3286, 13.119], [-4.2272, 12.7936], [-4.4807, 12.6724], [-4.4287, 12.3377], [-4.798, 12.0319], [-5.2881, 11.8277], [-5.2999, 11.2058], [-5.4905, 11.0425], [-5.5236, 10.4259], [-6.0345, 10.1946], [-6.2611, 10.7242], [-6.6932, 10.3495], [-7.1049, 10.2035], [-7.6611, 10.4272], [-7.9907, 10.1627], [-8.2315, 10.4379], [-8.4075, 11.3865], [-8.8219, 11.6732], [-9.043, 12.4025], [-9.8207, 12.0426], [-10.2748, 12.2126], [-10.6774, 11.8996], [-10.9333, 12.205], [-11.3053, 12.0155], [-11.3894, 12.4043], [-11.3903, 12.9419], [-11.6349, 13.3698], [-12.0543, 13.633], [-12.0193, 14.2065], [-12.2807, 14.8089], [-11.8728, 14.9953], [-11.7603, 15.4255], [-11.5026, 15.6367], [-10.8956, 15.1502], [-10.6965, 15.4228], [-9.9414, 15.374], [-9.1768, 15.496], [-7.3555, 15.496], [-5.5125, 15.4965], [-5.36, 16.2831], [-5.6286, 16.5685], [-5.8556, 18.5505], [-6.1404, 21.0367], [-6.3113, 22.5291], [-6.594, 24.9944], [-4.8227, 24.9958], [-3.2579, 23.981], [-1.2931, 22.6964], [1.1457, 21.1024], [1.1657, 20.8174], [1.6855, 20.3784], [2.2195, 20.2479], [2.4063, 20.0637], [3.2036, 19.7898], [3.2559, 19.4107], [3.1059, 19.1502], [3.4007, 18.9886], [4.2276, 19.1426]]] }, \"properties\": { \"name\": \"Mali\", \"id\": \"ML\" }, \"id\": \"ML\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[22.3442, 42.3138], [22.8369, 41.9937], [23.0056, 41.7172], [22.9159, 41.3363], [22.7246, 41.1783], [21.9296, 41.1073], [21.5758, 40.8689], [20.9641, 40.8498], [20.4892, 41.2724], [20.566, 41.8739], [21.0596, 42.1713], [21.5625, 42.2476], [22.3442, 42.3138]]] }, \"properties\": { \"name\": \"North Macedonia\", \"id\": \"MK\" }, \"id\": \"MK\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[171.1017, 7.1384], [171.2269, 7.0869], [171.2025, 7.0736], [171.0955, 7.1091], [171.1017, 7.1384]]] }, \"properties\": { \"name\": \"Marshall Islands\", \"id\": \"MH\" }, \"id\": \"MH\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-97.1462, 25.9617], [-97.5071, 25.0144], [-97.6676, 24.3899], [-97.8578, 22.6245], [-97.6376, 21.6035], [-97.1214, 20.615], [-96.456, 19.8697], [-96.2895, 19.3437], [-95.821, 18.7546], [-95.1818, 18.7005], [-94.798, 18.5145], [-94.5461, 18.1749], [-94.189, 18.1953], [-93.5523, 18.4306], [-92.8849, 18.4688], [-92.7102, 18.6117], [-91.9738, 18.716], [-91.8031, 18.4706], [-91.2753, 18.6246], [-91.343, 18.9007], [-90.7393, 19.3521], [-90.5072, 19.9119], [-90.4841, 20.5564], [-90.3531, 21.0096], [-89.8198, 21.2746], [-88.8787, 21.414], [-88.1317, 21.616], [-86.8242, 21.4215], [-86.8648, 20.8849], [-87.4672, 20.1023], [-87.4248, 19.5834], [-87.7619, 18.4461], [-88.1967, 18.7196], [-88.2957, 18.4723], [-88.523, 18.4457], [-88.8064, 17.9654], [-89.1615, 17.8149], [-90.9892, 17.8163], [-90.993, 17.2525], [-91.4096, 17.2561], [-90.7107, 16.7083], [-90.417, 16.3909], [-90.4472, 16.0726], [-91.7365, 16.07], [-92.1871, 15.3207], [-92.0748, 15.0743], [-92.2352, 14.5452], [-92.809, 15.1387], [-93.916, 16.0536], [-94.3741, 16.2848], [-94.6615, 16.2018], [-94.9004, 16.4176], [-95.4643, 15.9745], [-96.5108, 15.6518], [-97.1846, 15.9093], [-97.7548, 15.967], [-98.5203, 16.3048], [-98.7622, 16.5347], [-99.6906, 16.7198], [-100.0244, 16.9205], [-100.8478, 17.2006], [-101.6002, 17.6516], [-101.847, 17.9223], [-102.6995, 18.0626], [-103.4415, 18.3254], [-103.9125, 18.8283], [-104.9385, 19.3095], [-105.4821, 19.9762], [-105.6694, 20.3855], [-105.237, 21.1193], [-105.2086, 21.4908], [-105.6492, 21.988], [-105.7917, 22.6276], [-106.4023, 23.1958], [-106.9354, 23.8812], [-107.9512, 24.6149], [-108.3736, 25.1942], [-109.385, 25.7273], [-109.4256, 26.0327], [-109.1997, 26.3052], [-109.4829, 26.7105], [-109.7548, 26.703], [-109.9441, 27.0794], [-110.4779, 27.3227], [-110.5298, 27.8642], [-111.1215, 27.9672], [-111.6801, 28.4706], [-112.1618, 29.0188], [-112.2235, 29.2696], [-112.7384, 29.9856], [-113.1104, 30.7934], [-113.0467, 31.1792], [-114.1493, 31.5072], [-114.8395, 31.7984], [-114.8819, 31.1565], [-114.6334, 30.5067], [-114.6498, 30.2381], [-114.3726, 29.8302], [-113.7556, 29.3677], [-113.4997, 28.9269], [-112.8709, 28.4244], [-112.7339, 27.826], [-112.3291, 27.5233], [-112.0091, 26.9671], [-111.5696, 26.7074], [-111.2917, 25.7899], [-111.0345, 25.5271], [-110.6774, 24.7885], [-110.5471, 24.2141], [-110.0229, 24.1746], [-109.421, 23.4803], [-109.458, 23.2149], [-109.9234, 22.8859], [-110.3627, 23.6051], [-111.4194, 24.329], [-112.0725, 24.84], [-112.0557, 25.488], [-112.3773, 26.2138], [-113.0207, 26.5831], [-113.2058, 26.857], [-113.5986, 26.7212], [-113.841, 26.9667], [-114.4454, 27.2183], [-114.9936, 27.7359], [-114.3007, 27.8731], [-114.0485, 28.4262], [-114.1455, 28.6055], [-114.9936, 29.3845], [-115.6738, 29.7565], [-116.0622, 30.8041], [-116.6622, 31.5649], [-117.1282, 32.5335], [-114.7248, 32.7155], [-114.836, 32.5082], [-112.939, 31.916], [-111.042, 31.3243], [-108.2145, 31.3292], [-108.2118, 31.7793], [-106.4533, 31.77], [-106.2558, 31.5445], [-104.9179, 30.5835], [-104.504, 29.6775], [-104.1107, 29.3863], [-103.2577, 29.001], [-102.892, 29.2163], [-102.7342, 29.6438], [-102.269, 29.871], [-101.4404, 29.7769], [-100.6587, 29.0685], [-100.2961, 28.3276], [-99.5053, 27.5482], [-99.4436, 27.0368], [-99.1078, 26.4469], [-98.0828, 26.0642], [-97.3582, 25.8707], [-97.1462, 25.9617]]] }, \"properties\": { \"name\": \"Mexico\", \"id\": \"MX\" }, \"id\": \"MX\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[73.5121, 4.1644], [73.473, 4.1706], [73.5041, 4.2345], [73.5285, 4.2434], [73.5121, 4.1644]]] }, \"properties\": { \"name\": \"Maldives\", \"id\": \"MV\" }, \"id\": \"MV\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[49.5383, -12.4323], [49.9374, -13.0724], [50.174, -14.0401], [50.2353, -14.7321], [50.4829, -15.3855], [50.2091, -15.9604], [49.8926, -15.4579], [49.6498, -15.5671], [49.8389, -16.4864], [49.4491, -17.2406], [49.478, -17.8984], [48.6071, -20.4574], [48.3509, -21.3488], [47.9084, -22.4661], [47.5581, -23.8745], [47.1773, -24.7872], [46.7285, -25.1498], [46.1586, -25.2306], [45.5078, -25.5631], [45.1154, -25.5431], [44.8131, -25.334], [44.3457, -25.2262], [44.0354, -24.9958], [43.6874, -24.3579], [43.7225, -23.5296], [43.398, -22.8864], [43.2666, -22.0492], [43.5019, -21.3563], [43.8556, -21.0767], [44.4047, -19.9221], [44.4487, -19.4285], [44.2387, -19.0752], [44.2329, -18.7405], [44.0399, -18.2886], [43.9795, -17.3915], [44.4216, -16.7026], [44.4762, -16.2174], [44.9094, -16.1743], [45.1669, -15.983], [45.5984, -15.9928], [45.7, -15.8139], [46.3317, -15.7136], [46.475, -15.5134], [47.8116, -14.5448], [47.9954, -13.9606], [48.7966, -13.2673], [48.8996, -12.4585], [49.2072, -12.0794], [49.5383, -12.4323]]] }, \"properties\": { \"name\": \"Madagascar\", \"id\": \"MG\" }, \"id\": \"MG\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[28.2124, 45.4503], [28.0997, 45.9728], [28.2444, 46.4513], [28.0717, 46.9786], [27.3366, 47.6396], [26.9806, 48.155], [26.6189, 48.2597], [27.5493, 48.4777], [29.1948, 47.8824], [29.1597, 47.4558], [29.5494, 47.2467], [29.8779, 46.829], [29.838, 46.3505], [29.1464, 46.5268], [28.9475, 46.05], [28.2124, 45.4503]]] }, \"properties\": { \"name\": \"Moldova\", \"id\": \"MD\" }, \"id\": \"MD\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[7.4387, 43.7507], [7.3779, 43.7316], [7.4143, 43.7711], [7.4387, 43.7507]]] }, \"properties\": { \"name\": \"Monaco\", \"id\": \"MC\" }, \"id\": \"MC\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-2.2197, 35.1041], [-1.7955, 34.7521], [-1.6792, 33.3187], [-1.5099, 32.8775], [-1.0656, 32.4683], [-1.2753, 32.0892], [-2.4485, 32.13], [-2.9308, 32.0426], [-3.0174, 31.8344], [-3.8268, 31.6617], [-3.8335, 31.1978], [-4.3228, 30.6989], [-4.9683, 30.4654], [-5.4488, 29.9567], [-6.5008, 29.8093], [-6.6353, 29.5687], [-7.095, 29.6251], [-7.6851, 29.3495], [-8.6599, 28.7187], [-8.6834, 27.6565], [-13.1774, 27.652], [-12.949, 27.9144], [-11.986, 28.1292], [-11.4302, 28.3822], [-11.0809, 28.7138], [-10.4865, 29.0649], [-9.6671, 30.1094], [-9.6529, 30.4477], [-9.8755, 30.718], [-9.8087, 31.4247], [-9.3475, 32.0865], [-9.2458, 32.5726], [-8.5962, 33.1874], [-6.901, 33.969], [-6.3532, 34.776], [-5.9249, 35.7859], [-5.3973, 35.9297], [-5.1054, 35.4676], [-4.3299, 35.1613], [-3.6932, 35.2799], [-2.84, 35.1281], [-2.2197, 35.1041]]] }, \"properties\": { \"name\": \"Morocco\", \"id\": \"MA\" }, \"id\": \"MA\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-63.0111, 18.0688], [-63.123, 18.0688], [-63.0631, 18.1154], [-63.0111, 18.0688]]] }, \"properties\": { \"name\": \"Saint Martin\", \"id\": \"MF\" }, \"id\": \"MF\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[113.4788, 22.1957], [113.4943, 22.2414], [113.5467, 22.2241], [113.4788, 22.1957]]] }, \"properties\": { \"name\": \"Macau\", \"id\": \"MO\" }, \"id\": \"MO\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[27.3517, 57.5282], [27.797, 57.3169], [27.8063, 56.867], [28.1481, 56.143], [27.5768, 55.7988], [26.5936, 55.6676], [24.9032, 56.3982], [24.1206, 56.2642], [22.0845, 56.4067], [21.0462, 56.07], [21.0711, 56.8237], [21.7285, 57.571], [22.5546, 57.7242], [23.6479, 56.9711], [24.4034, 57.3251], [24.3226, 57.8706], [25.111, 58.0635], [25.9912, 57.8382], [26.5328, 57.5311], [27.3517, 57.5282]]] }, \"properties\": { \"name\": \"Latvia\", \"id\": \"LV\" }, \"id\": \"LV\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[6.1164, 50.1209], [6.4875, 49.7985], [6.3441, 49.4527], [5.7897, 49.5383], [5.744, 49.9196], [6.1164, 50.1209]]] }, \"properties\": { \"name\": \"Luxembourg\", \"id\": \"LU\" }, \"id\": \"LU\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[26.5936, 55.6676], [26.175, 55.0033], [25.8594, 54.9192], [25.5473, 54.3317], [24.7683, 53.9746], [23.4845, 53.9398], [23.37, 54.2005], [22.7663, 54.3568], [22.8311, 54.8384], [21.2358, 55.2641], [21.0462, 56.07], [22.0845, 56.4067], [24.1206, 56.2642], [24.9032, 56.3982], [26.5936, 55.6676]]] }, \"properties\": { \"name\": \"Lithuania\", \"id\": \"LT\" }, \"id\": \"LT\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[27.8303, -28.9091], [28.6257, -28.5816], [29.3013, -29.0898], [29.3905, -29.2696], [29.098, -29.919], [28.3922, -30.1476], [28.018, -30.6421], [27.3886, -30.3158], [27.0517, -29.6642], [27.2945, -29.5195], [27.8303, -28.9091]]] }, \"properties\": { \"name\": \"Lesotho\", \"id\": \"LS\" }, \"id\": \"LS\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[79.9822, 9.8129], [80.253, 9.7965], [80.7111, 9.3663], [81.373, 8.4315], [81.436, 8.119], [81.8741, 7.2885], [81.8612, 6.9014], [81.6375, 6.4251], [80.724, 5.979], [80.0954, 6.153], [79.8593, 6.8295], [79.7923, 7.5854], [79.929, 8.8994], [80.1185, 9.3268], [79.9822, 9.8129]]] }, \"properties\": { \"name\": \"Sri Lanka\", \"id\": \"LK\" }, \"id\": \"LK\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[9.5801, 47.0572], [9.4877, 47.0621], [9.5277, 47.2707], [9.5801, 47.0572]]] }, \"properties\": { \"name\": \"Liechtenstein\", \"id\": \"LI\" }, \"id\": \"LI\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-60.8953, 13.8221], [-61.0636, 13.9158], [-60.8867, 14.0112], [-60.8953, 13.8221]]] }, \"properties\": { \"name\": \"Saint Lucia\", \"id\": \"LC\" }, \"id\": \"LC\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[25.1505, 31.655], [24.8526, 31.335], [24.9738, 30.7766], [24.7115, 30.1316], [24.9805, 29.1817], [24.9805, 27.8345], [24.9805, 25.8134], [24.9805, 24.2416], [24.9805, 21.9959], [24.9796, 20.0024], [23.9804, 19.9958], [23.9804, 19.4968], [21.5847, 20.6794], [19.6684, 21.6257], [17.7521, 22.5721], [15.9841, 23.4452], [14.9791, 22.996], [14.2307, 22.6183], [13.4814, 23.1802], [11.9678, 23.518], [11.5075, 24.3144], [10.6863, 24.5514], [10.2557, 24.5909], [10.0009, 25.3322], [9.4482, 26.0673], [9.4913, 26.3337], [9.8593, 26.5521], [9.7474, 27.3306], [9.9161, 27.7856], [9.8424, 28.9668], [9.6724, 29.567], [9.3102, 30.1152], [9.5188, 30.2293], [9.8952, 30.3873], [10.2162, 30.7832], [10.115, 31.4637], [10.8265, 32.0807], [11.5048, 32.4137], [11.5043, 33.182], [12.2798, 32.8584], [12.7535, 32.8012], [13.2835, 32.9148], [14.2369, 32.6813], [14.5135, 32.5109], [15.1767, 32.391], [15.4963, 31.6568], [16.123, 31.2644], [17.3491, 31.0815], [18.1902, 30.7775], [18.9364, 30.2905], [19.2915, 30.2879], [19.7132, 30.4885], [20.1509, 31.0784], [19.9263, 31.8175], [20.1216, 32.2188], [20.621, 32.5801], [21.6357, 32.9374], [22.1875, 32.9184], [23.0908, 32.6187], [23.2866, 32.2139], [24.1295, 32.0093], [24.6839, 32.0159], [25.1505, 31.655]]] }, \"properties\": { \"name\": \"Libya\", \"id\": \"LY\" }, \"id\": \"LY\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-8.4863, 7.5584], [-8.2966, 7.0741], [-8.3325, 6.8015], [-8.6035, 6.5077], [-7.8886, 6.2347], [-7.7965, 5.975], [-7.4543, 5.8414], [-7.4299, 5.3247], [-7.5688, 5.0805], [-7.5451, 4.3512], [-8.2591, 4.59], [-9.1322, 5.0548], [-10.2763, 6.0775], [-11.5075, 6.9067], [-11.2678, 7.2325], [-10.6474, 7.7594], [-10.2832, 8.4852], [-9.7683, 8.5345], [-9.5182, 8.3463], [-9.369, 7.6396], [-9.4598, 7.4425], [-9.1175, 7.2157], [-8.8896, 7.2627], [-8.7083, 7.6591], [-8.4863, 7.5584]]] }, \"properties\": { \"name\": \"Liberia\", \"id\": \"LR\" }, \"id\": \"LR\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[35.8691, 33.4319], [35.411, 33.0755], [35.1087, 33.0835], [35.9761, 34.6291], [36.4329, 34.6136], [36.5851, 34.2212], [35.9424, 33.6676], [35.8691, 33.4319]]] }, \"properties\": { \"name\": \"Lebanon\", \"id\": \"LB\" }, \"id\": \"LB\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[102.1276, 22.379], [102.9488, 21.5698], [102.8511, 21.2657], [103.1046, 20.8915], [103.635, 20.6971], [104.0518, 20.9413], [104.5832, 20.6465], [104.6187, 20.3744], [104.9281, 20.018], [104.5463, 19.6105], [104.0319, 19.6753], [103.8965, 19.3401], [104.7163, 18.8035], [105.115, 18.6787], [105.0857, 18.4501], [105.4581, 18.1545], [105.6916, 17.7377], [106.5021, 16.9542], [106.6961, 16.4588], [107.3966, 16.0429], [107.1897, 15.7473], [107.6531, 15.255], [107.5195, 14.705], [106.82, 14.3148], [106.5012, 14.5781], [105.9788, 14.3432], [105.9046, 13.9247], [105.1833, 14.3464], [105.4754, 14.5301], [105.5131, 15.3606], [105.6223, 15.6998], [105.4062, 15.9874], [105.047, 16.1601], [104.7505, 16.6475], [104.8162, 17.3005], [103.9497, 18.3192], [103.3669, 18.4235], [103.0913, 18.1381], [102.7175, 17.8922], [102.1014, 18.2104], [101.1053, 17.4793], [100.9086, 17.5837], [101.1133, 18.0333], [101.0507, 18.4071], [101.2864, 18.977], [101.1546, 19.5794], [100.6254, 19.4999], [100.3977, 19.7561], [100.5429, 20.0885], [100.1225, 20.3167], [100.2495, 20.7304], [100.7564, 21.3128], [101.139, 21.5676], [101.2242, 21.2236], [101.705, 21.1503], [101.744, 21.778], [101.5243, 22.2538], [101.6712, 22.4625], [102.1276, 22.379]]] }, \"properties\": { \"name\": \"Lao People's Democratic Republic\", \"id\": \"LA\" }, \"id\": \"LA\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[48.4424, 28.5429], [47.6713, 28.5331], [47.4334, 28.9895], [46.5314, 29.0964], [46.9056, 29.5377], [47.1143, 29.9611], [47.6727, 30.0956], [47.9785, 29.9829], [47.9696, 29.6167], [48.1836, 28.9793], [48.4424, 28.5429]]] }, \"properties\": { \"name\": \"Kuwait\", \"id\": \"KW\" }, \"id\": \"KW\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[21.5625, 42.2476], [21.0596, 42.1713], [20.566, 41.8739], [20.4856, 42.2232], [20.0639, 42.5473], [20.3445, 42.8278], [21.0569, 43.0915], [21.3907, 42.7515], [21.7529, 42.6698], [21.5625, 42.2476]]] }, \"properties\": { \"name\": \"Kosovo\", \"id\": \"XK\" }, \"id\": \"XK\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[128.3745, 38.6233], [128.619, 38.1763], [129.335, 37.2747], [129.4735, 36.742], [129.4034, 36.0522], [129.5619, 35.9475], [129.2143, 35.1818], [128.5112, 35.101], [128.4442, 34.8706], [127.7148, 34.9545], [127.0308, 34.6069], [126.4817, 34.4937], [126.2913, 35.1542], [126.7174, 35.769], [126.5483, 36.4775], [126.2171, 36.8708], [126.7463, 37.1935], [126.634, 37.7816], [127.1697, 38.3045], [128.0389, 38.3085], [128.3745, 38.6233]]] }, \"properties\": { \"name\": \"South Korea\", \"id\": \"KR\" }, \"id\": \"KR\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-62.6307, 17.2401], [-62.8389, 17.3391], [-62.7945, 17.4025], [-62.7137, 17.3533], [-62.6307, 17.2401]]] }, \"properties\": { \"name\": \"Saint Kitts and Nevis\", \"id\": \"KN\" }, \"id\": \"KN\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-157.3422, 1.8557], [-157.2461, 1.7318], [-157.4201, 1.7873], [-157.3422, 1.8557]]] }, \"properties\": { \"name\": \"Kiribati\", \"id\": \"KI\" }, \"id\": \"KI\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[104.4265, 10.4112], [104.2622, 10.5413], [103.532, 10.6048], [103.722, 10.8902], [103.5325, 11.1468], [103.153, 10.9137], [103.1254, 11.4606], [102.9341, 11.7065], [102.7366, 12.0896], [102.7557, 12.4261], [102.4995, 12.6698], [102.3198, 13.5398], [102.729, 13.8421], [103.1996, 14.3326], [104.7789, 14.428], [105.1833, 14.3464], [105.9046, 13.9247], [105.9788, 14.3432], [106.5012, 14.5781], [106.82, 14.3148], [107.5195, 14.705], [107.3313, 14.1266], [107.6056, 13.4377], [107.4756, 13.0302], [107.5062, 12.3644], [106.9305, 12.0776], [106.4138, 11.9484], [106.3401, 11.6817], [105.8514, 11.6351], [105.8558, 11.2941], [106.1679, 11.0123], [105.3866, 10.9399], [104.8504, 10.5347], [104.4265, 10.4112]]] }, \"properties\": { \"name\": \"Cambodia\", \"id\": \"KH\" }, \"id\": \"KH\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[80.2095, 42.1899], [80.2162, 42.0323], [79.2938, 41.7829], [78.3625, 41.3718], [78.1232, 41.0758], [76.8239, 40.9821], [76.4804, 40.4494], [75.8718, 40.3034], [75.5837, 40.6052], [75.0044, 40.4494], [74.4118, 40.1374], [73.9915, 40.0433], [73.9147, 39.6065], [73.6315, 39.4489], [73.2351, 39.3743], [72.0428, 39.3521], [71.8062, 39.2758], [71.4045, 39.598], [70.7333, 39.4134], [70.6077, 39.5643], [69.5987, 39.5736], [69.229, 39.761], [69.5304, 40.0974], [69.9667, 40.2022], [70.4514, 40.049], [70.9579, 40.239], [71.6926, 40.1525], [73.113, 40.7859], [72.6585, 40.8698], [71.7924, 41.4131], [71.4085, 41.1361], [70.7826, 41.2626], [70.1811, 41.5716], [70.8421, 42.0195], [70.9468, 42.2485], [71.2567, 42.7337], [71.8168, 42.822], [72.8551, 42.561], [73.422, 42.5934], [73.5565, 43.0027], [74.209, 43.2402], [75.0475, 42.9046], [76.9442, 42.9716], [79.1646, 42.759], [79.49, 42.4576], [80.2095, 42.1899]]] }, \"properties\": { \"name\": \"Kyrgyzstan\", \"id\": \"KG\" }, \"id\": \"KG\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[41.8839, 3.9779], [41.3419, 3.2016], [40.9646, 2.8145], [40.9699, 1.378], [40.9788, -0.8703], [41.5328, -1.6955], [40.9956, -1.9507], [40.6441, -2.5393], [40.2224, -2.6884], [40.1154, -3.2504], [39.4909, -4.4787], [39.2219, -4.6922], [37.7974, -3.6743], [37.6087, -3.4604], [37.6438, -3.0453], [36.2633, -2.2747], [34.7709, -1.4416], [33.9031, -1.0021], [33.9431, 0.1738], [34.4815, 1.042], [34.7874, 1.2307], [34.9654, 1.6435], [34.964, 2.0625], [34.7425, 2.818], [34.4478, 3.1634], [34.3928, 3.6916], [34.165, 3.8128], [33.9759, 4.2203], [35.2681, 5.4925], [35.7448, 5.3442], [35.763, 4.808], [36.0818, 4.4498], [36.9056, 4.4116], [38.0864, 3.649], [39.4944, 3.4559], [39.8424, 3.8514], [40.7653, 4.2731], [41.2207, 3.9437], [41.8839, 3.9779]]] }, \"properties\": { \"name\": \"Kenya\", \"id\": \"KE\" }, \"id\": \"KE\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[87.3229, 49.0858], [86.7534, 49.0088], [86.5496, 48.5287], [85.7493, 48.3849], [85.526, 47.9157], [85.6565, 47.2547], [84.786, 46.8308], [83.1929, 47.1864], [83.0043, 47.0337], [82.3264, 45.52], [82.4787, 45.1236], [81.602, 45.3109], [80.059, 45.0064], [80.4554, 44.7463], [80.3551, 44.0973], [80.7857, 43.1616], [80.1651, 42.6653], [80.2095, 42.1899], [79.49, 42.4576], [79.1646, 42.759], [76.9442, 42.9716], [75.0475, 42.9046], [74.209, 43.2402], [73.5565, 43.0027], [73.422, 42.5934], [72.8551, 42.561], [71.8168, 42.822], [71.2567, 42.7337], [70.9468, 42.2485], [70.4159, 42.0785], [70.0954, 41.8206], [69.0652, 41.367], [68.2919, 40.6563], [67.9359, 41.1965], [66.8142, 41.1423], [66.6686, 41.2706], [66.4986, 41.9951], [66.0094, 42.0048], [66.1004, 42.9907], [65.803, 42.8771], [65.4963, 43.3108], [64.9054, 43.7147], [64.4434, 43.5513], [63.2071, 43.6281], [61.9904, 43.4923], [61.1608, 44.1688], [61.0081, 44.3939], [58.5551, 45.5555], [55.9757, 44.9949], [55.9766, 42.929], [55.9774, 41.3221], [55.5451, 41.2626], [54.9037, 41.9192], [54.1211, 42.3351], [53.2502, 42.2059], [52.4938, 41.7802], [52.5968, 42.7603], [51.8439, 42.9104], [51.3019, 43.4825], [50.8305, 44.1928], [50.3311, 44.3255], [50.4093, 44.6242], [50.8603, 44.6287], [51.4156, 45.358], [52.5311, 45.3988], [52.7739, 45.5728], [53.1352, 46.1916], [53.1703, 46.6692], [52.9159, 46.9542], [52.1888, 46.8397], [51.1781, 47.11], [50.4195, 46.8796], [50, 46.6342], [49.3475, 46.5192], [49.2321, 46.3372], [48.6102, 46.5663], [48.9595, 46.7744], [48.1099, 47.7452], [47.0934, 47.9477], [47.0042, 48.2846], [46.661, 48.4124], [46.7028, 48.8055], [47.0144, 49.0984], [46.8022, 49.367], [47.3264, 50.2734], [47.706, 50.378], [48.4344, 49.8284], [48.8432, 50.0131], [48.8086, 50.6012], [49.498, 51.0835], [50.2468, 51.2895], [50.7941, 51.7292], [51.6091, 51.4839], [52.3309, 51.6812], [52.571, 51.4817], [53.3381, 51.4824], [54.0416, 51.1153], [54.4216, 50.7804], [54.727, 50.9981], [55.5424, 50.6017], [55.7977, 50.6021], [56.4915, 51.0196], [57.0117, 51.0651], [57.4423, 50.8889], [57.8387, 51.0917], [58.3594, 51.0638], [58.8836, 50.6945], [59.8122, 50.5819], [59.9552, 50.7992], [60.6379, 50.6638], [61.3894, 50.8609], [61.5851, 51.2298], [61.3632, 51.442], [60.4647, 51.6513], [60.0657, 51.9764], [60.9375, 52.2805], [60.8021, 52.7448], [61.0476, 52.9725], [61.974, 52.9437], [62.0148, 53.1079], [61.1994, 53.2872], [60.9797, 53.6217], [61.3339, 54.0492], [61.9287, 53.9464], [63.0739, 54.1053], [64.4611, 54.3841], [65.1576, 54.3643], [65.4767, 54.6233], [66.2225, 54.6673], [68.0739, 54.9596], [68.2062, 55.1609], [68.9773, 55.3895], [70.1824, 55.1625], [70.7382, 55.3052], [71.1856, 54.5994], [71.0933, 54.2123], [72.9141, 54.1073], [73.3993, 53.8115], [73.2857, 53.5984], [74.4518, 53.6472], [76.2664, 54.312], [76.5758, 53.9424], [77.7042, 53.3791], [78.4757, 52.6385], [79.4687, 51.493], [79.9862, 50.7746], [80.8771, 51.2815], [81.4657, 50.7397], [82.4938, 50.7275], [83.3571, 50.9945], [83.9453, 50.7746], [84.2578, 50.2883], [84.9893, 50.0615], [85.21, 49.6648], [86.1807, 49.4993], [86.6144, 49.6098], [87.3229, 49.0858]]] }, \"properties\": { \"name\": \"Kazakhstan\", \"id\": \"KZ\" }, \"id\": \"KZ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[141.2296, 41.3727], [141.4626, 40.611], [141.7969, 40.2914], [141.978, 39.8444], [141.9007, 39.1115], [141.6584, 38.9748], [141.4675, 38.404], [141.1084, 38.3378], [140.9282, 37.9494], [141.0365, 37.4674], [140.9686, 37.0022], [140.6272, 36.5028], [140.6219, 36.0593], [140.874, 35.7251], [140.4572, 35.5102], [140.4164, 35.267], [139.7994, 34.9567], [139.6502, 35.409], [139.2494, 35.2781], [138.9826, 34.6984], [138.5773, 35.0863], [138.1889, 34.5963], [136.8848, 34.8058], [136.5332, 34.6784], [136.8537, 34.3242], [136.3299, 34.1768], [135.9162, 33.5616], [135.4528, 33.5536], [135.1753, 33.898], [135.1003, 34.2882], [135.3848, 34.5004], [134.7399, 34.7654], [134.2081, 34.6975], [133.9684, 34.5275], [133.1423, 34.3024], [132.2381, 34.227], [132.0903, 33.8554], [131.7405, 34.0521], [130.9188, 33.9757], [131.0041, 34.3925], [131.3543, 34.4134], [132.923, 35.5111], [133.3767, 35.4588], [134.2139, 35.5391], [135.1744, 35.7473], [135.6805, 35.5031], [136.0955, 35.7677], [136.0063, 35.9905], [136.6983, 36.742], [137.3424, 36.7705], [137.5142, 36.9516], [138.3199, 37.2183], [138.8849, 37.8438], [139.4012, 38.1425], [140.0479, 39.4635], [139.9228, 40.5986], [140.2814, 40.8463], [141.1186, 40.8822], [141.2296, 41.3727]]], [[[143.8241, 44.1169], [144.7985, 43.9402], [145.1012, 43.7644], [145.3476, 43.1767], [144.6307, 42.9468], [143.9693, 42.8815], [143.4295, 42.419], [143.2364, 42.0004], [141.8515, 42.5792], [140.9863, 42.3422], [140.4803, 42.5592], [140.3267, 42.2934], [140.7337, 42.1162], [140.3848, 41.5192], [139.9951, 41.5765], [140.1083, 41.9129], [139.8211, 42.3875], [139.8912, 42.6494], [140.7808, 43.2149], [141.2962, 43.1998], [141.6446, 44.0197], [141.7822, 44.7166], [141.5829, 45.156], [141.9376, 45.5094], [142.7042, 44.8191], [143.8241, 44.1169]]], [[[131.1745, 33.6024], [131.5829, 33.6526], [131.8967, 33.2548], [131.9766, 32.8438], [131.7321, 32.593], [131.3374, 31.4047], [130.5886, 31.1783], [130.2006, 31.2919], [130.3218, 31.6013], [130.1944, 32.0909], [130.6405, 32.6192], [129.5801, 33.2362], [130.3649, 33.6344], [130.4838, 33.8345], [130.953, 33.8718], [131.1745, 33.6024]]], [[[134.3572, 34.2562], [134.6373, 34.2265], [134.739, 33.8203], [134.3772, 33.6082], [134.1815, 33.2473], [133.6319, 33.511], [133.2861, 33.36], [132.9772, 32.842], [132.4951, 32.9166], [132.3659, 33.5123], [132.7841, 33.9926], [133.5822, 34.017], [134.0758, 34.3583], [134.3572, 34.2562]]]] }, \"properties\": { \"name\": \"Japan\", \"id\": \"JP\" }, \"id\": \"JP\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[39.1455, 32.1247], [38.9622, 31.9951], [36.9584, 31.4917], [37.9803, 30.5], [37.6336, 30.3132], [37.4694, 29.9949], [36.7551, 29.8662], [36.4759, 29.4951], [36.0156, 29.1906], [34.9507, 29.3535], [34.9734, 29.555], [35.174, 30.524], [35.4394, 31.1326], [35.4505, 31.4793], [35.5589, 31.7656], [35.5513, 32.3955], [35.7875, 32.735], [36.3721, 32.387], [36.8182, 32.3173], [38.7735, 33.372], [39.1455, 32.1247]]] }, \"properties\": { \"name\": \"Jordan\", \"id\": \"JO\" }, \"id\": \"JO\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-2.0186, 49.2312], [-2.2359, 49.1763], [-2.2206, 49.2665], [-2.0186, 49.2312]]] }, \"properties\": { \"name\": \"Jersey\", \"id\": \"JE\" }, \"id\": \"JE\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-77.2614, 18.4572], [-76.3499, 18.1518], [-76.5246, 17.8664], [-76.8533, 17.9738], [-77.3615, 17.8336], [-77.7681, 17.8775], [-78.2167, 18.4479], [-77.8735, 18.522], [-77.2614, 18.4572]]] }, \"properties\": { \"name\": \"Jamaica\", \"id\": \"JM\" }, \"id\": \"JM\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[9.632, 40.8822], [9.8051, 40.4996], [9.5623, 39.1661], [9.0563, 39.2394], [8.8814, 38.9127], [8.418, 39.2056], [8.4712, 40.2927], [8.1898, 40.6518], [9.2831, 41.2018], [9.632, 40.8822]]], [[[15.5766, 38.2202], [15.0994, 37.4585], [15.2943, 37.0133], [15.1127, 36.6879], [14.5019, 36.7989], [12.4356, 37.8198], [13.3518, 38.1807], [13.6816, 38.0009], [14.5059, 38.0453], [14.846, 38.1718], [15.5766, 38.2202]]], [[[13.6998, 46.5201], [13.3993, 46.3177], [13.7198, 45.5875], [13.2062, 45.7713], [12.2745, 45.4459], [12.5235, 44.9678], [12.2483, 44.7223], [12.3961, 44.2238], [13.564, 43.5713], [14.0106, 42.6898], [14.8659, 42.0523], [15.1687, 41.9338], [15.9641, 41.9396], [16.0125, 41.4353], [17.1032, 41.062], [17.955, 40.6554], [18.4859, 40.105], [18.0779, 39.9367], [17.8649, 40.2803], [16.9283, 40.4579], [16.5301, 39.8595], [16.5976, 39.6389], [17.1147, 39.3805], [17.1746, 38.9979], [16.5589, 38.7147], [16.5456, 38.4093], [16.0569, 37.9419], [15.7244, 37.9392], [15.9726, 38.7125], [16.1967, 38.7591], [16.0236, 39.3535], [15.6929, 39.99], [14.9507, 40.239], [14.7656, 40.6683], [14.1024, 40.8272], [13.7331, 41.2356], [13.0886, 41.244], [12.6309, 41.4695], [11.6375, 42.2876], [10.7084, 42.9361], [10.0475, 44.0201], [8.766, 44.4223], [8.0815, 43.9189], [7.4929, 43.7671], [7.6771, 44.0831], [6.9673, 44.2802], [7.0308, 44.7166], [6.6277, 45.1178], [7.1533, 45.401], [7.021, 45.9257], [7.9932, 46.0158], [8.4584, 46.2458], [8.9537, 45.8298], [9.2512, 46.2866], [9.9392, 46.3616], [10.4528, 46.865], [11.0249, 46.7971], [11.2442, 46.9755], [12.1542, 46.9351], [12.3881, 46.7025], [13.6998, 46.5201]], [[12.4853, 43.9016], [12.5146, 43.9531], [12.441, 43.9824], [12.397, 43.9344], [12.4853, 43.9016]]]] }, \"properties\": { \"name\": \"Italy\", \"id\": \"IT\" }, \"id\": \"IT\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[35.7875, 32.735], [35.5513, 32.3955], [35.1931, 32.5344], [34.9561, 32.1611], [34.9507, 31.6022], [35.4505, 31.4793], [35.4394, 31.1326], [35.174, 30.524], [34.9734, 29.555], [34.9041, 29.4773], [34.2454, 31.2085], [34.4775, 31.5849], [34.6786, 31.8956], [35.1087, 33.0835], [35.411, 33.0755], [35.8691, 33.4319], [35.7875, 32.735]]] }, \"properties\": { \"name\": \"Israel\", \"id\": \"IL\" }, \"id\": \"IL\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-15.5431, 66.2285], [-14.6982, 66.0203], [-14.7576, 65.7557], [-13.6159, 65.4872], [-13.853, 64.8622], [-15.0215, 64.296], [-16.0605, 64.1113], [-16.6404, 63.8654], [-17.8156, 63.7129], [-18.6537, 63.4066], [-20.1982, 63.5558], [-21.8328, 64.2054], [-21.9502, 64.515], [-22.684, 65.0264], [-22.0057, 65.4934], [-22.9024, 65.5804], [-24.2241, 65.4872], [-23.7371, 66.0695], [-22.4261, 66.4302], [-21.3035, 65.8765], [-21.23, 65.4206], [-20.3567, 65.7191], [-20.3567, 66.0331], [-18.7775, 66.1688], [-16.7485, 66.1317], [-15.9854, 66.5145], [-15.5431, 66.2285]]] }, \"properties\": { \"name\": \"Iceland\", \"id\": \"IS\" }, \"id\": \"IS\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[44.7652, 37.1424], [45.3618, 36.0154], [45.7235, 35.8365], [46.1337, 35.1276], [45.6783, 34.7982], [45.4377, 34.4152], [45.3968, 33.9708], [46.1457, 33.2295], [46.1128, 32.9579], [46.57, 32.834], [47.3713, 32.4239], [47.8298, 31.7944], [47.6793, 31.0025], [48.0105, 30.9896], [48.0149, 30.4654], [48.5467, 29.9625], [47.9785, 29.9829], [47.6727, 30.0956], [47.1143, 29.9611], [46.9056, 29.5377], [46.5314, 29.0964], [46.3565, 29.0636], [44.7163, 29.1937], [42.8578, 30.4952], [42.0743, 31.0802], [40.3693, 31.9391], [39.1455, 32.1247], [38.7735, 33.372], [40.6894, 34.3322], [40.9872, 34.4289], [41.1945, 34.7689], [41.3543, 35.6403], [41.2456, 36.0735], [41.4169, 36.5148], [41.7884, 36.5973], [42.3588, 37.1087], [42.7748, 37.3719], [43.5161, 37.2445], [44.1562, 37.2831], [44.2818, 36.9782], [44.7652, 37.1424]]] }, \"properties\": { \"name\": \"Iraq\", \"id\": \"IQ\" }, \"id\": \"IQ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[46.1146, 38.8776], [46.4906, 38.9065], [47.773, 39.6486], [47.9958, 39.6842], [48.2422, 38.9788], [48.0233, 38.819], [48.5929, 38.4111], [48.8685, 38.4355], [49.0811, 37.6676], [49.47, 37.4967], [50.1305, 37.407], [50.5331, 37.0137], [51.1186, 36.7425], [52.1902, 36.6217], [54.0172, 36.9524], [53.9142, 37.3435], [54.7452, 37.502], [55.0755, 37.9024], [55.5784, 38.0999], [56.2287, 38.0733], [56.4409, 38.2495], [57.1937, 38.2162], [57.4236, 37.9477], [58.4357, 37.6387], [58.8157, 37.6835], [59.2409, 37.5206], [59.5623, 37.1788], [60.0626, 36.9631], [60.3413, 36.6377], [61.1195, 36.6426], [61.262, 35.6194], [61.08, 34.8555], [60.4856, 34.0947], [60.5109, 33.6388], [60.9171, 33.5052], [60.5606, 33.1376], [60.8292, 32.2494], [60.854, 31.4833], [61.6602, 31.3825], [61.7844, 30.8321], [61.104, 30.1285], [60.8434, 29.8586], [61.3184, 29.3725], [61.6229, 28.7915], [61.8901, 28.5465], [62.3531, 28.4146], [62.7397, 28.0023], [62.7632, 27.2503], [63.1667, 27.2525], [63.1681, 26.6657], [62.4392, 26.5609], [61.8697, 26.2422], [61.6686, 25.769], [61.5878, 25.2022], [61.412, 25.1023], [60.6641, 25.2821], [59.4562, 25.4814], [59.0461, 25.4175], [58.7979, 25.5546], [57.7961, 25.6532], [57.3344, 25.7917], [56.9824, 26.9054], [56.3561, 27.2001], [55.6503, 26.9777], [54.8957, 26.5565], [53.7056, 26.7256], [53.4548, 26.9431], [52.6918, 27.3235], [52.476, 27.6165], [51.6664, 27.8451], [51.2788, 28.1314], [51.0622, 28.7262], [50.6752, 29.1466], [50.6499, 29.42], [49.9831, 30.2093], [49.5548, 30.0291], [48.9191, 30.1209], [48.5467, 29.9625], [48.0149, 30.4654], [48.0105, 30.9896], [47.6793, 31.0025], [47.8298, 31.7944], [47.3713, 32.4239], [46.57, 32.834], [46.1128, 32.9579], [46.1457, 33.2295], [45.3968, 33.9708], [45.4377, 34.4152], [45.6783, 34.7982], [46.1337, 35.1276], [45.7235, 35.8365], [45.3618, 36.0154], [44.7652, 37.1424], [44.5614, 37.7448], [44.2112, 37.9081], [44.4309, 38.3569], [44.023, 39.3774], [44.8171, 39.6504], [45.4798, 39.0063], [46.1146, 38.8776]]] }, \"properties\": { \"name\": \"Iran\", \"id\": \"IR\" }, \"id\": \"IR\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-6.218, 54.0887], [-6.0274, 52.927], [-6.5612, 52.1888], [-7.5273, 52.0989], [-8.8135, 51.5849], [-10.3786, 51.8688], [-9.9558, 52.1367], [-9.2993, 53.0975], [-9.7954, 53.3951], [-9.996, 54.276], [-8.6231, 54.3468], [-8.764, 54.6813], [-8.2746, 55.1463], [-7.2468, 55.3531], [-7.2186, 55.0921], [-8.1183, 54.4143], [-7.3553, 54.1213], [-6.218, 54.0887]]] }, \"properties\": { \"name\": \"Ireland\", \"id\": \"IE\" }, \"id\": \"IE\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[72.492, -7.3773], [72.4671, -7.3675], [72.4738, -7.3098], [72.4356, -7.2304], [72.4938, -7.2619], [72.492, -7.3773]]] }, \"properties\": { \"name\": \"British Indian Ocean Territory\", \"id\": \"IO\" }, \"id\": \"IO\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[78.7198, 31.8876], [78.8445, 31.3017], [79.1073, 31.4025], [79.3386, 31.1055], [79.3697, 31.0798], [79.9165, 30.8942], [79.9245, 30.8889], [80.1913, 30.5684], [80.6823, 30.4148], [81.0103, 30.1645], [80.4017, 29.7303], [80.0706, 28.8301], [80.5868, 28.6494], [81.8528, 27.8669], [81.9877, 27.9139], [82.7335, 27.5189], [83.2897, 27.371], [84.0909, 27.4913], [84.6103, 27.2987], [84.6853, 27.0412], [85.293, 26.7412], [86.3663, 26.5743], [86.7014, 26.4349], [87.0166, 26.5556], [87.2874, 26.3603], [88.0549, 26.43], [88.1614, 26.7247], [87.9843, 27.134], [88.1099, 27.8704], [88.6213, 28.0919], [88.8485, 27.8686], [88.8912, 27.316], [88.8579, 26.9613], [89.7638, 26.7016], [90.3458, 26.8903], [90.7395, 26.7718], [91.9984, 26.8548], [92.0836, 27.2907], [91.5949, 27.5575], [91.6317, 27.7599], [91.9775, 27.7301], [92.6642, 27.949], [92.702, 28.147], [93.2067, 28.5909], [93.9022, 28.803], [94.6231, 29.3126], [94.7696, 29.1759], [95.4204, 29.0543], [96.0352, 29.4471], [96.4355, 29.0507], [96.776, 28.3671], [97.3224, 28.218], [97.3353, 27.9379], [96.6659, 27.3391], [96.0613, 27.217], [95.1287, 26.5973], [95.1323, 26.0411], [94.6227, 25.4099], [94.7075, 25.0486], [94.2929, 24.3219], [94.1277, 23.8763], [93.3074, 24.0219], [93.4149, 23.6823], [93.366, 23.1323], [93.0788, 22.7182], [93.1618, 22.3604], [92.9643, 22.0039], [92.575, 21.9782], [92.4916, 22.6853], [92.3615, 22.929], [92.2461, 23.6836], [91.938, 23.5047], [91.6198, 22.9796], [91.3152, 23.1043], [91.1603, 23.6605], [91.3672, 24.0933], [91.8768, 24.1954], [92.2514, 24.895], [92.0499, 25.1693], [90.4394, 25.1578], [89.814, 25.3052], [89.8229, 25.9413], [89.2893, 26.0376], [89.1082, 26.2023], [88.4402, 26.3696], [88.0846, 25.8884], [88.4521, 25.5746], [88.4561, 25.1884], [88.1454, 24.4857], [88.7336, 24.2309], [88.5671, 23.6743], [88.7407, 23.4368], [89.0514, 22.0932], [89.0518, 21.6541], [88.2537, 21.6222], [87.9483, 21.8255], [87.1005, 21.5006], [86.8595, 21.2369], [86.9753, 20.7002], [86.7503, 20.3131], [86.2793, 19.9194], [85.5748, 19.693], [84.7709, 19.1253], [84.1042, 18.2926], [83.6541, 18.0697], [83.1982, 17.609], [82.3597, 17.0963], [82.259, 16.56], [81.7618, 16.3297], [81.2385, 16.264], [80.9788, 15.7584], [80.6467, 15.8951], [80.2934, 15.7109], [80.0533, 15.0739], [80.1656, 14.5776], [80.1119, 14.2123], [80.3422, 13.3614], [80.229, 12.6902], [79.8584, 11.9888], [79.7541, 11.5751], [79.8486, 11.1969], [79.838, 10.3225], [79.3905, 10.306], [78.9964, 9.6833], [78.9795, 9.2687], [78.4215, 9.1049], [78.1925, 8.8909], [78.0602, 8.3844], [77.5178, 8.0782], [76.9669, 8.4071], [76.5536, 8.9029], [76.3246, 9.452], [76.3463, 9.9221], [75.9224, 10.7841], [75.724, 11.3616], [75.1966, 12.0576], [74.7705, 13.0773], [74.6711, 13.6676], [74.3821, 14.4946], [73.9493, 15.0748], [73.932, 15.397], [73.4761, 16.0544], [73.3376, 16.4597], [73.1561, 17.6218], [72.8711, 18.6832], [72.6678, 19.8311], [72.8813, 20.5631], [72.8138, 21.117], [72.5431, 21.6968], [72.5901, 22.2783], [72.3326, 22.2703], [72.037, 21.8233], [72.2541, 21.5312], [72.0153, 21.1557], [71.0245, 20.7388], [70.7191, 20.7406], [70.1274, 21.0948], [69.0088, 22.1966], [70.1771, 22.5726], [70.2512, 22.9707], [69.6644, 22.759], [69.2361, 22.8487], [68.6408, 23.19], [68.1649, 23.8572], [68.7242, 23.9646], [68.7282, 24.2656], [69.5592, 24.2731], [69.7163, 24.1728], [70.5469, 24.4183], [71.044, 24.4001], [71.048, 24.6877], [70.6521, 25.4228], [70.2646, 25.7064], [70.0777, 26.0718], [70.1567, 26.4713], [69.47, 26.8046], [69.5681, 27.1744], [70.1447, 27.8491], [70.4035, 28.0249], [70.7373, 27.7293], [71.8701, 27.9623], [72.342, 28.752], [72.903, 29.029], [73.3816, 29.9345], [73.809, 30.0934], [73.8991, 30.4352], [74.6329, 31.0345], [74.5099, 31.7127], [75.3334, 32.2792], [74.6578, 32.5189], [73.9941, 33.2424], [74.1499, 33.507], [73.9613, 34.6535], [74.3004, 34.7654], [75.7093, 34.5031], [76.5945, 34.7357], [77.0486, 35.1099], [77.7992, 35.496], [77.8107, 35.4845], [78.2821, 34.654], [78.9364, 34.3521], [78.7531, 34.0876], [78.8019, 33.4999], [79.1127, 33.2264], [79.1353, 33.1718], [79.2165, 32.5641], [79.2192, 32.5011], [78.3896, 32.5197], [78.7198, 31.8876]]] }, \"properties\": { \"name\": \"India\", \"id\": \"IN\" }, \"id\": \"IN\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-4.4121, 54.1854], [-4.7457, 54.1189], [-4.5086, 54.3768], [-4.4121, 54.1854]]] }, \"properties\": { \"name\": \"Isle of Man\", \"id\": \"IM\" }, \"id\": \"IM\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[96.4924, 5.2293], [97.4512, 5.2359], [97.9084, 4.8799], [98.2484, 4.4147], [98.3074, 4.0929], [99.7323, 3.1829], [100.4572, 2.2574], [100.6854, 2.1202], [101.0462, 2.2574], [101.4768, 1.6932], [101.7849, 1.6213], [102.1573, 1.2591], [102.4694, 0.7792], [102.8493, 0.7153], [103.0664, 0.492], [103.4788, 0.4801], [103.7868, 0.0468], [103.4286, -0.1916], [103.4313, -0.5334], [103.7211, -0.8867], [104.3608, -1.0385], [104.5685, -1.9218], [104.8451, -2.0932], [104.6684, -2.3857], [105.3968, -2.3804], [105.5819, -2.4918], [106.0445, -3.1062], [105.8438, -3.6135], [105.8873, -5.0096], [105.8163, -5.6767], [105.6183, -5.7997], [105.3493, -5.5493], [105.0812, -5.7455], [104.6396, -5.5205], [104.6014, -5.9044], [103.8312, -5.0797], [102.919, -4.4707], [102.5377, -4.152], [102.1276, -3.5993], [101.5785, -3.167], [100.8478, -2.1438], [100.8554, -1.9343], [100.4865, -1.2991], [100.3081, -0.8268], [99.5978, 0.1023], [99.1593, 0.3518], [98.7962, 1.4948], [98.5644, 1.9023], [97.7006, 2.3586], [97.591, 2.8464], [97.3912, 2.9752], [96.9691, 3.5753], [96.4449, 3.8163], [95.4949, 4.7614], [95.2068, 5.2839], [95.2277, 5.5648], [95.629, 5.6092], [96.1333, 5.2941], [96.4924, 5.2293]]], [[[120.0124, -9.3748], [120.5038, -9.674], [120.8327, -10.0375], [120.439, -10.2941], [120.1447, -10.2], [119.6009, -9.7734], [119.0856, -9.7068], [119.1855, -9.3846], [120.0124, -9.3748]]], [[[125.0679, -9.512], [124.4274, -10.1485], [123.8574, -10.3438], [123.5893, -9.9669], [123.7092, -9.6149], [124.0363, -9.3415], [124.4442, -9.1901], [124.9223, -8.9424], [125.0679, -9.512]]], [[[116.6406, -8.614], [116.3774, -8.9291], [116.0764, -8.7449], [116.0613, -8.4373], [116.4014, -8.2043], [116.7343, -8.3871], [116.6406, -8.614]]], [[[122.7828, -8.6117], [121.6513, -8.8989], [121.0351, -8.9353], [119.8078, -8.6974], [119.9183, -8.4453], [120.6103, -8.2407], [121.4444, -8.578], [121.9664, -8.4551], [122.263, -8.6251], [122.6034, -8.4027], [122.7828, -8.6117]]], [[[118.2426, -8.3179], [118.9879, -8.3379], [119.0061, -8.7498], [118.1898, -8.8403], [117.0614, -9.0991], [116.7884, -9.0064], [116.835, -8.5323], [117.1649, -8.3672], [117.567, -8.4266], [118.1174, -8.1221], [118.2426, -8.3179]]], [[[115.4479, -8.155], [115.7045, -8.4071], [115.2361, -8.7977], [114.4753, -8.1195], [115.4479, -8.155]]], [[[126.8009, -7.668], [126.4719, -7.9503], [125.8434, -7.8167], [126.6095, -7.5717], [126.8009, -7.668]]], [[[138.5351, -8.2735], [138.2963, -8.4053], [137.6851, -8.2624], [138.0074, -7.6414], [138.2954, -7.4385], [138.77, -7.3906], [138.9893, -7.696], [138.5351, -8.2735]]], [[[131.3255, -7.9996], [131.0866, -7.8651], [131.2602, -7.4705], [131.6912, -7.439], [131.3255, -7.9996]]], [[[113.8445, -7.1052], [113.4708, -7.2184], [112.7637, -7.1398], [112.868, -6.9001], [113.9746, -6.873], [113.8445, -7.1052]]], [[[134.537, -6.4424], [134.3559, -6.8149], [134.0589, -6.7691], [134.1681, -6.1761], [134.537, -6.4424]]], [[[107.3739, -6.0074], [107.6669, -6.2156], [108.295, -6.2649], [108.6776, -6.7905], [110.4261, -6.9471], [110.7369, -6.4722], [111.1546, -6.6693], [111.5403, -6.6484], [112.0872, -6.8934], [112.5391, -6.9263], [112.7943, -7.5526], [113.2484, -7.7182], [114.0705, -7.633], [114.4442, -7.8957], [114.387, -8.4053], [114.5836, -8.7698], [113.2533, -8.2868], [112.6789, -8.4093], [111.5101, -8.305], [110.6072, -8.1497], [110.0386, -7.8904], [109.2818, -7.7049], [108.7411, -7.6671], [108.4517, -7.7968], [107.9173, -7.724], [107.2852, -7.4718], [106.6313, -7.4155], [106.5199, -7.0537], [105.4838, -6.7816], [105.8682, -6.1166], [106.0751, -5.9142], [106.8253, -6.0984], [107.0463, -5.9044], [107.3739, -6.0074]]], [[[134.747, -5.7069], [134.7559, -6.1708], [134.4411, -6.335], [134.3413, -5.7127], [134.747, -5.7069]]], [[[122.6451, -5.2692], [122.3961, -5.0699], [122.369, -4.7672], [122.702, -4.6185], [122.6451, -5.2692]]], [[[126.8612, -3.0879], [127.2274, -3.3911], [127.2297, -3.6331], [126.6863, -3.8235], [126.2145, -3.6051], [126.0263, -3.1705], [126.8612, -3.0879]]], [[[129.7545, -2.866], [130.3791, -2.9894], [130.8598, -3.5705], [130.8052, -3.8577], [129.8442, -3.3272], [129.4678, -3.4533], [128.9675, -3.3259], [128.4193, -3.416], [128.0819, -3.1838], [128.1987, -2.866], [129.4274, -2.7905], [129.7545, -2.866]]], [[[108.2071, -2.9978], [107.6145, -3.2096], [107.6665, -2.5664], [108.0744, -2.597], [108.2071, -2.9978]]], [[[124.9694, -1.7057], [124.8344, -1.8943], [124.4176, -2.0053], [124.3808, -1.6875], [124.9694, -1.7057]]], [[[135.4741, -1.5916], [136.2016, -1.6551], [136.1927, -1.8593], [135.4741, -1.5916]]], [[[106.0458, -1.6693], [106.3658, -2.4647], [106.6788, -2.704], [106.547, -3.0555], [105.9988, -2.8247], [105.7857, -2.1815], [105.1332, -2.0426], [105.5855, -1.5268], [106.0458, -1.6693]]], [[[128.153, -1.6604], [127.5617, -1.7283], [127.6465, -1.3324], [128.153, -1.6604]]], [[[99.1637, -1.778], [98.8743, -1.6639], [98.6017, -1.1979], [98.869, -0.9155], [99.2671, -1.6275], [99.1637, -1.778]]], [[[135.3831, -0.6514], [135.8935, -0.726], [135.8389, -1.1193], [135.3831, -0.6514]]], [[[140.9734, -2.6099], [140.9739, -4.0232], [140.9748, -6.3461], [140.9761, -9.1187], [139.9347, -8.1013], [139.3856, -8.1892], [138.8561, -8.1452], [139.0878, -7.5872], [138.7478, -7.2517], [138.8645, -6.8584], [138.4388, -6.3435], [138.0611, -5.4654], [137.0894, -4.9243], [136.6189, -4.8187], [135.9797, -4.531], [135.1957, -4.4507], [134.1473, -3.7968], [133.9737, -3.8182], [133.6532, -3.3645], [133.2488, -4.0623], [132.9687, -4.0947], [132.7539, -3.7036], [132.7512, -3.2948], [132.3482, -2.9752], [133.1911, -2.4377], [133.6088, -2.5473], [133.9049, -2.391], [133.9218, -2.1021], [132.963, -2.2725], [132.3078, -2.2423], [132.0233, -1.9902], [131.9305, -1.5596], [131.2935, -1.3936], [131.2571, -0.8556], [131.8044, -0.7038], [132.1285, -0.4539], [132.6252, -0.3589], [133.4726, -0.726], [133.9746, -0.7442], [134.2596, -1.363], [134.106, -1.7212], [134.1557, -2.1953], [135.0373, -3.333], [135.4865, -3.345], [136.2433, -2.5832], [136.3898, -2.2734], [136.843, -2.1975], [137.1236, -1.8411], [137.8063, -1.4833], [138.6497, -1.7909], [139.7896, -2.3484], [140.6223, -2.4456], [140.9734, -2.6099]]], [[[97.4814, 1.4651], [97.9319, 0.9741], [97.8764, 0.6283], [97.4054, 0.947], [97.2443, 1.4238], [97.4814, 1.4651]]], [[[124.889, 0.9954], [124.4274, 0.4707], [123.754, 0.3056], [123.2653, 0.3265], [123.0824, 0.4858], [121.8421, 0.4366], [121.4258, 0.4947], [120.3489, 0.4494], [120.1274, 0.1667], [120.012, -0.307], [120.0972, -0.6501], [120.5176, -1.0394], [120.6676, -1.3701], [121.0338, -1.4065], [121.5194, -0.8556], [121.9695, -0.9333], [122.2798, -0.7571], [122.8888, -0.7553], [122.5067, -1.3479], [121.7187, -1.8628], [121.349, -1.9458], [121.8484, -2.3316], [122.3992, -3.2007], [122.2527, -3.6206], [122.8773, -4.1089], [122.8973, -4.349], [122.207, -4.4964], [121.9172, -4.848], [121.4866, -4.5812], [121.618, -4.0929], [120.9144, -3.5558], [121.0542, -3.167], [121.052, -2.7515], [120.6538, -2.6676], [120.2539, -3.0529], [120.4368, -3.7072], [120.3627, -4.0858], [120.4199, -4.6176], [120.2792, -5.1463], [120.3116, -5.5418], [119.7172, -5.6932], [119.3763, -5.425], [119.6116, -4.4236], [119.6236, -4.0343], [119.4198, -3.4755], [118.9946, -3.5376], [118.8126, -3.1568], [118.7837, -2.7648], [119.0922, -2.4829], [119.3217, -1.9298], [119.3089, -1.4083], [119.7718, -0.4836], [119.8091, 0.2386], [120.2694, 0.971], [120.5167, 0.8174], [120.9122, 1.2888], [121.44, 1.2142], [121.5918, 1.0678], [122.4365, 1.018], [122.8924, 0.8498], [123.2781, 0.9279], [123.8468, 0.8383], [124.2738, 1.022], [124.9893, 1.7012], [125.2339, 1.5023], [124.889, 0.9954]]], [[[127.7326, 0.848], [128.1609, 1.1579], [128.4242, 1.5174], [128.6883, 1.5725], [128.7025, 1.1064], [128.299, 0.8769], [128.6914, 0.3602], [127.9829, 0.4721], [127.8875, 0.2985], [128.0464, -0.706], [127.6918, -0.2417], [127.7086, 0.2883], [127.5555, 0.4898], [127.4201, 1.252], [127.6318, 1.8437], [128.0109, 1.7012], [128.0118, 1.3319], [127.6527, 1.0141], [127.7326, 0.848]]], [[[117.5746, 4.1706], [117.6301, 3.6361], [117.1662, 3.5922], [117.6105, 3.0644], [118.0664, 2.3178], [117.8649, 1.9684], [118.0806, 1.7016], [118.9848, 0.9821], [118.5347, 0.8134], [118.196, 0.8742], [117.745, 0.7295], [117.5222, 0.2359], [117.4627, -0.3238], [117.5626, -0.7708], [116.5545, -1.474], [116.4236, -2.0528], [116.5656, -2.2996], [116.3308, -2.9024], [115.9561, -3.5949], [114.6937, -4.1697], [114.5361, -3.4946], [114.0825, -3.2788], [113.7957, -3.4564], [113.5258, -3.1838], [112.9714, -3.1869], [112.6003, -3.4005], [112.2851, -3.321], [111.8222, -3.5323], [111.8231, -3.0573], [111.3676, -2.9335], [111.0445, -3.0555], [110.5739, -2.8913], [110.2326, -2.925], [110.0191, -1.3989], [109.7874, -1.0114], [109.454, -0.8689], [109.1606, -0.4947], [109.2574, 0.0313], [108.9444, 0.3558], [108.9058, 0.7939], [109.0758, 1.4957], [109.3785, 1.9227], [109.6289, 2.0275], [109.6542, 1.6151], [110.5056, 0.8618], [110.9379, 1.0172], [111.7698, 0.9994], [112.0783, 1.1432], [112.1857, 1.4393], [112.476, 1.5592], [113.6222, 1.236], [113.9022, 1.4344], [114.5459, 1.4673], [114.8304, 1.98], [114.7865, 2.2503], [115.1509, 2.4931], [115.0861, 2.8411], [115.4545, 3.0342], [115.5686, 3.9389], [115.8962, 4.3486], [117.1005, 4.337], [117.5746, 4.1706]]]] }, \"properties\": { \"name\": \"Indonesia\", \"id\": \"ID\" }, \"id\": \"ID\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[22.132, 48.4053], [22.8764, 47.9472], [22.2905, 47.7279], [21.1519, 46.3044], [20.2419, 46.1086], [19.5308, 46.1552], [18.9054, 45.9315], [17.9639, 45.7704], [17.3105, 45.9963], [16.5163, 46.4997], [16.0929, 46.8632], [16.4533, 47.0066], [16.4342, 47.3675], [17.1475, 48.0058], [17.7619, 47.7701], [18.7242, 47.787], [18.7917, 48.0005], [19.8988, 48.1314], [20.4901, 48.5269], [21.4515, 48.5522], [22.132, 48.4053]]] }, \"properties\": { \"name\": \"Hungary\", \"id\": \"HU\" }, \"id\": \"HU\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-71.7791, 19.7183], [-71.6571, 19.1306], [-71.7683, 18.0391], [-72.0599, 18.2286], [-72.8767, 18.1518], [-73.3851, 18.2513], [-73.885, 18.0418], [-74.419, 18.3463], [-74.2276, 18.6628], [-72.7894, 18.4346], [-72.3478, 18.6747], [-72.8112, 19.0716], [-72.7033, 19.4409], [-73.0527, 19.6109], [-73.1177, 19.9039], [-72.6369, 19.9008], [-71.7791, 19.7183]]] }, \"properties\": { \"name\": \"Haiti\", \"id\": \"HT\" }, \"id\": \"HT\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[18.9054, 45.9315], [19.0549, 45.5271], [19.007, 44.8693], [18.6625, 45.0774], [17.8129, 45.0779], [16.5305, 45.2168], [16.2935, 45.0086], [15.7879, 45.1791], [15.7369, 44.7658], [16.214, 44.215], [17.6247, 43.0426], [17.5852, 42.9383], [16.903, 43.3924], [15.9415, 43.6565], [15.123, 44.2567], [14.8548, 45.081], [14.3861, 45.342], [13.9657, 44.8355], [13.6293, 45.1081], [13.5778, 45.5169], [13.8787, 45.4286], [15.3396, 45.4672], [15.6246, 45.8338], [15.6361, 46.2005], [16.5163, 46.4997], [17.3105, 45.9963], [17.9639, 45.7704], [18.9054, 45.9315]]], [[[17.6678, 42.897], [18.4362, 42.5597], [18.5174, 42.4327], [17.6678, 42.897]]]] }, \"properties\": { \"name\": \"Croatia\", \"id\": \"HR\" }, \"id\": \"HR\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-83.1576, 14.9931], [-83.8674, 14.7947], [-84.646, 14.6611], [-84.9851, 14.7525], [-85.1796, 14.3432], [-85.7868, 13.8443], [-86.1512, 13.9948], [-86.3317, 13.7702], [-86.7336, 13.7635], [-86.7108, 13.3134], [-87.0592, 12.9916], [-87.3373, 12.9792], [-87.4891, 13.3529], [-87.8143, 13.3991], [-87.7153, 13.8128], [-88.151, 13.9872], [-88.4491, 13.851], [-89.0572, 14.329], [-89.3626, 14.416], [-89.2223, 14.8661], [-88.9764, 15.1427], [-88.2284, 15.7291], [-87.6181, 15.9097], [-86.9072, 15.7624], [-86.3568, 15.7832], [-85.7839, 16.003], [-85.4836, 15.8995], [-84.9738, 15.9901], [-84.2614, 15.8227], [-83.7604, 15.2204], [-83.3691, 15.2399], [-83.1576, 14.9931]]] }, \"properties\": { \"name\": \"Honduras\", \"id\": \"HN\" }, \"id\": \"HN\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[73.7074, -53.1372], [73.465, -53.1843], [73.3363, -53.0298], [73.5858, -53.0271], [73.7074, -53.1372]]] }, \"properties\": { \"name\": \"Heard Island and McDonald Islands\", \"id\": \"HM\" }, \"id\": \"HM\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[114.0154, 22.5117], [114.2658, 22.541], [114.268, 22.2956], [114.0154, 22.5117]]] }, \"properties\": { \"name\": \"Hong Kong\", \"id\": \"HK\" }, \"id\": \"HK\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-57.1948, 5.5484], [-57.3309, 5.0202], [-57.7111, 4.9909], [-58.0544, 4.1719], [-57.8327, 3.6761], [-57.5497, 3.3529], [-57.3036, 3.3769], [-57.2097, 2.8828], [-56.7043, 2.0363], [-56.4828, 1.9422], [-56.8368, 1.8814], [-57.1189, 2.0141], [-57.5943, 1.7043], [-58.3407, 1.5876], [-58.5119, 1.2848], [-58.8625, 1.2036], [-59.2312, 1.3758], [-59.7563, 1.9005], [-59.7552, 2.2743], [-59.9942, 2.6902], [-59.8544, 3.5873], [-59.5512, 3.9335], [-59.8333, 4.476], [-60.1112, 4.511], [-59.9907, 5.0828], [-60.142, 5.239], [-60.7422, 5.2022], [-61.3767, 5.9071], [-61.1286, 6.2142], [-61.1457, 6.6945], [-60.3951, 6.9453], [-60.7191, 7.4989], [-60.5136, 7.8131], [-60.0324, 8.0537], [-59.8315, 8.3059], [-60.0175, 8.5491], [-59.2003, 8.0746], [-58.6266, 7.5459], [-58.4806, 7.0381], [-57.9825, 6.786], [-57.1902, 6.0975], [-57.1948, 5.5484]]] }, \"properties\": { \"name\": \"Guyana\", \"id\": \"GY\" }, \"id\": \"GY\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[144.7416, 13.2593], [144.6493, 13.4288], [144.7905, 13.5269], [144.7416, 13.2593]]] }, \"properties\": { \"name\": \"Guam\", \"id\": \"GU\" }, \"id\": \"GU\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-51.6526, 4.0614], [-51.9906, 3.7018], [-52.7006, 2.3635], [-52.9648, 2.1837], [-53.7678, 2.3551], [-54.13, 2.1211], [-54.6163, 2.3266], [-54.1954, 2.818], [-54.2032, 3.1381], [-53.9904, 3.5895], [-54.3508, 4.0543], [-54.4522, 5.0135], [-54.1559, 5.3589], [-53.8472, 5.7823], [-53.4544, 5.5635], [-52.8993, 5.425], [-52.2905, 4.9421], [-51.9196, 4.5244], [-51.6526, 4.0614]]] }, \"properties\": { \"name\": \"French Guiana\", \"id\": \"GF\" }, \"id\": \"GF\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-89.1615, 17.8149], [-89.2374, 15.8942], [-88.8941, 15.8907], [-88.2284, 15.7291], [-88.9764, 15.1427], [-89.2223, 14.8661], [-89.3626, 14.416], [-89.8726, 14.0454], [-90.0952, 13.7364], [-90.607, 13.9291], [-91.1461, 13.9255], [-91.8191, 14.2283], [-92.2352, 14.5452], [-92.0748, 15.0743], [-92.1871, 15.3207], [-91.7365, 16.07], [-90.4472, 16.0726], [-90.417, 16.3909], [-90.7107, 16.7083], [-91.4096, 17.2561], [-90.993, 17.2525], [-90.9892, 17.8163], [-89.1615, 17.8149]]] }, \"properties\": { \"name\": \"Guatemala\", \"id\": \"GT\" }, \"id\": \"GT\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-25.4324, 70.9213], [-25.4022, 70.6527], [-27.898, 70.4541], [-27.7089, 70.8971], [-25.4324, 70.9213]]], [[[-52.7313, 69.9447], [-52.0452, 69.8071], [-52.1125, 69.4891], [-53.5784, 69.2567], [-53.7831, 69.5064], [-54.804, 69.6304], [-54.8304, 70.1611], [-53.3751, 70.2213], [-52.7313, 69.9447]]], [[[-29.953, 83.5649], [-25.9475, 83.2897], [-24.4702, 82.8773], [-21.5208, 82.5954], [-25.1489, 82.0011], [-21.3379, 82.0687], [-21.1466, 81.6952], [-17.2261, 81.4304], [-15.5555, 81.8337], [-12.1928, 81.649], [-11.5288, 81.424], [-14.5035, 80.7633], [-16.7607, 80.5733], [-16.8683, 80.1982], [-19.4292, 80.2577], [-20.1385, 79.8033], [-19.2836, 79.683], [-19.0749, 79.1524], [-20.9557, 78.5551], [-20.8625, 77.9119], [-20.2319, 77.3684], [-18.339, 77.2152], [-18.5103, 76.7782], [-20.9422, 76.887], [-21.8772, 76.5734], [-21.5692, 76.2937], [-20.1037, 76.2191], [-19.5091, 75.7575], [-19.4261, 75.2299], [-20.485, 75.3143], [-19.2252, 74.4795], [-19.3692, 74.284], [-21.1295, 74.1109], [-20.3673, 73.8483], [-20.5096, 73.493], [-22.1851, 73.2699], [-22.0364, 72.9184], [-22.2931, 72.1196], [-24.0692, 72.4987], [-24.6669, 72.4374], [-22.0133, 71.6888], [-21.7523, 71.4784], [-21.5228, 70.5262], [-23.3279, 70.451], [-23.7917, 70.5551], [-24.377, 71.1463], [-25.7422, 71.1836], [-26.7179, 70.9506], [-27.6887, 70.9934], [-28.5409, 70.4769], [-28.0149, 70.4024], [-26.7472, 70.4756], [-23.1732, 70.1145], [-23.0882, 69.883], [-26.3414, 68.7023], [-29.2496, 68.2988], [-29.8686, 68.3116], [-30.9786, 68.0613], [-32.1373, 68.3849], [-32.2747, 67.9228], [-33.157, 67.6267], [-34.1016, 66.7258], [-34.6329, 66.4349], [-36.3792, 65.8307], [-37.7541, 65.593], [-39.9609, 65.5562], [-39.5779, 65.3407], [-40.6554, 64.9154], [-40.1822, 64.48], [-40.6177, 64.1317], [-40.5504, 63.7254], [-42.1529, 62.5686], [-42.3216, 62.1526], [-42.1103, 61.8572], [-42.4188, 61.537], [-42.7171, 60.7675], [-43.3201, 59.9281], [-44.0654, 59.9247], [-45.3793, 60.2028], [-46.0467, 60.6157], [-46.0116, 61.0968], [-46.8746, 60.8163], [-47.7963, 60.829], [-48.922, 61.2775], [-49.2891, 61.59], [-49.5534, 62.2328], [-50.3192, 62.4731], [-50.3382, 62.8287], [-51.4688, 63.6423], [-51.4511, 63.9047], [-52.0934, 64.4158], [-52.259, 65.1549], [-53.6346, 66.4136], [-53.0382, 66.8268], [-53.8845, 67.1356], [-53.4189, 67.5746], [-53.578, 67.8369], [-53.0393, 68.6108], [-51.2493, 68.74], [-50.5, 69.9358], [-52.2545, 70.059], [-54.0143, 70.4217], [-54.1659, 70.8201], [-52.4052, 70.6867], [-51.5246, 70.4394], [-51.1302, 70.9717], [-53.117, 71.3128], [-53.4761, 71.6402], [-54.6891, 71.3672], [-55.5939, 71.5536], [-55.3156, 72.1107], [-55.6017, 72.4536], [-54.7379, 72.8724], [-56.104, 73.5582], [-55.9295, 73.8954], [-56.7063, 74.2192], [-56.2556, 74.5268], [-58.6035, 75.3853], [-58.5163, 75.6891], [-61.3747, 76.1801], [-63.4388, 76.3394], [-66.8262, 75.9688], [-69.3728, 76.3319], [-69.2521, 76.6861], [-70.7928, 76.869], [-70.8629, 77.1755], [-69.3515, 77.4671], [-72.8181, 78.1945], [-72.3957, 78.5043], [-68.9935, 78.8574], [-67.4823, 79.1169], [-65.9679, 79.1324], [-64.7923, 80.0007], [-66.8437, 80.0761], [-66.996, 80.413], [-62.9932, 81.2069], [-61.436, 81.1337], [-61.203, 81.7469], [-58.7174, 82.0932], [-54.7259, 82.3513], [-52.7757, 82.3218], [-50.8944, 81.8952], [-48.8612, 82.4054], [-45.2912, 81.8288], [-44.239, 82.3682], [-46.4782, 82.9519], [-43.1945, 83.255], [-32.9845, 83.5995], [-29.953, 83.5649]]]] }, \"properties\": { \"name\": \"Greenland\", \"id\": \"GL\" }, \"id\": \"GL\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-61.7154, 12.0128], [-61.715, 12.185], [-61.6071, 12.2232], [-61.6271, 12.0541], [-61.7154, 12.0128]]] }, \"properties\": { \"name\": \"Grenada\", \"id\": \"GD\" }, \"id\": \"GD\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[23.8521, 35.5355], [24.3129, 35.3638], [24.7212, 35.425], [25.4758, 35.3061], [25.7448, 35.1427], [24.7998, 34.9345], [24.4638, 35.1605], [23.5618, 35.295], [23.8521, 35.5355]]], [[[26.0391, 40.7269], [25.1043, 40.9945], [24.3839, 40.9129], [23.8787, 40.5444], [23.6643, 40.2239], [23.3119, 40.2164], [22.6296, 40.4956], [22.5923, 40.0371], [22.919, 39.6291], [22.9656, 39.0308], [23.2528, 38.6614], [23.9671, 38.2748], [23.5804, 38.0107], [23.1938, 37.9592], [23.1614, 37.3338], [22.765, 37.3932], [23.0735, 36.7749], [22.6083, 36.7798], [22.0805, 37.0288], [21.5829, 37.0807], [21.5714, 37.541], [21.1448, 37.9192], [21.4036, 38.1967], [21.8248, 38.3281], [22.7996, 37.9814], [22.4219, 38.4386], [21.4724, 38.3214], [21.1133, 38.3849], [20.7795, 39.0086], [20.301, 39.3273], [20.0013, 39.7095], [20.6574, 40.1174], [21.0312, 40.6585], [20.9641, 40.8498], [21.5758, 40.8689], [21.9296, 41.1073], [22.7246, 41.1783], [22.9159, 41.3363], [23.635, 41.3869], [24.0558, 41.5272], [25.2512, 41.2436], [26.1355, 41.3856], [26.321, 41.7167], [26.6246, 41.4016], [26.0391, 40.7269]]], [[[23.4153, 38.9588], [24.0989, 38.6712], [23.7589, 38.4013], [23.2519, 38.8013], [23.4153, 38.9588]]]] }, \"properties\": { \"name\": \"Greece\", \"id\": \"GR\" }, \"id\": \"GR\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[9.5907, 1.0318], [9.3861, 1.1392], [9.8069, 1.9276], [9.8007, 2.3044], [9.98, 2.1677], [11.3286, 2.1673], [11.3352, 0.9998], [9.5907, 1.0318]]] }, \"properties\": { \"name\": \"Equatorial Guinea\", \"id\": \"GQ\" }, \"id\": \"GQ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-15.0431, 10.9404], [-15.3931, 11.2174], [-15.5018, 11.7238], [-16.1384, 11.9174], [-16.7119, 12.3551], [-15.5748, 12.4904], [-15.1962, 12.68], [-13.7294, 12.6738], [-13.7327, 11.7358], [-14.6831, 11.5085], [-15.0431, 10.9404]]] }, \"properties\": { \"name\": \"Guinea-Bissau\", \"id\": \"GW\" }, \"id\": \"GW\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-16.7634, 13.064], [-16.8248, 13.3409], [-16.5623, 13.5873], [-15.5096, 13.5864], [-15.8343, 13.1563], [-16.6488, 13.1541], [-16.7634, 13.064]]] }, \"properties\": { \"name\": \"Gambia\", \"id\": \"GM\" }, \"id\": \"GM\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-61.3272, 16.2302], [-61.5221, 16.228], [-61.529, 16.434], [-61.4065, 16.4682], [-61.3272, 16.2302]]] }, \"properties\": { \"name\": \"Guadeloupe\", \"id\": \"GP\" }, \"id\": \"GP\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-11.3894, 12.4043], [-11.3053, 12.0155], [-10.9333, 12.205], [-10.6774, 11.8996], [-10.2748, 12.2126], [-9.8207, 12.0426], [-9.043, 12.4025], [-8.8219, 11.6732], [-8.4075, 11.3865], [-8.2315, 10.4379], [-7.9907, 10.1627], [-8.1365, 10.022], [-8.137, 9.4955], [-7.8962, 9.416], [-7.951, 8.7866], [-7.8236, 8.4674], [-8.232, 7.5566], [-8.4863, 7.5584], [-8.7083, 7.6591], [-8.8896, 7.2627], [-9.1175, 7.2157], [-9.4598, 7.4425], [-9.369, 7.6396], [-9.5182, 8.3463], [-9.7683, 8.5345], [-10.2832, 8.4852], [-10.5005, 8.6876], [-10.6905, 9.3144], [-11.2056, 9.9776], [-11.911, 9.9931], [-12.5016, 9.8622], [-12.7559, 9.3734], [-13.2928, 9.0494], [-13.7005, 9.8511], [-14.4269, 10.2483], [-14.7758, 10.9315], [-15.0431, 10.9404], [-14.6831, 11.5085], [-13.7327, 11.7358], [-13.7294, 12.6738], [-13.0828, 12.6334], [-12.2912, 12.328], [-11.3894, 12.4043]]] }, \"properties\": { \"name\": \"Guinea\", \"id\": \"GN\" }, \"id\": \"GN\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-0.0686, 11.1157], [-0.0577, 10.6305], [0.3627, 10.2364], [0.2619, 9.4955], [0.5291, 9.3583], [0.4153, 8.6525], [0.688, 8.3041], [0.5837, 8.1456], [0.6348, 7.3537], [0.5256, 6.8508], [0.7369, 6.4526], [1.1874, 6.0895], [0.9499, 5.8103], [0.2597, 5.7575], [-0.7977, 5.2266], [-1.6384, 4.9807], [-2.0017, 4.7623], [-3.1139, 5.0885], [-3.0868, 5.1285], [-3.0191, 5.1307], [-2.7952, 5.1844], [-3.2007, 6.3483], [-3.2358, 6.8073], [-2.9858, 7.205], [-2.7899, 7.9321], [-2.5058, 8.2087], [-2.7466, 9.1098], [-2.6958, 9.4813], [-2.7865, 10.4019], [-2.9148, 10.5924], [-2.8298, 10.9985], [-0.7014, 10.9888], [-0.0686, 11.1157]]] }, \"properties\": { \"name\": \"Ghana\", \"id\": \"GH\" }, \"id\": \"GH\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-2.5124, 49.4946], [-2.5475, 49.4287], [-2.646, 49.4682], [-2.5124, 49.4946]]] }, \"properties\": { \"name\": \"Guernsey\", \"id\": \"GG\" }, \"id\": \"GG\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[46.4298, 41.8907], [46.1821, 41.6573], [46.6189, 41.3439], [46.4577, 41.07], [45.281, 41.4495], [45.0013, 41.291], [43.4393, 41.1073], [42.7876, 41.5636], [42.4663, 41.4398], [41.5101, 41.5174], [41.7631, 41.9702], [41.4888, 42.6591], [40.8367, 43.0635], [39.9782, 43.42], [40.6481, 43.534], [41.5807, 43.2193], [42.4192, 43.2242], [43.7824, 42.747], [43.9573, 42.5664], [44.5059, 42.7488], [45.1602, 42.6751], [45.7275, 42.4749], [45.6388, 42.205], [46.4298, 41.8907]]] }, \"properties\": { \"name\": \"Georgia\", \"id\": \"GE\" }, \"id\": \"GE\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[13.2937, 2.1615], [13.1627, 1.6479], [13.2741, 1.2409], [13.8512, 1.4189], [14.181, 1.3701], [14.4345, 0.8116], [14.0874, 0.5364], [13.8845, 0.1906], [13.8601, -0.2035], [14.4806, -0.6181], [14.3839, -1.8899], [14.0874, -2.4669], [13.7842, -2.1638], [13.465, -2.3955], [12.9918, -2.3134], [12.7934, -1.9316], [12.4321, -1.929], [12.4463, -2.3298], [11.5754, -2.3973], [11.5376, -2.8367], [11.934, -3.3188], [11.5043, -3.5203], [11.1301, -3.9163], [10.3476, -3.0129], [9.6245, -2.3671], [9.2658, -1.8251], [9.3306, -1.5348], [9.0647, -1.2982], [8.8215, -0.7082], [9.2969, -0.3514], [9.5907, 1.0318], [11.3352, 0.9998], [11.3286, 2.1673], [11.3485, 2.2996], [13.2204, 2.2565], [13.2937, 2.1615]]] }, \"properties\": { \"name\": \"Gabon\", \"id\": \"GA\" }, \"id\": \"GA\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[5.7897, 49.5383], [6.3441, 49.4527], [6.7356, 49.1606], [7.4507, 49.1522], [8.1348, 48.9735], [7.5843, 48.0644], [7.6154, 47.5925], [7.0006, 47.3227], [6.06, 46.4282], [6.7583, 46.4158], [7.021, 45.9257], [7.1533, 45.401], [6.6277, 45.1178], [7.0308, 44.7166], [6.9673, 44.2802], [7.6771, 44.0831], [7.4929, 43.7671], [7.4387, 43.7507], [7.4143, 43.7711], [7.3779, 43.7316], [6.4941, 43.1692], [6.1159, 43.0724], [5.4066, 43.2286], [5.0599, 43.4444], [4.7119, 43.3733], [4.0527, 43.5931], [3.2591, 43.1931], [3.0518, 42.9152], [3.2116, 42.431], [2.0326, 42.3537], [1.7059, 42.5033], [1.4284, 42.5961], [-0.0411, 42.6893], [-1.2855, 43.0595], [-1.794, 43.4075], [-1.4848, 43.5638], [-1.2456, 44.5599], [-1.066, 45.8059], [-1.1464, 46.3115], [-1.7867, 46.5148], [-2.0188, 47.0377], [-3.1587, 47.6946], [-4.312, 47.8229], [-4.6291, 48.0857], [-4.3932, 48.3676], [-4.7208, 48.5398], [-3.2315, 48.8408], [-2.6924, 48.5367], [-2.4463, 48.6483], [-1.4375, 48.6415], [-1.8564, 49.6837], [-1.2587, 49.6802], [-1.1386, 49.3879], [-0.1636, 49.2969], [0.1869, 49.703], [1.2456, 49.9982], [1.5514, 50.2938], [1.5794, 50.7393], [1.9123, 50.9905], [2.5249, 51.0971], [2.8396, 50.7118], [4.1744, 50.2466], [4.8677, 49.788], [5.7897, 49.5383]]], [[[9.4802, 42.8056], [9.5508, 42.1296], [9.1863, 41.3847], [8.8077, 41.5885], [8.7132, 42.5499], [9.4802, 42.8056]]]] }, \"properties\": { \"name\": \"France\", \"id\": \"FR\" }, \"id\": \"FR\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[158.315, 6.8135], [158.1836, 6.8011], [158.1348, 6.9449], [158.2946, 6.9511], [158.315, 6.8135]]] }, \"properties\": { \"name\": \"Federated States of Micronesia\", \"id\": \"FM\" }, \"id\": \"FM\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-6.6311, 62.2279], [-7.0135, 62.094], [-7.1722, 62.2856], [-6.6311, 62.2279]]] }, \"properties\": { \"name\": \"Faroe Islands\", \"id\": \"FO\" }, \"id\": \"FO\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-58.8501, -51.2698], [-58.4737, -51.509], [-57.9765, -51.3843], [-57.8382, -51.7092], [-58.6834, -51.9361], [-59.0681, -52.1731], [-59.5708, -51.9254], [-59.0596, -51.6857], [-58.8501, -51.2698]]], [[[-60.2863, -51.462], [-59.268, -51.4274], [-59.9214, -51.9693], [-60.2863, -51.462]]]] }, \"properties\": { \"name\": \"Falkland Islands\", \"id\": \"FK\" }, \"id\": \"FK\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[178.2804, -17.372], [178.5915, -17.6516], [178.6679, -18.0808], [177.8471, -18.2549], [177.3215, -18.0773], [177.2638, -17.8633], [177.6181, -17.4612], [178.2804, -17.372]]], [[[179.9991, -16.1686], [179.7483, -16.4464], [179.9281, -16.7443], [179.007, -16.9001], [178.805, -16.6315], [179.5517, -16.2498], [179.9991, -16.1686]]]] }, \"properties\": { \"name\": \"Fiji\", \"id\": \"FJ\" }, \"id\": \"FJ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[28.9657, 69.0219], [28.4708, 68.4883], [29.3439, 68.062], [29.9414, 67.5475], [29.0869, 66.9709], [29.9032, 66.0911], [29.604, 64.9685], [30.0728, 64.7649], [30.1083, 64.3661], [30.5038, 64.0205], [30.0555, 63.689], [31.1807, 63.2082], [31.5341, 62.8855], [31.2855, 62.5679], [29.6902, 61.5461], [27.7978, 60.5362], [25.6565, 60.3331], [23.7216, 59.9656], [22.7934, 60.0768], [22.5759, 60.3591], [21.436, 60.5964], [21.3605, 60.9675], [21.606, 61.5916], [21.2562, 61.9897], [21.1035, 62.6229], [22.2434, 63.4379], [23.2488, 63.8963], [24.5579, 64.8009], [25.3729, 65.0095], [25.348, 65.4792], [24.1557, 65.8052], [23.7012, 66.4808], [23.9884, 66.8106], [23.4681, 67.45], [23.639, 67.9543], [22.7823, 68.3911], [21.9975, 68.5207], [20.6223, 69.037], [21.622, 69.2707], [22.4108, 68.7198], [23.8539, 68.8059], [24.9414, 68.5933], [25.7484, 68.9901], [26.0116, 69.6526], [26.5257, 69.915], [27.8897, 70.0617], [29.1415, 69.6715], [28.9657, 69.0219]]] }, \"properties\": { \"name\": \"Finland\", \"id\": \"FI\" }, \"id\": \"FI\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[42.3784, 12.4665], [41.7667, 11.5889], [41.7982, 10.9803], [42.5577, 11.0806], [42.9226, 10.9994], [42.6594, 10.6212], [42.8418, 10.2031], [43.1818, 9.8799], [43.4828, 9.3796], [44.023, 8.9859], [46.9784, 7.9969], [47.9781, 7.9969], [45.9348, 5.9972], [44.9405, 4.9119], [44.0283, 4.9509], [43.5383, 4.8404], [43.0158, 4.5634], [42.7916, 4.2922], [42.0241, 4.1377], [41.8839, 3.9779], [41.2207, 3.9437], [40.7653, 4.2731], [39.8424, 3.8514], [39.4944, 3.4559], [38.0864, 3.649], [36.9056, 4.4116], [36.0818, 4.4498], [35.763, 4.808], [35.7448, 5.3442], [35.2681, 5.4925], [35.0821, 5.6731], [34.7106, 6.6604], [34.0643, 7.2259], [33.6661, 7.6711], [33.2262, 7.7608], [33.0127, 7.9516], [33.2342, 8.3964], [33.9533, 8.4435], [34.0945, 8.5824], [34.078, 9.4613], [34.2915, 10.1249], [34.2756, 10.528], [34.5716, 10.88], [34.9312, 10.8649], [35.1123, 11.8166], [35.5961, 12.5375], [36.1075, 12.7266], [36.2123, 13.2712], [36.3907, 13.6259], [36.5243, 14.2567], [37.0246, 14.2718], [37.2572, 14.4538], [37.571, 14.1493], [37.8844, 14.8524], [38.5045, 14.4245], [39.074, 14.6282], [40.2215, 14.4311], [40.7697, 14.1444], [41.3627, 13.4998], [41.7649, 13.1838], [42.3784, 12.4665]]] }, \"properties\": { \"name\": \"Ethiopia\", \"id\": \"ET\" }, \"id\": \"ET\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[28.0127, 59.4842], [27.4272, 58.7331], [27.753, 57.8411], [27.3517, 57.5282], [26.5328, 57.5311], [25.9912, 57.8382], [25.111, 58.0635], [24.3226, 57.8706], [24.529, 58.3543], [23.7678, 58.3609], [23.5094, 58.6585], [23.4943, 59.1957], [24.3803, 59.4726], [25.5091, 59.6389], [26.9749, 59.4507], [28.0127, 59.4842]]], [[[22.6172, 58.6213], [23.2928, 58.4834], [22.1875, 58.1543], [22.0814, 58.4781], [22.6172, 58.6213]]]] }, \"properties\": { \"name\": \"Estonia\", \"id\": \"EE\" }, \"id\": \"EE\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-1.794, 43.4075], [-1.2855, 43.0595], [-0.0411, 42.6893], [1.4284, 42.5961], [1.4861, 42.4345], [1.7059, 42.5033], [2.0326, 42.3537], [3.2116, 42.431], [3.248, 41.9445], [2.0827, 41.2875], [1.0329, 41.062], [-0.3269, 39.5199], [-0.2049, 39.0627], [0.2015, 38.7591], [-0.3813, 38.4355], [-0.6468, 38.1518], [-0.8221, 37.581], [-1.3275, 37.561], [-1.7975, 37.233], [-2.1116, 36.7767], [-4.3668, 36.7181], [-4.6742, 36.5063], [-5.1716, 36.4238], [-5.6254, 36.026], [-6.0407, 36.1885], [-6.4924, 36.9547], [-6.8845, 37.1944], [-7.4061, 37.1793], [-7.5036, 37.5854], [-7.1855, 38.0062], [-7.3431, 38.4572], [-7.0461, 38.9069], [-7.4452, 39.5363], [-7.0368, 39.7139], [-7.0146, 40.2084], [-6.8102, 40.3429], [-6.9285, 41.0092], [-6.2125, 41.5321], [-6.6182, 41.9422], [-7.4037, 41.8335], [-7.9208, 41.8836], [-8.2131, 42.1336], [-8.7771, 41.9409], [-8.691, 42.2743], [-9.2352, 42.977], [-8.8736, 43.3343], [-7.6982, 43.7644], [-7.2621, 43.5948], [-5.6658, 43.5824], [-4.523, 43.416], [-3.6046, 43.5194], [-3.0455, 43.3716], [-2.3371, 43.3281], [-1.794, 43.4075]]], [[[3.1454, 39.7902], [3.4619, 39.6979], [3.0726, 39.3011], [2.3713, 39.6131], [2.785, 39.8546], [3.1454, 39.7902]]], [[[-16.3346, 28.38], [-16.6579, 28.0071], [-16.9054, 28.3396], [-16.3346, 28.38]]]] }, \"properties\": { \"name\": \"Spain\", \"id\": \"ES\" }, \"id\": \"ES\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[38.6093, 18.0049], [38.9116, 17.427], [39.1424, 16.7292], [39.2991, 15.9213], [39.5064, 15.532], [39.8637, 15.4703], [40.2042, 15.014], [41.1763, 14.6202], [41.6584, 13.9832], [42.2452, 13.5877], [42.7961, 12.8642], [43.1166, 12.7084], [42.67, 12.3764], [42.3784, 12.4665], [41.7649, 13.1838], [41.3627, 13.4998], [40.7697, 14.1444], [40.2215, 14.4311], [39.074, 14.6282], [38.5045, 14.4245], [37.8844, 14.8524], [37.571, 14.1493], [37.2572, 14.4538], [37.0246, 14.2718], [36.5243, 14.2567], [36.4267, 15.132], [36.9136, 16.2964], [37.0091, 17.059], [37.4112, 17.0616], [37.7823, 17.458], [38.2537, 17.5845], [38.6093, 18.0049]]] }, \"properties\": { \"name\": \"Eritrea\", \"id\": \"ER\" }, \"id\": \"ER\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-6.218, 54.0887], [-7.3553, 54.1213], [-8.1183, 54.4143], [-7.2186, 55.0921], [-6.1293, 55.2175], [-5.4703, 54.5002], [-5.6068, 54.2727], [-6.218, 54.0887]]], [[[-3.1097, 58.5154], [-3.9901, 57.959], [-3.4029, 57.7082], [-2.0741, 57.7024], [-1.778, 57.4938], [-2.6527, 56.3183], [-3.1783, 56.0802], [-2.1471, 55.9031], [-1.6555, 55.5704], [-1.2917, 54.7738], [-0.6714, 54.5039], [-0.2055, 54.0217], [0.5589, 52.967], [1.6566, 52.7537], [1.5589, 52.0869], [0.9553, 51.8077], [0.6867, 51.3865], [1.4151, 51.3632], [0.9601, 50.9259], [0.2051, 50.763], [-1.5168, 50.7475], [-2.5477, 50.6163], [-3.4047, 50.6323], [-3.7933, 50.2293], [-4.1726, 50.3908], [-5.3422, 50.2461], [-4.583, 50.7764], [-4.1881, 51.1885], [-3.1359, 51.2049], [-4.3863, 51.7412], [-4.9023, 51.6262], [-5.0881, 51.9959], [-4.3832, 52.1973], [-3.9804, 52.5417], [-4.1111, 53.2189], [-3.0646, 53.4268], [-2.925, 53.7327], [-3.958, 54.7809], [-5.1354, 54.8575], [-4.7212, 55.421], [-5.2457, 55.9293], [-5.6097, 56.0553], [-5.392, 56.5148], [-5.9368, 56.6058], [-5.562, 57.2328], [-5.8181, 57.4361], [-5.3382, 58.2386], [-4.7155, 58.5101], [-3.1097, 58.5154]]]] }, \"properties\": { \"name\": \"United Kingdom\", \"id\": \"GB\" }, \"id\": \"GB\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[34.1983, 31.3226], [34.2454, 31.2085], [34.9041, 29.4773], [34.7363, 29.2705], [34.3999, 28.016], [34.2201, 27.7643], [33.7602, 28.0475], [33.2475, 28.5678], [33.0757, 29.0729], [32.7215, 29.5217], [32.6318, 28.9921], [32.8982, 28.5651], [33.5471, 27.8984], [33.5498, 27.6072], [33.8929, 27.0497], [33.9591, 26.6488], [34.565, 25.6913], [35.194, 24.4751], [35.6246, 24.0658], [35.5229, 23.4426], [35.6978, 22.9463], [36.2296, 22.6289], [36.8714, 21.9968], [34.2467, 21.9964], [32.6061, 21.9959], [30.3285, 21.9951], [27.2723, 21.9955], [24.9805, 21.9959], [24.9805, 24.2416], [24.9805, 25.8134], [24.9805, 27.8345], [24.9805, 29.1817], [24.7115, 30.1316], [24.9738, 30.7766], [24.8526, 31.335], [25.1505, 31.655], [25.3822, 31.513], [25.8931, 31.6209], [27.2479, 31.3781], [27.9674, 31.0975], [28.5147, 31.0505], [29.0723, 30.8303], [29.5916, 31.0114], [30.3951, 31.4575], [30.7005, 31.4038], [31.1941, 31.5876], [32.1018, 31.0926], [33.1299, 31.1681], [33.6665, 31.1304], [34.1983, 31.3226]]] }, \"properties\": { \"name\": \"Egypt\", \"id\": \"EG\" }, \"id\": \"EG\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-91.2722, 0.0251], [-90.7997, -0.7522], [-90.9055, -0.9404], [-91.3692, -0.287], [-91.2722, 0.0251]]], [[[-75.2845, -0.1063], [-75.2632, -0.5555], [-75.5706, -1.5312], [-76.0898, -2.1331], [-76.679, -2.5628], [-77.8607, -2.9819], [-78.3472, -3.4311], [-78.4198, -3.7769], [-79.0763, -4.9905], [-79.3308, -4.9279], [-79.6385, -4.4547], [-80.1396, -4.2962], [-80.4885, -4.3939], [-80.51, -4.0694], [-80.1793, -3.8776], [-80.3247, -3.388], [-79.9217, -3.0902], [-79.7299, -2.5793], [-80.4501, -2.6259], [-80.9628, -2.1891], [-80.7704, -2.0768], [-80.8015, -1.3834], [-80.9024, -1.0789], [-80.554, -0.8481], [-80.4823, -0.3682], [-80.1334, -0.006], [-80.0251, 0.4104], [-80.0883, 0.7846], [-79.7412, 0.9799], [-78.8996, 1.2063], [-78.8597, 1.4553], [-78.3121, 1.046], [-77.4676, 0.6363], [-77.4228, 0.425], [-76.4946, 0.2355], [-76.311, 0.4485], [-75.8798, 0.1511], [-75.2845, -0.1063]]]] }, \"properties\": { \"name\": \"Ecuador\", \"id\": \"EC\" }, \"id\": \"EC\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[8.5764, 36.9374], [8.2306, 36.5454], [8.2457, 35.8707], [8.3944, 35.204], [8.2457, 34.7339], [7.5138, 34.0805], [7.5, 33.8323], [7.7628, 33.2331], [8.2111, 32.9268], [8.3332, 32.5437], [9.0439, 32.0723], [9.5188, 30.2293], [9.3102, 30.1152], [9.6724, 29.567], [9.8424, 28.9668], [9.9161, 27.7856], [9.7474, 27.3306], [9.8593, 26.5521], [9.4913, 26.3337], [9.4482, 26.0673], [10.0009, 25.3322], [10.2557, 24.5909], [10.6863, 24.5514], [11.5075, 24.3144], [11.9678, 23.518], [9.3785, 21.9915], [7.4818, 20.8729], [5.8367, 19.4791], [4.2276, 19.1426], [3.4007, 18.9886], [3.1059, 19.1502], [3.2559, 19.4107], [3.2036, 19.7898], [2.4063, 20.0637], [2.2195, 20.2479], [1.6855, 20.3784], [1.1657, 20.8174], [1.1457, 21.1024], [-1.2931, 22.6964], [-3.2579, 23.981], [-4.8227, 24.9958], [-6.2387, 25.848], [-8.6834, 27.2858], [-8.6834, 27.6565], [-8.6599, 28.7187], [-7.6851, 29.3495], [-7.095, 29.6251], [-6.6353, 29.5687], [-6.5008, 29.8093], [-5.4488, 29.9567], [-4.9683, 30.4654], [-4.3228, 30.6989], [-3.8335, 31.1978], [-3.8268, 31.6617], [-3.0174, 31.8344], [-2.9308, 32.0426], [-2.4485, 32.13], [-1.2753, 32.0892], [-1.0656, 32.4683], [-1.5099, 32.8775], [-1.6792, 33.3187], [-1.7955, 34.7521], [-2.2197, 35.1041], [-1.9132, 35.0943], [-0.9175, 35.6683], [0.0479, 35.9004], [0.5149, 36.2618], [1.2571, 36.5197], [2.5932, 36.6009], [2.9727, 36.7847], [3.7788, 36.8961], [4.7581, 36.8965], [5.1958, 36.6768], [6.0649, 36.8641], [6.4866, 37.0856], [6.9274, 36.9196], [7.6079, 36.9999], [7.9106, 36.8566], [8.5764, 36.9374]]] }, \"properties\": { \"name\": \"Algeria\", \"id\": \"DZ\" }, \"id\": \"DZ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-71.7683, 18.0391], [-71.6571, 19.1306], [-71.7791, 19.7183], [-71.5578, 19.8954], [-70.9542, 19.9141], [-70.1294, 19.6362], [-69.7394, 19.2993], [-68.6848, 18.9047], [-68.3594, 18.538], [-68.6588, 18.222], [-68.9349, 18.408], [-69.7707, 18.4435], [-70.1831, 18.2517], [-71.0278, 18.273], [-71.3958, 17.6462], [-71.7683, 18.0391]]] }, \"properties\": { \"name\": \"Dominican Republic\", \"id\": \"DO\" }, \"id\": \"DO\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[9.7399, 54.8255], [8.6701, 54.9034], [8.6159, 55.4181], [8.1321, 55.5999], [8.1641, 56.6069], [8.6186, 57.1114], [9.5543, 57.2325], [9.9623, 57.581], [10.5371, 57.4485], [10.2828, 56.6204], [10.1829, 55.8651], [9.5912, 55.4932], [9.7399, 54.8255]]], [[[12.5688, 55.785], [11.6539, 55.1869], [11.2864, 55.2044], [10.9788, 55.7215], [12.219, 56.1186], [12.5688, 55.785]]], [[[10.645, 55.6099], [10.7852, 55.1334], [9.9889, 55.1631], [9.8606, 55.5156], [10.645, 55.6099]]]] }, \"properties\": { \"name\": \"Denmark\", \"id\": \"DK\" }, \"id\": \"DK\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-61.2817, 15.2492], [-61.481, 15.5253], [-61.3201, 15.5853], [-61.2817, 15.2492]]] }, \"properties\": { \"name\": \"Dominica\", \"id\": \"DM\" }, \"id\": \"DM\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[43.2462, 11.4997], [42.9226, 10.9994], [42.5577, 11.0806], [41.7982, 10.9803], [41.7667, 11.5889], [42.3784, 12.4665], [42.67, 12.3764], [43.1166, 12.7084], [43.41, 12.1899], [43.2719, 11.9698], [42.7992, 11.7394], [43.2462, 11.4997]]] }, \"properties\": { \"name\": \"Djibouti\", \"id\": \"DJ\" }, \"id\": \"DJ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[9.7399, 54.8255], [10.3604, 54.4382], [11.3996, 53.9446], [12.1111, 54.1684], [12.5755, 54.4673], [13.0287, 54.4109], [13.8654, 53.8534], [14.2587, 53.7296], [14.4145, 53.2835], [14.1286, 52.8782], [14.6196, 52.5284], [14.7527, 52.0818], [14.6018, 51.8324], [15.0164, 51.2527], [14.8096, 50.8589], [14.3692, 50.8986], [12.4525, 50.3498], [12.2763, 50.0424], [12.6318, 49.4613], [13.8148, 48.7669], [13.4095, 48.3942], [12.8143, 48.1607], [12.686, 47.6693], [11.717, 47.5837], [11.2979, 47.4247], [10.4306, 47.541], [10.3129, 47.3133], [9.5241, 47.5242], [8.6177, 47.7661], [7.6154, 47.5925], [7.5843, 48.0644], [8.1348, 48.9735], [7.4507, 49.1522], [6.7356, 49.1606], [6.3441, 49.4527], [6.4875, 49.7985], [6.1164, 50.1209], [6.3645, 50.3163], [5.9939, 50.7504], [5.8949, 50.9843], [6.1932, 51.4888], [5.9486, 51.7625], [6.7418, 51.9109], [7.0352, 52.3801], [7.1973, 53.2823], [7.2852, 53.6814], [8.0091, 53.6907], [8.5387, 53.5569], [8.8978, 53.8357], [8.9573, 54.5383], [8.6701, 54.9034], [9.7399, 54.8255]]] }, \"properties\": { \"name\": \"Germany\", \"id\": \"DE\" }, \"id\": \"DE\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[14.8096, 50.8589], [16.0072, 50.6117], [16.6792, 50.0974], [17.152, 50.3784], [17.8746, 49.9722], [18.5622, 49.8792], [18.8321, 49.5108], [18.161, 49.2574], [17.7583, 48.888], [17.1884, 48.861], [16.9531, 48.5988], [16.4777, 48.8001], [16.0573, 48.7549], [14.972, 48.9839], [14.6915, 48.5993], [14.0492, 48.6024], [13.8148, 48.7669], [12.6318, 49.4613], [12.2763, 50.0424], [12.4525, 50.3498], [14.3692, 50.8986], [14.8096, 50.8589]]] }, \"properties\": { \"name\": \"Czechia\", \"id\": \"CZ\" }, \"id\": \"CZ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[34.4633, 35.5937], [33.9418, 35.2918], [34.0501, 34.9882], [32.9417, 34.5758], [32.4489, 34.7294], [32.3171, 34.9532], [32.9417, 35.3904], [33.4588, 35.3358], [34.4633, 35.5937]]] }, \"properties\": { \"name\": \"Cyprus\", \"id\": \"CY\" }, \"id\": \"CY\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-81.3696, 19.349], [-81.1306, 19.3468], [-81.3037, 19.2718], [-81.3696, 19.349]]] }, \"properties\": { \"name\": \"Cayman Islands\", \"id\": \"KY\" }, \"id\": \"KY\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[105.7253, -10.493], [105.6969, -10.564], [105.5842, -10.5125], [105.7053, -10.4308], [105.7253, -10.493]]] }, \"properties\": { \"name\": \"Christmas Island\", \"id\": \"CX\" }, \"id\": \"CX\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-68.7511, 12.0599], [-68.8033, 12.0457], [-68.995, 12.142], [-69.154, 12.2982], [-69.0767, 12.3422], [-69.0132, 12.2312], [-68.8275, 12.1584], [-68.7511, 12.0599]]] }, \"properties\": { \"name\": \"Curaçao\", \"id\": \"CW\" }, \"id\": \"CW\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-82.5617, 21.5716], [-82.8531, 21.4437], [-83.0826, 21.7913], [-82.7146, 21.8903], [-82.5617, 21.5716]]], [[[-81.8375, 23.1629], [-81.1785, 23.0595], [-80.6501, 23.103], [-80.0752, 22.9423], [-79.183, 22.3879], [-78.6865, 22.367], [-77.8651, 21.9005], [-77.4973, 21.8717], [-76.6475, 21.2844], [-75.7229, 21.1108], [-75.6428, 20.7335], [-74.8826, 20.6505], [-74.2529, 20.0797], [-75.1165, 19.9012], [-76.1586, 19.9896], [-77.7151, 19.8555], [-77.2135, 20.3003], [-77.2297, 20.6438], [-77.9974, 20.7153], [-78.4908, 21.0536], [-78.6366, 21.5157], [-79.2745, 21.5627], [-80.2313, 21.8721], [-80.4992, 22.0634], [-80.9619, 22.0528], [-81.8162, 22.2001], [-81.9034, 22.6791], [-82.7382, 22.6893], [-83.3796, 22.2228], [-84.3264, 22.0745], [-84.3612, 22.379], [-84.045, 22.6662], [-83.2577, 22.9676], [-82.1014, 23.1905], [-81.8375, 23.1629]]]] }, \"properties\": { \"name\": \"Cuba\", \"id\": \"CU\" }, \"id\": \"CU\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-83.6419, 10.9173], [-83.4482, 10.4658], [-82.7783, 9.6695], [-82.5635, 9.5767], [-82.9399, 9.4493], [-82.917, 8.7404], [-82.9976, 8.3676], [-82.8793, 8.0706], [-83.1625, 8.5882], [-83.734, 8.6144], [-83.6373, 9.0352], [-83.8956, 9.2762], [-84.6589, 9.6469], [-85.1145, 9.5816], [-85.6248, 9.9025], [-85.8305, 10.3979], [-85.6672, 10.7451], [-85.7444, 11.062], [-85.6215, 11.1845], [-84.9092, 10.9453], [-84.3484, 10.9799], [-84.1684, 10.7806], [-83.6419, 10.9173]]] }, \"properties\": { \"name\": \"Costa Rica\", \"id\": \"CR\" }, \"id\": \"CR\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-23.4442, 15.0078], [-23.7054, 14.9611], [-23.7007, 15.2714], [-23.4442, 15.0078]]] }, \"properties\": { \"name\": \"Cape Verde\", \"id\": \"CV\" }, \"id\": \"CV\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[43.4659, -11.9014], [43.2266, -11.7518], [43.3793, -11.6142], [43.4659, -11.9014]]] }, \"properties\": { \"name\": \"Comoros\", \"id\": \"KM\" }, \"id\": \"KM\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-71.3197, 11.8619], [-71.958, 11.6666], [-72.2485, 11.1965], [-72.6902, 10.8361], [-72.8693, 10.4911], [-73.0065, 9.7894], [-73.3563, 9.2269], [-72.7963, 9.1089], [-72.6654, 8.6277], [-72.4166, 8.3818], [-72.443, 7.4549], [-72.0843, 7.0967], [-71.0134, 6.9946], [-70.6552, 7.0829], [-70.095, 6.9378], [-69.4392, 6.1348], [-68.4717, 6.1565], [-67.8591, 6.2897], [-67.4394, 6.0256], [-67.8249, 5.2705], [-67.8553, 4.507], [-67.6616, 3.8643], [-67.3111, 3.416], [-67.8347, 2.8926], [-67.2108, 2.3901], [-66.8761, 1.2231], [-67.352, 2.0861], [-67.8152, 1.79], [-68.1765, 1.7198], [-69.8486, 1.7087], [-69.8522, 1.0593], [-69.3615, 1.0642], [-69.1633, 0.864], [-70.0539, 0.5786], [-70.0706, -0.1387], [-69.6675, -0.4823], [-69.4003, -1.1948], [-69.6691, -2.6676], [-69.9658, -4.2359], [-70.3396, -3.8142], [-70.7351, -3.7818], [-70.0741, -2.7502], [-70.9146, -2.2184], [-71.3969, -2.3342], [-71.7525, -2.1527], [-72.3957, -2.4288], [-73.1545, -2.2783], [-73.1969, -1.8304], [-73.4963, -1.6932], [-73.6643, -1.2489], [-74.2465, -0.9706], [-74.4178, -0.5809], [-74.8018, -0.2], [-75.2845, -0.1063], [-75.8798, 0.1511], [-76.311, 0.4485], [-76.4946, 0.2355], [-77.4228, 0.425], [-77.4676, 0.6363], [-78.3121, 1.046], [-78.8597, 1.4553], [-78.5769, 1.774], [-78.6171, 2.3067], [-78.1201, 2.4882], [-77.67, 2.8788], [-77.2428, 3.5855], [-77.1666, 3.8621], [-77.4272, 4.0605], [-77.2863, 4.7219], [-77.4017, 5.4161], [-77.2492, 5.7801], [-77.4694, 6.177], [-77.36, 6.5046], [-77.9011, 7.2294], [-77.7439, 7.537], [-77.3509, 7.7057], [-77.2124, 8.0338], [-77.3742, 8.6583], [-76.8519, 8.0906], [-76.8879, 8.6197], [-76.2769, 8.989], [-76.1355, 9.2656], [-75.6394, 9.4502], [-75.671, 10.1964], [-75.4459, 10.611], [-74.8446, 11.1095], [-74.4542, 10.9892], [-74.0592, 11.3408], [-73.3134, 11.2959], [-72.722, 11.7123], [-72.275, 11.8894], [-72.1358, 12.1886], [-71.7145, 12.4199], [-71.2622, 12.3351], [-71.3197, 11.8619]]] }, \"properties\": { \"name\": \"Colombia\", \"id\": \"CO\" }, \"id\": \"CO\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-159.7406, -21.2494], [-159.8395, -21.2383], [-159.832, -21.2005], [-159.7683, -21.1885], [-159.7406, -21.2494]]] }, \"properties\": { \"name\": \"Cook Islands\", \"id\": \"CK\" }, \"id\": \"CK\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[18.6102, 3.4785], [18.4908, 2.9246], [18.0722, 2.0133], [18.058, 1.5347], [17.9026, 1.1179], [17.8875, 0.2341], [17.7242, -0.2777], [17.753, -0.5489], [17.2789, -0.9994], [16.8799, -1.2258], [16.5407, -1.8402], [16.2154, -2.178], [16.2171, -3.0302], [16.1466, -3.4639], [15.8722, -3.9345], [15.6001, -4.0308], [14.7794, -4.8458], [14.4105, -4.8311], [14.3581, -4.2993], [13.4149, -4.8373], [13.0726, -4.6349], [12.8809, -4.4454], [12.3846, -4.6189], [12.0184, -5.0042], [11.7773, -4.5657], [11.1301, -3.9163], [11.5043, -3.5203], [11.934, -3.3188], [11.5376, -2.8367], [11.5754, -2.3973], [12.4463, -2.3298], [12.4321, -1.929], [12.7934, -1.9316], [12.9918, -2.3134], [13.465, -2.3955], [13.7842, -2.1638], [14.0874, -2.4669], [14.3839, -1.8899], [14.4806, -0.6181], [13.8601, -0.2035], [13.8845, 0.1906], [14.0874, 0.5364], [14.4345, 0.8116], [14.181, 1.3701], [13.8512, 1.4189], [13.2741, 1.2409], [13.1627, 1.6479], [13.2937, 2.1615], [14.4842, 2.1549], [14.9023, 2.0124], [15.7417, 1.9152], [16.0596, 1.6763], [16.1834, 2.2703], [16.4684, 2.8318], [16.6735, 3.5354], [17.4379, 3.6845], [18.161, 3.4998], [18.6102, 3.4785]]] }, \"properties\": { \"name\": \"Republic of Congo\", \"id\": \"CG\" }, \"id\": \"CG\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[27.4032, 5.1094], [27.7881, 4.6446], [28.192, 4.3503], [28.7269, 4.5048], [29.1513, 4.3881], [29.6768, 4.5869], [30.1949, 3.9819], [30.5083, 3.8359], [30.8385, 3.4905], [30.7284, 2.4554], [31.1763, 2.2703], [31.2527, 2.0448], [30.9424, 1.683], [29.9427, 0.8192], [29.9343, 0.4991], [29.7177, 0.0983], [29.5619, -0.9772], [29.577, -1.3878], [29.1295, -1.8601], [29.1064, -2.2335], [28.8765, -2.4004], [29.0146, -2.7204], [29.2245, -3.0533], [29.2232, -3.9109], [29.4034, -4.4494], [29.3426, -4.9829], [29.5943, -5.651], [29.4802, -6.0252], [29.7097, -6.6169], [30.3134, -7.2037], [30.7511, -8.1936], [28.9724, -8.4648], [28.9178, -8.7005], [28.4007, -9.2248], [28.6301, -9.8311], [28.639, -10.6692], [28.3572, -11.4828], [28.4823, -11.8122], [29.0643, -12.3489], [29.4274, -12.4314], [29.7954, -12.1553], [29.7954, -13.3929], [29.5543, -13.2491], [29.0141, -13.3689], [28.3576, -12.482], [27.5333, -12.1953], [27.0459, -11.616], [26.9496, -11.8988], [26.5962, -11.972], [26.0258, -11.8903], [25.3493, -11.6231], [25.1847, -11.2431], [24.5184, -11.4384], [24.32, -11.0718], [23.9666, -10.8716], [23.8339, -11.0136], [22.5613, -11.0558], [22.3069, -10.6914], [22.1977, -10.0406], [21.8133, -9.4689], [21.9056, -8.6934], [21.7511, -7.3054], [20.6077, -7.2778], [20.4821, -6.9161], [19.8753, -6.9862], [19.5277, -7.1447], [19.3408, -7.9668], [18.6532, -7.9361], [17.536, -8.076], [17.1551, -7.4612], [16.7094, -6.4717], [16.7179, -6.2414], [16.3152, -5.8658], [14.3985, -5.8925], [13.0682, -5.8649], [12.4117, -5.9866], [12.2137, -5.7589], [12.5035, -5.6958], [12.5222, -5.1489], [12.8298, -4.7366], [13.0726, -4.6349], [13.4149, -4.8373], [14.3581, -4.2993], [14.4105, -4.8311], [14.7794, -4.8458], [15.6001, -4.0308], [15.8722, -3.9345], [16.1466, -3.4639], [16.2171, -3.0302], [16.2154, -2.178], [16.5407, -1.8402], [16.8799, -1.2258], [17.2789, -0.9994], [17.753, -0.5489], [17.7242, -0.2777], [17.8875, 0.2341], [17.9026, 1.1179], [18.058, 1.5347], [18.0722, 2.0133], [18.4908, 2.9246], [18.6102, 3.4785], [18.5676, 4.2576], [19.0687, 4.8915], [19.5011, 5.1276], [19.8065, 5.0894], [20.2264, 4.8297], [20.558, 4.4627], [21.5376, 4.2447], [22.4223, 4.1351], [22.7557, 4.6469], [23.4171, 4.6633], [24.32, 4.994], [24.7656, 4.9301], [25.2495, 5.0246], [25.5251, 5.3123], [26.8222, 5.0623], [27.1151, 5.1977], [27.4032, 5.1094]]] }, \"properties\": { \"name\": \"Democratic Republic of Congo\", \"id\": \"CD\" }, \"id\": \"CD\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[15.4803, 7.5237], [15.2459, 7.2636], [14.7394, 6.2799], [14.6169, 5.8649], [14.7088, 4.6655], [15.0226, 4.3583], [15.1287, 3.827], [15.775, 3.127], [16.0636, 2.9086], [16.1834, 2.2703], [16.0596, 1.6763], [15.7417, 1.9152], [14.9023, 2.0124], [14.4842, 2.1549], [13.2937, 2.1615], [13.2204, 2.2565], [11.3485, 2.2996], [11.3286, 2.1673], [9.98, 2.1677], [9.8007, 2.3044], [9.8762, 3.3099], [9.4252, 3.9224], [8.9999, 4.0916], [8.9027, 4.4351], [8.556, 4.7552], [8.801, 5.1973], [9.0603, 6.0092], [10.1438, 6.9964], [10.6064, 7.063], [11.0325, 6.6981], [11.1532, 6.438], [11.5518, 6.6972], [11.7676, 7.272], [12.0162, 7.5899], [12.4037, 8.5957], [12.8067, 8.8865], [12.9297, 9.4263], [13.1756, 9.5394], [13.2697, 10.0362], [13.5352, 10.6052], [13.892, 11.1401], [14.5597, 11.4921], [14.6271, 12.1087], [14.1974, 12.3839], [14.0638, 13.0786], [14.5162, 12.9796], [14.7612, 12.6556], [15.0812, 11.8455], [15.0297, 11.1135], [15.1323, 10.6483], [15.5411, 9.9603], [14.2432, 9.9798], [13.9773, 9.6917], [14.3324, 9.2034], [15.1163, 8.5571], [15.443, 7.8518], [15.4803, 7.5237]]] }, \"properties\": { \"name\": \"Cameroon\", \"id\": \"CM\" }, \"id\": \"CM\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-5.5236, 10.4259], [-5.0999, 10.2417], [-4.9698, 9.9301], [-4.6258, 9.7134], [-3.8776, 9.895], [-3.2235, 9.8954], [-2.6958, 9.4813], [-2.7466, 9.1098], [-2.5058, 8.2087], [-2.7899, 7.9321], [-2.9858, 7.205], [-3.2358, 6.8073], [-3.2007, 6.3483], [-2.7952, 5.1844], [-3.0191, 5.1307], [-4.0372, 5.2301], [-5.5646, 5.0894], [-6.9229, 4.6384], [-7.5451, 4.3512], [-7.5688, 5.0805], [-7.4299, 5.3247], [-7.4543, 5.8414], [-7.7965, 5.975], [-7.8886, 6.2347], [-8.6035, 6.5077], [-8.3325, 6.8015], [-8.2966, 7.0741], [-8.4863, 7.5584], [-8.232, 7.5566], [-7.8236, 8.4674], [-7.951, 8.7866], [-7.8962, 9.416], [-8.137, 9.4955], [-8.1365, 10.022], [-7.9907, 10.1627], [-7.6611, 10.4272], [-7.1049, 10.2035], [-6.6932, 10.3495], [-6.2611, 10.7242], [-6.0345, 10.1946], [-5.5236, 10.4259]]] }, \"properties\": { \"name\": \"Côte d'Ivoire\", \"id\": \"CI\" }, \"id\": \"CI\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[110.8887, 19.9918], [111.0138, 19.6553], [110.5722, 19.1719], [110.4514, 18.748], [109.5193, 18.2184], [108.7016, 18.5354], [108.6936, 19.3384], [109.6511, 19.9842], [110.5886, 20.0726], [110.8887, 19.9918]]], [[[130.5269, 42.5353], [130.2406, 42.8917], [129.8983, 42.9983], [129.7199, 42.4749], [129.3137, 42.4137], [128.9236, 42.0381], [128.0451, 41.9875], [128.291, 41.5627], [128.1112, 41.3891], [127.1795, 41.5312], [126.9034, 41.7811], [125.989, 40.9049], [124.8895, 40.4596], [124.3621, 40.0042], [124.1056, 39.8409], [123.3483, 39.7632], [122.3349, 39.3663], [121.6499, 38.8652], [121.7853, 39.401], [121.5177, 39.6389], [122.2749, 40.5418], [121.859, 40.8423], [121.1745, 40.9013], [120.479, 40.231], [119.5912, 39.9026], [118.9125, 39.1666], [118.2977, 39.0671], [117.7845, 39.1346], [117.5577, 38.625], [118.0149, 38.1834], [118.94, 38.0426], [119.0891, 37.7008], [118.9529, 37.3311], [119.45, 37.1247], [120.3702, 37.7008], [120.7502, 37.834], [121.6402, 37.4603], [122.6025, 37.4265], [122.5195, 36.9467], [121.9327, 36.9595], [120.9899, 36.5978], [120.3933, 36.054], [120.0546, 35.8614], [119.2156, 35.0118], [119.5827, 34.5821], [120.2015, 34.3255], [120.8709, 33.0165], [120.8532, 32.6613], [121.4009, 32.3719], [121.3521, 31.8588], [121.0556, 31.7194], [121.6606, 31.3199], [121.8781, 30.9168], [120.9974, 30.5582], [121.1594, 30.3016], [121.9442, 29.8941], [121.7174, 29.2562], [121.602, 28.3667], [121.0986, 28.2903], [120.2788, 27.0972], [119.6484, 25.9186], [119.5392, 25.5915], [119.0248, 25.2235], [118.5605, 24.5803], [118.0873, 24.6269], [118.0562, 24.246], [116.5381, 23.1798], [116.4706, 22.9459], [115.4985, 22.719], [115.1957, 22.8171], [114.854, 22.6169], [114.2658, 22.541], [114.0154, 22.5117], [113.6195, 22.8615], [113.5467, 22.2241], [113.4943, 22.2414], [113.4788, 22.1957], [113.0083, 22.1193], [112.5861, 21.7767], [111.9438, 21.8495], [111.6029, 21.5592], [110.771, 21.3865], [110.1935, 21.0376], [110.5114, 20.5182], [110.123, 20.2639], [109.6626, 20.9168], [109.9307, 21.4806], [109.5441, 21.5378], [109.1486, 21.4255], [109.0305, 21.6266], [108.3247, 21.6937], [107.9727, 21.5081], [107.3513, 21.6089], [106.7294, 22.0004], [106.5363, 22.3954], [106.7804, 22.779], [106.5421, 22.9081], [105.8429, 22.9228], [105.2752, 23.3454], [104.8646, 23.1363], [104.7958, 22.9112], [104.3719, 22.704], [103.3008, 22.7643], [103.0051, 22.4532], [102.5173, 22.7408], [102.1276, 22.379], [101.6712, 22.4625], [101.5243, 22.2538], [101.744, 21.778], [101.705, 21.1503], [101.2242, 21.2236], [101.139, 21.5676], [100.2148, 21.4628], [99.9179, 22.0279], [99.193, 22.126], [99.3377, 22.498], [99.3408, 23.0959], [98.8636, 23.1913], [98.7642, 24.116], [98.2124, 24.1106], [97.686, 23.898], [97.5315, 24.4915], [97.8196, 25.2519], [98.0109, 25.2923], [98.6546, 25.9177], [98.7318, 26.5836], [98.651, 27.5726], [98.299, 27.5499], [98.0988, 28.1421], [97.5377, 28.5101], [97.3224, 28.218], [96.776, 28.3671], [96.4355, 29.0507], [96.0352, 29.4471], [95.4204, 29.0543], [94.7696, 29.1759], [94.6231, 29.3126], [93.9022, 28.803], [93.2067, 28.5909], [92.702, 28.147], [92.6642, 27.949], [91.9775, 27.7301], [91.6317, 27.7599], [91.6056, 27.9516], [90.3529, 28.0804], [89.9809, 28.3112], [89.537, 28.1075], [88.8912, 27.316], [88.8485, 27.8686], [88.6213, 28.0919], [88.1099, 27.8704], [87.1413, 27.8385], [86.5545, 28.0853], [86.4089, 27.9286], [85.6783, 28.2775], [85.1225, 28.3161], [85.1589, 28.5922], [84.7141, 28.5957], [84.2285, 28.9118], [84.1016, 29.2198], [83.5835, 29.1834], [83.1556, 29.6127], [82.8542, 29.6833], [82.1591, 30.1152], [82.0432, 30.3269], [81.4169, 30.3376], [81.0103, 30.1645], [80.6823, 30.4148], [80.1913, 30.5684], [79.9245, 30.8889], [79.9165, 30.8942], [79.3697, 31.0798], [79.3386, 31.1055], [79.1073, 31.4025], [78.8445, 31.3017], [78.7198, 31.8876], [78.3896, 32.5197], [79.2192, 32.5011], [79.2165, 32.5641], [79.1353, 33.1718], [79.1127, 33.2264], [78.8019, 33.4999], [78.7531, 34.0876], [78.9364, 34.3521], [78.2821, 34.654], [77.8107, 35.4845], [77.7992, 35.496], [77.4467, 35.4756], [76.2518, 35.8108], [75.945, 36.0176], [75.8403, 36.6497], [75.3467, 36.9134], [74.5415, 37.0221], [74.8912, 37.2317], [74.7452, 38.5101], [74.2773, 38.6597], [73.8015, 38.6068], [73.6315, 39.4489], [73.9147, 39.6065], [73.9915, 40.0433], [74.4118, 40.1374], [75.0044, 40.4494], [75.5837, 40.6052], [75.8718, 40.3034], [76.4804, 40.4494], [76.8239, 40.9821], [78.1232, 41.0758], [78.3625, 41.3718], [79.2938, 41.7829], [80.2162, 42.0323], [80.2095, 42.1899], [80.1651, 42.6653], [80.7857, 43.1616], [80.3551, 44.0973], [80.4554, 44.7463], [80.059, 45.0064], [81.602, 45.3109], [82.4787, 45.1236], [82.3264, 45.52], [83.0043, 47.0337], [83.1929, 47.1864], [84.786, 46.8308], [85.6565, 47.2547], [85.526, 47.9157], [85.7493, 48.3849], [86.5496, 48.5287], [86.7534, 49.0088], [87.3229, 49.0858], [87.8143, 49.1624], [87.9798, 48.5549], [88.517, 48.3844], [89.0478, 48.0027], [89.561, 48.004], [90.3134, 47.676], [90.4963, 47.2854], [90.87, 46.9547], [91.0338, 46.529], [91.0019, 46.0358], [90.6618, 45.5253], [90.8771, 45.196], [91.5842, 45.0766], [92.7876, 45.0357], [93.6563, 44.9008], [94.7119, 44.3508], [95.3502, 44.278], [95.9126, 43.2064], [96.3854, 42.7204], [97.2057, 42.7896], [99.4678, 42.5681], [99.984, 42.6773], [101.7139, 42.4656], [101.9731, 42.2157], [103.0726, 42.0062], [103.7109, 41.7514], [104.4984, 41.877], [104.4984, 41.6586], [105.1971, 41.738], [106.7702, 42.2889], [108.1712, 42.4474], [109.4434, 42.4558], [110.4004, 42.7736], [111.0072, 43.3414], [111.9331, 43.7116], [111.4022, 44.3672], [111.8981, 45.0641], [113.5871, 44.7459], [114.0305, 44.9425], [114.517, 45.3646], [115.6809, 45.4583], [116.2407, 45.7961], [116.5625, 46.2897], [117.3335, 46.3621], [118.3088, 46.7172], [119.7066, 46.6062], [119.8979, 46.8579], [119.711, 47.15], [118.4983, 47.9841], [117.7685, 47.988], [117.3508, 47.652], [116.7605, 47.87], [115.8984, 47.6871], [115.5575, 47.945], [116.6832, 49.8238], [117.8733, 49.5135], [118.4517, 49.8444], [119.26, 50.0664], [119.1921, 50.3797], [120.067, 51.6007], [120.7497, 52.0965], [120.6561, 52.5666], [120.0945, 52.7872], [120.704, 53.1718], [122.338, 53.485], [123.6079, 53.5465], [124.8122, 53.1339], [125.649, 53.0422], [126.313, 52.3997], [126.9247, 51.1002], [127.5901, 50.2091], [127.5027, 49.8735], [127.9998, 49.5685], [128.5267, 49.5943], [129.5339, 49.3235], [130.1962, 48.8916], [130.8043, 48.3414], [130.712, 48.1279], [131.0027, 47.6915], [132.5617, 47.7683], [133.1441, 48.1057], [133.4686, 48.0972], [134.2933, 48.3733], [134.5636, 48.3219], [134.7523, 47.7155], [134.1677, 47.3022], [133.8614, 46.2475], [133.1858, 45.4947], [132.9359, 45.03], [131.9775, 45.2439], [131.0822, 44.9101], [131.2553, 44.0716], [131.262, 43.4333], [131.0684, 42.9024], [130.5771, 42.8118], [130.5269, 42.5353]]]] }, \"properties\": { \"name\": \"China\", \"id\": \"CN\" }, \"id\": \"CN\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-67.0799, -55.1538], [-68.07, -55.2213], [-68.107, -54.9292], [-67.2452, -54.9776], [-67.0799, -55.1538]]], [[[-69.703, -54.919], [-68.9007, -55.0176], [-68.2826, -55.255], [-68.2932, -55.5214], [-69.4119, -55.4441], [-69.9798, -55.1476], [-69.703, -54.919]]], [[[-72.9233, -53.4817], [-72.2055, -53.8075], [-73.3048, -53.9438], [-73.6865, -53.4266], [-72.9233, -53.4817]]], [[[-68.6299, -52.6525], [-68.6532, -54.8538], [-69.4862, -54.8591], [-69.7235, -54.7122], [-70.4972, -54.8094], [-71.4409, -54.6198], [-70.8982, -54.338], [-70.8678, -53.8843], [-70.0903, -53.4182], [-70.3906, -53.0263], [-69.7636, -52.7315], [-68.6299, -52.6525]]], [[[-74.4762, -49.148], [-74.5699, -49.9909], [-75.3001, -49.8475], [-75.1842, -49.0836], [-74.7934, -48.705], [-74.4762, -49.148]]], [[[-74.5672, -48.5918], [-74.923, -48.6264], [-75.2129, -48.1417], [-74.7292, -48.1261], [-74.5672, -48.5918]]], [[[-72.9861, -44.7801], [-73.4451, -44.6411], [-73.2078, -44.3348], [-72.7641, -44.5488], [-72.9861, -44.7801]]], [[[-73.7354, -44.3948], [-73.9833, -44.4946], [-73.7271, -45.1192], [-74.0991, -45.3252], [-74.6178, -44.6478], [-74.5017, -44.4733], [-73.7354, -44.3948]]], [[[-73.7733, -43.3459], [-74.355, -43.2637], [-74.2094, -42.8789], [-74.0368, -41.7953], [-73.5278, -41.8961], [-73.4708, -42.4665], [-73.7893, -42.5859], [-73.4364, -42.9366], [-73.7733, -43.3459]]], [[[-67.1948, -22.8216], [-67.0088, -23.0014], [-67.3562, -24.0339], [-68.2502, -24.3921], [-68.562, -24.8378], [-68.3842, -25.0921], [-68.6002, -25.4859], [-68.4144, -26.1539], [-68.5811, -26.5183], [-68.3461, -27.0279], [-68.8463, -27.1536], [-69.1744, -27.9246], [-69.6569, -28.4138], [-69.8278, -29.1031], [-70.0269, -29.3242], [-69.9277, -29.7694], [-69.9563, -30.358], [-70.1614, -30.4401], [-70.5196, -31.1486], [-70.5853, -31.5694], [-70.1696, -32.4718], [-70.0198, -33.2717], [-69.7978, -33.3987], [-69.8524, -34.2243], [-70.2899, -34.733], [-70.4703, -35.3261], [-70.4048, -36.0616], [-71.0556, -36.5237], [-71.1677, -37.7621], [-71.0281, -38.0413], [-70.9517, -38.7383], [-71.4256, -38.9855], [-71.5394, -39.6025], [-71.7199, -39.6354], [-71.6952, -40.3354], [-71.932, -40.6918], [-71.9114, -41.6506], [-71.7501, -42.0466], [-72.1247, -42.2983], [-72.1464, -42.9899], [-71.7816, -43.167], [-71.905, -43.44], [-71.6801, -43.9296], [-71.82, -44.3832], [-71.2127, -44.4414], [-71.2611, -44.7632], [-71.5962, -44.9794], [-71.3537, -45.2306], [-71.7727, -45.7242], [-71.8757, -46.1606], [-71.6952, -46.5783], [-71.9403, -46.8313], [-71.905, -47.2015], [-72.346, -47.4927], [-72.518, -47.8762], [-72.3549, -48.3658], [-72.6143, -48.7929], [-73.5762, -49.583], [-73.5012, -50.1254], [-73.153, -50.7384], [-72.5098, -50.6075], [-72.2763, -50.9102], [-72.4077, -51.541], [-71.9187, -51.9898], [-69.9603, -52.0084], [-68.4433, -52.3569], [-69.241, -52.2055], [-69.5606, -52.4217], [-70.795, -52.7688], [-70.9959, -53.7791], [-71.2977, -53.8834], [-72.1744, -53.6322], [-71.8528, -53.2855], [-71.4003, -53.107], [-71.3878, -52.7644], [-72.4583, -53.2544], [-73.0527, -53.2433], [-74.0143, -52.6392], [-73.5183, -52.0408], [-73.9733, -51.7847], [-73.8958, -51.3315], [-74.8147, -51.0629], [-75.0948, -50.6812], [-74.3337, -49.9745], [-74.3411, -48.5958], [-74.5772, -48.2744], [-74.6549, -47.7022], [-74.1584, -47.1824], [-74.152, -46.9742], [-75.6567, -46.6102], [-74.9245, -46.1597], [-75.0666, -45.8751], [-74.1579, -45.7673], [-74.0377, -45.4175], [-73.5498, -45.4836], [-73.3625, -44.978], [-72.739, -44.7343], [-72.6638, -44.4365], [-73.2651, -44.1688], [-72.9965, -43.6317], [-72.7852, -42.3014], [-72.4993, -41.9809], [-72.6698, -41.6595], [-73.0149, -41.5441], [-73.5214, -41.7971], [-73.966, -41.1184], [-73.6694, -40.0824], [-73.4104, -39.7889], [-73.2264, -39.2243], [-73.5325, -38.3667], [-73.4648, -38.0405], [-73.6619, -37.6987], [-73.6017, -37.1886], [-73.216, -37.1669], [-73.1181, -36.6884], [-72.8747, -36.3905], [-72.6239, -35.5857], [-72.2237, -35.0961], [-72.0029, -34.1653], [-71.6644, -33.6526], [-71.743, -33.0951], [-71.4522, -32.6596], [-71.5259, -31.806], [-71.6619, -31.1695], [-71.6695, -30.3305], [-71.4005, -30.1432], [-71.3157, -29.6496], [-71.5192, -28.9265], [-71.1863, -28.3778], [-71.0527, -27.7275], [-70.6465, -26.3293], [-70.7138, -25.7842], [-70.4455, -25.1725], [-70.5742, -24.6442], [-70.4878, -23.7818], [-70.5633, -23.0569], [-70.3316, -22.8487], [-70.0875, -21.493], [-70.1971, -20.7256], [-70.1483, -19.8049], [-70.4184, -18.3454], [-69.9263, -18.206], [-69.8522, -17.704], [-69.5108, -17.506], [-69.3133, -17.9432], [-69.094, -18.0507], [-68.9684, -18.9682], [-68.4628, -19.4329], [-68.6983, -19.721], [-68.7451, -20.4588], [-68.4999, -20.6119], [-68.1969, -21.3004], [-67.9883, -22.0572], [-67.8795, -22.8229], [-67.1948, -22.8216]]]] }, \"properties\": { \"name\": \"Chile\", \"id\": \"CL\" }, \"id\": \"CL\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[9.5241, 47.5242], [9.5277, 47.2707], [9.4877, 47.0621], [9.5801, 47.0572], [10.4528, 46.865], [9.9392, 46.3616], [9.2512, 46.2866], [8.9537, 45.8298], [8.4584, 46.2458], [7.9932, 46.0158], [7.021, 45.9257], [6.7583, 46.4158], [6.06, 46.4282], [7.0006, 47.3227], [7.6154, 47.5925], [8.6177, 47.7661], [9.5241, 47.5242]]] }, \"properties\": { \"name\": \"Switzerland\", \"id\": \"CH\" }, \"id\": \"CH\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[96.8404, -12.182], [96.835, -12.1797], [96.8279, -12.1509], [96.8257, -12.126], [96.8328, -12.126], [96.8395, -12.1602], [96.8404, -12.182]]] }, \"properties\": { \"name\": \"Cocos (Keeling) Islands\", \"id\": \"CC\" }, \"id\": \"CC\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-105.289, 72.9199], [-106.9216, 73.4799], [-105.5123, 73.7657], [-104.583, 73.3538], [-105.289, 72.9199]]], [[[-79.5373, 73.6546], [-77.2066, 73.4996], [-76.2895, 73.081], [-76.4005, 72.8207], [-77.836, 72.8968], [-79.5006, 72.7559], [-80.8241, 73.3807], [-80.849, 73.7211], [-79.5373, 73.6546]]], [[[-86.5894, 71.0107], [-84.7896, 71.0933], [-84.6995, 71.6315], [-85.9115, 71.9866], [-85.3411, 72.4216], [-85.6445, 72.7745], [-85.0184, 73.3356], [-82.6596, 73.7296], [-81.406, 73.6346], [-80.2748, 72.7455], [-80.9413, 72.2101], [-78.453, 72.4352], [-77.7532, 72.7248], [-75.2943, 72.4809], [-74.9032, 72.1005], [-73.7136, 71.7198], [-71.6406, 71.5163], [-70.7926, 71.1033], [-70.5609, 70.7382], [-69.1686, 70.7641], [-67.3637, 70.0344], [-66.6852, 69.2858], [-67.7517, 69.0387], [-68.038, 68.5507], [-67.033, 68.3261], [-66.2252, 67.9588], [-64.5275, 67.8127], [-64.0079, 67.3473], [-61.9684, 67.019], [-61.2997, 66.6488], [-61.9915, 66.0354], [-62.6589, 65.6399], [-63.3643, 65.5433], [-63.4018, 65.1185], [-64.6653, 65.1689], [-65.4015, 65.7639], [-65.3054, 66.0085], [-66.4771, 66.2797], [-67.1833, 66.0345], [-68.2568, 65.9386], [-67.3034, 65.4829], [-66.8606, 65.0917], [-65.2748, 64.6316], [-64.6784, 64.0281], [-64.5144, 63.2639], [-65.0688, 63.2635], [-65.2659, 62.7151], [-65.9788, 63.0007], [-67.676, 63.0935], [-66.2813, 62.3027], [-66.2567, 61.8683], [-67.4401, 62.1513], [-69.0823, 62.4052], [-69.5452, 62.7446], [-70.2362, 62.7634], [-71.2538, 63.0424], [-73.4437, 64.4236], [-74.5124, 64.6702], [-75.0675, 64.4567], [-76.7239, 64.242], [-77.7912, 64.367], [-78.0957, 64.9392], [-77.4474, 65.1616], [-77.3267, 65.4532], [-75.8283, 65.227], [-73.5607, 65.5429], [-74.434, 66.139], [-73.0333, 66.7283], [-72.2201, 67.2543], [-73.3283, 68.2668], [-74.648, 68.7076], [-74.9172, 68.9828], [-76.4034, 68.6923], [-75.7873, 69.3186], [-77.1289, 69.6526], [-78.9797, 70.5813], [-79.3475, 70.3722], [-78.7778, 70.0477], [-79.3033, 69.8948], [-81.0982, 70.0912], [-82.1387, 69.8413], [-86.3219, 70.1454], [-86.6244, 70.4013], [-87.9006, 70.2519], [-88.8483, 70.5229], [-89.3655, 71.0671], [-88.0387, 70.9512], [-87.8724, 71.2085], [-89.0794, 71.2879], [-89.8458, 71.4924], [-90.0251, 71.9489], [-89.2631, 73.0691], [-87.7197, 73.7229], [-85.1105, 73.8081], [-86.6293, 72.8709], [-86.0361, 71.7709], [-85.0233, 71.3532], [-86.5894, 71.0107]]], [[[-100.002, 73.946], [-99.1579, 73.7316], [-97.5819, 73.8876], [-97.0017, 73.6665], [-97.7959, 73.2852], [-97.0519, 72.6367], [-96.6133, 71.8339], [-98.663, 71.3021], [-99.167, 71.3672], [-100.5944, 72.1524], [-101.7239, 72.3149], [-102.7137, 72.783], [-100.4847, 72.773], [-100.2828, 73.1203], [-101.4509, 73.4311], [-100.9151, 73.8053], [-100.002, 73.946]]], [[[-93.171, 74.161], [-92.2228, 73.9724], [-90.3547, 73.8687], [-92.118, 72.7539], [-93.3407, 72.8018], [-94.0377, 72.0288], [-95.1929, 72.0275], [-95.5475, 72.7816], [-95.633, 73.6954], [-95.0397, 74.0239], [-93.171, 74.161]]], [[[-119.7363, 74.1126], [-117.5149, 74.2318], [-115.5107, 73.6188], [-115.4468, 73.4388], [-118.9615, 72.6842], [-120.18, 72.2126], [-120.6192, 71.5057], [-123.2107, 71.1235], [-124.0077, 71.6775], [-125.7626, 72.1375], [-124.9871, 72.5881], [-124.8364, 73.0762], [-123.7973, 73.7682], [-124.6962, 74.3481], [-121.3153, 74.5299], [-119.7363, 74.1126]]], [[[-93.5427, 75.028], [-93.5472, 74.691], [-94.6973, 74.6422], [-96.5658, 75.0988], [-95.6707, 75.5287], [-94.4272, 75.5935], [-93.5427, 75.028]]], [[[-102.2275, 76.0149], [-103.3148, 75.7641], [-104.3506, 76.1823], [-102.5841, 76.2817], [-102.2275, 76.0149]]], [[[-97.7009, 76.4664], [-97.4097, 75.5522], [-97.7994, 75.1167], [-100.2344, 75.0078], [-100.712, 75.4064], [-102.5413, 75.5136], [-101.4313, 75.9919], [-102.1378, 76.2848], [-100.388, 76.6135], [-97.7009, 76.4664]]], [[[-108.2924, 76.0571], [-105.481, 75.7457], [-105.8625, 75.1915], [-107.1533, 74.9272], [-108.8312, 75.0648], [-110.9408, 74.6387], [-112.5193, 74.4169], [-113.5141, 74.43], [-114.4518, 75.0879], [-115.7289, 74.9682], [-117.6001, 75.2716], [-116.6098, 76.0738], [-115.5806, 76.4375], [-114.1939, 76.4515], [-112.6975, 76.2016], [-111.0527, 75.5484], [-109.0865, 75.5065], [-108.9449, 75.6989], [-110.2701, 76.4169], [-108.467, 76.7376], [-108.2924, 76.0571]]], [[[-94.2949, 76.9125], [-92.7162, 76.6029], [-91.3051, 76.6808], [-90.2515, 76.0536], [-88.2014, 75.512], [-86.0687, 75.5023], [-83.932, 75.819], [-82.1538, 75.831], [-79.6602, 75.4494], [-79.508, 74.8801], [-80.2777, 74.5816], [-81.8089, 74.4766], [-88.4231, 74.4942], [-89.8444, 74.5485], [-91.9616, 74.7931], [-92.4281, 75.3828], [-92.1851, 75.8465], [-93.0917, 76.3541], [-95.2739, 76.2644], [-96.6397, 76.703], [-95.6383, 77.0639], [-94.2949, 76.9125]]], [[[-115.5513, 77.3633], [-116.2205, 76.6111], [-119.3679, 76.2218], [-119.9128, 75.8589], [-121.9083, 76.0347], [-121.6138, 76.4415], [-119.0903, 77.3051], [-115.5513, 77.3633]]], [[[-95.4843, 77.7921], [-93.301, 77.7399], [-93.5196, 77.4745], [-95.987, 77.484], [-95.4843, 77.7921]]], [[[-110.4581, 78.1032], [-109.7718, 77.9574], [-110.1984, 77.5246], [-111.952, 77.3442], [-113.1643, 77.5302], [-113.1872, 77.9124], [-110.4581, 78.1032]]], [[[-109.816, 78.6503], [-109.3905, 78.3367], [-113.1499, 78.4084], [-110.4077, 78.7566], [-109.816, 78.6503]]], [[[-96.2045, 78.5314], [-94.8873, 78.3452], [-95.087, 77.9927], [-96.9895, 77.8061], [-98.2548, 78.4293], [-96.2045, 78.5314]]], [[[-103.426, 79.3157], [-99.6094, 78.5831], [-99.1664, 77.8569], [-100.5859, 77.8917], [-101.0742, 78.1938], [-102.7313, 78.3711], [-103.5183, 78.7691], [-105.5358, 79.0325], [-105.3877, 79.3235], [-103.426, 79.3157]]], [[[-91.8857, 81.1328], [-90.643, 80.5937], [-87.6749, 80.3722], [-87.1442, 79.6626], [-85.5014, 79.5303], [-85.2899, 79.2083], [-87.0164, 78.8987], [-88.7911, 78.1925], [-90.6144, 78.1498], [-92.6782, 78.3891], [-95.1032, 79.29], [-95.297, 79.6531], [-96.7734, 80.1358], [-95.6146, 80.3962], [-96.1328, 80.6913], [-95.2697, 81.0007], [-91.8857, 81.1328]]], [[[-69.4889, 83.0169], [-63.641, 82.8127], [-61.4771, 82.4674], [-62.1766, 82.0434], [-64.5741, 81.7336], [-65.4839, 81.2848], [-70.1434, 80.3977], [-71.3878, 79.7618], [-75.2595, 79.4209], [-76.2558, 79.0068], [-74.4332, 78.724], [-75.866, 78.0098], [-78.0127, 77.9461], [-78.0762, 77.5191], [-79.3408, 77.1584], [-78.2888, 76.978], [-78.2844, 76.5711], [-80.6903, 76.1765], [-81.1708, 76.5128], [-83.8856, 76.4531], [-85.1412, 76.3046], [-89.5701, 76.4919], [-89.4997, 76.8268], [-88.3982, 77.104], [-86.8737, 77.2004], [-88.0946, 77.7193], [-87.0179, 77.8922], [-87.5517, 78.1767], [-86.808, 78.7744], [-84.3162, 78.9753], [-85.0899, 79.6122], [-86.4207, 79.8453], [-86.3073, 80.3194], [-83.7236, 80.229], [-80.0511, 80.5287], [-83.4013, 80.714], [-85.3074, 80.526], [-88.9214, 80.8057], [-89.9474, 81.1725], [-88.9784, 81.5414], [-90.4903, 81.8772], [-86.5807, 82.1873], [-82.1225, 82.6019], [-79.8864, 82.9386], [-69.97, 83.1161], [-69.4889, 83.0169]]], [[[-61.1053, 45.9448], [-60.8061, 45.738], [-60.5049, 46.204], [-59.8651, 46.1597], [-60.3862, 45.6545], [-61.2837, 45.5737], [-61.4953, 45.9413], [-60.8703, 46.7966], [-60.3318, 46.7678], [-60.5768, 46.1721], [-61.1053, 45.9448]]], [[[-63.8113, 46.4686], [-63.1294, 46.422], [-62.1635, 46.4872], [-62.8784, 46.0012], [-63.641, 46.2307], [-63.8113, 46.4686]]], [[[-74.7088, 45.0038], [-73.558, 45.425], [-73.1596, 46.0101], [-71.901, 46.632], [-71.2611, 46.7562], [-70.5196, 47.0323], [-68.987, 48.2748], [-67.5608, 48.8559], [-66.1781, 49.2132], [-64.8364, 49.1917], [-64.2618, 48.9218], [-64.2538, 48.5505], [-65.2595, 48.0213], [-65.9266, 48.1887], [-65.6665, 47.696], [-65.2282, 47.8114], [-64.7033, 47.7248], [-64.9121, 47.3688], [-65.3189, 47.1012], [-64.9057, 46.8881], [-64.5415, 46.2404], [-63.2928, 45.7522], [-62.4831, 45.6217], [-61.9556, 45.868], [-61.4924, 45.6869], [-61.2837, 45.2355], [-63.7611, 44.4862], [-64.286, 44.5501], [-64.8624, 43.8678], [-65.7382, 43.5607], [-66.1257, 43.8137], [-66.0995, 44.3677], [-65.6567, 44.7605], [-64.4489, 45.2559], [-64.8979, 45.6261], [-65.8845, 45.223], [-66.8726, 45.0672], [-67.1249, 45.1693], [-67.4725, 45.2759], [-67.4328, 45.603], [-67.7845, 45.7016], [-67.8067, 47.083], [-68.311, 47.3546], [-68.8288, 47.2032], [-69.243, 47.4629], [-70.0078, 46.7088], [-70.2963, 45.9062], [-70.898, 45.2626], [-71.3272, 45.2901], [-71.5175, 45.0078], [-74.7088, 45.0038]]], [[[-61.8011, 49.094], [-62.2195, 49.0791], [-63.5658, 49.3994], [-64.1315, 49.9416], [-62.8584, 49.7055], [-61.8171, 49.2835], [-61.8011, 49.094]]], [[[-127.1973, 50.6403], [-125.4821, 50.3167], [-124.6429, 49.4287], [-123.9959, 49.2241], [-123.497, 48.582], [-123.5946, 48.3334], [-124.6893, 48.5975], [-125.8285, 49.0918], [-125.8354, 49.2767], [-126.5485, 49.4189], [-126.683, 49.8764], [-127.1143, 49.8797], [-128.2675, 50.6092], [-127.9182, 50.8605], [-127.1973, 50.6403]]], [[[-55.4588, 51.5365], [-55.8714, 50.9073], [-56.6939, 50.0597], [-55.7648, 49.9605], [-55.892, 49.5803], [-54.9827, 49.268], [-54.579, 49.4908], [-53.9577, 49.4418], [-53.5733, 49.1413], [-53.853, 48.8112], [-53.5312, 48.2317], [-52.955, 48.0293], [-53.1756, 47.6529], [-52.6536, 47.5495], [-53.0697, 46.6812], [-53.6164, 46.6803], [-54.1737, 46.8805], [-53.8692, 47.387], [-54.8566, 47.3848], [-56.2211, 47.6716], [-56.9525, 47.5743], [-58.3332, 47.6769], [-59.1169, 47.5708], [-59.3624, 47.8655], [-58.7105, 48.325], [-58.7165, 48.598], [-58.0158, 49.5426], [-57.4656, 50.4636], [-56.7503, 51.2748], [-56.0256, 51.5685], [-55.4588, 51.5365]]], [[[-80.7318, 52.7472], [-81.8391, 52.9579], [-81.8473, 53.1862], [-81.1357, 53.2058], [-80.7318, 52.7472]]], [[[-132.6556, 54.1275], [-131.7026, 53.9864], [-132.0113, 53.2653], [-132.7475, 53.3105], [-133.0522, 53.7782], [-132.6556, 54.1275]]], [[[-78.9356, 56.2662], [-79.1755, 55.8851], [-80.0009, 55.9322], [-79.5963, 56.2444], [-78.9356, 56.2662]]], [[[-79.5452, 62.4117], [-79.324, 62.0261], [-79.7144, 61.6126], [-80.2652, 61.8182], [-80.0215, 62.3431], [-79.5452, 62.4117]]], [[[-82.0004, 62.9543], [-82.1138, 62.6522], [-83.0158, 62.2099], [-83.699, 62.1602], [-83.8994, 62.4765], [-83.3765, 62.905], [-82.0004, 62.9543]]], [[[-84.9197, 65.261], [-83.4071, 65.1039], [-82.0501, 64.6442], [-81.7161, 64.0219], [-80.829, 64.09], [-80.3021, 63.7622], [-81.0463, 63.4615], [-82.3782, 63.7067], [-82.4672, 63.9269], [-83.4943, 64.0993], [-83.7283, 63.8135], [-84.6329, 63.3092], [-85.4954, 63.1392], [-85.7142, 63.6579], [-87.1888, 63.6723], [-86.252, 64.1368], [-86.3743, 64.5659], [-85.9617, 65.7042], [-85.241, 65.7954], [-84.9197, 65.261]]], [[[-75.6758, 68.3225], [-75.1538, 68.234], [-75.1274, 67.5373], [-75.7801, 67.2836], [-77.0048, 67.2669], [-77.3058, 67.7062], [-76.7403, 68.2313], [-75.6758, 68.3225]]], [[[-97.4394, 69.6427], [-96.2999, 69.3444], [-95.6856, 68.7358], [-96.4016, 68.4708], [-97.472, 68.5438], [-99.254, 68.8632], [-99.5641, 69.0341], [-97.4394, 69.6427]]], [[[-74.7088, 45.0038], [-75.1793, 44.8994], [-76.4646, 44.0574], [-76.82, 43.6286], [-78.7205, 43.625], [-79.1719, 43.4666], [-79.0368, 42.8025], [-80.2475, 42.3662], [-81.2778, 42.209], [-82.439, 41.675], [-83.1419, 41.976], [-83.0731, 42.3005], [-82.5453, 42.6245], [-82.1378, 43.5709], [-82.5511, 45.3473], [-83.5926, 45.817], [-83.9777, 46.0851], [-84.1921, 46.5494], [-84.5617, 46.4575], [-84.8759, 46.9001], [-88.3782, 48.3032], [-89.4556, 47.996], [-90.8403, 48.2007], [-91.5183, 48.0582], [-92.9963, 48.6117], [-93.3778, 48.6166], [-93.7078, 48.5256], [-94.6209, 48.7427], [-95.162, 48.9917], [-97.5297, 48.9932], [-99.2354, 48.993], [-102.2201, 48.993], [-103.9256, 48.993], [-106.4839, 48.993], [-109.895, 48.993], [-112.4532, 48.993], [-115.8643, 48.993], [-118.4226, 48.993], [-120.1281, 48.993], [-122.7888, 48.993], [-123.0491, 48.993], [-123.3356, 49.4591], [-123.859, 49.4829], [-124.4833, 49.8082], [-125.21, 50.4763], [-126.4045, 50.5298], [-126.6318, 50.9151], [-127.0577, 50.8676], [-127.7082, 51.1512], [-127.6449, 51.4784], [-128.3576, 52.1589], [-128.1088, 52.858], [-128.6524, 53.2437], [-129.2842, 53.3931], [-129.5637, 53.2515], [-130.3351, 53.724], [-130.0433, 54.1335], [-130.4304, 54.4209], [-129.6666, 55.4366], [-130.0251, 55.8882], [-130.4772, 56.2307], [-131.5752, 56.5989], [-131.8661, 56.7929], [-133.8208, 58.7049], [-134.9439, 59.2882], [-135.4759, 59.7934], [-136.3219, 59.6049], [-136.5787, 59.1522], [-137.4385, 58.9031], [-137.5932, 59.2263], [-139.1852, 60.0837], [-141.0021, 60.3003], [-141.0021, 63.2222], [-141.0021, 65.56], [-141.0021, 68.4819], [-141.0021, 69.6509], [-139.1815, 69.5155], [-138.1283, 69.1519], [-136.7174, 68.8891], [-135.8763, 68.9169], [-135.6914, 69.3111], [-135.1409, 69.4678], [-133.1632, 69.4338], [-130.4985, 70.1431], [-128.9715, 69.7123], [-127.765, 70.2219], [-127.1385, 70.2392], [-126.6122, 69.7303], [-125.9073, 69.4185], [-124.7679, 69.99], [-123.6091, 69.3774], [-123.0258, 69.81], [-120.9624, 69.6604], [-120.2925, 69.4205], [-118.8687, 69.2571], [-118.0953, 69.043], [-116.0651, 68.8554], [-115.6312, 68.9726], [-114.4138, 68.6597], [-115.1332, 67.8191], [-112.4352, 67.6849], [-110.9901, 67.7907], [-110.0426, 67.9772], [-109.6305, 67.7328], [-108.5929, 67.591], [-107.6263, 67.0031], [-108.2611, 68.1498], [-108.3134, 68.6108], [-106.1646, 68.9198], [-105.4286, 68.4584], [-104.1935, 68.0311], [-103.4741, 68.115], [-102.692, 67.8116], [-101.555, 67.6931], [-100.4561, 67.8396], [-99.1468, 67.7237], [-98.4171, 67.8265], [-98.2184, 68.3174], [-97.2659, 68.453], [-96.0361, 68.1578], [-96.3714, 67.5539], [-95.7826, 67.1937], [-95.2588, 67.2625], [-95.6505, 67.7375], [-93.6517, 68.5431], [-93.6814, 68.8874], [-94.2707, 69.4551], [-96.0503, 69.8311], [-96.4924, 70.1249], [-96.2265, 70.5418], [-96.549, 70.8088], [-96.4056, 71.2737], [-95.2013, 71.9036], [-94.3084, 71.7649], [-92.9488, 71.2622], [-92.9814, 70.8523], [-91.5641, 70.1782], [-92.751, 69.7139], [-90.8221, 69.2904], [-90.4683, 68.8638], [-89.0567, 69.266], [-88.0413, 68.8117], [-87.8103, 68.4042], [-88.347, 68.2883], [-88.1958, 67.7659], [-87.2663, 67.1839], [-86.5363, 67.5162], [-85.9526, 68.0724], [-85.7338, 68.6301], [-84.8622, 69.074], [-85.3869, 69.2318], [-85.5074, 69.8453], [-82.6183, 69.691], [-82.6421, 69.4584], [-81.3286, 69.12], [-81.2815, 68.6572], [-82.5526, 68.4464], [-81.9764, 67.862], [-81.2702, 67.4598], [-81.4675, 67.0699], [-82.6416, 66.5876], [-84.4784, 66.1794], [-85.6039, 66.5683], [-86.6331, 66.5314], [-86.0429, 66.0225], [-87.2914, 65.3549], [-87.9701, 65.3489], [-89.7494, 65.9359], [-89.9241, 65.7804], [-88.974, 65.3482], [-87.0275, 65.1982], [-87.2805, 64.8262], [-88.1057, 64.1832], [-88.653, 64.0094], [-90.1418, 63.9819], [-90.0135, 63.8044], [-91.3301, 63.5067], [-90.7466, 63.3516], [-90.8711, 62.9459], [-91.4491, 62.8041], [-92.3613, 62.8194], [-93.4206, 61.7059], [-93.9127, 61.4815], [-94.6467, 60.4164], [-94.7858, 59.9534], [-94.7135, 58.9034], [-94.2871, 58.716], [-93.2782, 58.7564], [-92.249, 57.009], [-91.1113, 57.2412], [-90.5922, 57.2246], [-89.7909, 56.9813], [-88.9484, 56.8512], [-88.0751, 56.4673], [-87.5608, 56.0565], [-85.8305, 55.6569], [-85.061, 55.2856], [-83.9107, 55.3147], [-82.5775, 55.1487], [-82.2195, 54.8136], [-82.4181, 54.3559], [-82.1413, 53.8177], [-82.2605, 52.9612], [-81.5994, 52.4325], [-81.6613, 52.2938], [-80.6579, 51.7582], [-80.368, 51.3299], [-79.8362, 51.1734], [-79.4975, 51.5698], [-78.9777, 51.7338], [-78.4917, 52.2521], [-78.7238, 52.6278], [-79.2418, 54.0989], [-79.6655, 54.6975], [-77.8911, 55.2364], [-77.3249, 55.5555], [-76.6504, 56.1073], [-76.5729, 57.1813], [-77.1569, 58.0189], [-78.5152, 58.6823], [-77.7606, 59.3801], [-77.3118, 60.0424], [-77.8715, 60.7859], [-77.7362, 61.4373], [-78.1372, 62.1074], [-78.0682, 62.3555], [-77.3724, 62.5726], [-74.69, 62.1835], [-73.6299, 62.4543], [-72.0814, 61.7283], [-71.4227, 61.159], [-70.2792, 61.0687], [-69.6405, 60.6898], [-69.7559, 60.3886], [-69.682, 59.3417], [-69.1735, 58.8967], [-68.6981, 58.9045], [-67.5697, 58.2135], [-66.608, 58.5489], [-65.6061, 59.1107], [-64.9312, 60.2519], [-64.4995, 60.2683], [-63.1854, 58.8579], [-62.5939, 58.4741], [-62.3056, 57.9723], [-61.899, 57.8613], [-61.851, 57.3812], [-61.3337, 57.0106], [-61.5146, 56.3903], [-59.9303, 55.2594], [-58.997, 55.1494], [-58.7802, 54.8384], [-58.1951, 54.8659], [-57.4046, 54.5705], [-58.1514, 54.3504], [-57.4161, 54.1628], [-57.1489, 53.8476], [-56.4651, 53.7651], [-55.7979, 53.212], [-55.8336, 52.3104], [-55.6951, 52.1378], [-56.976, 51.4577], [-58.5103, 51.295], [-59.1655, 50.7799], [-60.0801, 50.2546], [-61.2897, 50.202], [-62.7155, 50.3016], [-64.868, 50.2754], [-65.2686, 50.32], [-66.4955, 50.2119], [-66.9411, 49.9938], [-67.3719, 49.3486], [-68.2819, 49.1972], [-68.9291, 48.829], [-69.775, 48.0981], [-69.9055, 47.8322], [-70.7058, 47.1398], [-71.2678, 46.7958], [-71.8797, 46.687], [-72.981, 46.2098], [-73.974, 45.3451], [-74.7088, 45.0038]]], [[[-114.5215, 72.593], [-113.5001, 72.6944], [-112.7537, 72.986], [-111.2698, 72.7137], [-108.7549, 72.551], [-107.72, 73.329], [-106.4822, 73.1962], [-105.415, 72.7883], [-104.3495, 71.434], [-104.5697, 71.1039], [-103.9535, 70.7626], [-100.9732, 70.0295], [-100.9351, 69.7152], [-102.2343, 69.8422], [-102.9197, 69.5648], [-101.9756, 69.4069], [-101.857, 69.0239], [-103.4681, 68.8086], [-105.0195, 69.0814], [-106.1408, 69.1621], [-106.6591, 69.4396], [-107.4399, 69.0021], [-108.946, 68.7598], [-111.3108, 68.542], [-113.1277, 68.4941], [-113.6941, 69.195], [-116.5135, 69.4247], [-117.1354, 70.1001], [-114.5923, 70.3125], [-112.6378, 70.2253], [-112.1143, 70.4468], [-113.7573, 70.6907], [-115.991, 70.5864], [-117.587, 70.6296], [-118.2642, 70.8882], [-117.8141, 71.1585], [-118.8683, 71.6868], [-118.9447, 71.9855], [-118.2136, 72.2629], [-118.3745, 72.5339], [-117.5517, 72.8311], [-114.6382, 73.3727], [-114.1091, 72.8611], [-114.5215, 72.593]]]] }, \"properties\": { \"name\": \"Canada\", \"id\": \"CA\" }, \"id\": \"CA\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[22.86, 10.9195], [23.2559, 10.4579], [23.6461, 9.8231], [23.5374, 8.8159], [24.1473, 8.6654], [24.2915, 8.2912], [24.8535, 8.1376], [25.2472, 7.7244], [25.3809, 7.3333], [25.8891, 7.0647], [26.3619, 6.6355], [26.5141, 6.0691], [27.0836, 5.777], [27.4032, 5.1094], [27.1151, 5.1977], [26.8222, 5.0623], [25.5251, 5.3123], [25.2495, 5.0246], [24.7656, 4.9301], [24.32, 4.994], [23.4171, 4.6633], [22.7557, 4.6469], [22.4223, 4.1351], [21.5376, 4.2447], [20.558, 4.4627], [20.2264, 4.8297], [19.8065, 5.0894], [19.5011, 5.1276], [19.0687, 4.8915], [18.5676, 4.2576], [18.6102, 3.4785], [18.161, 3.4998], [17.4379, 3.6845], [16.6735, 3.5354], [16.4684, 2.8318], [16.1834, 2.2703], [16.0636, 2.9086], [15.775, 3.127], [15.1287, 3.827], [15.0226, 4.3583], [14.7088, 4.6655], [14.6169, 5.8649], [14.7394, 6.2799], [15.2459, 7.2636], [15.4803, 7.5237], [15.8452, 7.4753], [16.3787, 7.6835], [16.7849, 7.5508], [17.6496, 7.9836], [18.4553, 8.032], [19.1087, 8.6561], [19.1455, 9.0161], [20.3422, 9.1271], [20.7733, 9.4058], [21.2638, 9.9745], [21.7258, 10.3664], [21.7063, 10.5746], [22.4938, 10.9963], [22.86, 10.9195]]] }, \"properties\": { \"name\": \"Central African Republic\", \"id\": \"CF\" }, \"id\": \"CF\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[5.6938, 50.7748], [5.7972, 50.7546], [5.9939, 50.7504], [6.3645, 50.3163], [6.1164, 50.1209], [5.744, 49.9196], [5.7897, 49.5383], [4.8677, 49.788], [4.1744, 50.2466], [2.8396, 50.7118], [2.5249, 51.0971], [3.35, 51.3776], [3.9023, 51.2076], [4.2263, 51.3865], [4.5033, 51.4746], [5.827, 51.1257], [5.6938, 50.7748]]] }, \"properties\": { \"name\": \"Belgium\", \"id\": \"BE\" }, \"id\": \"BE\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[25.2588, -17.7936], [25.2242, -17.9153], [25.7613, -18.6495], [26.1683, -19.5381], [26.6784, -19.8928], [27.2217, -20.1458], [27.2807, -20.4788], [27.6997, -20.5307], [27.6696, -21.0642], [28.0455, -21.5729], [29.0372, -21.8113], [29.3648, -22.194], [28.8397, -22.4807], [28.2102, -22.6938], [27.8906, -23.0737], [27.1462, -23.5243], [26.835, -24.2407], [26.3974, -24.6136], [25.9122, -24.7477], [25.5837, -25.6062], [24.7483, -25.8174], [23.8938, -25.6008], [23.2662, -25.2666], [22.8786, -25.4579], [22.6403, -26.0714], [22.0907, -26.5801], [21.6464, -26.8544], [20.74, -26.849], [20.6268, -26.4438], [20.7932, -25.9155], [20.3453, -25.03], [19.9805, -24.777], [19.9774, -22], [20.9708, -22], [20.9779, -20.9684], [20.9739, -18.3188], [23.2986, -18.0276], [23.5804, -18.4528], [24.359, -17.9783], [25.2588, -17.7936]]] }, \"properties\": { \"name\": \"Botswana\", \"id\": \"BW\" }, \"id\": \"BW\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[91.6317, 27.7599], [91.5949, 27.5575], [92.0836, 27.2907], [91.9984, 26.8548], [90.7395, 26.7718], [90.3458, 26.8903], [89.7638, 26.7016], [88.8579, 26.9613], [88.8912, 27.316], [89.537, 28.1075], [89.9809, 28.3112], [90.3529, 28.0804], [91.6056, 27.9516], [91.6317, 27.7599]]] }, \"properties\": { \"name\": \"Bhutan\", \"id\": \"BT\" }, \"id\": \"BT\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[115.0266, 4.8999], [114.7465, 4.7179], [114.8402, 4.3934], [114.6085, 4.0241], [114.0638, 4.5927], [114.2995, 4.6074], [115.0266, 4.8999], [115.1398, 4.8999], [115.0266, 4.8999]]] }, \"properties\": { \"name\": \"Brunei\", \"id\": \"BN\" }, \"id\": \"BN\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-59.4933, 13.0822], [-59.6114, 13.1021], [-59.5916, 13.3179], [-59.4276, 13.1527], [-59.4933, 13.0822]]] }, \"properties\": { \"name\": \"Barbados\", \"id\": \"BB\" }, \"id\": \"BB\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-51.8326, -1.4336], [-51.5461, -0.6497], [-51.1608, -0.6665], [-51.2764, -1.0216], [-51.8326, -1.4336]]], [[[-49.6287, -0.2293], [-49.1169, -0.1636], [-48.3798, -0.3527], [-48.5396, -0.801], [-48.9289, -1.4824], [-49.5878, -1.7123], [-50.5076, -1.7878], [-50.7597, -1.2405], [-50.7713, -0.6452], [-50.6454, -0.2728], [-50.2481, -0.1165], [-49.6287, -0.2293]]], [[[-56.4828, 1.9422], [-56.0198, 1.8424], [-56.1295, 2.2996], [-55.0058, 2.593], [-54.6163, 2.3266], [-54.13, 2.1211], [-53.7678, 2.3551], [-52.9648, 2.1837], [-52.7006, 2.3635], [-51.9906, 3.7018], [-51.6526, 4.0614], [-51.2198, 4.0938], [-51.0525, 3.2819], [-50.659, 2.1309], [-50.459, 1.8295], [-49.9572, 1.6599], [-49.8988, 1.1628], [-50.2945, 0.8356], [-50.8163, 0.1724], [-51.2829, -0.085], [-51.7026, -0.7624], [-51.9476, -1.5867], [-51.2973, -1.2236], [-50.9177, -1.1153], [-50.69, -1.7616], [-50.4033, -2.0155], [-49.9991, -1.8317], [-49.7195, -1.9263], [-49.3137, -1.7319], [-48.9913, -1.83], [-48.115, -0.7375], [-47.3981, -0.6266], [-46.8113, -0.7797], [-46.6173, -0.9706], [-46.2192, -1.0314], [-45.6448, -1.3479], [-45.0764, -1.4664], [-44.6513, -1.7456], [-44.3082, -2.5353], [-43.9329, -2.5832], [-42.9368, -2.4652], [-42.2496, -2.7919], [-41.8761, -2.7466], [-41.3181, -2.9361], [-40.4745, -2.7954], [-39.9647, -2.8616], [-38.4757, -3.7174], [-38.0489, -4.2163], [-37.1746, -4.9123], [-36.5907, -5.0975], [-35.9799, -5.0544], [-35.5493, -5.1294], [-35.2355, -5.5666], [-34.9882, -6.3936], [-34.8056, -7.2885], [-34.8347, -7.9717], [-35.1578, -8.9305], [-35.3409, -9.2305], [-36.3983, -10.4841], [-36.9378, -10.8206], [-37.4119, -11.497], [-37.6887, -12.0998], [-38.2397, -12.8443], [-38.788, -12.7826], [-38.8352, -13.147], [-39.0894, -13.5882], [-38.9422, -14.0308], [-39.0596, -14.6549], [-38.8805, -15.8645], [-39.2152, -17.3156], [-39.1539, -17.704], [-39.4869, -17.9903], [-39.7399, -18.6397], [-39.6999, -19.278], [-40.0013, -19.7419], [-40.396, -20.5693], [-40.7892, -20.9062], [-41.0471, -21.5059], [-41.1226, -22.0843], [-41.7054, -22.3098], [-41.9804, -22.5806], [-42.0424, -22.9472], [-42.9583, -22.9672], [-43.5327, -23.0462], [-43.8661, -22.9104], [-44.6373, -23.0555], [-45.4233, -23.6854], [-45.9721, -23.7955], [-46.8672, -24.2363], [-47.8766, -24.9976], [-48.5451, -25.8161], [-48.6776, -26.703], [-48.5542, -27.1962], [-48.6208, -28.0755], [-48.7997, -28.5753], [-49.2714, -28.871], [-49.7461, -29.3633], [-50.2994, -30.4259], [-51.1572, -30.3642], [-51.4637, -31.0527], [-51.9724, -31.3839], [-52.1935, -31.8854], [-52.1274, -32.1678], [-52.6523, -33.1377], [-53.3707, -33.7422], [-53.5314, -33.171], [-53.1254, -32.7368], [-53.6017, -32.403], [-53.7618, -32.0568], [-54.2205, -31.8553], [-54.5876, -31.4851], [-55.2546, -31.2258], [-55.5573, -30.876], [-55.8736, -31.0696], [-56.1761, -30.6283], [-56.8328, -30.1072], [-57.2144, -30.2834], [-57.609, -30.188], [-56.9387, -29.595], [-55.7255, -28.2043], [-55.1014, -27.8669], [-54.8291, -27.5508], [-54.3271, -27.4234], [-53.8381, -27.1212], [-53.6712, -26.2249], [-53.8912, -25.6687], [-54.1546, -25.5231], [-54.6158, -25.576], [-54.4731, -25.2204], [-54.2418, -24.0472], [-54.6254, -23.8124], [-55.3662, -23.9913], [-55.6541, -22.8105], [-55.8492, -22.3076], [-56.5239, -22.1025], [-56.9374, -22.2712], [-57.9856, -22.0461], [-57.8303, -20.9981], [-58.1598, -20.1645], [-58.1314, -19.7446], [-57.8005, -19.0809], [-57.5741, -18.2793], [-57.8325, -17.5122], [-58.396, -17.2343], [-58.538, -16.3284], [-60.1756, -16.2693], [-60.299, -14.6185], [-60.5065, -13.7897], [-61.0769, -13.4897], [-61.79, -13.5256], [-62.176, -13.1337], [-62.7654, -12.9974], [-63.0675, -12.6694], [-63.5858, -12.5189], [-64.4205, -12.4399], [-64.5135, -12.2508], [-64.9925, -11.9751], [-65.39, -11.2462], [-65.334, -10.8929], [-65.4368, -10.449], [-65.3132, -10.2533], [-65.3962, -9.7126], [-66.2635, -9.8262], [-66.7301, -9.9754], [-67.5824, -10.5058], [-68.0717, -10.7029], [-68.398, -11.0185], [-69.5785, -10.9519], [-70.2202, -11.0478], [-70.6423, -11.0101], [-70.637, -9.4782], [-71.238, -9.9661], [-72.1815, -10.0038], [-72.379, -9.5102], [-73.2093, -9.4116], [-72.9741, -8.993], [-73.5491, -8.3459], [-74.0021, -7.5562], [-73.7496, -7.3356], [-73.758, -6.9059], [-73.1374, -6.466], [-73.2355, -6.0984], [-72.9799, -5.635], [-72.8871, -5.1228], [-72.6987, -5.0673], [-71.8448, -4.5044], [-70.9737, -4.3504], [-70.7995, -4.1733], [-69.9658, -4.2359], [-69.6691, -2.6676], [-69.4003, -1.1948], [-69.6675, -0.4823], [-70.0706, -0.1387], [-70.0539, 0.5786], [-69.1633, 0.864], [-69.3615, 1.0642], [-69.8522, 1.0593], [-69.8486, 1.7087], [-68.1765, 1.7198], [-67.8152, 1.79], [-67.352, 2.0861], [-66.8761, 1.2231], [-66.4293, 0.8218], [-66.06, 0.7854], [-65.6814, 0.9834], [-65.3609, 0.8685], [-65.1037, 1.1082], [-64.1149, 1.6191], [-64.0354, 1.9045], [-63.394, 2.2223], [-63.3893, 2.4119], [-63.9242, 2.4523], [-64.2188, 3.2047], [-64.2212, 3.5873], [-64.5679, 3.8998], [-64.2556, 4.1404], [-64.0214, 3.9291], [-63.2948, 3.9224], [-62.9685, 3.594], [-62.7122, 4.0179], [-62.1531, 4.0982], [-61.0028, 4.5354], [-60.6046, 4.9944], [-60.7422, 5.2022], [-60.142, 5.239], [-59.9907, 5.0828], [-60.1112, 4.511], [-59.8333, 4.476], [-59.5512, 3.9335], [-59.8544, 3.5873], [-59.9942, 2.6902], [-59.7552, 2.2743], [-59.7563, 1.9005], [-59.2312, 1.3758], [-58.8625, 1.2036], [-58.5119, 1.2848], [-58.3407, 1.5876], [-57.5943, 1.7043], [-57.1189, 2.0141], [-56.8368, 1.8814], [-56.4828, 1.9422]]]] }, \"properties\": { \"name\": \"Brazil\", \"id\": \"BR\" }, \"id\": \"BR\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-58.1598, -20.1645], [-58.1803, -19.8178], [-59.0905, -19.286], [-60.0073, -19.2976], [-61.7569, -19.6451], [-61.917, -20.0553], [-62.2763, -20.5627], [-62.2767, -21.066], [-62.6509, -22.2339], [-62.8434, -21.9973], [-63.8186, -22.0053], [-63.9762, -22.0728], [-64.3739, -22.7612], [-64.6056, -22.229], [-65.0579, -22.103], [-65.771, -22.0994], [-66.0986, -21.8353], [-66.3652, -22.1136], [-66.7117, -22.2161], [-67.1948, -22.8216], [-67.8795, -22.8229], [-67.9883, -22.0572], [-68.1969, -21.3004], [-68.4999, -20.6119], [-68.7451, -20.4588], [-68.6983, -19.721], [-68.4628, -19.4329], [-68.9684, -18.9682], [-69.094, -18.0507], [-69.3133, -17.9432], [-69.5108, -17.506], [-69.6249, -17.2002], [-69.0208, -16.6422], [-68.9134, -16.2618], [-69.2176, -16.149], [-69.4185, -15.6035], [-69.1726, -15.2368], [-69.3748, -14.963], [-69.235, -14.5972], [-68.8803, -14.199], [-69.0741, -13.6828], [-68.9786, -12.8802], [-68.6852, -12.502], [-69.5785, -10.9519], [-68.398, -11.0185], [-68.0717, -10.7029], [-67.5824, -10.5058], [-66.7301, -9.9754], [-66.2635, -9.8262], [-65.3962, -9.7126], [-65.3132, -10.2533], [-65.4368, -10.449], [-65.334, -10.8929], [-65.39, -11.2462], [-64.9925, -11.9751], [-64.5135, -12.2508], [-64.4205, -12.4399], [-63.5858, -12.5189], [-63.0675, -12.6694], [-62.7654, -12.9974], [-62.176, -13.1337], [-61.79, -13.5256], [-61.0769, -13.4897], [-60.5065, -13.7897], [-60.299, -14.6185], [-60.1756, -16.2693], [-58.538, -16.3284], [-58.396, -17.2343], [-57.8325, -17.5122], [-57.5741, -18.2793], [-57.8005, -19.0809], [-58.1314, -19.7446], [-58.1598, -20.1645]]] }, \"properties\": { \"name\": \"Bolivia\", \"id\": \"BO\" }, \"id\": \"BO\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-64.7303, 32.2934], [-64.8202, 32.2596], [-64.6946, 32.387], [-64.7303, 32.2934]]] }, \"properties\": { \"name\": \"Bermuda\", \"id\": \"BM\" }, \"id\": \"BM\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-88.8941, 15.8907], [-89.2374, 15.8942], [-89.1615, 17.8149], [-88.8064, 17.9654], [-88.523, 18.4457], [-88.2957, 18.4723], [-88.0973, 18.1217], [-88.2717, 17.6098], [-88.3134, 16.6328], [-88.8941, 15.8907]]] }, \"properties\": { \"name\": \"Belize\", \"id\": \"BZ\" }, \"id\": \"BZ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[28.1481, 56.143], [28.7948, 55.9426], [29.375, 55.9386], [29.4824, 55.6845], [30.2335, 55.8452], [30.9069, 55.5699], [31.1213, 54.6484], [31.4036, 54.1959], [31.792, 54.0558], [32.7042, 53.3363], [32.1422, 53.0913], [31.4178, 53.196], [31.5771, 52.3122], [31.7636, 52.1012], [30.9806, 52.0461], [30.5331, 51.5964], [29.3466, 51.3825], [29.1357, 51.6173], [28.5991, 51.5427], [27.2701, 51.6135], [27.1422, 51.752], [25.9251, 51.9136], [24.3617, 51.8674], [23.6053, 51.5179], [23.6523, 52.0403], [23.1969, 52.257], [23.8445, 52.6642], [23.8872, 53.0276], [23.4845, 53.9398], [24.7683, 53.9746], [25.5473, 54.3317], [25.8594, 54.9192], [26.175, 55.0033], [26.5936, 55.6676], [27.5768, 55.7988], [28.1481, 56.143]]] }, \"properties\": { \"name\": \"Belarus\", \"id\": \"BY\" }, \"id\": \"BY\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-62.832, 17.8766], [-62.8655, 17.9184], [-62.7996, 17.9086], [-62.832, 17.8766]]] }, \"properties\": { \"name\": \"Saint Barthelemy\", \"id\": \"BL\" }, \"id\": \"BL\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-77.7439, 24.7072], [-78.0449, 24.2873], [-78.2988, 24.7538], [-78.0333, 25.1431], [-77.7439, 24.7072]]], [[[-77.2257, 25.904], [-77.4032, 26.0247], [-77.2468, 26.1565], [-77.2062, 26.489], [-77.0384, 26.3332], [-77.1673, 26.2404], [-77.2257, 25.904]]]] }, \"properties\": { \"name\": \"Bahamas\", \"id\": \"BS\" }, \"id\": \"BS\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[50.6072, 25.8831], [50.4661, 25.9657], [50.4523, 26.1907], [50.6099, 26.1246], [50.6072, 25.8831]]] }, \"properties\": { \"name\": \"Bahrain\", \"id\": \"BH\" }, \"id\": \"BH\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[19.007, 44.8693], [19.3568, 44.8586], [19.1517, 44.3024], [19.4882, 43.7036], [19.1943, 43.5331], [18.9404, 43.4967], [18.4437, 42.9685], [18.4362, 42.5597], [17.6678, 42.897], [17.5852, 42.9383], [17.6247, 43.0426], [16.214, 44.215], [15.7369, 44.7658], [15.7879, 45.1791], [16.2935, 45.0086], [16.5305, 45.2168], [17.8129, 45.0779], [18.6625, 45.0774], [19.007, 44.8693]]] }, \"properties\": { \"name\": \"Bosnia and Herzegovina\", \"id\": \"BA\" }, \"id\": \"BA\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[28.5853, 43.7422], [28.4655, 43.3893], [27.9288, 43.186], [27.8888, 42.7497], [27.4849, 42.4683], [28.0145, 41.9689], [27.2949, 42.0794], [26.6153, 41.9649], [26.321, 41.7167], [26.1355, 41.3856], [25.2512, 41.2436], [24.0558, 41.5272], [23.635, 41.3869], [22.9159, 41.3363], [23.0056, 41.7172], [22.8369, 41.9937], [22.3442, 42.3138], [22.4667, 42.8425], [22.9767, 43.1878], [22.5546, 43.4546], [22.421, 44.0077], [22.7051, 44.2376], [23.2244, 43.8741], [25.4972, 43.6708], [26.2158, 44.0072], [27.0867, 44.1675], [28.5853, 43.7422]]] }, \"properties\": { \"name\": \"Bulgaria\", \"id\": \"BG\" }, \"id\": \"BG\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[92.575, 21.9782], [92.5937, 21.4673], [92.1795, 21.2933], [92.3242, 20.7917], [92.0561, 21.1747], [92.0082, 21.6848], [91.693, 22.5046], [91.4094, 22.7972], [90.9455, 22.597], [90.6334, 23.0941], [90.435, 22.7519], [90.5895, 22.2583], [90.1589, 21.8171], [89.8118, 21.9835], [89.2343, 21.7225], [89.0514, 22.0932], [88.7407, 23.4368], [88.5671, 23.6743], [88.7336, 24.2309], [88.1454, 24.4857], [88.4561, 25.1884], [88.4521, 25.5746], [88.0846, 25.8884], [88.4402, 26.3696], [89.1082, 26.2023], [89.2893, 26.0376], [89.8229, 25.9413], [89.814, 25.3052], [90.4394, 25.1578], [92.0499, 25.1693], [92.2514, 24.895], [91.8768, 24.1954], [91.3672, 24.0933], [91.1603, 23.6605], [91.3152, 23.1043], [91.6198, 22.9796], [91.938, 23.5047], [92.2461, 23.6836], [92.3615, 22.929], [92.4916, 22.6853], [92.575, 21.9782]]] }, \"properties\": { \"name\": \"Bangladesh\", \"id\": \"BD\" }, \"id\": \"BD\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[0.2175, 14.9114], [0.1638, 14.4973], [0.6183, 13.7036], [0.9779, 13.5518], [0.9872, 13.0418], [1.5652, 12.6356], [2.0739, 12.7142], [2.0912, 12.2778], [2.389, 11.897], [1.9802, 11.4184], [1.4267, 11.4473], [0.9007, 10.9932], [-0.0686, 11.1157], [-0.7014, 10.9888], [-2.8298, 10.9985], [-2.9148, 10.5924], [-2.7865, 10.4019], [-2.6958, 9.4813], [-3.2235, 9.8954], [-3.8776, 9.895], [-4.6258, 9.7134], [-4.9698, 9.9301], [-5.0999, 10.2417], [-5.5236, 10.4259], [-5.4905, 11.0425], [-5.2999, 11.2058], [-5.2881, 11.8277], [-4.798, 12.0319], [-4.4287, 12.3377], [-4.4807, 12.6724], [-4.2272, 12.7936], [-4.3286, 13.119], [-4.0512, 13.3822], [-3.5758, 13.194], [-3.3017, 13.2806], [-3.1985, 13.673], [-2.4572, 14.274], [-2.1132, 14.1684], [-1.7678, 14.4862], [-1.0496, 14.8195], [-0.7604, 15.0477], [-0.2359, 15.0592], [0.2175, 14.9114]]] }, \"properties\": { \"name\": \"Burkina Faso\", \"id\": \"BF\" }, \"id\": \"BF\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[3.5955, 11.6963], [3.4877, 11.3954], [3.7163, 11.0797], [3.8343, 10.6074], [3.5764, 10.2683], [3.5573, 9.9074], [3.3252, 9.7783], [3.0451, 9.084], [2.7748, 9.0485], [2.686, 7.874], [2.7748, 6.7119], [2.7064, 6.3692], [1.6224, 6.2169], [1.6002, 9.0498], [1.4244, 9.2851], [1.3299, 9.9971], [0.7799, 10.3598], [0.9007, 10.9932], [1.4267, 11.4473], [1.9802, 11.4184], [2.389, 11.897], [2.3659, 12.2219], [2.8782, 12.3679], [3.5955, 11.6963]]] }, \"properties\": { \"name\": \"Benin\", \"id\": \"BJ\" }, \"id\": \"BJ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[30.5535, -2.3999], [30.5149, -2.9175], [30.7901, -3.2744], [30.4252, -3.5891], [30.1469, -4.0854], [29.7177, -4.456], [29.4034, -4.4494], [29.2232, -3.9109], [29.2245, -3.0533], [29.0146, -2.7204], [29.3901, -2.8087], [29.8682, -2.7164], [29.9303, -2.3396], [30.5535, -2.3999]]] }, \"properties\": { \"name\": \"Burundi\", \"id\": \"BI\" }, \"id\": \"BI\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[48.5729, 41.8446], [49.1064, 41.3017], [49.2263, 41.026], [49.7758, 40.5839], [49.3244, 39.6083], [49.363, 39.3495], [49.0137, 39.1342], [48.8685, 38.4355], [48.5929, 38.4111], [48.0233, 38.819], [48.2422, 38.9788], [47.9958, 39.6842], [47.773, 39.6486], [46.4906, 38.9065], [46.5501, 39.2012], [45.7897, 39.8812], [45.9646, 40.2337], [45.376, 40.6381], [45.5877, 40.8467], [45.0013, 41.291], [45.281, 41.4495], [46.4577, 41.07], [46.6189, 41.3439], [46.1821, 41.6573], [46.4298, 41.8907], [46.7494, 41.8126], [47.2612, 41.315], [47.8609, 41.2129], [48.5729, 41.8446]]], [[[46.1146, 38.8776], [45.4798, 39.0063], [44.8171, 39.6504], [44.7683, 39.7037], [45.0315, 39.7649], [45.7662, 39.3783], [46.1146, 38.8776]]]] }, \"properties\": { \"name\": \"Azerbaijan\", \"id\": \"AZ\" }, \"id\": \"AZ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[16.9531, 48.5988], [17.1475, 48.0058], [16.4342, 47.3675], [16.4533, 47.0066], [16.0929, 46.8632], [15.9575, 46.6777], [15.0009, 46.6262], [14.5037, 46.4171], [13.6998, 46.5201], [12.3881, 46.7025], [12.1542, 46.9351], [11.2442, 46.9755], [11.0249, 46.7971], [10.4528, 46.865], [9.5801, 47.0572], [9.5277, 47.2707], [9.5241, 47.5242], [10.3129, 47.3133], [10.4306, 47.541], [11.2979, 47.4247], [11.717, 47.5837], [12.686, 47.6693], [12.8143, 48.1607], [13.4095, 48.3942], [13.8148, 48.7669], [14.0492, 48.6024], [14.6915, 48.5993], [14.972, 48.9839], [16.0573, 48.7549], [16.4777, 48.8001], [16.9531, 48.5988]]] }, \"properties\": { \"name\": \"Austria\", \"id\": \"AT\" }, \"id\": \"AT\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[145.0431, -40.7868], [145.2832, -40.7699], [146.3175, -41.1637], [146.99, -40.9923], [147.4547, -41.0017], [147.9687, -40.7797], [148.2928, -40.9471], [148.3017, -42.0399], [147.9244, -42.5726], [147.9807, -43.1572], [147.4081, -42.894], [146.8741, -43.6126], [146.0431, -43.5474], [145.2681, -42.5442], [145.2384, -42.0195], [144.778, -41.4189], [144.6462, -40.9808], [145.0431, -40.7868]]], [[[137.5963, -35.7384], [137.4485, -36.0749], [136.7551, -36.0332], [136.6388, -35.7491], [137.334, -35.5924], [137.5963, -35.7384]]], [[[136.7147, -13.8039], [136.8945, -14.2931], [136.3632, -14.2288], [136.4249, -13.8648], [136.7147, -13.8039]]], [[[130.6188, -11.3763], [131.2682, -11.1899], [131.5385, -11.4367], [130.9508, -11.9263], [130.645, -11.7425], [130.6188, -11.3763]]], [[[143.1787, -11.9547], [143.1103, -12.3036], [143.4015, -12.6401], [143.5866, -13.4435], [143.5485, -13.7409], [143.7562, -14.349], [143.9617, -14.4627], [144.4731, -14.2319], [144.648, -14.4924], [145.2876, -14.943], [145.2717, -15.4765], [145.4581, -16.0563], [145.4261, -16.406], [145.902, -17.0701], [146.1257, -17.6352], [146.0325, -18.2731], [146.3334, -18.5536], [146.4813, -19.0787], [147.1387, -19.393], [147.4183, -19.3783], [147.9155, -19.8693], [148.7593, -20.2897], [148.6839, -20.5804], [149.205, -21.1251], [149.7039, -22.4408], [150.0763, -22.1647], [150.5415, -22.5593], [150.7639, -22.5761], [150.8429, -23.4582], [151.1537, -23.784], [151.9025, -24.2008], [152.1298, -24.5976], [152.4565, -24.8023], [152.9137, -25.4321], [153.1649, -25.9644], [153.0842, -26.3039], [153.117, -27.1944], [153.5755, -28.2407], [153.6044, -28.8546], [153.3483, -29.2905], [153.2724, -29.8924], [153.0304, -30.5635], [152.9439, -31.4349], [152.5595, -32.0457], [152.4703, -32.439], [151.8128, -32.9011], [151.4839, -33.3476], [151.2313, -34.0294], [150.9601, -34.2971], [150.6902, -35.1778], [150.1953, -35.8334], [149.9605, -36.8455], [149.9325, -37.5286], [149.2986, -37.8021], [148.2626, -37.8309], [147.3957, -38.2189], [146.8568, -38.6632], [145.9353, -38.9016], [145.791, -38.6668], [144.6653, -38.21], [143.5391, -38.8208], [142.6123, -38.4515], [141.725, -38.2713], [141.4244, -38.3636], [141.0112, -38.0769], [140.6272, -38.0285], [139.7843, -37.2459], [139.8575, -36.6622], [139.5486, -36.0967], [139.0376, -35.6892], [138.1845, -35.6128], [138.5112, -35.0242], [138.4899, -34.7636], [138.0895, -34.1697], [137.6918, -35.1432], [136.8834, -35.2399], [137.0144, -34.9159], [137.3908, -34.9132], [137.4938, -34.1613], [137.9319, -33.5789], [137.8524, -33.2007], [137.4423, -33.1936], [137.2372, -33.6295], [136.4307, -34.0299], [135.6476, -34.9394], [135.1855, -33.9069], [134.7909, -33.3285], [134.3013, -33.1652], [134.1002, -32.7488], [134.2343, -32.5486], [133.5511, -32.1829], [133.212, -32.1837], [132.7575, -31.956], [132.2146, -32.0071], [131.7214, -31.6964], [131.1435, -31.4957], [130.783, -31.604], [130.1296, -31.5792], [128.9462, -31.7026], [128.0677, -32.0666], [127.3198, -32.2641], [125.9171, -32.2969], [124.759, -32.8829], [124.126, -33.1292], [123.6506, -33.8364], [123.2076, -33.9882], [122.7774, -33.891], [122.1511, -33.9917], [121.4054, -33.8266], [119.854, -33.9748], [119.4505, -34.3681], [118.8951, -34.48], [118.1356, -34.9865], [117.5817, -35.0979], [116.5172, -34.9878], [115.9868, -34.7952], [115.7262, -34.5262], [115.0089, -34.2558], [115.1815, -33.6433], [115.5154, -33.5314], [115.6831, -33.1927], [115.6982, -31.6946], [115.1767, -30.8081], [114.9947, -30.2164], [114.9592, -29.4334], [114.5375, -28.5429], [114.165, -28.0808], [114.0283, -27.3471], [113.5818, -26.5583], [113.853, -26.3319], [113.5889, -26.0984], [113.5396, -25.6252], [114.2156, -26.2893], [114.2143, -25.8516], [113.671, -24.9772], [113.4175, -24.4356], [113.5529, -23.7329], [113.7571, -23.4182], [113.683, -22.6378], [113.9586, -21.9392], [114.1637, -22.3231], [114.3777, -22.3413], [114.8588, -21.7359], [115.4563, -21.4917], [116.0107, -21.0305], [116.7068, -20.6536], [117.4063, -20.7211], [118.1991, -20.3753], [118.7513, -20.2617], [119.1047, -19.9954], [119.5858, -20.0384], [120.8785, -19.6651], [121.4937, -19.1067], [121.8337, -18.4772], [122.2372, -17.9685], [122.1604, -17.3138], [122.7202, -16.7878], [122.9705, -16.4367], [123.5254, -17.4856], [123.778, -16.8677], [123.4903, -16.4908], [124.577, -16.1135], [124.3817, -15.758], [124.8389, -15.1609], [125.2432, -14.9448], [125.1789, -14.7148], [125.6814, -14.3881], [126.0209, -14.4946], [126.1115, -14.1142], [126.5696, -14.1608], [126.9034, -13.744], [127.6727, -14.195], [128.1996, -14.7517], [129.4589, -14.9332], [129.7536, -14.7894], [129.3785, -14.3926], [129.7097, -13.9802], [129.8389, -13.5731], [130.2597, -13.3024], [130.1682, -12.9574], [130.3999, -12.688], [130.898, -12.5238], [131.0458, -12.1895], [131.4382, -12.277], [132.3722, -12.2392], [132.5839, -12.1101], [132.6829, -11.5055], [133.0247, -11.4527], [133.1854, -11.7057], [133.904, -11.8322], [134.2369, -12.008], [134.7301, -11.9844], [135.2179, -12.2215], [135.7883, -11.9072], [136.0818, -12.4226], [136.5403, -11.9578], [136.9473, -12.3498], [136.5372, -12.7843], [136.5945, -13.0036], [135.9273, -13.3041], [135.9894, -13.8102], [135.8833, -14.1533], [135.4053, -14.7583], [135.5309, -15.0002], [136.2052, -15.4033], [136.7844, -15.8942], [137.0019, -15.8783], [137.7037, -16.2329], [138.2448, -16.7181], [139.0097, -16.8992], [139.2485, -17.3285], [140.0359, -17.7027], [140.5114, -17.6245], [140.8305, -17.4146], [141.2189, -16.6462], [141.412, -16.0696], [141.6255, -15.0566], [141.523, -14.4702], [141.5945, -14.1528], [141.4724, -13.7977], [141.6455, -13.2593], [141.6779, -12.4914], [141.9513, -11.8961], [142.1684, -10.9466], [142.4565, -10.7074], [142.8369, -11.3071], [142.8724, -11.8215], [143.1787, -11.9547]]]] }, \"properties\": { \"name\": \"Australia\", \"id\": \"AU\" }, \"id\": \"AU\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[69.185, -49.1093], [69.9157, -49.3486], [69.6129, -49.6509], [68.8721, -49.4445], [69.185, -49.1093]]] }, \"properties\": { \"name\": \"French Southern and Antarctic Lands\", \"id\": \"TF\" }, \"id\": \"TF\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-59.7339, -80.3442], [-60.5828, -80.9484], [-64.2683, -80.7486], [-65.9801, -80.3846], [-62.5189, -80.3736], [-61.3432, -79.8866], [-59.7064, -79.8755], [-59.7339, -80.3442]]], [[[-159.053, -79.8076], [-161.8655, -79.7037], [-164.2259, -79.3206], [-163.2562, -78.7223], [-161.6431, -78.9012], [-159.6842, -79.4023], [-159.053, -79.8076]]], [[[-70.334, -79.6797], [-71.7836, -79.4445], [-70.544, -78.8838], [-67.4785, -78.3627], [-66.7281, -78.3836], [-69.2509, -79.2101], [-70.334, -79.6797]]], [[[-45.2226, -78.8106], [-43.722, -78.8186], [-42.9654, -79.4769], [-43.5278, -80.1916], [-49.1875, -80.643], [-49.773, -80.7842], [-54.1626, -80.8703], [-53.4823, -80.1889], [-52.2971, -80.1414], [-50.3391, -79.4796], [-50.7331, -79.2829], [-50.2197, -78.6051], [-49.0811, -78.0476], [-46.8257, -77.7852], [-45.5302, -77.8815], [-43.8086, -78.2864], [-43.9473, -78.5975], [-45.2226, -78.8106]]], [[[-120.5562, -73.756], [-120.2726, -73.9891], [-121.0625, -74.3375], [-122.8591, -74.3428], [-122.6247, -73.9655], [-123.1121, -73.6823], [-120.5562, -73.756]]], [[[-126.3299, -73.2864], [-124.9933, -73.8297], [-124.8731, -74.2083], [-127.4143, -73.5163], [-126.3299, -73.2864]]], [[[-74.3544, -73.0986], [-74.5748, -73.6113], [-75.9009, -73.3325], [-75.3769, -72.8203], [-74.3544, -73.0986]]], [[[-91.1608, -73.1821], [-91.6699, -72.6236], [-90.8072, -72.6108], [-91.1608, -73.1821]]], [[[-98.0911, -71.9125], [-96.8695, -71.8508], [-95.6095, -72.0683], [-96.0518, -72.5775], [-98.4078, -72.5477], [-100.1951, -72.2725], [-102.2647, -72.1354], [-102.128, -71.9853], [-98.6155, -71.7638], [-98.0911, -71.9125]]], [[[-73.7067, -70.635], [-74.205, -70.924], [-76.1763, -71.1326], [-76.5004, -70.9413], [-75.0076, -70.6088], [-73.7067, -70.635]]], [[[-74.9871, -69.7277], [-74.8489, -70.1791], [-75.7267, -70.0961], [-74.9871, -69.7277]]], [[[-70.0511, -69.1892], [-69.417, -69.5834], [-68.3361, -70.8561], [-68.2411, -71.822], [-69.2092, -72.5344], [-72.3675, -72.6698], [-73.0864, -72.4079], [-71.1066, -72.047], [-72.4121, -71.6622], [-73.8994, -72.1522], [-75.3531, -71.8783], [-75.2925, -71.6151], [-74.1872, -71.383], [-72.6216, -71.3883], [-71.1941, -70.9848], [-71.0611, -70.5369], [-70.328, -70.3611], [-71.8537, -69.9692], [-71.869, -68.9411], [-70.417, -68.7889], [-70.0511, -69.1892]]], [[[-67.9885, -67.4745], [-68.5804, -67.7328], [-69.0825, -67.403], [-68.3359, -66.802], [-67.6878, -67.1473], [-67.9885, -67.4745]]], [[[-57.0206, -63.3729], [-58.2631, -63.7636], [-58.8954, -64.389], [-59.9632, -64.4312], [-61.0598, -64.9812], [-61.7361, -65.0335], [-62.1453, -65.3318], [-62.3051, -65.8405], [-61.8754, -66.296], [-63.7525, -66.2778], [-64.0778, -66.6542], [-64.6862, -66.8064], [-64.8193, -67.3076], [-65.4432, -67.3262], [-65.6394, -68.1306], [-64.8984, -68.6734], [-63.3436, -68.8106], [-63.4559, -69.0419], [-62.4505, -69.5843], [-61.9611, -70.1201], [-61.9611, -70.9005], [-61.0172, -71.1668], [-61.2136, -71.5641], [-60.7193, -72.0728], [-60.3846, -73.0072], [-61.4054, -73.467], [-60.8789, -73.6122], [-61.0107, -74.4782], [-62.2257, -74.5057], [-63.9247, -75.0047], [-63.3634, -75.4517], [-66.3705, -76.0132], [-69.3044, -76.3506], [-70.0954, -76.6546], [-71.7987, -76.7527], [-75.2683, -76.5814], [-77.19, -76.6298], [-76.2487, -77.2747], [-75.3869, -77.474], [-72.852, -77.5903], [-73.2515, -77.8944], [-74.812, -78.1776], [-80.6015, -77.7519], [-81.4411, -77.8855], [-77.4325, -78.4346], [-77.8691, -78.7454], [-80.2923, -78.8226], [-83.246, -78.3569], [-83.26, -78.7742], [-80.1512, -79.2683], [-76.499, -79.3255], [-76.5578, -79.9035], [-75.2366, -80.8028], [-73.0296, -80.9173], [-70.239, -80.8565], [-64.7501, -81.5219], [-64.1371, -81.8695], [-65.9133, -82.1833], [-62.7357, -82.5273], [-61.5898, -83.3414], [-59.5159, -83.4586], [-57.3535, -82.8403], [-53.9862, -82.2006], [-48.3607, -81.8921], [-43.6692, -82.2699], [-41.4338, -81.2977], [-38.7718, -80.8823], [-37.2093, -81.0638], [-35.3269, -80.6505], [-29.3291, -80.172], [-24.2403, -80.0619], [-25.2586, -79.7623], [-29.9494, -79.599], [-30.3161, -79.1631], [-32.9943, -79.2288], [-36.2391, -78.7742], [-36.181, -78.4684], [-34.0758, -77.4252], [-32.0634, -77.1598], [-28.9336, -76.3701], [-26.0594, -75.9573], [-24.2696, -75.7668], [-19.4931, -75.54], [-17.2989, -74.334], [-15.6725, -74.4072], [-15.7488, -73.9456], [-16.5188, -73.6441], [-15.5959, -73.0968], [-14.3211, -73.123], [-14.2978, -72.7328], [-13.2087, -72.7852], [-11.497, -72.4128], [-10.8254, -71.5534], [-9.8879, -71.0274], [-9.2307, -71.1739], [-8.6466, -71.6728], [-7.7137, -71.5463], [-7.8735, -70.9404], [-5.9364, -70.7127], [-5.5879, -70.8569], [-5.9499, -71.3417], [-2.8121, -71.3208], [-0.8958, -71.3492], [-0.5431, -71.7128], [0.835, -71.2023], [2.6096, -70.9], [5.1132, -70.6559], [8.5232, -70.4739], [9.1415, -70.1836], [10.2175, -70.5081], [11.7014, -70.7664], [12.9292, -70.2133], [13.8228, -70.3434], [15.807, -70.3238], [18.1246, -70.5405], [19.1966, -70.2932], [19.2649, -70.9022], [21.0707, -70.8436], [21.705, -70.2586], [22.979, -70.8103], [23.8037, -70.4046], [24.7567, -70.892], [25.9743, -71.0372], [27.207, -70.9111], [30.0035, -70.2999], [31.3787, -70.2257], [32.6212, -70.0007], [32.9892, -69.6243], [32.5675, -69.0743], [33.1214, -68.689], [34.193, -68.7023], [35.2246, -69.6371], [37.5599, -69.7184], [38.8592, -70.006], [39.7053, -69.4258], [39.8637, -68.9669], [41.1328, -68.5749], [42.409, -68.3521], [42.8196, -68.123], [44.6999, -67.9042], [44.9893, -67.7692], [47.1174, -67.5726], [48.6479, -67.7941], [48.7136, -67.217], [49.2472, -66.9414], [50.6059, -67.15], [50.3325, -66.4447], [51.8843, -66.0199], [53.6719, -65.8587], [54.9481, -65.9164], [55.7102, -66.0798], [57.1853, -66.6133], [56.4533, -66.7798], [56.8919, -67.0563], [57.6274, -67.0142], [58.7376, -67.2295], [59.2507, -67.4851], [60.4821, -67.3853], [62.6878, -67.6476], [63.6989, -67.5082], [68.3279, -67.8895], [69.4163, -67.743], [69.9822, -68.4644], [69.5344, -68.7369], [69.6293, -69.2314], [68.9062, -69.3726], [69.0825, -69.8666], [68.1783, -69.8373], [67.2678, -70.2732], [67.9408, -70.4228], [69.2503, -70.4313], [68.8725, -71.0354], [68.0375, -71.391], [67.4321, -72.0031], [66.8919, -72.9486], [67.9714, -73.0857], [68.4197, -72.5149], [69.5548, -72.3746], [71.2766, -71.624], [71.9047, -70.7069], [72.7601, -70.3957], [72.8223, -70.0961], [73.9422, -69.7432], [75.4239, -69.8933], [75.8913, -69.5754], [77.8174, -69.069], [78.7265, -68.2779], [79.288, -68.1195], [82.017, -67.6902], [83.3043, -67.6032], [84.4851, -67.1145], [85.7107, -67.1611], [87.9803, -66.7882], [89.6986, -66.8229], [92.0734, -66.5077], [93.9644, -66.6897], [94.8397, -66.5015], [95.5411, -66.6311], [98.2577, -66.4673], [99.3701, -66.6484], [100.8891, -66.3581], [101.4746, -65.9511], [102.674, -65.8654], [103.9511, -65.9879], [108.1578, -66.6391], [109.4629, -66.9085], [110.6223, -66.5241], [110.9069, -66.0767], [113.0992, -65.8001], [113.7096, -65.9297], [114.3368, -66.3603], [115.3103, -66.561], [115.2739, -67.0279], [113.991, -67.2117], [114.0265, -67.4412], [116.7134, -67.047], [118.1388, -67.0825], [119.1331, -67.3706], [121.4875, -67.0905], [122.1826, -66.8593], [123.9693, -66.608], [124.5978, -66.7083], [125.8656, -66.3643], [126.6646, -66.4975], [127.5413, -67.051], [129.2369, -67.0417], [129.7412, -66.4686], [130.9517, -66.1912], [131.831, -66.2356], [133.4446, -66.0816], [134.9716, -66.3301], [135.352, -66.1273], [136.1941, -66.2924], [137.7539, -66.4065], [139.9001, -66.715], [141.9726, -66.8069], [142.8884, -67], [143.4481, -66.877], [144.6214, -67.1416], [143.9422, -67.7941], [145.9752, -67.6241], [146.8279, -67.9645], [147.0938, -68.3685], [148.4561, -68.467], [151.068, -68.3849], [151.562, -68.6939], [153.0819, -68.8568], [154.1997, -68.4178], [155.5202, -69.0246], [157.4813, -69.3087], [158.1578, -69.2088], [159.7838, -69.5217], [160.2095, -69.9749], [161.0369, -70.3172], [161.4244, -70.8268], [162.6749, -70.3047], [163.3487, -70.6208], [164.4034, -70.5103], [166.6269, -70.6643], [167.5692, -70.8103], [168.1725, -71.1832], [170.1625, -71.6307], [169.8287, -72.7288], [169.545, -73.0502], [167.6158, -73.337], [164.7758, -74.0286], [165.3027, -74.5936], [163.1672, -74.6021], [162.5337, -75.1671], [161.6797, -75.2177], [162.8156, -75.8463], [162.7628, -76.7456], [164.4296, -78.0422], [166.2087, -78.4515], [164.6347, -78.6033], [160.4829, -79.2017], [160.542, -80.425], [160.9078, -81.3901], [162.8214, -81.8664], [167.2328, -82.9521], [168.1099, -83.3618], [171.9172, -83.6441], [179.403, -84.2061], [180, -84.3517], [180, -89.9989], [-180, -89.9989], [-180, -89.583], [-180, -89.2931], [-180, -88.5869], [-180, -87.8811], [-180, -87.1753], [-180, -86.4695], [-180, -85.7633], [-180, -85.0575], [-180, -84.3517], [-171.7037, -84.5426], [-162.9335, -84.9012], [-157.1276, -85.1858], [-156.9864, -84.8111], [-163.5685, -84.5288], [-164.951, -83.8057], [-167.5528, -83.8111], [-169.1677, -83.4497], [-174.0661, -82.9002], [-171.8213, -82.8474], [-168.4178, -83.2287], [-163.111, -83.329], [-159.4445, -83.5434], [-157.6796, -83.1292], [-155.4594, -82.9805], [-153.0098, -82.4496], [-154.7175, -81.9409], [-153.9566, -81.7003], [-157.0326, -81.319], [-156.5283, -81.1623], [-148.1228, -80.9009], [-150.5755, -80.3536], [-148.3172, -80.0708], [-148.1765, -79.7761], [-152.0914, -79.2416], [-155.21, -78.9646], [-156.4693, -78.6353], [-154.7164, -78.3982], [-155.3416, -78.1918], [-157.2667, -78.1998], [-158.5003, -77.7786], [-158.2136, -77.1571], [-154.8149, -77.1269], [-153.4606, -77.4159], [-151.719, -77.4261], [-149.7177, -77.7976], [-145.967, -77.0688], [-145.7504, -76.7492], [-147.3404, -76.4384], [-146.383, -76.0998], [-143.5742, -75.5635], [-142.3298, -75.4907], [-141.5057, -75.6905], [-139.6911, -75.2129], [-137.6181, -75.0757], [-136.5494, -75.1396], [-135.362, -74.6904], [-133.4748, -74.852], [-132.0495, -74.7659], [-129.7907, -74.8915], [-127.8633, -74.7193], [-123.8894, -74.773], [-119.6771, -74.6544], [-118.3421, -74.3815], [-115.1052, -74.4551], [-114.7909, -73.9886], [-113.5085, -74.0889], [-113.9318, -74.982], [-111.6963, -74.7921], [-111.8064, -74.2696], [-110.307, -74.3668], [-110.3005, -74.7108], [-111.4631, -75.1334], [-109.2722, -75.1849], [-106.6189, -75.3438], [-104.9019, -75.1152], [-101.7081, -75.1272], [-101.0394, -75.4219], [-98.5578, -75.1898], [-101.2518, -74.4858], [-101.7154, -74.0237], [-102.7663, -73.8838], [-102.4108, -73.6166], [-100.9854, -73.7573], [-99.7812, -73.7201], [-100.0209, -73.4027], [-102.6751, -73.321], [-102.4092, -72.9876], [-98.0125, -73.0334], [-96.1521, -73.3095], [-94.2463, -73.313], [-92.241, -73.1785], [-90.9209, -73.3192], [-90.2954, -72.9779], [-88.1945, -72.8585], [-88.4193, -73.2291], [-87.0379, -73.3538], [-85.9808, -73.2087], [-84.9811, -73.5021], [-82.1835, -73.8568], [-81.3088, -73.7383], [-81.2624, -73.3148], [-80.4421, -72.9446], [-79.5217, -73.0897], [-78.4078, -73.5558], [-76.8506, -73.4604], [-77.1349, -73.8177], [-75.293, -73.6388], [-73.9961, -73.6996], [-72.9293, -73.4479], [-68.821, -73.1053], [-67.6671, -72.8345], [-66.8277, -72.0905], [-67.4603, -71.5268], [-67.8884, -70.4215], [-68.4033, -70.0198], [-68.7078, -69.4321], [-67.3717, -69.4125], [-66.9749, -69.1608], [-67.3906, -68.8612], [-66.7933, -68.2402], [-67.1498, -68.0245], [-66.705, -67.5273], [-67.5859, -67.435], [-67.4934, -67.1127], [-66.371, -66.6089], [-65.7664, -66.6249], [-65.6172, -66.1353], [-64.0658, -65.5538], [-64.0381, -65.1791], [-62.5761, -64.7557], [-61.6317, -64.6047], [-60.8643, -64.0734], [-59.5102, -63.8208], [-58.8721, -63.5518], [-57.3897, -63.2264], [-57.0206, -63.3729]]]] }, \"properties\": { \"name\": \"Antarctica\", \"id\": \"AQ\" }, \"id\": \"AQ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-170.7262, -14.3513], [-170.8205, -14.3122], [-170.6891, -14.2576], [-170.7262, -14.3513]]] }, \"properties\": { \"name\": \"American Samoa\", \"id\": \"AS\" }, \"id\": \"AS\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[46.4906, 38.9065], [46.1146, 38.8776], [45.7662, 39.3783], [45.0315, 39.7649], [44.7683, 39.7037], [44.2893, 40.0406], [43.7917, 40.0703], [43.5693, 40.4823], [43.7225, 40.7193], [43.4393, 41.1073], [45.0013, 41.291], [45.5877, 40.8467], [45.376, 40.6381], [45.9646, 40.2337], [45.7897, 39.8812], [46.5501, 39.2012], [46.4906, 38.9065]]] }, \"properties\": { \"name\": \"Armenia\", \"id\": \"AM\" }, \"id\": \"AM\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-62.6509, -22.2339], [-62.3726, -22.439], [-61.7984, -23.1821], [-61.0329, -23.7556], [-59.8924, -24.0934], [-59.373, -24.4538], [-58.3654, -24.9594], [-57.8216, -25.1365], [-57.5872, -25.4051], [-57.8906, -26.0065], [-58.2031, -26.3816], [-58.1914, -26.6302], [-58.6186, -27.1323], [-57.1118, -27.4701], [-56.3705, -27.5375], [-56.0673, -27.3076], [-55.7147, -27.415], [-55.4266, -27.0093], [-55.1358, -26.9312], [-54.7552, -26.533], [-54.6158, -25.576], [-54.1546, -25.5231], [-53.8912, -25.6687], [-53.6712, -26.2249], [-53.8381, -27.1212], [-54.3271, -27.4234], [-54.8291, -27.5508], [-55.1014, -27.8669], [-55.7255, -28.2043], [-56.9387, -29.595], [-57.609, -30.188], [-57.8724, -30.5911], [-57.8105, -30.8587], [-58.1889, -31.9241], [-58.2011, -32.4718], [-58.1709, -32.9592], [-58.4244, -33.1115], [-58.5471, -33.6637], [-58.2835, -34.6837], [-57.3036, -35.1884], [-57.1589, -35.5058], [-57.354, -35.7202], [-57.265, -36.1441], [-56.6981, -36.4265], [-56.6721, -36.8513], [-57.3957, -37.7448], [-57.5471, -38.0857], [-58.1792, -38.436], [-59.8282, -38.8381], [-61.1122, -38.993], [-62.067, -38.9189], [-62.3382, -39.1506], [-62.0537, -39.3739], [-62.2869, -39.8955], [-62.395, -40.8907], [-62.959, -41.1095], [-63.7731, -41.1499], [-64.8531, -40.8139], [-65.1334, -40.8805], [-65.059, -41.9698], [-64.4205, -42.4337], [-63.596, -42.4066], [-63.6925, -42.8052], [-64.1306, -42.8616], [-64.6504, -42.5313], [-65.0269, -42.759], [-64.4323, -43.0591], [-64.9856, -43.2935], [-65.2837, -43.6299], [-65.3613, -44.4773], [-65.6476, -44.6615], [-65.6388, -45.0078], [-66.1901, -44.9647], [-66.9414, -45.2573], [-67.5566, -45.9701], [-67.5633, -46.3452], [-66.7769, -47.0057], [-65.9985, -47.0936], [-65.7382, -47.3449], [-65.8101, -47.941], [-67.033, -48.6277], [-67.6849, -49.2465], [-67.7834, -49.8591], [-68.9396, -50.3824], [-69.2352, -50.9506], [-69.0325, -51.6364], [-68.4433, -52.3569], [-69.9603, -52.0084], [-71.9187, -51.9898], [-72.4077, -51.541], [-72.2763, -50.9102], [-72.5098, -50.6075], [-73.153, -50.7384], [-73.5012, -50.1254], [-73.5762, -49.583], [-72.6143, -48.7929], [-72.3549, -48.3658], [-72.518, -47.8762], [-72.346, -47.4927], [-71.905, -47.2015], [-71.9403, -46.8313], [-71.6952, -46.5783], [-71.8757, -46.1606], [-71.7727, -45.7242], [-71.3537, -45.2306], [-71.5962, -44.9794], [-71.2611, -44.7632], [-71.2127, -44.4414], [-71.82, -44.3832], [-71.6801, -43.9296], [-71.905, -43.44], [-71.7816, -43.167], [-72.1464, -42.9899], [-72.1247, -42.2983], [-71.7501, -42.0466], [-71.9114, -41.6506], [-71.932, -40.6918], [-71.6952, -40.3354], [-71.7199, -39.6354], [-71.5394, -39.6025], [-71.4256, -38.9855], [-70.9517, -38.7383], [-71.0281, -38.0413], [-71.1677, -37.7621], [-71.0556, -36.5237], [-70.4048, -36.0616], [-70.4703, -35.3261], [-70.2899, -34.733], [-69.8524, -34.2243], [-69.7978, -33.3987], [-70.0198, -33.2717], [-70.1696, -32.4718], [-70.5853, -31.5694], [-70.5196, -31.1486], [-70.1614, -30.4401], [-69.9563, -30.358], [-69.9277, -29.7694], [-70.0269, -29.3242], [-69.8278, -29.1031], [-69.6569, -28.4138], [-69.1744, -27.9246], [-68.8463, -27.1536], [-68.3461, -27.0279], [-68.5811, -26.5183], [-68.4144, -26.1539], [-68.6002, -25.4859], [-68.3842, -25.0921], [-68.562, -24.8378], [-68.2502, -24.3921], [-67.3562, -24.0339], [-67.0088, -23.0014], [-67.1948, -22.8216], [-66.7117, -22.2161], [-66.3652, -22.1136], [-66.0986, -21.8353], [-65.771, -22.0994], [-65.0579, -22.103], [-64.6056, -22.229], [-64.3739, -22.7612], [-63.9762, -22.0728], [-63.8186, -22.0053], [-62.8434, -21.9973], [-62.6509, -22.2339]]], [[[-68.6532, -54.8538], [-68.6299, -52.6525], [-68.2782, -52.9841], [-68.0085, -53.5638], [-67.2943, -54.0499], [-65.346, -54.8777], [-66.5112, -55.0322], [-66.9305, -54.9248], [-68.6532, -54.8538]]]] }, \"properties\": { \"name\": \"Argentina\", \"id\": \"AR\" }, \"id\": \"AR\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[56.2979, 25.6505], [56.388, 24.9793], [56.064, 24.7388], [55.7959, 24.8679], [55.7608, 24.2425], [55.1997, 23.0346], [55.186, 22.704], [55.1043, 22.6214], [52.555, 22.933], [51.5927, 24.0787], [51.5683, 24.286], [51.9061, 23.9855], [52.6483, 24.1546], [53.8934, 24.0769], [54.3972, 24.278], [54.747, 24.8102], [55.941, 25.7939], [56.0804, 26.0624], [56.2979, 25.6505]]] }, \"properties\": { \"name\": \"United Arab Emirates\", \"id\": \"AE\" }, \"id\": \"AE\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[1.7059, 42.5033], [1.4861, 42.4345], [1.4284, 42.5961], [1.7059, 42.5033]]] }, \"properties\": { \"name\": \"Andorra\", \"id\": \"AD\" }, \"id\": \"AD\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[19.9893, 60.3511], [20.2588, 60.2612], [19.7461, 60.099], [19.6871, 60.2677], [19.9893, 60.3511]]] }, \"properties\": { \"name\": \"Aland Islands\", \"id\": \"AX\" }, \"id\": \"AX\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[20.0639, 42.5473], [20.4856, 42.2232], [20.566, 41.8739], [20.4892, 41.2724], [20.9641, 40.8498], [21.0312, 40.6585], [20.6574, 40.1174], [20.0013, 39.7095], [19.8517, 40.0437], [19.3981, 40.2847], [19.4407, 41.4247], [19.3426, 41.869], [19.2809, 42.1726], [19.6546, 42.6285], [20.0639, 42.5473]]] }, \"properties\": { \"name\": \"Albania\", \"id\": \"AL\" }, \"id\": \"AL\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-63.0012, 18.222], [-63.1534, 18.2002], [-63.026, 18.2699], [-63.0012, 18.222]]] }, \"properties\": { \"name\": \"Anguilla\", \"id\": \"AI\" }, \"id\": \"AI\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[12.2137, -5.7589], [12.0184, -5.0042], [12.3846, -4.6189], [12.8809, -4.4454], [13.0726, -4.6349], [12.8298, -4.7366], [12.5222, -5.1489], [12.5035, -5.6958], [12.2137, -5.7589]]], [[[23.9666, -10.8716], [23.9915, -12.4221], [23.8432, -13.0009], [21.9789, -13.0009], [21.9798, -15.9555], [22.1507, -16.5974], [23.3807, -17.6405], [21.4169, -18.0005], [20.625, -17.9965], [20.3928, -17.8873], [19.6396, -17.8687], [18.8259, -17.7661], [18.3962, -17.3995], [16.9136, -17.3915], [13.9382, -17.3888], [13.4038, -17.008], [13.101, -16.9676], [12.5479, -17.2126], [11.7432, -17.2494], [11.8191, -16.7043], [11.7507, -15.8321], [11.9678, -15.6341], [12.2803, -14.6376], [12.5506, -13.4377], [12.9834, -12.7759], [13.4171, -12.5202], [13.7855, -11.8127], [13.8477, -11.0545], [13.2093, -9.7033], [12.9985, -9.0481], [13.3589, -8.6872], [13.3785, -8.3698], [12.8622, -7.2317], [12.8236, -6.9547], [12.5213, -6.5903], [12.3025, -6.0927], [13.0682, -5.8649], [14.3985, -5.8925], [16.3152, -5.8658], [16.7179, -6.2414], [16.7094, -6.4717], [17.1551, -7.4612], [17.536, -8.076], [18.6532, -7.9361], [19.3408, -7.9668], [19.5277, -7.1447], [19.8753, -6.9862], [20.4821, -6.9161], [20.6077, -7.2778], [21.7511, -7.3054], [21.9056, -8.6934], [21.8133, -9.4689], [22.1977, -10.0406], [22.3069, -10.6914], [22.5613, -11.0558], [23.8339, -11.0136], [23.9666, -10.8716]]]] }, \"properties\": { \"name\": \"Angola\", \"id\": \"AO\" }, \"id\": \"AO\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[74.8912, 37.2317], [74.5415, 37.0221], [74.0017, 36.8233], [73.7691, 36.8885], [72.623, 36.8295], [71.6206, 36.4366], [71.1852, 36.042], [71.4276, 35.8338], [71.6206, 35.1831], [70.9655, 34.5306], [71.0516, 34.0498], [69.8682, 33.8976], [70.2841, 33.3689], [69.9201, 33.1123], [69.5015, 33.02], [69.2414, 32.4336], [69.2791, 31.9369], [68.869, 31.6342], [68.2138, 31.8073], [67.5781, 31.5063], [67.2874, 31.2178], [66.9243, 31.3057], [66.3974, 30.9124], [66.1772, 29.8355], [65.0954, 29.5594], [64.521, 29.5643], [64.0989, 29.3921], [63.5676, 29.4982], [62.4765, 29.4085], [60.8434, 29.8586], [61.104, 30.1285], [61.7844, 30.8321], [61.6602, 31.3825], [60.854, 31.4833], [60.8292, 32.2494], [60.5606, 33.1376], [60.9171, 33.5052], [60.5109, 33.6388], [60.4856, 34.0947], [61.08, 34.8555], [61.262, 35.6194], [62.6105, 35.2333], [63.0566, 35.4459], [63.1086, 35.8187], [63.8623, 36.0123], [64.5108, 36.3408], [64.8162, 37.1322], [65.5549, 37.2512], [65.7648, 37.569], [66.5221, 37.3484], [67.069, 37.3346], [67.7592, 37.1722], [68.0677, 36.9498], [68.9604, 37.3249], [69.2649, 37.1083], [69.4922, 37.553], [70.2512, 37.664], [70.2148, 37.9246], [70.8789, 38.4564], [71.2558, 38.3068], [71.5518, 37.933], [71.4329, 37.1273], [71.8022, 36.6941], [72.8955, 37.2676], [73.4814, 37.4718], [73.7496, 37.2317], [74.2596, 37.4154], [74.8912, 37.2317]]] }, \"properties\": { \"name\": \"Afghanistan\", \"id\": \"AF\" }, \"id\": \"AF\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-61.7161, 17.0368], [-61.8597, 17.0133], [-61.8173, 17.1691], [-61.7161, 17.0368]]] }, \"properties\": { \"name\": \"Antigua and Barbuda\", \"id\": \"AG\" }, \"id\": \"AG\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-69.8992, 12.4518], [-69.9421, 12.4385], [-70.0661, 12.5468], [-69.9732, 12.5677], [-69.8992, 12.4518]]] }, \"properties\": { \"name\": \"Aruba\", \"id\": \"AW\" }, \"id\": \"AW\" }\r\n    ] };\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (map);\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5-geodata/worldLow.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/charts/map/MapChart.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/charts/map/MapChart.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MapChart: () => (/* binding */ MapChart)\n/* harmony export */ });\n/* harmony import */ var _MapChartDefaultTheme__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./MapChartDefaultTheme */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/charts/map/MapChartDefaultTheme.js\");\n/* harmony import */ var _core_render_SerialChart__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/render/SerialChart */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/SerialChart.js\");\n/* harmony import */ var _core_render_Rectangle__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/render/Rectangle */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/Rectangle.js\");\n/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-geo */ \"(ssr)/./node_modules/d3-geo/src/path/index.js\");\n/* harmony import */ var _core_util_Color__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/util/Color */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Color.js\");\n/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/Registry */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/Registry.js\");\n/* harmony import */ var _core_util_Math__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/util/Math */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Math.js\");\n/* harmony import */ var _core_util_Array__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/util/Array */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Array.js\");\n/* harmony import */ var _core_util_Type__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../core/util/Type */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Type.js\");\n/* harmony import */ var _MapUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./MapUtils */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/charts/map/MapUtils.js\");\n/* harmony import */ var _core_util_Object__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/util/Object */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Object.js\");\n/* harmony import */ var _core_util_Utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/util/Utils */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Utils.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass MapChart extends _core_render_SerialChart__WEBPACK_IMPORTED_MODULE_0__.SerialChart {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_downTranslateX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_downTranslateY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_downRotationX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_downRotationY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_downRotationZ\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_pLat\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_pLon\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_movePoints\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_downZoomLevel\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_doubleDownDistance\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_dirtyGeometries\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_geometryColection\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: { type: \"GeometryCollection\", geometries: [] }\r\n        });\r\n        Object.defineProperty(this, \"_centerLocation\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"_za\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_rxa\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_rya\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_txa\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tya\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_mapBounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [[0, 0], [0, 0]]\r\n        });\r\n        Object.defineProperty(this, \"_geoCentroid\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: { longitude: 0, latitude: 0 }\r\n        });\r\n        Object.defineProperty(this, \"_geoBounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: { left: 0, right: 0, top: 0, bottom: 0 }\r\n        });\r\n        Object.defineProperty(this, \"_prevGeoBounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: { left: 0, right: 0, top: 0, bottom: 0 }\r\n        });\r\n        Object.defineProperty(this, \"_dispatchBounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_wheelDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_pw\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_ph\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_mapFitted\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_centerX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_centerY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n    }\r\n    _makeGeoPath() {\r\n        const projection = this.get(\"projection\");\r\n        const path = (0,d3_geo__WEBPACK_IMPORTED_MODULE_1__[\"default\"])();\r\n        path.projection(projection);\r\n        this.setPrivateRaw(\"geoPath\", path);\r\n    }\r\n    /**\r\n     * Returns a geoPoint of the current zoom position.\r\n     *\r\n     * You can later use it to restore zoom position, e.g.: `chart.zoomToGeoPoint(geoPoint, zoomLevel, true)`.\r\n     *\r\n     * @since 5.2.19\r\n     */\r\n    geoPoint() {\r\n        return this.invert(this.seriesContainer.toGlobal({ x: this.width() / 2, y: this.height() / 2 }));\r\n    }\r\n    /**\r\n     * Returns coordinates to geographical center of the map.\r\n     */\r\n    geoCentroid() {\r\n        return this._geoCentroid;\r\n    }\r\n    /**\r\n     * Returns geographical bounds of the map.\r\n     */\r\n    geoBounds() {\r\n        return this._geoBounds;\r\n    }\r\n    _handleSetWheel() {\r\n        const wheelX = this.get(\"wheelX\");\r\n        const wheelY = this.get(\"wheelY\");\r\n        const chartContainer = this.chartContainer;\r\n        if (wheelX != \"none\" || wheelY != \"none\") {\r\n            if (this._wheelDp) {\r\n                this._wheelDp.dispose();\r\n            }\r\n            this._wheelDp = chartContainer.events.on(\"wheel\", (event) => {\r\n                const wheelEasing = this.get(\"wheelEasing\");\r\n                const wheelSensitivity = this.get(\"wheelSensitivity\", 1);\r\n                const wheelDuration = this.get(\"wheelDuration\", 0);\r\n                const wheelEvent = event.originalEvent;\r\n                // Ignore wheel event if it is happening on a non-chart element, e.g. if\r\n                // some page element is over the chart.\r\n                let prevent = false;\r\n                if (_core_util_Utils__WEBPACK_IMPORTED_MODULE_2__.isLocalEvent(wheelEvent, this)) {\r\n                    prevent = true;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n                const point = chartContainer._display.toLocal(event.point);\r\n                if ((wheelY == \"zoom\")) {\r\n                    if (this.get(\"zoomLevel\") == this.get(\"minZoomLevel\", 1) && wheelEvent.deltaY > 0) {\r\n                        return;\r\n                    }\r\n                    this._handleWheelZoom(wheelEvent.deltaY, point);\r\n                }\r\n                else if (wheelY == \"rotateY\") {\r\n                    this._handleWheelRotateY(wheelEvent.deltaY / 5 * wheelSensitivity, wheelDuration, wheelEasing);\r\n                }\r\n                else if (wheelY == \"rotateX\") {\r\n                    this._handleWheelRotateX(wheelEvent.deltaY / 5 * wheelSensitivity, wheelDuration, wheelEasing);\r\n                }\r\n                if ((wheelX == \"zoom\")) {\r\n                    this._handleWheelZoom(wheelEvent.deltaX, point);\r\n                }\r\n                else if (wheelX == \"rotateY\") {\r\n                    this._handleWheelRotateY(wheelEvent.deltaX / 5 * wheelSensitivity, wheelDuration, wheelEasing);\r\n                }\r\n                else if (wheelX == \"rotateX\") {\r\n                    this._handleWheelRotateX(wheelEvent.deltaX / 5 * wheelSensitivity, wheelDuration, wheelEasing);\r\n                }\r\n                if (prevent) {\r\n                    wheelEvent.preventDefault();\r\n                }\r\n            });\r\n            this._disposers.push(this._wheelDp);\r\n        }\r\n        else {\r\n            if (this._wheelDp) {\r\n                this._wheelDp.dispose();\r\n            }\r\n        }\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        const projection = this.get(\"projection\");\r\n        const w = this.innerWidth();\r\n        const h = this.innerHeight();\r\n        const previousGeometries = this._geometryColection.geometries;\r\n        if (this.isDirty(\"projection\")) {\r\n            this._makeGeoPath();\r\n            this.markDirtyProjection();\r\n            this._fitMap();\r\n            projection.scale(this.getPrivate(\"mapScale\") * this.get(\"zoomLevel\", 1));\r\n            if (projection.rotate) {\r\n                projection.rotate([this.get(\"rotationX\", 0), this.get(\"rotationY\", 0), this.get(\"rotationZ\", 0)]);\r\n            }\r\n            let prev = this._prevSettings.projection;\r\n            if (prev && prev != projection) {\r\n                let hw = w / 2;\r\n                let hh = h / 2;\r\n                if (prev.invert) {\r\n                    let centerLocation = prev.invert([hw, hh]);\r\n                    if (centerLocation) {\r\n                        let xy = projection(centerLocation);\r\n                        if (xy) {\r\n                            let translate = projection.translate();\r\n                            let xx = hw - ((xy[0] - translate[0]));\r\n                            let yy = hh - ((xy[1] - translate[1]));\r\n                            projection.translate([xx, yy]);\r\n                            this.setRaw(\"translateX\", xx);\r\n                            this.setRaw(\"translateY\", yy);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"wheelX\") || this.isDirty(\"wheelY\")) {\r\n            this._handleSetWheel();\r\n        }\r\n        if (this._dirtyGeometries) {\r\n            this._geometryColection.geometries = [];\r\n            this.series.each((series) => {\r\n                _core_util_Array__WEBPACK_IMPORTED_MODULE_3__.pushAll(this._geometryColection.geometries, series._geometries);\r\n            });\r\n            this._fitMap();\r\n        }\r\n        if (previousGeometries.length != 0 && (w != this._pw || h != this._ph || this._dirtyGeometries)) {\r\n            if (w > 0 && h > 0) {\r\n                let hw = w / 2;\r\n                let hh = h / 2;\r\n                projection.fitSize([w, h], this._geometryColection);\r\n                const newScale = projection.scale();\r\n                this.setPrivateRaw(\"mapScale\", newScale);\r\n                projection.scale(newScale * this.get(\"zoomLevel\", 1));\r\n                if (this._centerLocation) {\r\n                    let xy = projection(this._centerLocation);\r\n                    if (xy) {\r\n                        let translate = projection.translate();\r\n                        let xx = hw - ((xy[0] - translate[0]));\r\n                        let yy = hh - ((xy[1] - translate[1]));\r\n                        projection.translate([xx, yy]);\r\n                        this.setRaw(\"translateX\", xx);\r\n                        this.setRaw(\"translateY\", yy);\r\n                        this._centerX = translate[0];\r\n                        this._centerY = translate[1];\r\n                    }\r\n                }\r\n                this.markDirtyProjection();\r\n                const geoPath = this.getPrivate(\"geoPath\");\r\n                this._mapBounds = geoPath.bounds(this._geometryColection);\r\n            }\r\n        }\r\n        this._pw = w;\r\n        this._ph = h;\r\n        if (this.isDirty(\"zoomControl\")) {\r\n            const previous = this._prevSettings.zoomControl;\r\n            const zoomControl = this.get(\"zoomControl\");\r\n            if (zoomControl !== previous) {\r\n                this._disposeProperty(\"zoomControl\");\r\n                if (previous) {\r\n                    previous.dispose();\r\n                }\r\n                if (zoomControl) {\r\n                    zoomControl.setPrivate(\"chart\", this);\r\n                    this.children.push(zoomControl);\r\n                }\r\n                this.setRaw(\"zoomControl\", zoomControl);\r\n            }\r\n        }\r\n        if (this.isDirty(\"zoomLevel\")) {\r\n            projection.scale(this.getPrivate(\"mapScale\") * this.get(\"zoomLevel\", 1));\r\n            this.markDirtyProjection();\r\n            this.series.each((series) => {\r\n                if (series.isType(\"MapPointSeries\")) {\r\n                    if (series.get(\"autoScale\")) {\r\n                        _core_util_Array__WEBPACK_IMPORTED_MODULE_3__.each(series.dataItems, (dataItem) => {\r\n                            const bullets = dataItem.bullets;\r\n                            if (bullets) {\r\n                                _core_util_Array__WEBPACK_IMPORTED_MODULE_3__.each(bullets, (bullet) => {\r\n                                    const sprite = bullet.get(\"sprite\");\r\n                                    if (sprite) {\r\n                                        sprite.set(\"scale\", this.get(\"zoomLevel\"));\r\n                                    }\r\n                                });\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n            const zoomControl = this.get(\"zoomControl\");\r\n            if (zoomControl) {\r\n                const zoomLevel = this.get(\"zoomLevel\", 1);\r\n                if (zoomLevel == this.get(\"minZoomLevel\", 1)) {\r\n                    this.root.events.once(\"frameended\", () => {\r\n                        zoomControl.minusButton.set(\"disabled\", true);\r\n                    });\r\n                }\r\n                else {\r\n                    zoomControl.minusButton.set(\"disabled\", false);\r\n                }\r\n                if (zoomLevel == this.get(\"maxZoomLevel\", 32)) {\r\n                    zoomControl.plusButton.set(\"disabled\", true);\r\n                }\r\n                else {\r\n                    zoomControl.plusButton.set(\"disabled\", false);\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"translateX\") || this.isDirty(\"translateY\")) {\r\n            projection.translate([this.get(\"translateX\", this.width() / 2), this.get(\"translateY\", this.height() / 2)]);\r\n            this.markDirtyProjection();\r\n        }\r\n        if (projection.rotate) {\r\n            if (this.isDirty(\"rotationX\") || this.isDirty(\"rotationY\") || this.isDirty(\"rotationZ\")) {\r\n                projection.rotate([this.get(\"rotationX\", 0), this.get(\"rotationY\", 0), this.get(\"rotationZ\", 0)]);\r\n                this.markDirtyProjection();\r\n            }\r\n        }\r\n        if (this.isDirty(\"pinchZoom\") || this.get(\"panX\") || this.get(\"panY\")) {\r\n            this._setUpTouch();\r\n        }\r\n    }\r\n    _fitMap() {\r\n        const projection = this.get(\"projection\");\r\n        let w = this.innerWidth();\r\n        let h = this.innerHeight();\r\n        if (w > 0 && h > 0) {\r\n            projection.fitSize([w, h], this._geometryColection);\r\n            this.setPrivateRaw(\"mapScale\", projection.scale());\r\n            const translate = projection.translate();\r\n            this.setRaw(\"translateX\", translate[0]);\r\n            this.setRaw(\"translateY\", translate[1]);\r\n            this._centerX = translate[0];\r\n            this._centerY = translate[1];\r\n            const geoPath = this.getPrivate(\"geoPath\");\r\n            this._mapBounds = geoPath.bounds(this._geometryColection);\r\n            this._geoCentroid = _MapUtils__WEBPACK_IMPORTED_MODULE_4__.getGeoCentroid(this._geometryColection);\r\n            const bounds = _MapUtils__WEBPACK_IMPORTED_MODULE_4__.getGeoBounds(this._geometryColection);\r\n            this._geoBounds = bounds;\r\n            if (this._geometryColection.geometries.length > 0) {\r\n                bounds.left = _core_util_Math__WEBPACK_IMPORTED_MODULE_5__.round(this._geoBounds.left, 3);\r\n                bounds.right = _core_util_Math__WEBPACK_IMPORTED_MODULE_5__.round(this._geoBounds.right, 3);\r\n                bounds.top = _core_util_Math__WEBPACK_IMPORTED_MODULE_5__.round(this._geoBounds.top, 3);\r\n                bounds.bottom = _core_util_Math__WEBPACK_IMPORTED_MODULE_5__.round(this._geoBounds.bottom, 3);\r\n                const prevGeoBounds = this._prevGeoBounds;\r\n                if (prevGeoBounds && !_core_util_Utils__WEBPACK_IMPORTED_MODULE_2__.sameBounds(bounds, prevGeoBounds)) {\r\n                    this._dispatchBounds = true;\r\n                    this._prevGeoBounds = bounds;\r\n                }\r\n            }\r\n            this._mapFitted = true;\r\n        }\r\n    }\r\n    /**\r\n     * Returns geographical coordinates for calculated or manual center of the\r\n     * map.\r\n     */\r\n    homeGeoPoint() {\r\n        let homeGeoPoint = this.get(\"homeGeoPoint\");\r\n        if (!homeGeoPoint) {\r\n            const geoPath = this.getPrivate(\"geoPath\");\r\n            const bounds = geoPath.bounds(this._geometryColection);\r\n            const left = bounds[0][0];\r\n            const top = bounds[0][1];\r\n            const right = bounds[1][0];\r\n            const bottom = bounds[1][1];\r\n            homeGeoPoint = this.invert({ x: left + (right - left) / 2, y: top + (bottom - top) / 2 });\r\n        }\r\n        return homeGeoPoint;\r\n    }\r\n    /**\r\n     * Repositions the map to the \"home\" zoom level and center coordinates.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Resetting_position_level} for more info\r\n     * @param  duration  Animation duration in milliseconds\r\n     */\r\n    goHome(duration) {\r\n        this.zoomToGeoPoint(this.homeGeoPoint(), this.get(\"homeZoomLevel\", 1), true, duration, this.get(\"homeRotationX\"), this.get(\"homeRotationY\"));\r\n    }\r\n    _updateChildren() {\r\n        const projection = this.get(\"projection\");\r\n        if (projection.invert) {\r\n            let w = this.innerWidth();\r\n            let h = this.innerHeight();\r\n            if (w > 0 && h > 0) {\r\n                this._centerLocation = projection.invert([this.innerWidth() / 2, this.innerHeight() / 2]);\r\n            }\r\n        }\r\n        super._updateChildren();\r\n    }\r\n    _afterChanged() {\r\n        super._afterChanged();\r\n        if (this._dispatchBounds) {\r\n            this._dispatchBounds = false;\r\n            const type = \"geoboundschanged\";\r\n            if (this.events.isEnabled(type)) {\r\n                this.events.dispatch(type, { type: type, target: this });\r\n            }\r\n        }\r\n    }\r\n    _setUpTouch() {\r\n        if (!this.chartContainer._display.cancelTouch) {\r\n            this.chartContainer._display.cancelTouch = (this.get(\"pinchZoom\") || this.get(\"panX\") || this.get(\"panY\")) ? true : false;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyGeometries() {\r\n        this._dirtyGeometries = true;\r\n        this.markDirty();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyProjection() {\r\n        this.series.each((series) => {\r\n            series.markDirtyProjection();\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._defaultThemes.push(_MapChartDefaultTheme__WEBPACK_IMPORTED_MODULE_6__.MapChartDefaultTheme.new(this._root));\r\n        this._settings.themeTags = _core_util_Utils__WEBPACK_IMPORTED_MODULE_2__.mergeTags(this._settings.themeTags, [\"map\"]);\r\n        this.children.push(this.bulletsContainer);\r\n        super._afterNew();\r\n        this._makeGeoPath();\r\n        this.chartContainer.children.push(this.seriesContainer);\r\n        if (this.get(\"translateX\") == null) {\r\n            this.set(\"translateX\", this.width() / 2);\r\n        }\r\n        if (this.get(\"translateY\") == null) {\r\n            this.set(\"translateY\", this.height() / 2);\r\n        }\r\n        // Setting trasnparent background so that full body of the plot container\r\n        // is interactive\r\n        this.chartContainer.set(\"interactive\", true);\r\n        this.chartContainer.set(\"interactiveChildren\", false);\r\n        this.chartContainer.set(\"background\", _core_render_Rectangle__WEBPACK_IMPORTED_MODULE_7__.Rectangle.new(this._root, {\r\n            themeTags: [\"map\", \"background\"],\r\n            fill: _core_util_Color__WEBPACK_IMPORTED_MODULE_8__.Color.fromHex(0x000000),\r\n            fillOpacity: 0\r\n        }));\r\n        this._disposers.push(this.chartContainer.events.on(\"pointerdown\", (event) => {\r\n            this._handleChartDown(event);\r\n        }));\r\n        this._disposers.push(this.chartContainer.events.on(\"globalpointerup\", (event) => {\r\n            this._handleChartUp(event);\r\n        }));\r\n        this._disposers.push(this.chartContainer.events.on(\"globalpointermove\", (event) => {\r\n            this._handleChartMove(event);\r\n        }));\r\n        let license = false;\r\n        for (let i = 0; i < _core_Registry__WEBPACK_IMPORTED_MODULE_9__.registry.licenses.length; i++) {\r\n            if (_core_Registry__WEBPACK_IMPORTED_MODULE_9__.registry.licenses[i].match(/^AM5M.{5,}/i)) {\r\n                license = true;\r\n            }\r\n        }\r\n        if (!license) {\r\n            this._root._showBranding();\r\n        }\r\n        else {\r\n            this._root._licenseApplied();\r\n        }\r\n        this._setUpTouch();\r\n    }\r\n    _handleChartDown(event) {\r\n        this._downZoomLevel = this.get(\"zoomLevel\", 1);\r\n        const downPoints = this.chartContainer._downPoints;\r\n        let count = _core_util_Object__WEBPACK_IMPORTED_MODULE_10__.keys(downPoints).length;\r\n        if (count == 1) {\r\n            // workaround to solve a problem when events are added to some children of chart container (rotation stops working)\r\n            let downPoint = downPoints[1];\r\n            if (!downPoint) {\r\n                downPoint = downPoints[0];\r\n            }\r\n            if (downPoint && (downPoint.x == event.point.x && downPoint.y == event.point.y)) {\r\n                count = 0;\r\n            }\r\n        }\r\n        if (count > 0) {\r\n            this._downTranslateX = this.get(\"translateX\");\r\n            this._downTranslateY = this.get(\"translateY\");\r\n            this._downRotationX = this.get(\"rotationX\");\r\n            this._downRotationY = this.get(\"rotationY\");\r\n            this._downRotationZ = this.get(\"rotationZ\");\r\n            const downId = this.chartContainer._getDownPointId();\r\n            if (downId) {\r\n                let movePoint = this._movePoints[downId];\r\n                if (movePoint) {\r\n                    this.chartContainer._downPoints[downId] = movePoint;\r\n                }\r\n            }\r\n        }\r\n        else if (count == 0) {\r\n            let bg = this.chartContainer.get(\"background\");\r\n            if (bg) {\r\n                bg.events.enableType(\"click\");\r\n            }\r\n            if (this.get(\"panX\") || this.get(\"panY\")) {\r\n                if (this._za) {\r\n                    this._za.stop();\r\n                }\r\n                if (this._txa) {\r\n                    this._txa.stop();\r\n                }\r\n                if (this._tya) {\r\n                    this._tya.stop();\r\n                }\r\n                if (this._rxa) {\r\n                    this._rxa.stop();\r\n                }\r\n                if (this._rya) {\r\n                    this._rya.stop();\r\n                }\r\n                const downPoint = this.chartContainer._display.toLocal(event.point);\r\n                this._downTranslateX = this.get(\"translateX\");\r\n                this._downTranslateY = this.get(\"translateY\");\r\n                this._downRotationX = this.get(\"rotationX\");\r\n                this._downRotationY = this.get(\"rotationY\");\r\n                this._downRotationZ = this.get(\"rotationZ\");\r\n                let projection = this.get(\"projection\");\r\n                if (projection.invert) {\r\n                    let l0 = projection.invert([downPoint.x, downPoint.y]);\r\n                    let l1 = projection.invert([downPoint.x + 1, downPoint.y + 1]);\r\n                    if (l0 && l1) {\r\n                        this._pLon = Math.abs(l1[0] - l0[0]);\r\n                        this._pLat = Math.abs(l1[1] - l0[1]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Converts screen coordinates (X and Y) within chart to latitude and\r\n     * longitude.\r\n     *\r\n     * @param  point  Screen coordinates\r\n     * @return        Geographical coordinates\r\n     */\r\n    invert(point) {\r\n        let projection = this.get(\"projection\");\r\n        if (projection.invert) {\r\n            const ll = projection.invert([point.x, point.y]);\r\n            if (ll) {\r\n                return { longitude: ll[0], latitude: ll[1] };\r\n            }\r\n        }\r\n        return { longitude: 0, latitude: 0 };\r\n    }\r\n    /**\r\n     * Converts latitude/longitude to screen coordinates (X and Y).\r\n     *\r\n     * @param  point  Geographical coordinates\r\n     * @param  rotationX  X rotation of a map if different from current\r\n     * @param  rotationY  Y rotation of a map if different from current\r\n     *\r\n     * @return Screen coordinates\r\n     */\r\n    convert(point, rotationX, rotationY) {\r\n        let projection = this.get(\"projection\");\r\n        let xy;\r\n        if (!projection.rotate) {\r\n            rotationX = undefined;\r\n            rotationY = undefined;\r\n        }\r\n        if (rotationX != null || rotationY != null) {\r\n            if (rotationX == null) {\r\n                rotationX = 0;\r\n            }\r\n            if (rotationY == null) {\r\n                rotationY = 0;\r\n            }\r\n            let rotation = projection.rotate();\r\n            projection.rotate([rotationX, rotationY, 0]);\r\n            xy = projection([point.longitude, point.latitude]);\r\n            projection.rotate(rotation);\r\n        }\r\n        else {\r\n            xy = projection([point.longitude, point.latitude]);\r\n        }\r\n        if (xy) {\r\n            return { x: xy[0], y: xy[1] };\r\n        }\r\n        return { x: 0, y: 0 };\r\n    }\r\n    _handleChartUp(_event) {\r\n        this.chartContainer._downPoints = {};\r\n    }\r\n    _handlePinch() {\r\n        const chartContainer = this.chartContainer;\r\n        let i = 0;\r\n        let downPoints = [];\r\n        let movePoints = [];\r\n        _core_util_Object__WEBPACK_IMPORTED_MODULE_10__.each(chartContainer._downPoints, (k, point) => {\r\n            downPoints[i] = point;\r\n            let movePoint = this._movePoints[k];\r\n            if (movePoint) {\r\n                movePoints[i] = movePoint;\r\n            }\r\n            i++;\r\n        });\r\n        if (downPoints.length > 1 && movePoints.length > 1) {\r\n            const display = chartContainer._display;\r\n            let downPoint0 = downPoints[0];\r\n            let downPoint1 = downPoints[1];\r\n            let movePoint0 = movePoints[0];\r\n            let movePoint1 = movePoints[1];\r\n            if (downPoint0 && downPoint1 && movePoint0 && movePoint1) {\r\n                downPoint0 = display.toLocal(downPoint0);\r\n                downPoint1 = display.toLocal(downPoint1);\r\n                movePoint0 = display.toLocal(movePoint0);\r\n                movePoint1 = display.toLocal(movePoint1);\r\n                let initialDistance = Math.hypot(downPoint1.x - downPoint0.x, downPoint1.y - downPoint0.y);\r\n                let currentDistance = Math.hypot(movePoint1.x - movePoint0.x, movePoint1.y - movePoint0.y);\r\n                let level = currentDistance / initialDistance * this._downZoomLevel;\r\n                level = _core_util_Math__WEBPACK_IMPORTED_MODULE_5__.fitToRange(level, this.get(\"minZoomLevel\", 1), this.get(\"maxZoomLevel\", 32));\r\n                let moveCenter = { x: movePoint0.x + (movePoint1.x - movePoint0.x) / 2, y: movePoint0.y + (movePoint1.y - movePoint0.y) / 2 };\r\n                let downCenter = { x: downPoint0.x + (downPoint1.x - downPoint0.x) / 2, y: downPoint0.y + (downPoint1.y - downPoint0.y) / 2 };\r\n                let tx = this._downTranslateX || 0;\r\n                let ty = this._downTranslateY || 0;\r\n                let zoomLevel = this._downZoomLevel;\r\n                let xx = moveCenter.x - (-tx + downCenter.x) / zoomLevel * level;\r\n                let yy = moveCenter.y - (-ty + downCenter.y) / zoomLevel * level;\r\n                this.set(\"zoomLevel\", level);\r\n                this.set(\"translateX\", xx);\r\n                this.set(\"translateY\", yy);\r\n            }\r\n        }\r\n    }\r\n    _handleChartMove(event) {\r\n        const chartContainer = this.chartContainer;\r\n        let downPoint = chartContainer._getDownPoint();\r\n        const downPointId = chartContainer._getDownPointId();\r\n        const originalEvent = event.originalEvent;\r\n        const pointerId = originalEvent.pointerId;\r\n        if (this.get(\"pinchZoom\")) {\r\n            if (pointerId) {\r\n                this._movePoints[pointerId] = event.point;\r\n                if (_core_util_Object__WEBPACK_IMPORTED_MODULE_10__.keys(chartContainer._downPoints).length > 1) {\r\n                    this._handlePinch();\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        if (downPointId && pointerId && pointerId != downPointId) {\r\n            return;\r\n        }\r\n        else {\r\n            if (downPoint) {\r\n                const panX = this.get(\"panX\");\r\n                const panY = this.get(\"panY\");\r\n                if (panX != \"none\" || panY != \"none\") {\r\n                    const display = chartContainer._display;\r\n                    let local = display.toLocal(event.point);\r\n                    downPoint = display.toLocal(downPoint);\r\n                    let x = this._downTranslateX;\r\n                    let y = this._downTranslateY;\r\n                    if (Math.hypot(downPoint.x - local.x, downPoint.y - local.y) > 5) {\r\n                        let bg = chartContainer.get(\"background\");\r\n                        if (bg) {\r\n                            bg.events.disableType(\"click\");\r\n                        }\r\n                        if (_core_util_Type__WEBPACK_IMPORTED_MODULE_11__.isNumber(x) && _core_util_Type__WEBPACK_IMPORTED_MODULE_11__.isNumber(y)) {\r\n                            let projection = this.get(\"projection\");\r\n                            const zoomLevel = this.get(\"zoomLevel\", 1);\r\n                            const maxPanOut = this.get(\"maxPanOut\", 0.4);\r\n                            const bounds = this._mapBounds;\r\n                            const w = this.width();\r\n                            const h = this.height();\r\n                            const ww = bounds[1][0] - bounds[0][0];\r\n                            const hh = bounds[1][1] - bounds[0][1];\r\n                            if (panX == \"translateX\") {\r\n                                x += local.x - downPoint.x;\r\n                                const cx = w / 2 - (w / 2 - this._centerX) * zoomLevel;\r\n                                x = Math.min(x, cx + ww * maxPanOut * zoomLevel);\r\n                                x = Math.max(x, cx - ww * maxPanOut * zoomLevel);\r\n                            }\r\n                            if (panY == \"translateY\") {\r\n                                y += local.y - downPoint.y;\r\n                                const cy = h / 2 - (h / 2 - this._centerY) * zoomLevel;\r\n                                y = Math.min(y, cy + hh * maxPanOut * zoomLevel);\r\n                                y = Math.max(y, cy - hh * maxPanOut * zoomLevel);\r\n                            }\r\n                            this.set(\"translateX\", x);\r\n                            this.set(\"translateY\", y);\r\n                            if (projection.invert) {\r\n                                let downLocation = projection.invert([downPoint.x, downPoint.y]);\r\n                                if (location && downLocation) {\r\n                                    if (panX == \"rotateX\") {\r\n                                        this.set(\"rotationX\", this._downRotationX - (downPoint.x - local.x) * this._pLon);\r\n                                    }\r\n                                    if (panY == \"rotateY\") {\r\n                                        this.set(\"rotationY\", this._downRotationY + (downPoint.y - local.y) * this._pLat);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _handleWheelRotateY(delta, duration, easing) {\r\n        this._rya = this.animate({ key: \"rotationY\", to: this.get(\"rotationY\", 0) - delta, duration: duration, easing: easing });\r\n    }\r\n    _handleWheelRotateX(delta, duration, easing) {\r\n        this._rxa = this.animate({ key: \"rotationX\", to: this.get(\"rotationX\", 0) - delta, duration: duration, easing: easing });\r\n    }\r\n    _handleWheelZoom(delta, point) {\r\n        let step = this.get(\"zoomStep\", 2);\r\n        let zoomLevel = this.get(\"zoomLevel\", 1);\r\n        let newZoomLevel = zoomLevel;\r\n        if (delta > 0) {\r\n            newZoomLevel = zoomLevel / step;\r\n        }\r\n        else if (delta < 0) {\r\n            newZoomLevel = zoomLevel * step;\r\n        }\r\n        if (newZoomLevel != zoomLevel) {\r\n            this.zoomToPoint(point, newZoomLevel);\r\n        }\r\n    }\r\n    /**\r\n     * Zoom the map to geographical bounds.\r\n     *\r\n     * @param  geoBounds  Bounds\r\n     * @param  duration   Animation duration in milliseconds\r\n     * @param  rotationX  X rotation of a map at the end of zoom\r\n     * @param  rotationY  Y rotation of a map at the end of zoom\r\n     */\r\n    zoomToGeoBounds(geoBounds, duration, rotationX, rotationY) {\r\n        if (geoBounds.right < geoBounds.left) {\r\n            geoBounds.right = 180;\r\n            geoBounds.left = -180;\r\n        }\r\n        const geoPath = this.getPrivate(\"geoPath\");\r\n        const mapBounds = geoPath.bounds(this._geometryColection);\r\n        let p0 = this.convert({ longitude: geoBounds.left, latitude: geoBounds.top }, rotationX, rotationY);\r\n        let p1 = this.convert({ longitude: geoBounds.right, latitude: geoBounds.bottom }, rotationX, rotationY);\r\n        if (p0.y < mapBounds[0][1]) {\r\n            p0.y = mapBounds[0][1];\r\n        }\r\n        if (p1.y > mapBounds[1][1]) {\r\n            p1.y = mapBounds[1][1];\r\n        }\r\n        let zl = this.get(\"zoomLevel\", 1);\r\n        let bounds = { left: p0.x, right: p1.x, top: p0.y, bottom: p1.y };\r\n        let seriesContainer = this.seriesContainer;\r\n        let zoomLevel = .9 * Math.min(seriesContainer.innerWidth() / (bounds.right - bounds.left) * zl, seriesContainer.innerHeight() / (bounds.bottom - bounds.top) * zl);\r\n        let x = bounds.left + (bounds.right - bounds.left) / 2;\r\n        let y = bounds.top + (bounds.bottom - bounds.top) / 2;\r\n        let geoPoint = this.invert({ x, y });\r\n        if (rotationX != null || rotationY != null) {\r\n            this.rotate(rotationX, rotationY);\r\n        }\r\n        return this.zoomToGeoPoint(geoPoint, zoomLevel, true, duration);\r\n    }\r\n    /**\r\n     * Zooms the map to specific screen point.\r\n     *\r\n     * @param  point    Point\r\n     * @param  level    Zoom level\r\n     * @param  center   Center the map\r\n     * @param  duration Duration of the animation in milliseconds\r\n     */\r\n    zoomToPoint(point, level, center, duration) {\r\n        if (level) {\r\n            level = _core_util_Math__WEBPACK_IMPORTED_MODULE_5__.fitToRange(level, this.get(\"minZoomLevel\", 1), this.get(\"maxZoomLevel\", 32));\r\n        }\r\n        if (!_core_util_Type__WEBPACK_IMPORTED_MODULE_11__.isNumber(duration)) {\r\n            duration = this.get(\"animationDuration\", 0);\r\n        }\r\n        const easing = this.get(\"animationEasing\");\r\n        const zoomLevel = this.get(\"zoomLevel\", 1);\r\n        if (this.get(\"centerMapOnZoomOut\") && level == this.get(\"homeZoomLevel\", 1)) {\r\n            point = this.convert(this.homeGeoPoint(), this.get(\"homeRotationX\"), this.get(\"homeRotationY\"));\r\n            center = true;\r\n        }\r\n        let x = point.x;\r\n        let y = point.y;\r\n        let tx = this.get(\"translateX\", 0);\r\n        let ty = this.get(\"translateY\", 0);\r\n        let cx = x;\r\n        let cy = y;\r\n        if (center) {\r\n            cx = this.width() / 2;\r\n            cy = this.height() / 2;\r\n        }\r\n        let xx = cx - ((x - tx) / zoomLevel * level);\r\n        let yy = cy - ((y - ty) / zoomLevel * level);\r\n        this._txa = this.animate({ key: \"translateX\", to: xx, duration: duration, easing: easing });\r\n        this._tya = this.animate({ key: \"translateY\", to: yy, duration: duration, easing: easing });\r\n        this._za = this.animate({ key: \"zoomLevel\", to: level, duration: duration, easing: easing });\r\n        if (zoomLevel != level) {\r\n            this._root.readerAlert(this._t(\"Zoom level changed to %1\", this._root.locale, _core_util_Type__WEBPACK_IMPORTED_MODULE_11__.numberToString(level)));\r\n        }\r\n        return this._za;\r\n    }\r\n    /**\r\n     * Zooms the map to specific geographical point.\r\n     *\r\n     * @param  geoPoint  Point\r\n     * @param  level     Zoom level\r\n     * @param  center    Center the map\r\n     * @param  duration  Duration of the animation in milliseconds\r\n     * @param  rotationX  X rotation of a map at the end of zoom\r\n     * @param  rotationY  Y rotation of a map at the end of zoom\r\n     *\r\n     */\r\n    zoomToGeoPoint(geoPoint, level, center, duration, rotationX, rotationY) {\r\n        let xy = this.convert(geoPoint, rotationX, rotationY);\r\n        if (rotationX != null || rotationY != null) {\r\n            this.rotate(rotationX, rotationY, duration);\r\n        }\r\n        if (xy) {\r\n            return this.zoomToPoint(xy, level, center, duration);\r\n        }\r\n    }\r\n    rotate(rotationX, rotationY, duration) {\r\n        const projection = this.get(\"projection\");\r\n        if (!projection.rotate) {\r\n        }\r\n        else {\r\n            if (!_core_util_Type__WEBPACK_IMPORTED_MODULE_11__.isNumber(duration)) {\r\n                duration = this.get(\"animationDuration\", 0);\r\n            }\r\n            const easing = this.get(\"animationEasing\");\r\n            if (rotationX != null) {\r\n                this.animate({ key: \"rotationX\", to: rotationX, duration: duration, easing: easing });\r\n            }\r\n            if (rotationY != null) {\r\n                this.animate({ key: \"rotationY\", to: rotationY, duration: duration, easing: easing });\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Zooms the map in.\r\n     */\r\n    zoomIn() {\r\n        return this.zoomToPoint({ x: this.width() / 2, y: this.height() / 2 }, this.get(\"zoomLevel\", 1) * this.get(\"zoomStep\", 2));\r\n    }\r\n    /**\r\n     * Zooms the map out.\r\n     */\r\n    zoomOut() {\r\n        return this.zoomToPoint({ x: this.width() / 2, y: this.height() / 2 }, this.get(\"zoomLevel\", 1) / this.get(\"zoomStep\", 2));\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._dirtyGeometries = false;\r\n        this._mapFitted = false;\r\n    }\r\n    /**\r\n     * Returns area of a mapPolygon in square pixels.\r\n     */\r\n    getArea(dataItem) {\r\n        const geoPath = this.getPrivate(\"geoPath\");\r\n        const geometry = dataItem.get(\"geometry\");\r\n        if (geometry) {\r\n            return geoPath.area(geometry);\r\n        }\r\n        return 0;\r\n    }\r\n}\r\nObject.defineProperty(MapChart, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"MapChart\"\r\n});\r\nObject.defineProperty(MapChart, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: _core_render_SerialChart__WEBPACK_IMPORTED_MODULE_0__.SerialChart.classNames.concat([MapChart.className])\r\n});\r\n//# sourceMappingURL=MapChart.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/charts/map/MapChart.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/charts/map/MapChartDefaultTheme.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/charts/map/MapChartDefaultTheme.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MapChartDefaultTheme: () => (/* binding */ MapChartDefaultTheme)\n/* harmony export */ });\n/* harmony import */ var _core_Theme__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/Theme */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/Theme.js\");\n/* harmony import */ var _themes_DefaultTheme__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../themes/DefaultTheme */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/themes/DefaultTheme.js\");\n/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-geo */ \"(ssr)/./node_modules/d3-geo/src/projection/mercator.js\");\n/* harmony import */ var _core_util_Ease__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/util/Ease */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Ease.js\");\n\r\n\r\n\r\n\r\n/**\r\n * @ignore\r\n */\r\nclass MapChartDefaultTheme extends _core_Theme__WEBPACK_IMPORTED_MODULE_0__.Theme {\r\n    setupDefaultRules() {\r\n        super.setupDefaultRules();\r\n        const ic = this._root.interfaceColors;\r\n        const r = this.rule.bind(this);\r\n        /**\r\n         * ========================================================================\r\n         * charts/map\r\n         * ========================================================================\r\n         */\r\n        r(\"MapChart\").setAll({\r\n            projection: (0,d3_geo__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(),\r\n            panX: \"translateX\",\r\n            panY: \"translateY\",\r\n            pinchZoom: true,\r\n            zoomStep: 2,\r\n            zoomLevel: 1,\r\n            rotationX: 0,\r\n            rotationY: 0,\r\n            rotationZ: 0,\r\n            maxZoomLevel: 32,\r\n            minZoomLevel: 1,\r\n            wheelY: \"zoom\",\r\n            wheelX: \"none\",\r\n            animationEasing: _core_util_Ease__WEBPACK_IMPORTED_MODULE_2__.out(_core_util_Ease__WEBPACK_IMPORTED_MODULE_2__.cubic),\r\n            wheelEasing: _core_util_Ease__WEBPACK_IMPORTED_MODULE_2__.out(_core_util_Ease__WEBPACK_IMPORTED_MODULE_2__.cubic),\r\n            wheelDuration: 0,\r\n            wheelSensitivity: 1,\r\n            maxPanOut: 0.4,\r\n            centerMapOnZoomOut: true\r\n        });\r\n        {\r\n            const rule = r(\"MapLine\");\r\n            rule.setAll({\r\n                precision: 0.5,\r\n                role: \"figure\",\r\n            });\r\n            (0,_themes_DefaultTheme__WEBPACK_IMPORTED_MODULE_3__.setColor)(rule, \"stroke\", ic, \"grid\");\r\n        }\r\n        r(\"MapPolygonSeries\").setAll({\r\n            affectsBounds: true\r\n        });\r\n        r(\"MapPointSeries\").setAll({\r\n            affectsBounds: false,\r\n            clipFront: false,\r\n            clipBack: true,\r\n            autoScale: false\r\n        });\r\n        r(\"ClusteredPointSeries\").setAll({\r\n            minDistance: 20,\r\n            scatterDistance: 3,\r\n            scatterRadius: 8,\r\n            stopClusterZoom: 0.95\r\n        });\r\n        r(\"MapLineSeries\").setAll({\r\n            affectsBounds: false\r\n        });\r\n        {\r\n            const rule = r(\"MapPolygon\");\r\n            rule.setAll({\r\n                precision: 0.5,\r\n                isMeasured: false,\r\n                role: \"figure\",\r\n                fillOpacity: 1,\r\n                position: \"absolute\",\r\n                strokeWidth: 0.2,\r\n                strokeOpacity: 1\r\n            });\r\n            (0,_themes_DefaultTheme__WEBPACK_IMPORTED_MODULE_3__.setColor)(rule, \"fill\", ic, \"primaryButton\");\r\n            (0,_themes_DefaultTheme__WEBPACK_IMPORTED_MODULE_3__.setColor)(rule, \"stroke\", ic, \"background\");\r\n        }\r\n        r(\"Button\", [\"zoomtools\", \"home\"]).setAll({\r\n            visible: false\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/map: Series\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"GraticuleSeries\").setAll({\r\n            step: 10\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=MapChartDefaultTheme.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNS8uaW50ZXJuYWwvY2hhcnRzL21hcC9NYXBDaGFydERlZmF1bHRUaGVtZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUF5QztBQUNZO0FBQ2hCO0FBQ1M7QUFDOUM7QUFDQTtBQUNBO0FBQ08sbUNBQW1DLDhDQUFLO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGtEQUFXO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QixnREFBUyxDQUFDLGtEQUFXO0FBQ2xELHlCQUF5QixnREFBUyxDQUFDLGtEQUFXO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsWUFBWSw4REFBUTtBQUNwQjtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsWUFBWSw4REFBUTtBQUNwQixZQUFZLDhEQUFRO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3Jrc3BhY2Uvbm9kZV9tb2R1bGVzL0BhbWNoYXJ0cy9hbWNoYXJ0czUvLmludGVybmFsL2NoYXJ0cy9tYXAvTWFwQ2hhcnREZWZhdWx0VGhlbWUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVGhlbWUgfSBmcm9tIFwiLi4vLi4vY29yZS9UaGVtZVwiO1xyXG5pbXBvcnQgeyBzZXRDb2xvciB9IGZyb20gXCIuLi8uLi90aGVtZXMvRGVmYXVsdFRoZW1lXCI7XHJcbmltcG9ydCB7IGdlb01lcmNhdG9yIH0gZnJvbSBcImQzLWdlb1wiO1xyXG5pbXBvcnQgKiBhcyAkZWFzZSBmcm9tIFwiLi4vLi4vY29yZS91dGlsL0Vhc2VcIjtcclxuLyoqXHJcbiAqIEBpZ25vcmVcclxuICovXHJcbmV4cG9ydCBjbGFzcyBNYXBDaGFydERlZmF1bHRUaGVtZSBleHRlbmRzIFRoZW1lIHtcclxuICAgIHNldHVwRGVmYXVsdFJ1bGVzKCkge1xyXG4gICAgICAgIHN1cGVyLnNldHVwRGVmYXVsdFJ1bGVzKCk7XHJcbiAgICAgICAgY29uc3QgaWMgPSB0aGlzLl9yb290LmludGVyZmFjZUNvbG9ycztcclxuICAgICAgICBjb25zdCByID0gdGhpcy5ydWxlLmJpbmQodGhpcyk7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAgICAgICAgICogY2hhcnRzL21hcFxyXG4gICAgICAgICAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHIoXCJNYXBDaGFydFwiKS5zZXRBbGwoe1xyXG4gICAgICAgICAgICBwcm9qZWN0aW9uOiBnZW9NZXJjYXRvcigpLFxyXG4gICAgICAgICAgICBwYW5YOiBcInRyYW5zbGF0ZVhcIixcclxuICAgICAgICAgICAgcGFuWTogXCJ0cmFuc2xhdGVZXCIsXHJcbiAgICAgICAgICAgIHBpbmNoWm9vbTogdHJ1ZSxcclxuICAgICAgICAgICAgem9vbVN0ZXA6IDIsXHJcbiAgICAgICAgICAgIHpvb21MZXZlbDogMSxcclxuICAgICAgICAgICAgcm90YXRpb25YOiAwLFxyXG4gICAgICAgICAgICByb3RhdGlvblk6IDAsXHJcbiAgICAgICAgICAgIHJvdGF0aW9uWjogMCxcclxuICAgICAgICAgICAgbWF4Wm9vbUxldmVsOiAzMixcclxuICAgICAgICAgICAgbWluWm9vbUxldmVsOiAxLFxyXG4gICAgICAgICAgICB3aGVlbFk6IFwiem9vbVwiLFxyXG4gICAgICAgICAgICB3aGVlbFg6IFwibm9uZVwiLFxyXG4gICAgICAgICAgICBhbmltYXRpb25FYXNpbmc6ICRlYXNlLm91dCgkZWFzZS5jdWJpYyksXHJcbiAgICAgICAgICAgIHdoZWVsRWFzaW5nOiAkZWFzZS5vdXQoJGVhc2UuY3ViaWMpLFxyXG4gICAgICAgICAgICB3aGVlbER1cmF0aW9uOiAwLFxyXG4gICAgICAgICAgICB3aGVlbFNlbnNpdGl2aXR5OiAxLFxyXG4gICAgICAgICAgICBtYXhQYW5PdXQ6IDAuNCxcclxuICAgICAgICAgICAgY2VudGVyTWFwT25ab29tT3V0OiB0cnVlXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBjb25zdCBydWxlID0gcihcIk1hcExpbmVcIik7XHJcbiAgICAgICAgICAgIHJ1bGUuc2V0QWxsKHtcclxuICAgICAgICAgICAgICAgIHByZWNpc2lvbjogMC41LFxyXG4gICAgICAgICAgICAgICAgcm9sZTogXCJmaWd1cmVcIixcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIHNldENvbG9yKHJ1bGUsIFwic3Ryb2tlXCIsIGljLCBcImdyaWRcIik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHIoXCJNYXBQb2x5Z29uU2VyaWVzXCIpLnNldEFsbCh7XHJcbiAgICAgICAgICAgIGFmZmVjdHNCb3VuZHM6IHRydWVcclxuICAgICAgICB9KTtcclxuICAgICAgICByKFwiTWFwUG9pbnRTZXJpZXNcIikuc2V0QWxsKHtcclxuICAgICAgICAgICAgYWZmZWN0c0JvdW5kczogZmFsc2UsXHJcbiAgICAgICAgICAgIGNsaXBGcm9udDogZmFsc2UsXHJcbiAgICAgICAgICAgIGNsaXBCYWNrOiB0cnVlLFxyXG4gICAgICAgICAgICBhdXRvU2NhbGU6IGZhbHNlXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgcihcIkNsdXN0ZXJlZFBvaW50U2VyaWVzXCIpLnNldEFsbCh7XHJcbiAgICAgICAgICAgIG1pbkRpc3RhbmNlOiAyMCxcclxuICAgICAgICAgICAgc2NhdHRlckRpc3RhbmNlOiAzLFxyXG4gICAgICAgICAgICBzY2F0dGVyUmFkaXVzOiA4LFxyXG4gICAgICAgICAgICBzdG9wQ2x1c3Rlclpvb206IDAuOTVcclxuICAgICAgICB9KTtcclxuICAgICAgICByKFwiTWFwTGluZVNlcmllc1wiKS5zZXRBbGwoe1xyXG4gICAgICAgICAgICBhZmZlY3RzQm91bmRzOiBmYWxzZVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgY29uc3QgcnVsZSA9IHIoXCJNYXBQb2x5Z29uXCIpO1xyXG4gICAgICAgICAgICBydWxlLnNldEFsbCh7XHJcbiAgICAgICAgICAgICAgICBwcmVjaXNpb246IDAuNSxcclxuICAgICAgICAgICAgICAgIGlzTWVhc3VyZWQ6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgcm9sZTogXCJmaWd1cmVcIixcclxuICAgICAgICAgICAgICAgIGZpbGxPcGFjaXR5OiAxLFxyXG4gICAgICAgICAgICAgICAgcG9zaXRpb246IFwiYWJzb2x1dGVcIixcclxuICAgICAgICAgICAgICAgIHN0cm9rZVdpZHRoOiAwLjIsXHJcbiAgICAgICAgICAgICAgICBzdHJva2VPcGFjaXR5OiAxXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICBzZXRDb2xvcihydWxlLCBcImZpbGxcIiwgaWMsIFwicHJpbWFyeUJ1dHRvblwiKTtcclxuICAgICAgICAgICAgc2V0Q29sb3IocnVsZSwgXCJzdHJva2VcIiwgaWMsIFwiYmFja2dyb3VuZFwiKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcihcIkJ1dHRvblwiLCBbXCJ6b29tdG9vbHNcIiwgXCJob21lXCJdKS5zZXRBbGwoe1xyXG4gICAgICAgICAgICB2aXNpYmxlOiBmYWxzZVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAgICAgICAqIGNoYXJ0cy9tYXA6IFNlcmllc1xyXG4gICAgICAgICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHIoXCJHcmF0aWN1bGVTZXJpZXNcIikuc2V0QWxsKHtcclxuICAgICAgICAgICAgc3RlcDogMTBcclxuICAgICAgICB9KTtcclxuICAgIH1cclxufVxyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1NYXBDaGFydERlZmF1bHRUaGVtZS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/charts/map/MapChartDefaultTheme.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/charts/map/MapLine.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/charts/map/MapLine.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MapLine: () => (/* binding */ MapLine)\n/* harmony export */ });\n/* harmony import */ var _core_util_Type__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/util/Type */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Type.js\");\n/* harmony import */ var _core_util_Percent__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/util/Percent */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Percent.js\");\n/* harmony import */ var _core_render_Graphics__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/render/Graphics */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/Graphics.js\");\n/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-geo */ \"(ssr)/./node_modules/d3-geo/src/length.js\");\n/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! d3-geo */ \"(ssr)/./node_modules/d3-geo/src/distance.js\");\n/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! d3-geo */ \"(ssr)/./node_modules/d3-geo/src/interpolate.js\");\n\r\n\r\n\r\n\r\n/**\r\n * A line object in a [[MapLineSeries]].\r\n */\r\nclass MapLine extends _core_render_Graphics__WEBPACK_IMPORTED_MODULE_0__.Graphics {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_projectionDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this._projectionDirty || this.isDirty(\"geometry\") || this.isDirty(\"precision\")) {\r\n            const geometry = this.get(\"geometry\");\r\n            if (geometry) {\r\n                const series = this.getPrivate(\"series\");\r\n                if (series) {\r\n                    const chart = series.chart;\r\n                    if (chart) {\r\n                        const projection = chart.get(\"projection\");\r\n                        let clipAngle = null;\r\n                        if (projection && projection.clipAngle) {\r\n                            clipAngle = projection.clipAngle();\r\n                            projection.precision(this.get(\"precision\", 0.5));\r\n                        }\r\n                        const dataItem = this.dataItem;\r\n                        const geoPath = chart.getPrivate(\"geoPath\");\r\n                        if (geoPath && dataItem) {\r\n                            this._clear = true;\r\n                            if (dataItem.get(\"lineType\", series.get(\"lineType\")) == \"straight\") {\r\n                                const geometry = this.get(\"geometry\");\r\n                                if (geometry) {\r\n                                    let coordinates = geometry.coordinates;\r\n                                    if (coordinates) {\r\n                                        let segments;\r\n                                        if (geometry.type == \"LineString\") {\r\n                                            segments = [coordinates];\r\n                                        }\r\n                                        else if (geometry.type == \"MultiLineString\") {\r\n                                            segments = coordinates;\r\n                                        }\r\n                                        this.set(\"draw\", (display) => {\r\n                                            for (let s = 0; s < segments.length; s++) {\r\n                                                let segment = segments[s];\r\n                                                if (segment.length > 0) {\r\n                                                    const gp0 = segment[0];\r\n                                                    const p0 = chart.convert({ longitude: gp0[0], latitude: gp0[1] });\r\n                                                    display.lineTo(p0.x, p0.y);\r\n                                                    for (let p = 0; p < segment.length; p++) {\r\n                                                        const gp = segment[p];\r\n                                                        const pn = chart.convert({ longitude: gp[0], latitude: gp[1] });\r\n                                                        display.lineTo(pn.x, pn.y);\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                }\r\n                            }\r\n                            else {\r\n                                this.set(\"draw\", (_display) => {\r\n                                    if (projection && series.get(\"clipBack\") === false) {\r\n                                        projection.clipAngle(180);\r\n                                    }\r\n                                    geoPath.context(this._display);\r\n                                    geoPath(geometry);\r\n                                    geoPath.context(null);\r\n                                    if (projection && projection.clipAngle) {\r\n                                        projection.clipAngle(clipAngle);\r\n                                    }\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            const type = \"linechanged\";\r\n            if (this.events.isEnabled(type)) {\r\n                this.events.dispatch(type, { type: type, target: this });\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyProjection() {\r\n        this.markDirty();\r\n        this._projectionDirty = true;\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._projectionDirty = false;\r\n    }\r\n    _getTooltipPoint() {\r\n        let tooltipX = this.get(\"tooltipX\");\r\n        let tooltipY = this.get(\"tooltipY\");\r\n        let x = 0;\r\n        let y = 0;\r\n        if (_core_util_Type__WEBPACK_IMPORTED_MODULE_1__.isNumber(tooltipX)) {\r\n            x = tooltipX;\r\n        }\r\n        if (_core_util_Type__WEBPACK_IMPORTED_MODULE_1__.isNumber(tooltipY)) {\r\n            y = tooltipY;\r\n        }\r\n        if (tooltipX instanceof _core_util_Percent__WEBPACK_IMPORTED_MODULE_2__.Percent) {\r\n            const geoPoint = this.positionToGeoPoint(tooltipX.value);\r\n            const series = this.getPrivate(\"series\");\r\n            if (series) {\r\n                const chart = series.chart;\r\n                if (chart) {\r\n                    const point = chart.convert(geoPoint);\r\n                    x = point.x;\r\n                    y = point.y;\r\n                }\r\n            }\r\n        }\r\n        return { x, y };\r\n    }\r\n    /**\r\n     * Converts relative position along the line (0-1) into pixel coordinates.\r\n     *\r\n     * @param position  Position (0-1)\r\n     * @return Coordinates\r\n     */\r\n    positionToGeoPoint(position) {\r\n        const geometry = this.get(\"geometry\");\r\n        const series = this.getPrivate(\"series\");\r\n        const chart = series.chart;\r\n        const dataItem = this.dataItem;\r\n        if (geometry && series && chart && dataItem) {\r\n            const lineType = dataItem.get(\"lineType\", series.get(\"lineType\"));\r\n            let totalDistance = (0,d3_geo__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(geometry);\r\n            let currentDistance = 0;\r\n            let distanceAB;\r\n            let positionA = 0;\r\n            let positionB = 0;\r\n            let pointA;\r\n            let pointB;\r\n            let coordinates = geometry.coordinates;\r\n            if (coordinates) {\r\n                let segments;\r\n                if (geometry.type == \"LineString\") {\r\n                    segments = [coordinates];\r\n                }\r\n                else if (geometry.type == \"MultiLineString\") {\r\n                    segments = coordinates;\r\n                }\r\n                for (let s = 0; s < segments.length; s++) {\r\n                    let segment = segments[s];\r\n                    if (segment.length > 1) {\r\n                        for (let p = 1; p < segment.length; p++) {\r\n                            pointA = segment[p - 1];\r\n                            pointB = segment[p];\r\n                            positionA = currentDistance / totalDistance;\r\n                            distanceAB = (0,d3_geo__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(pointA, pointB);\r\n                            currentDistance += distanceAB;\r\n                            positionB = currentDistance / totalDistance;\r\n                            if (positionA <= position && positionB > position) {\r\n                                s = segments.length;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    else if (segment.length == 1) {\r\n                        pointA = segment[0];\r\n                        pointB = segment[0];\r\n                        positionA = 0;\r\n                        positionB = 1;\r\n                    }\r\n                }\r\n                if (pointA && pointB) {\r\n                    let positionAB = (position - positionA) / (positionB - positionA);\r\n                    let location;\r\n                    if (lineType == \"straight\") {\r\n                        let p0 = chart.convert({ longitude: pointA[0], latitude: pointA[1] });\r\n                        let p1 = chart.convert({ longitude: pointB[0], latitude: pointB[1] });\r\n                        let x = p0.x + (p1.x - p0.x) * positionAB;\r\n                        let y = p0.y + (p1.y - p0.y) * positionAB;\r\n                        return chart.invert({ x: x, y: y });\r\n                    }\r\n                    else {\r\n                        location = (0,d3_geo__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(pointA, pointB)(positionAB);\r\n                        return { longitude: location[0], latitude: location[1] };\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return { longitude: 0, latitude: 0 };\r\n    }\r\n}\r\nObject.defineProperty(MapLine, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"MapLine\"\r\n});\r\nObject.defineProperty(MapLine, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: _core_render_Graphics__WEBPACK_IMPORTED_MODULE_0__.Graphics.classNames.concat([MapLine.className])\r\n});\r\n//# sourceMappingURL=MapLine.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/charts/map/MapLine.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/charts/map/MapLineSeries.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/charts/map/MapLineSeries.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MapLineSeries: () => (/* binding */ MapLineSeries)\n/* harmony export */ });\n/* harmony import */ var _MapSeries__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./MapSeries */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/charts/map/MapSeries.js\");\n/* harmony import */ var _MapLine__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./MapLine */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/charts/map/MapLine.js\");\n/* harmony import */ var _core_util_List__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/util/List */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/List.js\");\n/* harmony import */ var _core_util_Template__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/util/Template */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Template.js\");\n/* harmony import */ var _core_util_Array__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/util/Array */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Array.js\");\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Creates a map series for displaying lines on the map.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-line-series/} for more info\r\n * @important\r\n */\r\nclass MapLineSeries extends _MapSeries__WEBPACK_IMPORTED_MODULE_0__.MapSeries {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * A [[ListTemplate]] of all lines in series.\r\n         *\r\n         * `mapLines.template` can also be used to configure lines.\r\n         *\r\n         * @default new ListTemplate<MapLine>\r\n         */\r\n        Object.defineProperty(this, \"mapLines\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.addDisposer(new _core_util_List__WEBPACK_IMPORTED_MODULE_1__.ListTemplate(_core_util_Template__WEBPACK_IMPORTED_MODULE_2__.Template.new({}), () => _MapLine__WEBPACK_IMPORTED_MODULE_3__.MapLine._new(this._root, {}, [this.mapLines.template])))\r\n        });\r\n        Object.defineProperty(this, \"_types\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\"LineString\", \"MultiLineString\"]\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this.fields.push(\"lineType\");\r\n        this._setRawDefault(\"lineTypeField\", \"lineType\");\r\n        super._afterNew();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeMapLine(dataItem) {\r\n        const mapLine = this.children.push(this.mapLines.make());\r\n        mapLine._setDataItem(dataItem);\r\n        this.mapLines.push(mapLine);\r\n        return mapLine;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyProjection() {\r\n        _core_util_Array__WEBPACK_IMPORTED_MODULE_4__.each(this.dataItems, (dataItem) => {\r\n            let mapLine = dataItem.get(\"mapLine\");\r\n            if (mapLine) {\r\n                mapLine.markDirtyProjection();\r\n            }\r\n        });\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        if (this.isDirty(\"stroke\")) {\r\n            this.mapLines.template.set(\"stroke\", this.get(\"stroke\"));\r\n        }\r\n    }\r\n    processDataItem(dataItem) {\r\n        super.processDataItem(dataItem);\r\n        let mapLine = dataItem.get(\"mapLine\");\r\n        if (!mapLine) {\r\n            mapLine = this.makeMapLine(dataItem);\r\n        }\r\n        this._handlePointsToConnect(dataItem);\r\n        dataItem.on(\"pointsToConnect\", () => {\r\n            this._handlePointsToConnect(dataItem);\r\n        });\r\n        dataItem.set(\"mapLine\", mapLine);\r\n        this._addGeometry(dataItem.get(\"geometry\"), this);\r\n        mapLine.setPrivate(\"series\", this);\r\n    }\r\n    _handlePointsToConnect(dataItem) {\r\n        const pointsToConnect = dataItem.get(\"pointsToConnect\");\r\n        if (pointsToConnect) {\r\n            _core_util_Array__WEBPACK_IMPORTED_MODULE_4__.each(pointsToConnect, (point) => {\r\n                point.on(\"geometry\", () => {\r\n                    this.markDirtyValues(dataItem);\r\n                });\r\n                point.on(\"longitude\", () => {\r\n                    this.markDirtyValues(dataItem);\r\n                });\r\n                point.on(\"latitude\", () => {\r\n                    this.markDirtyValues(dataItem);\r\n                });\r\n            });\r\n            this.markDirtyValues(dataItem);\r\n        }\r\n    }\r\n    /**\r\n     * Forces a repaint of the element which relies on data.\r\n     *\r\n     * @since 5.0.21\r\n     */\r\n    markDirtyValues(dataItem) {\r\n        super.markDirtyValues();\r\n        if (dataItem) {\r\n            const mapLine = dataItem.get(\"mapLine\");\r\n            if (mapLine) {\r\n                const pointsToConnect = dataItem.get(\"pointsToConnect\");\r\n                if (pointsToConnect) {\r\n                    let coordinates = [];\r\n                    _core_util_Array__WEBPACK_IMPORTED_MODULE_4__.each(pointsToConnect, (point) => {\r\n                        const longitude = point.get(\"longitude\");\r\n                        const latitude = point.get(\"latitude\");\r\n                        if (longitude != null && latitude != null) {\r\n                            coordinates.push([longitude, latitude]);\r\n                        }\r\n                        else {\r\n                            const geometry = point.get(\"geometry\");\r\n                            if (geometry) {\r\n                                const coords = geometry.coordinates;\r\n                                if (coords) {\r\n                                    coordinates.push([coords[0], coords[1]]);\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                    let geometry = { type: \"LineString\", coordinates: coordinates };\r\n                    dataItem.setRaw(\"geometry\", geometry);\r\n                    mapLine.set(\"geometry\", geometry);\r\n                }\r\n                else {\r\n                    mapLine.set(\"geometry\", dataItem.get(\"geometry\"));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(dataItem) {\r\n        super.disposeDataItem(dataItem);\r\n        const mapLine = dataItem.get(\"mapLine\");\r\n        if (mapLine) {\r\n            this.mapLines.removeValue(mapLine);\r\n            mapLine.dispose();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _excludeDataItem(dataItem) {\r\n        super._excludeDataItem(dataItem);\r\n        const mapLine = dataItem.get(\"mapLine\");\r\n        if (mapLine) {\r\n            mapLine.setPrivate(\"visible\", false);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _unexcludeDataItem(dataItem) {\r\n        super._unexcludeDataItem(dataItem);\r\n        const mapLine = dataItem.get(\"mapLine\");\r\n        if (mapLine) {\r\n            mapLine.setPrivate(\"visible\", true);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _notIncludeDataItem(dataItem) {\r\n        super._notIncludeDataItem(dataItem);\r\n        const mapLine = dataItem.get(\"mapLine\");\r\n        if (mapLine) {\r\n            mapLine.setPrivate(\"visible\", false);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _unNotIncludeDataItem(dataItem) {\r\n        super._unNotIncludeDataItem(dataItem);\r\n        const mapLine = dataItem.get(\"mapLine\");\r\n        if (mapLine) {\r\n            mapLine.setPrivate(\"visible\", true);\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(MapLineSeries, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"MapLineSeries\"\r\n});\r\nObject.defineProperty(MapLineSeries, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: _MapSeries__WEBPACK_IMPORTED_MODULE_0__.MapSeries.classNames.concat([MapLineSeries.className])\r\n});\r\n//# sourceMappingURL=MapLineSeries.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/charts/map/MapLineSeries.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/charts/map/MapPointSeries.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/charts/map/MapPointSeries.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MapPointSeries: () => (/* binding */ MapPointSeries)\n/* harmony export */ });\n/* harmony import */ var _MapSeries__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./MapSeries */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/charts/map/MapSeries.js\");\n/* harmony import */ var _core_util_Array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/util/Array */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Array.js\");\n/* harmony import */ var _core_util_Type__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/util/Type */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Type.js\");\n/* harmony import */ var _core_util_Math__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/util/Math */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Math.js\");\n\r\n\r\n\r\n\r\n;\r\n/**\r\n * Creates a map series for displaying markers on the map.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-point-series/} for more info\r\n * @important\r\n */\r\nclass MapPointSeries extends _MapSeries__WEBPACK_IMPORTED_MODULE_0__.MapSeries {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_types\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\"Point\", \"MultiPoint\"]\r\n        });\r\n        Object.defineProperty(this, \"_lineChangedDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this.fields.push(\"polygonId\", \"lineId\", \"longitude\", \"latitude\", \"fixed\");\r\n        super._afterNew();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyProjection() {\r\n        this.markDirty();\r\n    }\r\n    /**\r\n     * Forces a repaint of the element which relies on data.\r\n     *\r\n     * @since 5.0.21\r\n     */\r\n    markDirtyValues(dataItem) {\r\n        super.markDirtyValues();\r\n        if (dataItem) {\r\n            this._positionBullets(dataItem);\r\n        }\r\n    }\r\n    processDataItem(dataItem) {\r\n        super.processDataItem(dataItem);\r\n        let geometry = dataItem.get(\"geometry\");\r\n        if (!geometry) {\r\n            geometry = { type: \"Point\", coordinates: [dataItem.get(\"longitude\", 0), dataItem.get(\"latitude\", 0)] };\r\n            dataItem.set(\"geometry\", geometry);\r\n        }\r\n        else {\r\n            if (geometry.type == \"Point\") {\r\n                const coordinates = geometry.coordinates;\r\n                if (coordinates) {\r\n                    dataItem.set(\"longitude\", coordinates[0]);\r\n                    dataItem.set(\"latitude\", coordinates[1]);\r\n                }\r\n            }\r\n            else if (geometry.type == \"MultiPoint\") {\r\n                const coordinates = geometry.coordinates;\r\n                if (coordinates && coordinates[0]) {\r\n                    dataItem.set(\"longitude\", coordinates[0][0]);\r\n                    dataItem.set(\"latitude\", coordinates[0][1]);\r\n                }\r\n            }\r\n        }\r\n        this._addGeometry(geometry, this);\r\n    }\r\n    _makeBullets(dataItem) {\r\n        dataItem.bullets = [];\r\n        this.bullets.each((bulletFunction) => {\r\n            const geometry = dataItem.get(\"geometry\");\r\n            if (geometry) {\r\n                if (geometry.type == \"Point\") {\r\n                    this._setBulletParent(this._makeBullet(dataItem, bulletFunction));\r\n                }\r\n                else if (geometry.type = \"MultiPoint\") {\r\n                    let i = 0;\r\n                    _core_util_Array__WEBPACK_IMPORTED_MODULE_1__.each(geometry.coordinates, () => {\r\n                        this._setBulletParent(this._makeBullet(dataItem, bulletFunction, i));\r\n                        i++;\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n    _setBulletParent(bullet) {\r\n        if (bullet) {\r\n            const sprite = bullet.get(\"sprite\");\r\n            const chart = this.chart;\r\n            if (sprite && chart) {\r\n                const dataItem = sprite.dataItem;\r\n                if (dataItem) {\r\n                    if (dataItem.get(\"fixed\")) {\r\n                        if (sprite.parent != chart.bulletsContainer) {\r\n                            chart.bulletsContainer.children.moveValue(sprite);\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (sprite.parent != this.bulletsContainer) {\r\n                            this.bulletsContainer.children.moveValue(sprite);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _positionBullet(bullet) {\r\n        const sprite = bullet.get(\"sprite\");\r\n        if (sprite) {\r\n            const dataItem = sprite.dataItem;\r\n            if (dataItem && dataItem.get(\"fixed\")) {\r\n                return;\r\n            }\r\n            const latitude = dataItem.get(\"latitude\");\r\n            const longitude = dataItem.get(\"longitude\");\r\n            const lineDataItem = dataItem.get(\"lineDataItem\");\r\n            const fixed = dataItem.get(\"fixed\");\r\n            const chart = this.chart;\r\n            let line;\r\n            if (lineDataItem) {\r\n                line = lineDataItem.get(\"mapLine\");\r\n            }\r\n            else {\r\n                const lineId = dataItem.get(\"lineId\");\r\n                if (lineId && chart) {\r\n                    chart.series.each((series) => {\r\n                        if (series.isType(\"MapLineSeries\")) {\r\n                            let lineDI = series.getDataItemById(lineId);\r\n                            if (lineDI) {\r\n                                dataItem.set(\"lineDataItem\", lineDI);\r\n                                line = lineDI.get(\"mapLine\");\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            if (this._lineChangedDp) {\r\n                this._lineChangedDp.dispose();\r\n            }\r\n            if (line) {\r\n                this._lineChangedDp = line.events.on(\"linechanged\", () => {\r\n                    this._positionBullets(dataItem);\r\n                });\r\n            }\r\n            const polygonDataItem = dataItem.get(\"polygonDataItem\");\r\n            let polygon;\r\n            if (polygonDataItem) {\r\n                polygon = polygonDataItem.get(\"mapPolygon\");\r\n            }\r\n            else {\r\n                const polygonId = dataItem.get(\"polygonId\");\r\n                if (polygonId && chart) {\r\n                    chart.series.each((series) => {\r\n                        if (series.isType(\"MapPolygonSeries\")) {\r\n                            let polygonDI = series.getDataItemById(polygonId);\r\n                            if (polygonDI) {\r\n                                dataItem.set(\"polygonDataItem\", polygonDI);\r\n                                polygon = polygonDI.get(\"mapPolygon\");\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            const positionOnLine = dataItem.get(\"positionOnLine\");\r\n            let coordinates;\r\n            let angle;\r\n            if (polygon) {\r\n                let geoPoint = polygon.visualCentroid();\r\n                coordinates = [geoPoint.longitude, geoPoint.latitude];\r\n                dataItem.setRaw(\"longitude\", geoPoint.longitude);\r\n                dataItem.setRaw(\"latitude\", geoPoint.latitude);\r\n            }\r\n            else if (line && _core_util_Type__WEBPACK_IMPORTED_MODULE_2__.isNumber(positionOnLine)) {\r\n                let geoPoint = line.positionToGeoPoint(positionOnLine);\r\n                coordinates = [geoPoint.longitude, geoPoint.latitude];\r\n                if (dataItem.get(\"autoRotate\", bullet.get(\"autoRotate\")) && chart) {\r\n                    const geoPoint0 = line.positionToGeoPoint(positionOnLine - 0.002);\r\n                    const geoPoint1 = line.positionToGeoPoint(positionOnLine + 0.002);\r\n                    const point0 = chart.convert(geoPoint0);\r\n                    const point1 = chart.convert(geoPoint1);\r\n                    //dataItem.set(\"autoRotateAngle\", $math.getAngle(point0, point1));\r\n                    angle = _core_util_Math__WEBPACK_IMPORTED_MODULE_3__.getAngle(point0, point1);\r\n                }\r\n                dataItem.setRaw(\"longitude\", geoPoint.longitude);\r\n                dataItem.setRaw(\"latitude\", geoPoint.latitude);\r\n            }\r\n            else if (_core_util_Type__WEBPACK_IMPORTED_MODULE_2__.isNumber(longitude) && _core_util_Type__WEBPACK_IMPORTED_MODULE_2__.isNumber(latitude)) {\r\n                coordinates = [longitude, latitude];\r\n            }\r\n            else {\r\n                const geometry = dataItem.get(\"geometry\");\r\n                if (geometry) {\r\n                    if (geometry.type == \"Point\") {\r\n                        this._positionBulletReal(bullet, geometry, geometry.coordinates, angle);\r\n                    }\r\n                    else if (geometry.type == \"MultiPoint\") {\r\n                        let index = bullet._index || 0;\r\n                        coordinates = geometry.coordinates[index];\r\n                    }\r\n                }\r\n            }\r\n            if (!fixed && coordinates) {\r\n                this._positionBulletReal(bullet, { type: \"Point\", coordinates: coordinates }, coordinates, angle);\r\n            }\r\n        }\r\n    }\r\n    _positionBulletReal(bullet, geometry, coordinates, angle) {\r\n        const sprite = bullet.get(\"sprite\");\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            const projection = chart.get(\"projection\");\r\n            const geoPath = chart.getPrivate(\"geoPath\");\r\n            const dataItem = sprite.dataItem;\r\n            const xy = projection(coordinates);\r\n            if (xy) {\r\n                const point = { x: xy[0], y: xy[1] };\r\n                sprite.setAll(point);\r\n                dataItem.setRaw(\"point\", point);\r\n            }\r\n            let visible = true;\r\n            if (geoPath(geometry)) {\r\n                if (this.get(\"clipFront\")) {\r\n                    visible = false;\r\n                }\r\n            }\r\n            else {\r\n                if (this.get(\"clipBack\")) {\r\n                    visible = false;\r\n                }\r\n            }\r\n            sprite.setPrivate(\"visible\", visible);\r\n            dataItem.set(\"clipped\", !visible);\r\n            if (dataItem && angle != null && dataItem.get(\"autoRotate\", bullet.get(\"autoRotate\"))) {\r\n                sprite.set(\"rotation\", angle + dataItem.get(\"autoRotateAngle\", bullet.get(\"autoRotateAngle\", 0)));\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Centers the map to specific series' data item and zooms to the level\r\n     * specified in the parameters.\r\n     *\r\n     * @param  dataItem   Map point\r\n     * @param  zoomLevel  Zoom level\r\n     * @param  rotate If it's true, the map will rotate so that this point would be in the center. Mostly usefull with geoOrthographic projection.\r\n     */\r\n    zoomToDataItem(dataItem, zoomLevel, rotate) {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            const longitude = dataItem.get(\"longitude\", 0);\r\n            const latitude = dataItem.get(\"latitude\", 0);\r\n            if (rotate) {\r\n                return chart.zoomToGeoPoint({ longitude: longitude, latitude: latitude }, zoomLevel, true, undefined, -longitude, -latitude);\r\n            }\r\n            return chart.zoomToGeoPoint({ longitude: longitude, latitude: latitude }, zoomLevel, true);\r\n        }\r\n    }\r\n    /**\r\n     * Zooms the map in so that all points in the array are visible.\r\n     *\r\n     * @param   dataItems  An array of data items of points to zoom to\r\n     * @param   rotate     Rotate the map so it is centered on the selected items\r\n     * @return             Animation\r\n     * @since 5.5.6\r\n     */\r\n    zoomToDataItems(dataItems, rotate) {\r\n        let left = null;\r\n        let right = null;\r\n        let top = null;\r\n        let bottom = null;\r\n        _core_util_Array__WEBPACK_IMPORTED_MODULE_1__.each(dataItems, (dataItem) => {\r\n            const longitude = dataItem.get(\"longitude\", 0);\r\n            const latitude = dataItem.get(\"latitude\", 0);\r\n            if (left == null || left > longitude) {\r\n                left = longitude;\r\n            }\r\n            if (right == null || right < longitude) {\r\n                right = longitude;\r\n            }\r\n            if (top == null || top < latitude) {\r\n                top = latitude;\r\n            }\r\n            if (bottom == null || bottom > latitude) {\r\n                bottom = latitude;\r\n            }\r\n        });\r\n        if (left != null && right != null && top != null && bottom != null) {\r\n            const chart = this.chart;\r\n            if (chart) {\r\n                if (rotate) {\r\n                    return chart.zoomToGeoBounds({ left, right, top, bottom }, undefined, -(left + (right - left) / 2), -(top + (top - bottom) / 2));\r\n                }\r\n                return chart.zoomToGeoBounds({ left, right, top, bottom });\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(dataItem) {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            chart.series.each((series) => {\r\n                if (series.isType(\"MapLineSeries\")) {\r\n                    _core_util_Array__WEBPACK_IMPORTED_MODULE_1__.each(series.dataItems, (di) => {\r\n                        const pointsToConnect = di.get(\"pointsToConnect\");\r\n                        if (pointsToConnect) {\r\n                            _core_util_Array__WEBPACK_IMPORTED_MODULE_1__.each(pointsToConnect, (point) => {\r\n                                if (point == dataItem) {\r\n                                    _core_util_Array__WEBPACK_IMPORTED_MODULE_1__.remove(pointsToConnect, point);\r\n                                    series.markDirtyValues(di);\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        super.disposeDataItem(dataItem);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _excludeDataItem(dataItem) {\r\n        super._excludeDataItem(dataItem);\r\n        const bullets = dataItem.bullets;\r\n        if (bullets) {\r\n            _core_util_Array__WEBPACK_IMPORTED_MODULE_1__.each(bullets, (bullet) => {\r\n                const sprite = bullet.get(\"sprite\");\r\n                if (sprite) {\r\n                    sprite.setPrivate(\"visible\", false);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _unexcludeDataItem(dataItem) {\r\n        super._unexcludeDataItem(dataItem);\r\n        const bullets = dataItem.bullets;\r\n        if (bullets) {\r\n            _core_util_Array__WEBPACK_IMPORTED_MODULE_1__.each(bullets, (bullet) => {\r\n                const sprite = bullet.get(\"sprite\");\r\n                if (sprite) {\r\n                    sprite.setPrivate(\"visible\", true);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _notIncludeDataItem(dataItem) {\r\n        super._notIncludeDataItem(dataItem);\r\n        const bullets = dataItem.bullets;\r\n        if (bullets) {\r\n            _core_util_Array__WEBPACK_IMPORTED_MODULE_1__.each(bullets, (bullet) => {\r\n                const sprite = bullet.get(\"sprite\");\r\n                if (sprite) {\r\n                    sprite.setPrivate(\"visible\", false);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _unNotIncludeDataItem(dataItem) {\r\n        super._unNotIncludeDataItem(dataItem);\r\n        const bullets = dataItem.bullets;\r\n        if (bullets) {\r\n            _core_util_Array__WEBPACK_IMPORTED_MODULE_1__.each(bullets, (bullet) => {\r\n                const sprite = bullet.get(\"sprite\");\r\n                if (sprite) {\r\n                    sprite.setPrivate(\"visible\", true);\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(MapPointSeries, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"MapPointSeries\"\r\n});\r\nObject.defineProperty(MapPointSeries, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: _MapSeries__WEBPACK_IMPORTED_MODULE_0__.MapSeries.classNames.concat([MapPointSeries.className])\r\n});\r\n//# sourceMappingURL=MapPointSeries.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNS8uaW50ZXJuYWwvY2hhcnRzL21hcC9NYXBQb2ludFNlcmllcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUF3QztBQUNRO0FBQ0Y7QUFDQTtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsMkVBQTJFO0FBQ3BGO0FBQ0E7QUFDTyw2QkFBNkIsaURBQVM7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixrREFBVztBQUMvQjtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIscURBQWM7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixxREFBYztBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixxREFBYyxlQUFlLHFEQUFjO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1EQUFtRCx5Q0FBeUM7QUFDNUY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsMENBQTBDO0FBQ3hGO0FBQ0EsMENBQTBDLDBDQUEwQztBQUNwRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLGtEQUFXO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtREFBbUQsMEJBQTBCO0FBQzdFO0FBQ0EsK0NBQStDLDBCQUEwQjtBQUN6RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLGtEQUFXO0FBQy9CO0FBQ0E7QUFDQSw0QkFBNEIsa0RBQVc7QUFDdkM7QUFDQSxvQ0FBb0Msb0RBQWE7QUFDakQ7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksa0RBQVc7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxrREFBVztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLGtEQUFXO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksa0RBQVc7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsaURBQVM7QUFDcEIsQ0FBQztBQUNEIiwic291cmNlcyI6WyIvaG9tZS9ydW5uZXIvd29ya3NwYWNlL25vZGVfbW9kdWxlcy9AYW1jaGFydHMvYW1jaGFydHM1Ly5pbnRlcm5hbC9jaGFydHMvbWFwL01hcFBvaW50U2VyaWVzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1hcFNlcmllcyB9IGZyb20gXCIuL01hcFNlcmllc1wiO1xyXG5pbXBvcnQgKiBhcyAkYXJyYXkgZnJvbSBcIi4uLy4uL2NvcmUvdXRpbC9BcnJheVwiO1xyXG5pbXBvcnQgKiBhcyAkdHlwZSBmcm9tIFwiLi4vLi4vY29yZS91dGlsL1R5cGVcIjtcclxuaW1wb3J0ICogYXMgJG1hdGggZnJvbSBcIi4uLy4uL2NvcmUvdXRpbC9NYXRoXCI7XHJcbjtcclxuLyoqXHJcbiAqIENyZWF0ZXMgYSBtYXAgc2VyaWVzIGZvciBkaXNwbGF5aW5nIG1hcmtlcnMgb24gdGhlIG1hcC5cclxuICpcclxuICogQHNlZSB7QGxpbmsgaHR0cHM6Ly93d3cuYW1jaGFydHMuY29tL2RvY3MvdjUvY2hhcnRzL21hcC1jaGFydC9tYXAtcG9pbnQtc2VyaWVzL30gZm9yIG1vcmUgaW5mb1xyXG4gKiBAaW1wb3J0YW50XHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgTWFwUG9pbnRTZXJpZXMgZXh0ZW5kcyBNYXBTZXJpZXMge1xyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcclxuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJfdHlwZXNcIiwge1xyXG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXHJcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxyXG4gICAgICAgICAgICB2YWx1ZTogW1wiUG9pbnRcIiwgXCJNdWx0aVBvaW50XCJdXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiX2xpbmVDaGFuZ2VkRHBcIiwge1xyXG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXHJcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxyXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICBfYWZ0ZXJOZXcoKSB7XHJcbiAgICAgICAgdGhpcy5maWVsZHMucHVzaChcInBvbHlnb25JZFwiLCBcImxpbmVJZFwiLCBcImxvbmdpdHVkZVwiLCBcImxhdGl0dWRlXCIsIFwiZml4ZWRcIik7XHJcbiAgICAgICAgc3VwZXIuX2FmdGVyTmV3KCk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIEBpZ25vcmVcclxuICAgICAqL1xyXG4gICAgbWFya0RpcnR5UHJvamVjdGlvbigpIHtcclxuICAgICAgICB0aGlzLm1hcmtEaXJ0eSgpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBGb3JjZXMgYSByZXBhaW50IG9mIHRoZSBlbGVtZW50IHdoaWNoIHJlbGllcyBvbiBkYXRhLlxyXG4gICAgICpcclxuICAgICAqIEBzaW5jZSA1LjAuMjFcclxuICAgICAqL1xyXG4gICAgbWFya0RpcnR5VmFsdWVzKGRhdGFJdGVtKSB7XHJcbiAgICAgICAgc3VwZXIubWFya0RpcnR5VmFsdWVzKCk7XHJcbiAgICAgICAgaWYgKGRhdGFJdGVtKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX3Bvc2l0aW9uQnVsbGV0cyhkYXRhSXRlbSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgcHJvY2Vzc0RhdGFJdGVtKGRhdGFJdGVtKSB7XHJcbiAgICAgICAgc3VwZXIucHJvY2Vzc0RhdGFJdGVtKGRhdGFJdGVtKTtcclxuICAgICAgICBsZXQgZ2VvbWV0cnkgPSBkYXRhSXRlbS5nZXQoXCJnZW9tZXRyeVwiKTtcclxuICAgICAgICBpZiAoIWdlb21ldHJ5KSB7XHJcbiAgICAgICAgICAgIGdlb21ldHJ5ID0geyB0eXBlOiBcIlBvaW50XCIsIGNvb3JkaW5hdGVzOiBbZGF0YUl0ZW0uZ2V0KFwibG9uZ2l0dWRlXCIsIDApLCBkYXRhSXRlbS5nZXQoXCJsYXRpdHVkZVwiLCAwKV0gfTtcclxuICAgICAgICAgICAgZGF0YUl0ZW0uc2V0KFwiZ2VvbWV0cnlcIiwgZ2VvbWV0cnkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgaWYgKGdlb21ldHJ5LnR5cGUgPT0gXCJQb2ludFwiKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBjb29yZGluYXRlcyA9IGdlb21ldHJ5LmNvb3JkaW5hdGVzO1xyXG4gICAgICAgICAgICAgICAgaWYgKGNvb3JkaW5hdGVzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZGF0YUl0ZW0uc2V0KFwibG9uZ2l0dWRlXCIsIGNvb3JkaW5hdGVzWzBdKTtcclxuICAgICAgICAgICAgICAgICAgICBkYXRhSXRlbS5zZXQoXCJsYXRpdHVkZVwiLCBjb29yZGluYXRlc1sxXSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSBpZiAoZ2VvbWV0cnkudHlwZSA9PSBcIk11bHRpUG9pbnRcIikge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgY29vcmRpbmF0ZXMgPSBnZW9tZXRyeS5jb29yZGluYXRlcztcclxuICAgICAgICAgICAgICAgIGlmIChjb29yZGluYXRlcyAmJiBjb29yZGluYXRlc1swXSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGRhdGFJdGVtLnNldChcImxvbmdpdHVkZVwiLCBjb29yZGluYXRlc1swXVswXSk7XHJcbiAgICAgICAgICAgICAgICAgICAgZGF0YUl0ZW0uc2V0KFwibGF0aXR1ZGVcIiwgY29vcmRpbmF0ZXNbMF1bMV0pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuX2FkZEdlb21ldHJ5KGdlb21ldHJ5LCB0aGlzKTtcclxuICAgIH1cclxuICAgIF9tYWtlQnVsbGV0cyhkYXRhSXRlbSkge1xyXG4gICAgICAgIGRhdGFJdGVtLmJ1bGxldHMgPSBbXTtcclxuICAgICAgICB0aGlzLmJ1bGxldHMuZWFjaCgoYnVsbGV0RnVuY3Rpb24pID0+IHtcclxuICAgICAgICAgICAgY29uc3QgZ2VvbWV0cnkgPSBkYXRhSXRlbS5nZXQoXCJnZW9tZXRyeVwiKTtcclxuICAgICAgICAgICAgaWYgKGdlb21ldHJ5KSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoZ2VvbWV0cnkudHlwZSA9PSBcIlBvaW50XCIpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLl9zZXRCdWxsZXRQYXJlbnQodGhpcy5fbWFrZUJ1bGxldChkYXRhSXRlbSwgYnVsbGV0RnVuY3Rpb24pKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKGdlb21ldHJ5LnR5cGUgPSBcIk11bHRpUG9pbnRcIikge1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBpID0gMDtcclxuICAgICAgICAgICAgICAgICAgICAkYXJyYXkuZWFjaChnZW9tZXRyeS5jb29yZGluYXRlcywgKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLl9zZXRCdWxsZXRQYXJlbnQodGhpcy5fbWFrZUJ1bGxldChkYXRhSXRlbSwgYnVsbGV0RnVuY3Rpb24sIGkpKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaSsrO1xyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICBfc2V0QnVsbGV0UGFyZW50KGJ1bGxldCkge1xyXG4gICAgICAgIGlmIChidWxsZXQpIHtcclxuICAgICAgICAgICAgY29uc3Qgc3ByaXRlID0gYnVsbGV0LmdldChcInNwcml0ZVwiKTtcclxuICAgICAgICAgICAgY29uc3QgY2hhcnQgPSB0aGlzLmNoYXJ0O1xyXG4gICAgICAgICAgICBpZiAoc3ByaXRlICYmIGNoYXJ0KSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBkYXRhSXRlbSA9IHNwcml0ZS5kYXRhSXRlbTtcclxuICAgICAgICAgICAgICAgIGlmIChkYXRhSXRlbSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChkYXRhSXRlbS5nZXQoXCJmaXhlZFwiKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoc3ByaXRlLnBhcmVudCAhPSBjaGFydC5idWxsZXRzQ29udGFpbmVyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGFydC5idWxsZXRzQ29udGFpbmVyLmNoaWxkcmVuLm1vdmVWYWx1ZShzcHJpdGUpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoc3ByaXRlLnBhcmVudCAhPSB0aGlzLmJ1bGxldHNDb250YWluZXIpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYnVsbGV0c0NvbnRhaW5lci5jaGlsZHJlbi5tb3ZlVmFsdWUoc3ByaXRlKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIF9wb3NpdGlvbkJ1bGxldChidWxsZXQpIHtcclxuICAgICAgICBjb25zdCBzcHJpdGUgPSBidWxsZXQuZ2V0KFwic3ByaXRlXCIpO1xyXG4gICAgICAgIGlmIChzcHJpdGUpIHtcclxuICAgICAgICAgICAgY29uc3QgZGF0YUl0ZW0gPSBzcHJpdGUuZGF0YUl0ZW07XHJcbiAgICAgICAgICAgIGlmIChkYXRhSXRlbSAmJiBkYXRhSXRlbS5nZXQoXCJmaXhlZFwiKSkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGNvbnN0IGxhdGl0dWRlID0gZGF0YUl0ZW0uZ2V0KFwibGF0aXR1ZGVcIik7XHJcbiAgICAgICAgICAgIGNvbnN0IGxvbmdpdHVkZSA9IGRhdGFJdGVtLmdldChcImxvbmdpdHVkZVwiKTtcclxuICAgICAgICAgICAgY29uc3QgbGluZURhdGFJdGVtID0gZGF0YUl0ZW0uZ2V0KFwibGluZURhdGFJdGVtXCIpO1xyXG4gICAgICAgICAgICBjb25zdCBmaXhlZCA9IGRhdGFJdGVtLmdldChcImZpeGVkXCIpO1xyXG4gICAgICAgICAgICBjb25zdCBjaGFydCA9IHRoaXMuY2hhcnQ7XHJcbiAgICAgICAgICAgIGxldCBsaW5lO1xyXG4gICAgICAgICAgICBpZiAobGluZURhdGFJdGVtKSB7XHJcbiAgICAgICAgICAgICAgICBsaW5lID0gbGluZURhdGFJdGVtLmdldChcIm1hcExpbmVcIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBsaW5lSWQgPSBkYXRhSXRlbS5nZXQoXCJsaW5lSWRcIik7XHJcbiAgICAgICAgICAgICAgICBpZiAobGluZUlkICYmIGNoYXJ0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY2hhcnQuc2VyaWVzLmVhY2goKHNlcmllcykgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoc2VyaWVzLmlzVHlwZShcIk1hcExpbmVTZXJpZXNcIikpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBsaW5lREkgPSBzZXJpZXMuZ2V0RGF0YUl0ZW1CeUlkKGxpbmVJZCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAobGluZURJKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YUl0ZW0uc2V0KFwibGluZURhdGFJdGVtXCIsIGxpbmVESSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGluZSA9IGxpbmVESS5nZXQoXCJtYXBMaW5lXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKHRoaXMuX2xpbmVDaGFuZ2VkRHApIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2xpbmVDaGFuZ2VkRHAuZGlzcG9zZSgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmIChsaW5lKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9saW5lQ2hhbmdlZERwID0gbGluZS5ldmVudHMub24oXCJsaW5lY2hhbmdlZFwiLCAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fcG9zaXRpb25CdWxsZXRzKGRhdGFJdGVtKTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGNvbnN0IHBvbHlnb25EYXRhSXRlbSA9IGRhdGFJdGVtLmdldChcInBvbHlnb25EYXRhSXRlbVwiKTtcclxuICAgICAgICAgICAgbGV0IHBvbHlnb247XHJcbiAgICAgICAgICAgIGlmIChwb2x5Z29uRGF0YUl0ZW0pIHtcclxuICAgICAgICAgICAgICAgIHBvbHlnb24gPSBwb2x5Z29uRGF0YUl0ZW0uZ2V0KFwibWFwUG9seWdvblwiKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IHBvbHlnb25JZCA9IGRhdGFJdGVtLmdldChcInBvbHlnb25JZFwiKTtcclxuICAgICAgICAgICAgICAgIGlmIChwb2x5Z29uSWQgJiYgY2hhcnQpIHtcclxuICAgICAgICAgICAgICAgICAgICBjaGFydC5zZXJpZXMuZWFjaCgoc2VyaWVzKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzZXJpZXMuaXNUeXBlKFwiTWFwUG9seWdvblNlcmllc1wiKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHBvbHlnb25ESSA9IHNlcmllcy5nZXREYXRhSXRlbUJ5SWQocG9seWdvbklkKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChwb2x5Z29uREkpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhSXRlbS5zZXQoXCJwb2x5Z29uRGF0YUl0ZW1cIiwgcG9seWdvbkRJKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwb2x5Z29uID0gcG9seWdvbkRJLmdldChcIm1hcFBvbHlnb25cIik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjb25zdCBwb3NpdGlvbk9uTGluZSA9IGRhdGFJdGVtLmdldChcInBvc2l0aW9uT25MaW5lXCIpO1xyXG4gICAgICAgICAgICBsZXQgY29vcmRpbmF0ZXM7XHJcbiAgICAgICAgICAgIGxldCBhbmdsZTtcclxuICAgICAgICAgICAgaWYgKHBvbHlnb24pIHtcclxuICAgICAgICAgICAgICAgIGxldCBnZW9Qb2ludCA9IHBvbHlnb24udmlzdWFsQ2VudHJvaWQoKTtcclxuICAgICAgICAgICAgICAgIGNvb3JkaW5hdGVzID0gW2dlb1BvaW50LmxvbmdpdHVkZSwgZ2VvUG9pbnQubGF0aXR1ZGVdO1xyXG4gICAgICAgICAgICAgICAgZGF0YUl0ZW0uc2V0UmF3KFwibG9uZ2l0dWRlXCIsIGdlb1BvaW50LmxvbmdpdHVkZSk7XHJcbiAgICAgICAgICAgICAgICBkYXRhSXRlbS5zZXRSYXcoXCJsYXRpdHVkZVwiLCBnZW9Qb2ludC5sYXRpdHVkZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSBpZiAobGluZSAmJiAkdHlwZS5pc051bWJlcihwb3NpdGlvbk9uTGluZSkpIHtcclxuICAgICAgICAgICAgICAgIGxldCBnZW9Qb2ludCA9IGxpbmUucG9zaXRpb25Ub0dlb1BvaW50KHBvc2l0aW9uT25MaW5lKTtcclxuICAgICAgICAgICAgICAgIGNvb3JkaW5hdGVzID0gW2dlb1BvaW50LmxvbmdpdHVkZSwgZ2VvUG9pbnQubGF0aXR1ZGVdO1xyXG4gICAgICAgICAgICAgICAgaWYgKGRhdGFJdGVtLmdldChcImF1dG9Sb3RhdGVcIiwgYnVsbGV0LmdldChcImF1dG9Sb3RhdGVcIikpICYmIGNoYXJ0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgZ2VvUG9pbnQwID0gbGluZS5wb3NpdGlvblRvR2VvUG9pbnQocG9zaXRpb25PbkxpbmUgLSAwLjAwMik7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgZ2VvUG9pbnQxID0gbGluZS5wb3NpdGlvblRvR2VvUG9pbnQocG9zaXRpb25PbkxpbmUgKyAwLjAwMik7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgcG9pbnQwID0gY2hhcnQuY29udmVydChnZW9Qb2ludDApO1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHBvaW50MSA9IGNoYXJ0LmNvbnZlcnQoZ2VvUG9pbnQxKTtcclxuICAgICAgICAgICAgICAgICAgICAvL2RhdGFJdGVtLnNldChcImF1dG9Sb3RhdGVBbmdsZVwiLCAkbWF0aC5nZXRBbmdsZShwb2ludDAsIHBvaW50MSkpO1xyXG4gICAgICAgICAgICAgICAgICAgIGFuZ2xlID0gJG1hdGguZ2V0QW5nbGUocG9pbnQwLCBwb2ludDEpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgZGF0YUl0ZW0uc2V0UmF3KFwibG9uZ2l0dWRlXCIsIGdlb1BvaW50LmxvbmdpdHVkZSk7XHJcbiAgICAgICAgICAgICAgICBkYXRhSXRlbS5zZXRSYXcoXCJsYXRpdHVkZVwiLCBnZW9Qb2ludC5sYXRpdHVkZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSBpZiAoJHR5cGUuaXNOdW1iZXIobG9uZ2l0dWRlKSAmJiAkdHlwZS5pc051bWJlcihsYXRpdHVkZSkpIHtcclxuICAgICAgICAgICAgICAgIGNvb3JkaW5hdGVzID0gW2xvbmdpdHVkZSwgbGF0aXR1ZGVdO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgZ2VvbWV0cnkgPSBkYXRhSXRlbS5nZXQoXCJnZW9tZXRyeVwiKTtcclxuICAgICAgICAgICAgICAgIGlmIChnZW9tZXRyeSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChnZW9tZXRyeS50eXBlID09IFwiUG9pbnRcIikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLl9wb3NpdGlvbkJ1bGxldFJlYWwoYnVsbGV0LCBnZW9tZXRyeSwgZ2VvbWV0cnkuY29vcmRpbmF0ZXMsIGFuZ2xlKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAoZ2VvbWV0cnkudHlwZSA9PSBcIk11bHRpUG9pbnRcIikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgaW5kZXggPSBidWxsZXQuX2luZGV4IHx8IDA7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvb3JkaW5hdGVzID0gZ2VvbWV0cnkuY29vcmRpbmF0ZXNbaW5kZXhdO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAoIWZpeGVkICYmIGNvb3JkaW5hdGVzKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9wb3NpdGlvbkJ1bGxldFJlYWwoYnVsbGV0LCB7IHR5cGU6IFwiUG9pbnRcIiwgY29vcmRpbmF0ZXM6IGNvb3JkaW5hdGVzIH0sIGNvb3JkaW5hdGVzLCBhbmdsZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBfcG9zaXRpb25CdWxsZXRSZWFsKGJ1bGxldCwgZ2VvbWV0cnksIGNvb3JkaW5hdGVzLCBhbmdsZSkge1xyXG4gICAgICAgIGNvbnN0IHNwcml0ZSA9IGJ1bGxldC5nZXQoXCJzcHJpdGVcIik7XHJcbiAgICAgICAgY29uc3QgY2hhcnQgPSB0aGlzLmNoYXJ0O1xyXG4gICAgICAgIGlmIChjaGFydCkge1xyXG4gICAgICAgICAgICBjb25zdCBwcm9qZWN0aW9uID0gY2hhcnQuZ2V0KFwicHJvamVjdGlvblwiKTtcclxuICAgICAgICAgICAgY29uc3QgZ2VvUGF0aCA9IGNoYXJ0LmdldFByaXZhdGUoXCJnZW9QYXRoXCIpO1xyXG4gICAgICAgICAgICBjb25zdCBkYXRhSXRlbSA9IHNwcml0ZS5kYXRhSXRlbTtcclxuICAgICAgICAgICAgY29uc3QgeHkgPSBwcm9qZWN0aW9uKGNvb3JkaW5hdGVzKTtcclxuICAgICAgICAgICAgaWYgKHh5KSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBwb2ludCA9IHsgeDogeHlbMF0sIHk6IHh5WzFdIH07XHJcbiAgICAgICAgICAgICAgICBzcHJpdGUuc2V0QWxsKHBvaW50KTtcclxuICAgICAgICAgICAgICAgIGRhdGFJdGVtLnNldFJhdyhcInBvaW50XCIsIHBvaW50KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBsZXQgdmlzaWJsZSA9IHRydWU7XHJcbiAgICAgICAgICAgIGlmIChnZW9QYXRoKGdlb21ldHJ5KSkge1xyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuZ2V0KFwiY2xpcEZyb250XCIpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmlzaWJsZSA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuZ2V0KFwiY2xpcEJhY2tcIikpIHtcclxuICAgICAgICAgICAgICAgICAgICB2aXNpYmxlID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgc3ByaXRlLnNldFByaXZhdGUoXCJ2aXNpYmxlXCIsIHZpc2libGUpO1xyXG4gICAgICAgICAgICBkYXRhSXRlbS5zZXQoXCJjbGlwcGVkXCIsICF2aXNpYmxlKTtcclxuICAgICAgICAgICAgaWYgKGRhdGFJdGVtICYmIGFuZ2xlICE9IG51bGwgJiYgZGF0YUl0ZW0uZ2V0KFwiYXV0b1JvdGF0ZVwiLCBidWxsZXQuZ2V0KFwiYXV0b1JvdGF0ZVwiKSkpIHtcclxuICAgICAgICAgICAgICAgIHNwcml0ZS5zZXQoXCJyb3RhdGlvblwiLCBhbmdsZSArIGRhdGFJdGVtLmdldChcImF1dG9Sb3RhdGVBbmdsZVwiLCBidWxsZXQuZ2V0KFwiYXV0b1JvdGF0ZUFuZ2xlXCIsIDApKSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIENlbnRlcnMgdGhlIG1hcCB0byBzcGVjaWZpYyBzZXJpZXMnIGRhdGEgaXRlbSBhbmQgem9vbXMgdG8gdGhlIGxldmVsXHJcbiAgICAgKiBzcGVjaWZpZWQgaW4gdGhlIHBhcmFtZXRlcnMuXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtICBkYXRhSXRlbSAgIE1hcCBwb2ludFxyXG4gICAgICogQHBhcmFtICB6b29tTGV2ZWwgIFpvb20gbGV2ZWxcclxuICAgICAqIEBwYXJhbSAgcm90YXRlIElmIGl0J3MgdHJ1ZSwgdGhlIG1hcCB3aWxsIHJvdGF0ZSBzbyB0aGF0IHRoaXMgcG9pbnQgd291bGQgYmUgaW4gdGhlIGNlbnRlci4gTW9zdGx5IHVzZWZ1bGwgd2l0aCBnZW9PcnRob2dyYXBoaWMgcHJvamVjdGlvbi5cclxuICAgICAqL1xyXG4gICAgem9vbVRvRGF0YUl0ZW0oZGF0YUl0ZW0sIHpvb21MZXZlbCwgcm90YXRlKSB7XHJcbiAgICAgICAgY29uc3QgY2hhcnQgPSB0aGlzLmNoYXJ0O1xyXG4gICAgICAgIGlmIChjaGFydCkge1xyXG4gICAgICAgICAgICBjb25zdCBsb25naXR1ZGUgPSBkYXRhSXRlbS5nZXQoXCJsb25naXR1ZGVcIiwgMCk7XHJcbiAgICAgICAgICAgIGNvbnN0IGxhdGl0dWRlID0gZGF0YUl0ZW0uZ2V0KFwibGF0aXR1ZGVcIiwgMCk7XHJcbiAgICAgICAgICAgIGlmIChyb3RhdGUpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBjaGFydC56b29tVG9HZW9Qb2ludCh7IGxvbmdpdHVkZTogbG9uZ2l0dWRlLCBsYXRpdHVkZTogbGF0aXR1ZGUgfSwgem9vbUxldmVsLCB0cnVlLCB1bmRlZmluZWQsIC1sb25naXR1ZGUsIC1sYXRpdHVkZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIGNoYXJ0Lnpvb21Ub0dlb1BvaW50KHsgbG9uZ2l0dWRlOiBsb25naXR1ZGUsIGxhdGl0dWRlOiBsYXRpdHVkZSB9LCB6b29tTGV2ZWwsIHRydWUpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogWm9vbXMgdGhlIG1hcCBpbiBzbyB0aGF0IGFsbCBwb2ludHMgaW4gdGhlIGFycmF5IGFyZSB2aXNpYmxlLlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSAgIGRhdGFJdGVtcyAgQW4gYXJyYXkgb2YgZGF0YSBpdGVtcyBvZiBwb2ludHMgdG8gem9vbSB0b1xyXG4gICAgICogQHBhcmFtICAgcm90YXRlICAgICBSb3RhdGUgdGhlIG1hcCBzbyBpdCBpcyBjZW50ZXJlZCBvbiB0aGUgc2VsZWN0ZWQgaXRlbXNcclxuICAgICAqIEByZXR1cm4gICAgICAgICAgICAgQW5pbWF0aW9uXHJcbiAgICAgKiBAc2luY2UgNS41LjZcclxuICAgICAqL1xyXG4gICAgem9vbVRvRGF0YUl0ZW1zKGRhdGFJdGVtcywgcm90YXRlKSB7XHJcbiAgICAgICAgbGV0IGxlZnQgPSBudWxsO1xyXG4gICAgICAgIGxldCByaWdodCA9IG51bGw7XHJcbiAgICAgICAgbGV0IHRvcCA9IG51bGw7XHJcbiAgICAgICAgbGV0IGJvdHRvbSA9IG51bGw7XHJcbiAgICAgICAgJGFycmF5LmVhY2goZGF0YUl0ZW1zLCAoZGF0YUl0ZW0pID0+IHtcclxuICAgICAgICAgICAgY29uc3QgbG9uZ2l0dWRlID0gZGF0YUl0ZW0uZ2V0KFwibG9uZ2l0dWRlXCIsIDApO1xyXG4gICAgICAgICAgICBjb25zdCBsYXRpdHVkZSA9IGRhdGFJdGVtLmdldChcImxhdGl0dWRlXCIsIDApO1xyXG4gICAgICAgICAgICBpZiAobGVmdCA9PSBudWxsIHx8IGxlZnQgPiBsb25naXR1ZGUpIHtcclxuICAgICAgICAgICAgICAgIGxlZnQgPSBsb25naXR1ZGU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKHJpZ2h0ID09IG51bGwgfHwgcmlnaHQgPCBsb25naXR1ZGUpIHtcclxuICAgICAgICAgICAgICAgIHJpZ2h0ID0gbG9uZ2l0dWRlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmICh0b3AgPT0gbnVsbCB8fCB0b3AgPCBsYXRpdHVkZSkge1xyXG4gICAgICAgICAgICAgICAgdG9wID0gbGF0aXR1ZGU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKGJvdHRvbSA9PSBudWxsIHx8IGJvdHRvbSA+IGxhdGl0dWRlKSB7XHJcbiAgICAgICAgICAgICAgICBib3R0b20gPSBsYXRpdHVkZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIGlmIChsZWZ0ICE9IG51bGwgJiYgcmlnaHQgIT0gbnVsbCAmJiB0b3AgIT0gbnVsbCAmJiBib3R0b20gIT0gbnVsbCkge1xyXG4gICAgICAgICAgICBjb25zdCBjaGFydCA9IHRoaXMuY2hhcnQ7XHJcbiAgICAgICAgICAgIGlmIChjaGFydCkge1xyXG4gICAgICAgICAgICAgICAgaWYgKHJvdGF0ZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBjaGFydC56b29tVG9HZW9Cb3VuZHMoeyBsZWZ0LCByaWdodCwgdG9wLCBib3R0b20gfSwgdW5kZWZpbmVkLCAtKGxlZnQgKyAocmlnaHQgLSBsZWZ0KSAvIDIpLCAtKHRvcCArICh0b3AgLSBib3R0b20pIC8gMikpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGNoYXJ0Lnpvb21Ub0dlb0JvdW5kcyh7IGxlZnQsIHJpZ2h0LCB0b3AsIGJvdHRvbSB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogQGlnbm9yZVxyXG4gICAgICovXHJcbiAgICBkaXNwb3NlRGF0YUl0ZW0oZGF0YUl0ZW0pIHtcclxuICAgICAgICBjb25zdCBjaGFydCA9IHRoaXMuY2hhcnQ7XHJcbiAgICAgICAgaWYgKGNoYXJ0KSB7XHJcbiAgICAgICAgICAgIGNoYXJ0LnNlcmllcy5lYWNoKChzZXJpZXMpID0+IHtcclxuICAgICAgICAgICAgICAgIGlmIChzZXJpZXMuaXNUeXBlKFwiTWFwTGluZVNlcmllc1wiKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICRhcnJheS5lYWNoKHNlcmllcy5kYXRhSXRlbXMsIChkaSkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBwb2ludHNUb0Nvbm5lY3QgPSBkaS5nZXQoXCJwb2ludHNUb0Nvbm5lY3RcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChwb2ludHNUb0Nvbm5lY3QpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICRhcnJheS5lYWNoKHBvaW50c1RvQ29ubmVjdCwgKHBvaW50KSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHBvaW50ID09IGRhdGFJdGVtKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRhcnJheS5yZW1vdmUocG9pbnRzVG9Db25uZWN0LCBwb2ludCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlcmllcy5tYXJrRGlydHlWYWx1ZXMoZGkpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgICBzdXBlci5kaXNwb3NlRGF0YUl0ZW0oZGF0YUl0ZW0pO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBAaWdub3JlXHJcbiAgICAgKi9cclxuICAgIF9leGNsdWRlRGF0YUl0ZW0oZGF0YUl0ZW0pIHtcclxuICAgICAgICBzdXBlci5fZXhjbHVkZURhdGFJdGVtKGRhdGFJdGVtKTtcclxuICAgICAgICBjb25zdCBidWxsZXRzID0gZGF0YUl0ZW0uYnVsbGV0cztcclxuICAgICAgICBpZiAoYnVsbGV0cykge1xyXG4gICAgICAgICAgICAkYXJyYXkuZWFjaChidWxsZXRzLCAoYnVsbGV0KSA9PiB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBzcHJpdGUgPSBidWxsZXQuZ2V0KFwic3ByaXRlXCIpO1xyXG4gICAgICAgICAgICAgICAgaWYgKHNwcml0ZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHNwcml0ZS5zZXRQcml2YXRlKFwidmlzaWJsZVwiLCBmYWxzZSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogQGlnbm9yZVxyXG4gICAgICovXHJcbiAgICBfdW5leGNsdWRlRGF0YUl0ZW0oZGF0YUl0ZW0pIHtcclxuICAgICAgICBzdXBlci5fdW5leGNsdWRlRGF0YUl0ZW0oZGF0YUl0ZW0pO1xyXG4gICAgICAgIGNvbnN0IGJ1bGxldHMgPSBkYXRhSXRlbS5idWxsZXRzO1xyXG4gICAgICAgIGlmIChidWxsZXRzKSB7XHJcbiAgICAgICAgICAgICRhcnJheS5lYWNoKGJ1bGxldHMsIChidWxsZXQpID0+IHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IHNwcml0ZSA9IGJ1bGxldC5nZXQoXCJzcHJpdGVcIik7XHJcbiAgICAgICAgICAgICAgICBpZiAoc3ByaXRlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgc3ByaXRlLnNldFByaXZhdGUoXCJ2aXNpYmxlXCIsIHRydWUpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIEBpZ25vcmVcclxuICAgICAqL1xyXG4gICAgX25vdEluY2x1ZGVEYXRhSXRlbShkYXRhSXRlbSkge1xyXG4gICAgICAgIHN1cGVyLl9ub3RJbmNsdWRlRGF0YUl0ZW0oZGF0YUl0ZW0pO1xyXG4gICAgICAgIGNvbnN0IGJ1bGxldHMgPSBkYXRhSXRlbS5idWxsZXRzO1xyXG4gICAgICAgIGlmIChidWxsZXRzKSB7XHJcbiAgICAgICAgICAgICRhcnJheS5lYWNoKGJ1bGxldHMsIChidWxsZXQpID0+IHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IHNwcml0ZSA9IGJ1bGxldC5nZXQoXCJzcHJpdGVcIik7XHJcbiAgICAgICAgICAgICAgICBpZiAoc3ByaXRlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgc3ByaXRlLnNldFByaXZhdGUoXCJ2aXNpYmxlXCIsIGZhbHNlKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBAaWdub3JlXHJcbiAgICAgKi9cclxuICAgIF91bk5vdEluY2x1ZGVEYXRhSXRlbShkYXRhSXRlbSkge1xyXG4gICAgICAgIHN1cGVyLl91bk5vdEluY2x1ZGVEYXRhSXRlbShkYXRhSXRlbSk7XHJcbiAgICAgICAgY29uc3QgYnVsbGV0cyA9IGRhdGFJdGVtLmJ1bGxldHM7XHJcbiAgICAgICAgaWYgKGJ1bGxldHMpIHtcclxuICAgICAgICAgICAgJGFycmF5LmVhY2goYnVsbGV0cywgKGJ1bGxldCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgY29uc3Qgc3ByaXRlID0gYnVsbGV0LmdldChcInNwcml0ZVwiKTtcclxuICAgICAgICAgICAgICAgIGlmIChzcHJpdGUpIHtcclxuICAgICAgICAgICAgICAgICAgICBzcHJpdGUuc2V0UHJpdmF0ZShcInZpc2libGVcIiwgdHJ1ZSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoTWFwUG9pbnRTZXJpZXMsIFwiY2xhc3NOYW1lXCIsIHtcclxuICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICBjb25maWd1cmFibGU6IHRydWUsXHJcbiAgICB3cml0YWJsZTogdHJ1ZSxcclxuICAgIHZhbHVlOiBcIk1hcFBvaW50U2VyaWVzXCJcclxufSk7XHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShNYXBQb2ludFNlcmllcywgXCJjbGFzc05hbWVzXCIsIHtcclxuICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICBjb25maWd1cmFibGU6IHRydWUsXHJcbiAgICB3cml0YWJsZTogdHJ1ZSxcclxuICAgIHZhbHVlOiBNYXBTZXJpZXMuY2xhc3NOYW1lcy5jb25jYXQoW01hcFBvaW50U2VyaWVzLmNsYXNzTmFtZV0pXHJcbn0pO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1NYXBQb2ludFNlcmllcy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/charts/map/MapPointSeries.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/charts/map/MapPolygon.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/charts/map/MapPolygon.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MapPolygon: () => (/* binding */ MapPolygon)\n/* harmony export */ });\n/* harmony import */ var _core_render_Graphics__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/render/Graphics */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/Graphics.js\");\n/* harmony import */ var _MapUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./MapUtils */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/charts/map/MapUtils.js\");\n/* harmony import */ var polylabel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! polylabel */ \"(ssr)/./node_modules/polylabel/polylabel.js\");\n/* harmony import */ var polylabel__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(polylabel__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-geo */ \"(ssr)/./node_modules/d3-geo/src/area.js\");\n\r\n\r\n\r\n\r\n/**\r\n * A polygon in a [[MapPolygonSeries]].\r\n */\r\nclass MapPolygon extends _core_render_Graphics__WEBPACK_IMPORTED_MODULE_1__.Graphics {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_projectionDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * A [[MapPolygonSeries]] polygon belongs to.\r\n         */\r\n        Object.defineProperty(this, \"series\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this.setPrivate(\"trustBounds\", true);\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this._projectionDirty || this.isDirty(\"geometry\") || this.isDirty(\"precision\")) {\r\n            const geometry = this.get(\"geometry\");\r\n            if (geometry) {\r\n                const series = this.series;\r\n                if (series) {\r\n                    const projection = series.projection();\r\n                    if (projection) {\r\n                        projection.precision(this.get(\"precision\", 0.5));\r\n                    }\r\n                    const geoPath = series.geoPath();\r\n                    if (geoPath) {\r\n                        this._clear = true;\r\n                        this.set(\"draw\", (_display) => {\r\n                            geoPath.context(this._display);\r\n                            geoPath(geometry);\r\n                            geoPath.context(null);\r\n                        });\r\n                        if (this.isHover()) {\r\n                            this.showTooltip();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyProjection() {\r\n        this.markDirty();\r\n        this._projectionDirty = true;\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._projectionDirty = false;\r\n    }\r\n    /**\r\n     * Returns latitude/longitude of the geometrical center of the polygon.\r\n     *\r\n     * @return Center\r\n     */\r\n    geoCentroid() {\r\n        const geometry = this.get(\"geometry\");\r\n        if (geometry) {\r\n            return _MapUtils__WEBPACK_IMPORTED_MODULE_2__.getGeoCentroid(geometry);\r\n        }\r\n        else {\r\n            return { latitude: 0, longitude: 0 };\r\n        }\r\n    }\r\n    /**\r\n     * Returns latitude/longitude of the visual center of the polygon.\r\n     *\r\n     * @return Center\r\n     */\r\n    visualCentroid() {\r\n        let biggestArea = 0;\r\n        let coordinates = [];\r\n        const geometry = this.get(\"geometry\");\r\n        if (geometry) {\r\n            if (geometry.type == \"Polygon\") {\r\n                coordinates = geometry.coordinates;\r\n            }\r\n            else if (geometry.type == \"MultiPolygon\") {\r\n                for (let i = 0; i < geometry.coordinates.length; i++) {\r\n                    let coords = geometry.coordinates[i];\r\n                    let area = (0,d3_geo__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({ type: \"Polygon\", coordinates: coords });\r\n                    if (area > biggestArea) {\r\n                        coordinates = coords;\r\n                        biggestArea = area;\r\n                    }\r\n                }\r\n            }\r\n            if (coordinates) {\r\n                let center = polylabel__WEBPACK_IMPORTED_MODULE_0___default()(coordinates);\r\n                return { longitude: center[0], latitude: center[1] };\r\n            }\r\n        }\r\n        return { longitude: 0, latitude: 0 };\r\n    }\r\n    _getTooltipPoint() {\r\n        const series = this.series;\r\n        if (series) {\r\n            const projection = series.projection();\r\n            if (projection) {\r\n                const geoPoint = this.visualCentroid();\r\n                const xy = projection([geoPoint.longitude, geoPoint.latitude]);\r\n                if (xy) {\r\n                    return { x: xy[0], y: xy[1] };\r\n                }\r\n            }\r\n        }\r\n        return { x: 0, y: 0 };\r\n    }\r\n}\r\nObject.defineProperty(MapPolygon, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"MapPolygon\"\r\n});\r\nObject.defineProperty(MapPolygon, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: _core_render_Graphics__WEBPACK_IMPORTED_MODULE_1__.Graphics.classNames.concat([MapPolygon.className])\r\n});\r\n//# sourceMappingURL=MapPolygon.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNS8uaW50ZXJuYWwvY2hhcnRzL21hcC9NYXBQb2x5Z29uLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFzRDtBQUNkO0FBQ0w7QUFDRjtBQUNqQztBQUNBO0FBQ0E7QUFDTyx5QkFBeUIsMkRBQVE7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixxREFBd0I7QUFDM0M7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyxpQ0FBaUM7QUFDakU7QUFDQSwrQkFBK0Isa0RBQU8sR0FBRyxzQ0FBc0M7QUFDL0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsZ0RBQVU7QUFDdkMseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsMkRBQVE7QUFDbkIsQ0FBQztBQUNEIiwic291cmNlcyI6WyIvaG9tZS9ydW5uZXIvd29ya3NwYWNlL25vZGVfbW9kdWxlcy9AYW1jaGFydHMvYW1jaGFydHM1Ly5pbnRlcm5hbC9jaGFydHMvbWFwL01hcFBvbHlnb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgR3JhcGhpY3MgfSBmcm9tIFwiLi4vLi4vY29yZS9yZW5kZXIvR3JhcGhpY3NcIjtcclxuaW1wb3J0ICogYXMgJG1hcFV0aWxzIGZyb20gXCIuL01hcFV0aWxzXCI7XHJcbmltcG9ydCAkcG9seWxhYmVsIGZyb20gXCJwb2x5bGFiZWxcIjtcclxuaW1wb3J0IHsgZ2VvQXJlYSB9IGZyb20gXCJkMy1nZW9cIjtcclxuLyoqXHJcbiAqIEEgcG9seWdvbiBpbiBhIFtbTWFwUG9seWdvblNlcmllc11dLlxyXG4gKi9cclxuZXhwb3J0IGNsYXNzIE1hcFBvbHlnb24gZXh0ZW5kcyBHcmFwaGljcyB7XHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xyXG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcIl9wcm9qZWN0aW9uRGlydHlcIiwge1xyXG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXHJcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxyXG4gICAgICAgICAgICB2YWx1ZTogZmFsc2VcclxuICAgICAgICB9KTtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBBIFtbTWFwUG9seWdvblNlcmllc11dIHBvbHlnb24gYmVsb25ncyB0by5cclxuICAgICAgICAgKi9cclxuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJzZXJpZXNcIiwge1xyXG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXHJcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxyXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICBfYWZ0ZXJOZXcoKSB7XHJcbiAgICAgICAgc3VwZXIuX2FmdGVyTmV3KCk7XHJcbiAgICAgICAgdGhpcy5zZXRQcml2YXRlKFwidHJ1c3RCb3VuZHNcIiwgdHJ1ZSk7XHJcbiAgICB9XHJcbiAgICBfYmVmb3JlQ2hhbmdlZCgpIHtcclxuICAgICAgICBzdXBlci5fYmVmb3JlQ2hhbmdlZCgpO1xyXG4gICAgICAgIGlmICh0aGlzLl9wcm9qZWN0aW9uRGlydHkgfHwgdGhpcy5pc0RpcnR5KFwiZ2VvbWV0cnlcIikgfHwgdGhpcy5pc0RpcnR5KFwicHJlY2lzaW9uXCIpKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGdlb21ldHJ5ID0gdGhpcy5nZXQoXCJnZW9tZXRyeVwiKTtcclxuICAgICAgICAgICAgaWYgKGdlb21ldHJ5KSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBzZXJpZXMgPSB0aGlzLnNlcmllcztcclxuICAgICAgICAgICAgICAgIGlmIChzZXJpZXMpIHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zdCBwcm9qZWN0aW9uID0gc2VyaWVzLnByb2plY3Rpb24oKTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAocHJvamVjdGlvbikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwcm9qZWN0aW9uLnByZWNpc2lvbih0aGlzLmdldChcInByZWNpc2lvblwiLCAwLjUpKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgZ2VvUGF0aCA9IHNlcmllcy5nZW9QYXRoKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGdlb1BhdGgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fY2xlYXIgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNldChcImRyYXdcIiwgKF9kaXNwbGF5KSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZW9QYXRoLmNvbnRleHQodGhpcy5fZGlzcGxheSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZW9QYXRoKGdlb21ldHJ5KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdlb1BhdGguY29udGV4dChudWxsKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLmlzSG92ZXIoKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93VG9vbHRpcCgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBAaWdub3JlXHJcbiAgICAgKi9cclxuICAgIG1hcmtEaXJ0eVByb2plY3Rpb24oKSB7XHJcbiAgICAgICAgdGhpcy5tYXJrRGlydHkoKTtcclxuICAgICAgICB0aGlzLl9wcm9qZWN0aW9uRGlydHkgPSB0cnVlO1xyXG4gICAgfVxyXG4gICAgX2NsZWFyRGlydHkoKSB7XHJcbiAgICAgICAgc3VwZXIuX2NsZWFyRGlydHkoKTtcclxuICAgICAgICB0aGlzLl9wcm9qZWN0aW9uRGlydHkgPSBmYWxzZTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJucyBsYXRpdHVkZS9sb25naXR1ZGUgb2YgdGhlIGdlb21ldHJpY2FsIGNlbnRlciBvZiB0aGUgcG9seWdvbi5cclxuICAgICAqXHJcbiAgICAgKiBAcmV0dXJuIENlbnRlclxyXG4gICAgICovXHJcbiAgICBnZW9DZW50cm9pZCgpIHtcclxuICAgICAgICBjb25zdCBnZW9tZXRyeSA9IHRoaXMuZ2V0KFwiZ2VvbWV0cnlcIik7XHJcbiAgICAgICAgaWYgKGdlb21ldHJ5KSB7XHJcbiAgICAgICAgICAgIHJldHVybiAkbWFwVXRpbHMuZ2V0R2VvQ2VudHJvaWQoZ2VvbWV0cnkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgcmV0dXJuIHsgbGF0aXR1ZGU6IDAsIGxvbmdpdHVkZTogMCB9O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJucyBsYXRpdHVkZS9sb25naXR1ZGUgb2YgdGhlIHZpc3VhbCBjZW50ZXIgb2YgdGhlIHBvbHlnb24uXHJcbiAgICAgKlxyXG4gICAgICogQHJldHVybiBDZW50ZXJcclxuICAgICAqL1xyXG4gICAgdmlzdWFsQ2VudHJvaWQoKSB7XHJcbiAgICAgICAgbGV0IGJpZ2dlc3RBcmVhID0gMDtcclxuICAgICAgICBsZXQgY29vcmRpbmF0ZXMgPSBbXTtcclxuICAgICAgICBjb25zdCBnZW9tZXRyeSA9IHRoaXMuZ2V0KFwiZ2VvbWV0cnlcIik7XHJcbiAgICAgICAgaWYgKGdlb21ldHJ5KSB7XHJcbiAgICAgICAgICAgIGlmIChnZW9tZXRyeS50eXBlID09IFwiUG9seWdvblwiKSB7XHJcbiAgICAgICAgICAgICAgICBjb29yZGluYXRlcyA9IGdlb21ldHJ5LmNvb3JkaW5hdGVzO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2UgaWYgKGdlb21ldHJ5LnR5cGUgPT0gXCJNdWx0aVBvbHlnb25cIikge1xyXG4gICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBnZW9tZXRyeS5jb29yZGluYXRlcy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBjb29yZHMgPSBnZW9tZXRyeS5jb29yZGluYXRlc1tpXTtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgYXJlYSA9IGdlb0FyZWEoeyB0eXBlOiBcIlBvbHlnb25cIiwgY29vcmRpbmF0ZXM6IGNvb3JkcyB9KTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoYXJlYSA+IGJpZ2dlc3RBcmVhKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvb3JkaW5hdGVzID0gY29vcmRzO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBiaWdnZXN0QXJlYSA9IGFyZWE7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmIChjb29yZGluYXRlcykge1xyXG4gICAgICAgICAgICAgICAgbGV0IGNlbnRlciA9ICRwb2x5bGFiZWwoY29vcmRpbmF0ZXMpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHsgbG9uZ2l0dWRlOiBjZW50ZXJbMF0sIGxhdGl0dWRlOiBjZW50ZXJbMV0gfTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4geyBsb25naXR1ZGU6IDAsIGxhdGl0dWRlOiAwIH07XHJcbiAgICB9XHJcbiAgICBfZ2V0VG9vbHRpcFBvaW50KCkge1xyXG4gICAgICAgIGNvbnN0IHNlcmllcyA9IHRoaXMuc2VyaWVzO1xyXG4gICAgICAgIGlmIChzZXJpZXMpIHtcclxuICAgICAgICAgICAgY29uc3QgcHJvamVjdGlvbiA9IHNlcmllcy5wcm9qZWN0aW9uKCk7XHJcbiAgICAgICAgICAgIGlmIChwcm9qZWN0aW9uKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBnZW9Qb2ludCA9IHRoaXMudmlzdWFsQ2VudHJvaWQoKTtcclxuICAgICAgICAgICAgICAgIGNvbnN0IHh5ID0gcHJvamVjdGlvbihbZ2VvUG9pbnQubG9uZ2l0dWRlLCBnZW9Qb2ludC5sYXRpdHVkZV0pO1xyXG4gICAgICAgICAgICAgICAgaWYgKHh5KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHsgeDogeHlbMF0sIHk6IHh5WzFdIH07XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHsgeDogMCwgeTogMCB9O1xyXG4gICAgfVxyXG59XHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShNYXBQb2x5Z29uLCBcImNsYXNzTmFtZVwiLCB7XHJcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgY29uZmlndXJhYmxlOiB0cnVlLFxyXG4gICAgd3JpdGFibGU6IHRydWUsXHJcbiAgICB2YWx1ZTogXCJNYXBQb2x5Z29uXCJcclxufSk7XHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShNYXBQb2x5Z29uLCBcImNsYXNzTmFtZXNcIiwge1xyXG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcclxuICAgIHdyaXRhYmxlOiB0cnVlLFxyXG4gICAgdmFsdWU6IEdyYXBoaWNzLmNsYXNzTmFtZXMuY29uY2F0KFtNYXBQb2x5Z29uLmNsYXNzTmFtZV0pXHJcbn0pO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1NYXBQb2x5Z29uLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/charts/map/MapPolygon.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/charts/map/MapPolygonSeries.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/charts/map/MapPolygonSeries.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MapPolygonSeries: () => (/* binding */ MapPolygonSeries)\n/* harmony export */ });\n/* harmony import */ var _MapSeries__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./MapSeries */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/charts/map/MapSeries.js\");\n/* harmony import */ var _MapPolygon__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./MapPolygon */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/charts/map/MapPolygon.js\");\n/* harmony import */ var _core_util_Template__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/util/Template */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Template.js\");\n/* harmony import */ var _core_util_List__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/util/List */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/List.js\");\n/* harmony import */ var _core_util_Array__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/util/Array */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Array.js\");\n/* harmony import */ var _MapUtils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./MapUtils */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/charts/map/MapUtils.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Creates a map series for displaying polygons.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-polygon-series/} for more info\r\n * @important\r\n */\r\nclass MapPolygonSeries extends _MapSeries__WEBPACK_IMPORTED_MODULE_0__.MapSeries {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * A [[ListTemplate]] of all polygons in series.\r\n         *\r\n         * `mapPolygons.template` can also be used to configure polygons.\r\n         *\r\n         * @default new ListTemplate<MapPolygon>\r\n         */\r\n        Object.defineProperty(this, \"mapPolygons\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.addDisposer(new _core_util_List__WEBPACK_IMPORTED_MODULE_1__.ListTemplate(_core_util_Template__WEBPACK_IMPORTED_MODULE_2__.Template.new({}), () => _MapPolygon__WEBPACK_IMPORTED_MODULE_3__.MapPolygon._new(this._root, {}, [this.mapPolygons.template])))\r\n        });\r\n        Object.defineProperty(this, \"_types\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\"Polygon\", \"MultiPolygon\"]\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeMapPolygon(dataItem) {\r\n        const mapPolygon = this.children.push(this.mapPolygons.make());\r\n        mapPolygon._setDataItem(dataItem);\r\n        this.mapPolygons.push(mapPolygon);\r\n        return mapPolygon;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyProjection() {\r\n        _core_util_Array__WEBPACK_IMPORTED_MODULE_4__.each(this.dataItems, (dataItem) => {\r\n            let mapPolygon = dataItem.get(\"mapPolygon\");\r\n            if (mapPolygon) {\r\n                mapPolygon.markDirtyProjection();\r\n            }\r\n        });\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        if (this.isDirty(\"fill\")) {\r\n            this.mapPolygons.template.set(\"fill\", this.get(\"fill\"));\r\n        }\r\n        if (this.isDirty(\"stroke\")) {\r\n            this.mapPolygons.template.set(\"stroke\", this.get(\"stroke\"));\r\n        }\r\n    }\r\n    processDataItem(dataItem) {\r\n        super.processDataItem(dataItem);\r\n        let mapPolygon = dataItem.get(\"mapPolygon\");\r\n        if (!mapPolygon) {\r\n            mapPolygon = this.makeMapPolygon(dataItem);\r\n        }\r\n        dataItem.set(\"mapPolygon\", mapPolygon);\r\n        let geometry = dataItem.get(\"geometry\");\r\n        if (geometry) {\r\n            if (this.get(\"reverseGeodata\")) {\r\n                const coordinates = geometry.coordinates;\r\n                if (coordinates) {\r\n                    for (let x = 0; x < geometry.coordinates.length; x++) {\r\n                        if (geometry.type == \"MultiPolygon\") {\r\n                            for (let y = 0; y < geometry.coordinates[x].length; y++) {\r\n                                geometry.coordinates[x][y].reverse();\r\n                            }\r\n                        }\r\n                        else {\r\n                            geometry.coordinates[x].reverse();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            mapPolygon.set(\"geometry\", geometry);\r\n        }\r\n        mapPolygon.series = this;\r\n        this._addGeometry(dataItem.get(\"geometry\"), this);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(dataItem) {\r\n        super.disposeDataItem(dataItem);\r\n        const mapPolygon = dataItem.get(\"mapPolygon\");\r\n        if (mapPolygon) {\r\n            this.mapPolygons.removeValue(mapPolygon);\r\n            mapPolygon.dispose();\r\n        }\r\n        this._removeGeometry(dataItem.get(\"geometry\"));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _excludeDataItem(dataItem) {\r\n        super._excludeDataItem(dataItem);\r\n        const mapPolygon = dataItem.get(\"mapPolygon\");\r\n        if (mapPolygon) {\r\n            mapPolygon.setPrivate(\"visible\", false);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _unexcludeDataItem(dataItem) {\r\n        super._unexcludeDataItem(dataItem);\r\n        const mapPolygon = dataItem.get(\"mapPolygon\");\r\n        if (mapPolygon) {\r\n            mapPolygon.setPrivate(\"visible\", true);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _notIncludeDataItem(dataItem) {\r\n        super._notIncludeDataItem(dataItem);\r\n        const mapPolygon = dataItem.get(\"mapPolygon\");\r\n        if (mapPolygon) {\r\n            mapPolygon.setPrivate(\"visible\", false);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _unNotIncludeDataItem(dataItem) {\r\n        super._unNotIncludeDataItem(dataItem);\r\n        const mapPolygon = dataItem.get(\"mapPolygon\");\r\n        if (mapPolygon) {\r\n            mapPolygon.setPrivate(\"visible\", true);\r\n        }\r\n    }\r\n    /**\r\n     * Forces a repaint of the element which relies on data.\r\n     *\r\n     * @since 5.0.21\r\n     */\r\n    markDirtyValues(dataItem) {\r\n        super.markDirtyValues();\r\n        if (dataItem) {\r\n            const mapPolygon = dataItem.get(\"mapPolygon\");\r\n            if (mapPolygon) {\r\n                mapPolygon.set(\"geometry\", dataItem.get(\"geometry\"));\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Centers and zooms in on the specific polygon.\r\n     *\r\n     * @param  dataItem  Target data item\r\n     * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Zooming_to_clicked_object} for more info\r\n     * @param  rotate If it's true, the map will rotate so that this polygon would be in the center. Mostly usefull with geoOrthographic projection.\r\n     */\r\n    zoomToDataItem(dataItem, rotate) {\r\n        const polygon = dataItem.get(\"mapPolygon\");\r\n        if (polygon) {\r\n            const geometry = polygon.get(\"geometry\");\r\n            const chart = this.chart;\r\n            if (geometry && chart) {\r\n                if (rotate) {\r\n                    const centroid = _MapUtils__WEBPACK_IMPORTED_MODULE_5__.getGeoCentroid(geometry);\r\n                    chart.rotate(-centroid.longitude, -centroid.latitude);\r\n                    return chart.zoomToGeoBounds(_MapUtils__WEBPACK_IMPORTED_MODULE_5__.getGeoBounds(geometry), undefined, -centroid.longitude, -centroid.latitude);\r\n                }\r\n                return chart.zoomToGeoBounds(_MapUtils__WEBPACK_IMPORTED_MODULE_5__.getGeoBounds(geometry));\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Zooms the map in so that all polygons in the array are visible.\r\n     *\r\n     * @param   dataItems  An array of data items to zoom to\r\n     * @param   rotate     Rotate the map so it is centered on the selected items\r\n     * @return             Animation\r\n     * @since 5.9.0\r\n     */\r\n    zoomToDataItems(dataItems, rotate) {\r\n        let left;\r\n        let right;\r\n        let top;\r\n        let bottom;\r\n        _core_util_Array__WEBPACK_IMPORTED_MODULE_4__.each(dataItems, (dataItem) => {\r\n            const polygon = dataItem.get(\"mapPolygon\");\r\n            if (polygon) {\r\n                const geometry = polygon.get(\"geometry\");\r\n                if (geometry) {\r\n                    let bounds = _MapUtils__WEBPACK_IMPORTED_MODULE_5__.getGeoBounds(geometry);\r\n                    if (left == null) {\r\n                        left = bounds.left;\r\n                    }\r\n                    if (right == null) {\r\n                        right = bounds.right;\r\n                    }\r\n                    if (top == null) {\r\n                        top = bounds.top;\r\n                    }\r\n                    if (bottom == null) {\r\n                        bottom = bounds.bottom;\r\n                    }\r\n                    left = Math.min(bounds.left, left);\r\n                    right = Math.max(bounds.right, right);\r\n                    top = Math.max(bounds.top, top);\r\n                    bottom = Math.min(bounds.bottom, bottom);\r\n                }\r\n            }\r\n        });\r\n        if (left != null && right != null && top != null && bottom != null) {\r\n            const chart = this.chart;\r\n            if (chart) {\r\n                if (rotate) {\r\n                    const rx = left + (right - left) / 2;\r\n                    const ry = bottom + (top - bottom) / 2;\r\n                    chart.rotate(-rx, -ry);\r\n                    return chart.zoomToGeoBounds({ left, right, top, bottom }, undefined, -rx, -ry);\r\n                }\r\n                return chart.zoomToGeoBounds({ left, right, top, bottom });\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Returns a [[MapPolygon]] that is under specific X/Y point.\r\n     *\r\n     * @since 5.9.8\r\n     * @param   point  X/Y\r\n     * @return         Polygon\r\n     */\r\n    getPolygonByPoint(point) {\r\n        let found;\r\n        const renderer = this._display._renderer;\r\n        const displayObject = renderer.getObjectAtPoint(point);\r\n        if (displayObject) {\r\n            this.mapPolygons.each(function (polygon) {\r\n                if (polygon._display == displayObject) {\r\n                    found = polygon;\r\n                }\r\n            });\r\n            return found;\r\n        }\r\n    }\r\n    getPolygonByGeoPoint(point) {\r\n        return this.getPolygonByPoint(this.chart.convert(point));\r\n    }\r\n}\r\nObject.defineProperty(MapPolygonSeries, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"MapPolygonSeries\"\r\n});\r\nObject.defineProperty(MapPolygonSeries, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: _MapSeries__WEBPACK_IMPORTED_MODULE_0__.MapSeries.classNames.concat([MapPolygonSeries.className])\r\n});\r\n//# sourceMappingURL=MapPolygonSeries.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/charts/map/MapPolygonSeries.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/charts/map/MapSeries.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/charts/map/MapSeries.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MapSeries: () => (/* binding */ MapSeries)\n/* harmony export */ });\n/* harmony import */ var _core_render_Series__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/render/Series */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/Series.js\");\n/* harmony import */ var _core_util_Array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/util/Array */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Array.js\");\n/* harmony import */ var _core_util_Object__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/util/Object */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Object.js\");\n\r\n\r\n\r\n/**\r\n * Base class for map series.\r\n */\r\nclass MapSeries extends _core_render_Series__WEBPACK_IMPORTED_MODULE_0__.Series {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_types\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_geometries\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_geoJSONparsed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_excluded\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_notIncluded\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this.fields.push(\"geometry\", \"geometryType\");\r\n        this._setRawDefault(\"geometryField\", \"geometry\");\r\n        this._setRawDefault(\"geometryTypeField\", \"geometryType\");\r\n        this._setRawDefault(\"idField\", \"id\");\r\n        this.on(\"geoJSON\", (geoJSON) => {\r\n            let previous = this._prevSettings.geoJSON;\r\n            if (previous && previous != geoJSON) {\r\n                this.data.clear();\r\n            }\r\n        });\r\n        super._afterNew();\r\n    }\r\n    _handleDirties() {\r\n        const geoJSON = this.get(\"geoJSON\");\r\n        let previous = this._prevSettings.geoJSON;\r\n        if (previous && previous != geoJSON) {\r\n            this._prevSettings.geoJSON = undefined;\r\n            this._geoJSONparsed = false;\r\n        }\r\n        if (!this._geoJSONparsed) {\r\n            this._parseGeoJSON();\r\n            this._geoJSONparsed = true;\r\n        }\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        if (this._valuesDirty) {\r\n            this._handleDirties();\r\n        }\r\n        if (this.get(\"geoJSON\") && (this.isDirty(\"geoJSON\") || this.isDirty(\"include\") || this.isDirty(\"exclude\"))) {\r\n            this._handleDirties();\r\n            const chart = this.chart;\r\n            const exclude = this.get(\"exclude\");\r\n            if (exclude) {\r\n                if (chart) {\r\n                    chart._centerLocation = null;\r\n                }\r\n                _core_util_Array__WEBPACK_IMPORTED_MODULE_1__.each(exclude, (id) => {\r\n                    const dataItem = this.getDataItemById(id);\r\n                    if (dataItem) {\r\n                        this._excludeDataItem(dataItem);\r\n                    }\r\n                });\r\n                _core_util_Array__WEBPACK_IMPORTED_MODULE_1__.each(this._excluded, (dataItem) => {\r\n                    const id = dataItem.get(\"id\");\r\n                    if (id) {\r\n                        if (exclude.indexOf(id) == -1) {\r\n                            this._unexcludeDataItem(dataItem);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            if (!exclude || exclude.length == 0) {\r\n                _core_util_Array__WEBPACK_IMPORTED_MODULE_1__.each(this._excluded, (dataItem) => {\r\n                    this._unexcludeDataItem(dataItem);\r\n                });\r\n                this._excluded = [];\r\n            }\r\n            const include = this.get(\"include\");\r\n            if (include) {\r\n                if (chart) {\r\n                    chart._centerLocation = null;\r\n                }\r\n                _core_util_Array__WEBPACK_IMPORTED_MODULE_1__.each(this.dataItems, (dataItem) => {\r\n                    const id = dataItem.get(\"id\");\r\n                    if (id && include.indexOf(id) == -1) {\r\n                        this._notIncludeDataItem(dataItem);\r\n                    }\r\n                    else {\r\n                        this._unNotIncludeDataItem(dataItem);\r\n                    }\r\n                });\r\n            }\r\n            if (!include) {\r\n                _core_util_Array__WEBPACK_IMPORTED_MODULE_1__.each(this._notIncluded, (dataItem) => {\r\n                    this._unNotIncludeDataItem(dataItem);\r\n                });\r\n                this._notIncluded = [];\r\n            }\r\n        }\r\n    }\r\n    _excludeDataItem(dataItem) {\r\n        this._removeGeometry(dataItem.get(\"geometry\"));\r\n        _core_util_Array__WEBPACK_IMPORTED_MODULE_1__.move(this._excluded, dataItem);\r\n    }\r\n    _unexcludeDataItem(dataItem) {\r\n        this._addGeometry(dataItem.get(\"geometry\"), this);\r\n    }\r\n    _notIncludeDataItem(dataItem) {\r\n        this._removeGeometry(dataItem.get(\"geometry\"));\r\n        _core_util_Array__WEBPACK_IMPORTED_MODULE_1__.move(this._notIncluded, dataItem);\r\n    }\r\n    _unNotIncludeDataItem(dataItem) {\r\n        this._addGeometry(dataItem.get(\"geometry\"), this);\r\n    }\r\n    checkInclude(id, includes, excludes) {\r\n        if (includes) {\r\n            if (includes.length == 0) {\r\n                return false;\r\n            }\r\n            else {\r\n                if (includes.indexOf(id) == -1) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        if (excludes && excludes.length > 0) {\r\n            if (excludes.indexOf(id) != -1) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    _parseGeoJSON() {\r\n        const geoJSON = this.get(\"geoJSON\");\r\n        if (geoJSON) {\r\n            let features;\r\n            if (geoJSON.type == \"FeatureCollection\") {\r\n                features = geoJSON.features;\r\n            }\r\n            else if (geoJSON.type == \"Feature\") {\r\n                features = [geoJSON];\r\n            }\r\n            else if ([\"Point\", \"LineString\", \"Polygon\", \"MultiPoint\", \"MultiLineString\", \"MultiPolygon\"].indexOf(geoJSON.type) != -1) {\r\n                features = [{ geometry: geoJSON }];\r\n            }\r\n            else {\r\n                console.log(\"nothing found in geoJSON\");\r\n            }\r\n            const geodataNames = this.get(\"geodataNames\");\r\n            if (features) {\r\n                const idField = this.get(\"idField\", \"id\");\r\n                for (let i = 0, len = features.length; i < len; i++) {\r\n                    let feature = features[i];\r\n                    let geometry = feature.geometry;\r\n                    if (geometry) {\r\n                        let type = geometry.type;\r\n                        let id = feature[idField];\r\n                        if (geodataNames && geodataNames[id]) {\r\n                            feature.properties.name = geodataNames[id];\r\n                        }\r\n                        if (this._types.indexOf(type) != -1) {\r\n                            //if (!this.checkInclude(id, this.get(\"include\"), this.get(\"exclude\"))) {\r\n                            //\tcontinue;\r\n                            //}\r\n                            let dataItem;\r\n                            if (id != null) {\r\n                                // find data object in user-provided data\r\n                                dataItem = _core_util_Array__WEBPACK_IMPORTED_MODULE_1__.find(this.dataItems, (value) => {\r\n                                    return value.get(\"id\") == id;\r\n                                });\r\n                            }\r\n                            let dataObject;\r\n                            if (dataItem) {\r\n                                dataObject = dataItem.dataContext;\r\n                            }\r\n                            // create one if not found\r\n                            if (!dataItem) {\r\n                                dataObject = { geometry: geometry, geometryType: type, madeFromGeoData: true };\r\n                                dataObject[idField] = id;\r\n                                this.data.push(dataObject);\r\n                            }\r\n                            // in case found\r\n                            else {\r\n                                // if user-provided object doesn't have points data provided in any way:\r\n                                if (!dataObject.geometry) {\r\n                                    dataObject.geometry = geometry;\r\n                                    dataObject.geometryType = type;\r\n                                    dataItem.set(\"geometry\", geometry);\r\n                                    dataItem.set(\"geometryType\", type);\r\n                                    this.processDataItem(dataItem);\r\n                                }\r\n                            }\r\n                            // copy properties data to datacontext\r\n                            _core_util_Object__WEBPACK_IMPORTED_MODULE_2__.softCopyProperties(feature.properties, dataObject);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            const type = \"geodataprocessed\";\r\n            if (this.events.isEnabled(type)) {\r\n                this.events.dispatch(type, { type: type, target: this });\r\n            }\r\n        }\r\n    }\r\n    _placeBulletsContainer(_chart) {\r\n        this.children.moveValue(this.bulletsContainer);\r\n    }\r\n    _removeBulletsContainer() {\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    projection() {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            return chart.get(\"projection\");\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    geoPath() {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            return chart.getPrivate(\"geoPath\");\r\n        }\r\n    }\r\n    _addGeometry(geometry, series) {\r\n        if (geometry && series.get(\"affectsBounds\", true)) {\r\n            this._geometries.push(geometry);\r\n            const chart = this.chart;\r\n            if (chart) {\r\n                chart.markDirtyGeometries();\r\n            }\r\n        }\r\n    }\r\n    _removeGeometry(geometry) {\r\n        if (geometry) {\r\n            _core_util_Array__WEBPACK_IMPORTED_MODULE_1__.remove(this._geometries, geometry);\r\n            const chart = this.chart;\r\n            if (chart) {\r\n                chart.markDirtyGeometries();\r\n            }\r\n        }\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            chart.series.removeValue(this);\r\n        }\r\n    }\r\n    _onDataClear() {\r\n        super._onDataClear();\r\n        this._geoJSONparsed = false;\r\n        this._markDirtyKey(\"exclude\");\r\n    }\r\n}\r\nObject.defineProperty(MapSeries, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"MapSeries\"\r\n});\r\nObject.defineProperty(MapSeries, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: _core_render_Series__WEBPACK_IMPORTED_MODULE_0__.Series.classNames.concat([MapSeries.className])\r\n});\r\n//# sourceMappingURL=MapSeries.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/charts/map/MapSeries.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/charts/map/MapUtils.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/charts/map/MapUtils.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getGeoArea: () => (/* binding */ getGeoArea),\n/* harmony export */   getGeoBounds: () => (/* binding */ getGeoBounds),\n/* harmony export */   getGeoCentroid: () => (/* binding */ getGeoCentroid),\n/* harmony export */   getGeoCircle: () => (/* binding */ getGeoCircle),\n/* harmony export */   getGeoRectangle: () => (/* binding */ getGeoRectangle),\n/* harmony export */   normalizeGeoPoint: () => (/* binding */ normalizeGeoPoint),\n/* harmony export */   wrapAngleTo180: () => (/* binding */ wrapAngleTo180)\n/* harmony export */ });\n/* harmony import */ var _core_util_Math__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/util/Math */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Math.js\");\n/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ \"(ssr)/./node_modules/d3-geo/src/circle.js\");\n/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-geo */ \"(ssr)/./node_modules/d3-geo/src/centroid.js\");\n/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-geo */ \"(ssr)/./node_modules/d3-geo/src/area.js\");\n/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-geo */ \"(ssr)/./node_modules/d3-geo/src/bounds.js\");\n\r\n\r\n/**\r\n * Returns a GeoJSON representation of a circle, suitable for use as `geometry` value\r\n * in a [[MapPolygon]] in a [[MapPolygonSeries]].\r\n *\r\n * @param   geoPoint  Coordinates\r\n * @param   radius    Circle radius in degrees\r\n * @return            Polygon geometry\r\n */\r\nfunction getGeoCircle(geoPoint, radius) {\r\n    return (0,d3_geo__WEBPACK_IMPORTED_MODULE_0__[\"default\"])().center([geoPoint.longitude, geoPoint.latitude]).radius(radius)();\r\n}\r\n/**\r\n * Returns geo centroid of a geometry\r\n */\r\nfunction getGeoCentroid(geometry) {\r\n    const centroid = (0,d3_geo__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(geometry);\r\n    return { longitude: centroid[0], latitude: centroid[1] };\r\n}\r\n/**\r\n * Returns geo area of a geometry\r\n */\r\nfunction getGeoArea(geometry) {\r\n    return (0,d3_geo__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(geometry);\r\n}\r\n/**\r\n * Returns bounds of a geometry\r\n */\r\nfunction getGeoBounds(geometry) {\r\n    const bounds = (0,d3_geo__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(geometry);\r\n    if (bounds) {\r\n        const geoBounds = { left: bounds[0][0], right: bounds[1][0], top: bounds[1][1], bottom: bounds[0][1] };\r\n        if (geoBounds.right < geoBounds.left) {\r\n            geoBounds.right = 180;\r\n            geoBounds.left = -180;\r\n        }\r\n        return geoBounds;\r\n    }\r\n    return { left: 0, right: 0, top: 0, bottom: 0 };\r\n}\r\n/**\r\n * Returns a GeoJSON representation of a rectangle, suitable for use\r\n * as `geometry` value in a [[MapPolygon]] in a [[MapPolygonSeries]].\r\n *\r\n * @param   north  North latitude\r\n * @param   east   East longitude\r\n * @param   south  South latitude\r\n * @param   west   West longitude\r\n * @return         polygon geometry\r\n */\r\nfunction getGeoRectangle(north, east, south, west) {\r\n    let multiPolygon = [];\r\n    if (west <= -180) {\r\n        west = -179.9999;\r\n    }\r\n    if (south <= -90) {\r\n        south = -89.9999;\r\n    }\r\n    if (north >= 90) {\r\n        north = 89.9999;\r\n    }\r\n    if (east >= 180) {\r\n        east = 179.9999;\r\n    }\r\n    let stepLong = Math.min(90, (east - west) / Math.ceil((east - west) / 90));\r\n    let stepLat = (north - south) / Math.ceil((north - south) / 90);\r\n    for (let ln = west; ln < east; ln = ln + stepLong) {\r\n        let surface = [];\r\n        multiPolygon.push([surface]);\r\n        if (ln + stepLong > east) {\r\n            stepLong = east - ln;\r\n        }\r\n        for (let ll = ln; ll <= ln + stepLong; ll = ll + 5) {\r\n            surface.push([ll, north]);\r\n        }\r\n        for (let lt = north; lt >= south; lt = lt - stepLat) {\r\n            surface.push([ln + stepLong, lt]);\r\n        }\r\n        for (let ll = ln + stepLong; ll >= ln; ll = ll - 5) {\r\n            surface.push([ll, south]);\r\n        }\r\n        for (let lt = south; lt <= north; lt = lt + stepLat) {\r\n            surface.push([ln, lt]);\r\n        }\r\n    }\r\n    return { type: \"MultiPolygon\", coordinates: multiPolygon };\r\n}\r\n/**\r\n * Update longitudes and latitudes that wrap around -180/180 and -90/90 values.\r\n *\r\n * @param   geoPoint  Input coordinates\r\n * @return            Updated coordinates\r\n */\r\nfunction normalizeGeoPoint(geoPoint) {\r\n    let longitude = wrapAngleTo180(geoPoint.longitude);\r\n    let latitude = Math.asin(Math.sin((geoPoint.latitude * _core_util_Math__WEBPACK_IMPORTED_MODULE_4__.RADIANS))) * _core_util_Math__WEBPACK_IMPORTED_MODULE_4__.DEGREES;\r\n    let latitude180 = wrapAngleTo180(geoPoint.latitude);\r\n    if (Math.abs(latitude180) > 90) {\r\n        longitude = wrapAngleTo180(longitude + 180);\r\n    }\r\n    geoPoint.longitude = longitude;\r\n    geoPoint.latitude = latitude;\r\n    return geoPoint;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction wrapAngleTo180(angle) {\r\n    angle = angle % 360;\r\n    if (angle > 180) {\r\n        angle -= 360;\r\n    }\r\n    if (angle < -180) {\r\n        angle += 360;\r\n    }\r\n    return angle;\r\n}\r\n//# sourceMappingURL=MapUtils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNS8uaW50ZXJuYWwvY2hhcnRzL21hcC9NYXBVdGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBOEM7QUFDc0I7QUFDcEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsV0FBVyxrREFBUztBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AscUJBQXFCLGtEQUFXO0FBQ2hDLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsV0FBVyxrREFBTztBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsbUJBQW1CLGtEQUFTO0FBQzVCO0FBQ0EsNEJBQTRCO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsV0FBVztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLHFCQUFxQjtBQUMvQztBQUNBO0FBQ0EsNkJBQTZCLGFBQWE7QUFDMUM7QUFDQTtBQUNBLHFDQUFxQyxVQUFVO0FBQy9DO0FBQ0E7QUFDQSw2QkFBNkIsYUFBYTtBQUMxQztBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsMkRBQTJELG9EQUFhLE1BQU0sb0RBQWE7QUFDM0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3Jrc3BhY2Uvbm9kZV9tb2R1bGVzL0BhbWNoYXJ0cy9hbWNoYXJ0czUvLmludGVybmFsL2NoYXJ0cy9tYXAvTWFwVXRpbHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgJG1hdGggZnJvbSBcIi4uLy4uL2NvcmUvdXRpbC9NYXRoXCI7XHJcbmltcG9ydCB7IGdlb0NpcmNsZSwgZ2VvQ2VudHJvaWQsIGdlb0JvdW5kcywgZ2VvQXJlYSB9IGZyb20gXCJkMy1nZW9cIjtcclxuLyoqXHJcbiAqIFJldHVybnMgYSBHZW9KU09OIHJlcHJlc2VudGF0aW9uIG9mIGEgY2lyY2xlLCBzdWl0YWJsZSBmb3IgdXNlIGFzIGBnZW9tZXRyeWAgdmFsdWVcclxuICogaW4gYSBbW01hcFBvbHlnb25dXSBpbiBhIFtbTWFwUG9seWdvblNlcmllc11dLlxyXG4gKlxyXG4gKiBAcGFyYW0gICBnZW9Qb2ludCAgQ29vcmRpbmF0ZXNcclxuICogQHBhcmFtICAgcmFkaXVzICAgIENpcmNsZSByYWRpdXMgaW4gZGVncmVlc1xyXG4gKiBAcmV0dXJuICAgICAgICAgICAgUG9seWdvbiBnZW9tZXRyeVxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGdldEdlb0NpcmNsZShnZW9Qb2ludCwgcmFkaXVzKSB7XHJcbiAgICByZXR1cm4gZ2VvQ2lyY2xlKCkuY2VudGVyKFtnZW9Qb2ludC5sb25naXR1ZGUsIGdlb1BvaW50LmxhdGl0dWRlXSkucmFkaXVzKHJhZGl1cykoKTtcclxufVxyXG4vKipcclxuICogUmV0dXJucyBnZW8gY2VudHJvaWQgb2YgYSBnZW9tZXRyeVxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGdldEdlb0NlbnRyb2lkKGdlb21ldHJ5KSB7XHJcbiAgICBjb25zdCBjZW50cm9pZCA9IGdlb0NlbnRyb2lkKGdlb21ldHJ5KTtcclxuICAgIHJldHVybiB7IGxvbmdpdHVkZTogY2VudHJvaWRbMF0sIGxhdGl0dWRlOiBjZW50cm9pZFsxXSB9O1xyXG59XHJcbi8qKlxyXG4gKiBSZXR1cm5zIGdlbyBhcmVhIG9mIGEgZ2VvbWV0cnlcclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBnZXRHZW9BcmVhKGdlb21ldHJ5KSB7XHJcbiAgICByZXR1cm4gZ2VvQXJlYShnZW9tZXRyeSk7XHJcbn1cclxuLyoqXHJcbiAqIFJldHVybnMgYm91bmRzIG9mIGEgZ2VvbWV0cnlcclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBnZXRHZW9Cb3VuZHMoZ2VvbWV0cnkpIHtcclxuICAgIGNvbnN0IGJvdW5kcyA9IGdlb0JvdW5kcyhnZW9tZXRyeSk7XHJcbiAgICBpZiAoYm91bmRzKSB7XHJcbiAgICAgICAgY29uc3QgZ2VvQm91bmRzID0geyBsZWZ0OiBib3VuZHNbMF1bMF0sIHJpZ2h0OiBib3VuZHNbMV1bMF0sIHRvcDogYm91bmRzWzFdWzFdLCBib3R0b206IGJvdW5kc1swXVsxXSB9O1xyXG4gICAgICAgIGlmIChnZW9Cb3VuZHMucmlnaHQgPCBnZW9Cb3VuZHMubGVmdCkge1xyXG4gICAgICAgICAgICBnZW9Cb3VuZHMucmlnaHQgPSAxODA7XHJcbiAgICAgICAgICAgIGdlb0JvdW5kcy5sZWZ0ID0gLTE4MDtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGdlb0JvdW5kcztcclxuICAgIH1cclxuICAgIHJldHVybiB7IGxlZnQ6IDAsIHJpZ2h0OiAwLCB0b3A6IDAsIGJvdHRvbTogMCB9O1xyXG59XHJcbi8qKlxyXG4gKiBSZXR1cm5zIGEgR2VvSlNPTiByZXByZXNlbnRhdGlvbiBvZiBhIHJlY3RhbmdsZSwgc3VpdGFibGUgZm9yIHVzZVxyXG4gKiBhcyBgZ2VvbWV0cnlgIHZhbHVlIGluIGEgW1tNYXBQb2x5Z29uXV0gaW4gYSBbW01hcFBvbHlnb25TZXJpZXNdXS5cclxuICpcclxuICogQHBhcmFtICAgbm9ydGggIE5vcnRoIGxhdGl0dWRlXHJcbiAqIEBwYXJhbSAgIGVhc3QgICBFYXN0IGxvbmdpdHVkZVxyXG4gKiBAcGFyYW0gICBzb3V0aCAgU291dGggbGF0aXR1ZGVcclxuICogQHBhcmFtICAgd2VzdCAgIFdlc3QgbG9uZ2l0dWRlXHJcbiAqIEByZXR1cm4gICAgICAgICBwb2x5Z29uIGdlb21ldHJ5XHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gZ2V0R2VvUmVjdGFuZ2xlKG5vcnRoLCBlYXN0LCBzb3V0aCwgd2VzdCkge1xyXG4gICAgbGV0IG11bHRpUG9seWdvbiA9IFtdO1xyXG4gICAgaWYgKHdlc3QgPD0gLTE4MCkge1xyXG4gICAgICAgIHdlc3QgPSAtMTc5Ljk5OTk7XHJcbiAgICB9XHJcbiAgICBpZiAoc291dGggPD0gLTkwKSB7XHJcbiAgICAgICAgc291dGggPSAtODkuOTk5OTtcclxuICAgIH1cclxuICAgIGlmIChub3J0aCA+PSA5MCkge1xyXG4gICAgICAgIG5vcnRoID0gODkuOTk5OTtcclxuICAgIH1cclxuICAgIGlmIChlYXN0ID49IDE4MCkge1xyXG4gICAgICAgIGVhc3QgPSAxNzkuOTk5OTtcclxuICAgIH1cclxuICAgIGxldCBzdGVwTG9uZyA9IE1hdGgubWluKDkwLCAoZWFzdCAtIHdlc3QpIC8gTWF0aC5jZWlsKChlYXN0IC0gd2VzdCkgLyA5MCkpO1xyXG4gICAgbGV0IHN0ZXBMYXQgPSAobm9ydGggLSBzb3V0aCkgLyBNYXRoLmNlaWwoKG5vcnRoIC0gc291dGgpIC8gOTApO1xyXG4gICAgZm9yIChsZXQgbG4gPSB3ZXN0OyBsbiA8IGVhc3Q7IGxuID0gbG4gKyBzdGVwTG9uZykge1xyXG4gICAgICAgIGxldCBzdXJmYWNlID0gW107XHJcbiAgICAgICAgbXVsdGlQb2x5Z29uLnB1c2goW3N1cmZhY2VdKTtcclxuICAgICAgICBpZiAobG4gKyBzdGVwTG9uZyA+IGVhc3QpIHtcclxuICAgICAgICAgICAgc3RlcExvbmcgPSBlYXN0IC0gbG47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGZvciAobGV0IGxsID0gbG47IGxsIDw9IGxuICsgc3RlcExvbmc7IGxsID0gbGwgKyA1KSB7XHJcbiAgICAgICAgICAgIHN1cmZhY2UucHVzaChbbGwsIG5vcnRoXSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGZvciAobGV0IGx0ID0gbm9ydGg7IGx0ID49IHNvdXRoOyBsdCA9IGx0IC0gc3RlcExhdCkge1xyXG4gICAgICAgICAgICBzdXJmYWNlLnB1c2goW2xuICsgc3RlcExvbmcsIGx0XSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGZvciAobGV0IGxsID0gbG4gKyBzdGVwTG9uZzsgbGwgPj0gbG47IGxsID0gbGwgLSA1KSB7XHJcbiAgICAgICAgICAgIHN1cmZhY2UucHVzaChbbGwsIHNvdXRoXSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGZvciAobGV0IGx0ID0gc291dGg7IGx0IDw9IG5vcnRoOyBsdCA9IGx0ICsgc3RlcExhdCkge1xyXG4gICAgICAgICAgICBzdXJmYWNlLnB1c2goW2xuLCBsdF0pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHJldHVybiB7IHR5cGU6IFwiTXVsdGlQb2x5Z29uXCIsIGNvb3JkaW5hdGVzOiBtdWx0aVBvbHlnb24gfTtcclxufVxyXG4vKipcclxuICogVXBkYXRlIGxvbmdpdHVkZXMgYW5kIGxhdGl0dWRlcyB0aGF0IHdyYXAgYXJvdW5kIC0xODAvMTgwIGFuZCAtOTAvOTAgdmFsdWVzLlxyXG4gKlxyXG4gKiBAcGFyYW0gICBnZW9Qb2ludCAgSW5wdXQgY29vcmRpbmF0ZXNcclxuICogQHJldHVybiAgICAgICAgICAgIFVwZGF0ZWQgY29vcmRpbmF0ZXNcclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBub3JtYWxpemVHZW9Qb2ludChnZW9Qb2ludCkge1xyXG4gICAgbGV0IGxvbmdpdHVkZSA9IHdyYXBBbmdsZVRvMTgwKGdlb1BvaW50LmxvbmdpdHVkZSk7XHJcbiAgICBsZXQgbGF0aXR1ZGUgPSBNYXRoLmFzaW4oTWF0aC5zaW4oKGdlb1BvaW50LmxhdGl0dWRlICogJG1hdGguUkFESUFOUykpKSAqICRtYXRoLkRFR1JFRVM7XHJcbiAgICBsZXQgbGF0aXR1ZGUxODAgPSB3cmFwQW5nbGVUbzE4MChnZW9Qb2ludC5sYXRpdHVkZSk7XHJcbiAgICBpZiAoTWF0aC5hYnMobGF0aXR1ZGUxODApID4gOTApIHtcclxuICAgICAgICBsb25naXR1ZGUgPSB3cmFwQW5nbGVUbzE4MChsb25naXR1ZGUgKyAxODApO1xyXG4gICAgfVxyXG4gICAgZ2VvUG9pbnQubG9uZ2l0dWRlID0gbG9uZ2l0dWRlO1xyXG4gICAgZ2VvUG9pbnQubGF0aXR1ZGUgPSBsYXRpdHVkZTtcclxuICAgIHJldHVybiBnZW9Qb2ludDtcclxufVxyXG4vKipcclxuICogQGlnbm9yZVxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIHdyYXBBbmdsZVRvMTgwKGFuZ2xlKSB7XHJcbiAgICBhbmdsZSA9IGFuZ2xlICUgMzYwO1xyXG4gICAgaWYgKGFuZ2xlID4gMTgwKSB7XHJcbiAgICAgICAgYW5nbGUgLT0gMzYwO1xyXG4gICAgfVxyXG4gICAgaWYgKGFuZ2xlIDwgLTE4MCkge1xyXG4gICAgICAgIGFuZ2xlICs9IDM2MDtcclxuICAgIH1cclxuICAgIHJldHVybiBhbmdsZTtcclxufVxyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1NYXBVdGlscy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/charts/map/MapUtils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/Registry.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/core/Registry.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Registry: () => (/* binding */ Registry),\n/* harmony export */   addLicense: () => (/* binding */ addLicense),\n/* harmony export */   disposeAllRootElements: () => (/* binding */ disposeAllRootElements),\n/* harmony export */   getRootById: () => (/* binding */ getRootById),\n/* harmony export */   registry: () => (/* binding */ registry)\n/* harmony export */ });\n/**\r\n * @ignore\r\n */\r\nclass Registry {\r\n    constructor() {\r\n        /**\r\n         * Currently running version of amCharts.\r\n         */\r\n        Object.defineProperty(this, \"version\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"5.11.2\"\r\n        });\r\n        /**\r\n         * List of applied licenses.\r\n         * @ignore\r\n         */\r\n        Object.defineProperty(this, \"licenses\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        /**\r\n         * Entities that have their `id` setting set.\r\n         */\r\n        Object.defineProperty(this, \"entitiesById\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        /**\r\n         * All created [[Root]] elements.\r\n         */\r\n        Object.defineProperty(this, \"rootElements\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n}\r\n/**\r\n    * @ignore\r\n */\r\nconst registry = new Registry();\r\n/**\r\n * Adds a license, e.g.:\r\n *\r\n * ```TypeScript\r\n * am5.addLicense(\"xxxxxxxx\");\r\n * ```\r\n * ```JavaScript\r\n * am5.addLicense(\"xxxxxxxx\");\r\n * ```\r\n *\r\n * Multiple licenses can be added to cover for multiple products.\r\n *\r\n * @param  license  License key\r\n */\r\nfunction addLicense(license) {\r\n    registry.licenses.push(license);\r\n}\r\n/**\r\n * Disposes all [[Root]] elements.\r\n */\r\nfunction disposeAllRootElements() {\r\n    let root;\r\n    while (root = registry.rootElements.pop()) {\r\n        root.dispose();\r\n    }\r\n}\r\n/**\r\n * Finds and returns a `Root` element assigned to a container with `id`.\r\n *\r\n * @param   id  Container ID\r\n * @return      Root\r\n * @since 5.9.2\r\n */\r\nfunction getRootById(id) {\r\n    let found;\r\n    registry.rootElements.forEach((item) => {\r\n        if (item.dom.id == id) {\r\n            found = item;\r\n        }\r\n    });\r\n    return found;\r\n}\r\n//# sourceMappingURL=Registry.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNS8uaW50ZXJuYWwvY29yZS9SZWdpc3RyeS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL2hvbWUvcnVubmVyL3dvcmtzcGFjZS9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNS8uaW50ZXJuYWwvY29yZS9SZWdpc3RyeS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQGlnbm9yZVxyXG4gKi9cclxuZXhwb3J0IGNsYXNzIFJlZ2lzdHJ5IHtcclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEN1cnJlbnRseSBydW5uaW5nIHZlcnNpb24gb2YgYW1DaGFydHMuXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwidmVyc2lvblwiLCB7XHJcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcclxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXHJcbiAgICAgICAgICAgIHZhbHVlOiBcIjUuMTEuMlwiXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogTGlzdCBvZiBhcHBsaWVkIGxpY2Vuc2VzLlxyXG4gICAgICAgICAqIEBpZ25vcmVcclxuICAgICAgICAgKi9cclxuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJsaWNlbnNlc1wiLCB7XHJcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcclxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXHJcbiAgICAgICAgICAgIHZhbHVlOiBbXVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEVudGl0aWVzIHRoYXQgaGF2ZSB0aGVpciBgaWRgIHNldHRpbmcgc2V0LlxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImVudGl0aWVzQnlJZFwiLCB7XHJcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcclxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXHJcbiAgICAgICAgICAgIHZhbHVlOiB7fVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEFsbCBjcmVhdGVkIFtbUm9vdF1dIGVsZW1lbnRzLlxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcInJvb3RFbGVtZW50c1wiLCB7XHJcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcclxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXHJcbiAgICAgICAgICAgIHZhbHVlOiBbXVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG59XHJcbi8qKlxyXG4gICAgKiBAaWdub3JlXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgcmVnaXN0cnkgPSBuZXcgUmVnaXN0cnkoKTtcclxuLyoqXHJcbiAqIEFkZHMgYSBsaWNlbnNlLCBlLmcuOlxyXG4gKlxyXG4gKiBgYGBUeXBlU2NyaXB0XHJcbiAqIGFtNS5hZGRMaWNlbnNlKFwieHh4eHh4eHhcIik7XHJcbiAqIGBgYFxyXG4gKiBgYGBKYXZhU2NyaXB0XHJcbiAqIGFtNS5hZGRMaWNlbnNlKFwieHh4eHh4eHhcIik7XHJcbiAqIGBgYFxyXG4gKlxyXG4gKiBNdWx0aXBsZSBsaWNlbnNlcyBjYW4gYmUgYWRkZWQgdG8gY292ZXIgZm9yIG11bHRpcGxlIHByb2R1Y3RzLlxyXG4gKlxyXG4gKiBAcGFyYW0gIGxpY2Vuc2UgIExpY2Vuc2Uga2V5XHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gYWRkTGljZW5zZShsaWNlbnNlKSB7XHJcbiAgICByZWdpc3RyeS5saWNlbnNlcy5wdXNoKGxpY2Vuc2UpO1xyXG59XHJcbi8qKlxyXG4gKiBEaXNwb3NlcyBhbGwgW1tSb290XV0gZWxlbWVudHMuXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gZGlzcG9zZUFsbFJvb3RFbGVtZW50cygpIHtcclxuICAgIGxldCByb290O1xyXG4gICAgd2hpbGUgKHJvb3QgPSByZWdpc3RyeS5yb290RWxlbWVudHMucG9wKCkpIHtcclxuICAgICAgICByb290LmRpc3Bvc2UoKTtcclxuICAgIH1cclxufVxyXG4vKipcclxuICogRmluZHMgYW5kIHJldHVybnMgYSBgUm9vdGAgZWxlbWVudCBhc3NpZ25lZCB0byBhIGNvbnRhaW5lciB3aXRoIGBpZGAuXHJcbiAqXHJcbiAqIEBwYXJhbSAgIGlkICBDb250YWluZXIgSURcclxuICogQHJldHVybiAgICAgIFJvb3RcclxuICogQHNpbmNlIDUuOS4yXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gZ2V0Um9vdEJ5SWQoaWQpIHtcclxuICAgIGxldCBmb3VuZDtcclxuICAgIHJlZ2lzdHJ5LnJvb3RFbGVtZW50cy5mb3JFYWNoKChpdGVtKSA9PiB7XHJcbiAgICAgICAgaWYgKGl0ZW0uZG9tLmlkID09IGlkKSB7XHJcbiAgICAgICAgICAgIGZvdW5kID0gaXRlbTtcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxuICAgIHJldHVybiBmb3VuZDtcclxufVxyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1SZWdpc3RyeS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/Registry.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/Root.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/core/Root.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Root: () => (/* binding */ Root)\n/* harmony export */ });\n/* harmony import */ var _util_Animation__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./util/Animation */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Animation.js\");\n/* harmony import */ var _render_Container__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./render/Container */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/Container.js\");\n/* harmony import */ var _render_Text__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./render/Text */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/Text.js\");\n/* harmony import */ var _render_HorizontalLayout__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./render/HorizontalLayout */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/HorizontalLayout.js\");\n/* harmony import */ var _render_VerticalLayout__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./render/VerticalLayout */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/VerticalLayout.js\");\n/* harmony import */ var _render_GridLayout__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./render/GridLayout */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/GridLayout.js\");\n/* harmony import */ var _util_Disposer__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./util/Disposer */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Disposer.js\");\n/* harmony import */ var _util_ResizeSensor__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./util/ResizeSensor */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/ResizeSensor.js\");\n/* harmony import */ var _util_InterfaceColors__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./util/InterfaceColors */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/InterfaceColors.js\");\n/* harmony import */ var _render_Graphics__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./render/Graphics */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/Graphics.js\");\n/* harmony import */ var _render_Rectangle__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./render/Rectangle */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/Rectangle.js\");\n/* harmony import */ var _render_Tooltip__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./render/Tooltip */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/Tooltip.js\");\n/* harmony import */ var _util_NumberFormatter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./util/NumberFormatter */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/NumberFormatter.js\");\n/* harmony import */ var _util_DateFormatter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./util/DateFormatter */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/DateFormatter.js\");\n/* harmony import */ var _util_DurationFormatter__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./util/DurationFormatter */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/DurationFormatter.js\");\n/* harmony import */ var _util_Language__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/Language */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Language.js\");\n/* harmony import */ var _util_EventDispatcher__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/EventDispatcher */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/EventDispatcher.js\");\n/* harmony import */ var _themes_DefaultTheme__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../themes/DefaultTheme */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/themes/DefaultTheme.js\");\n/* harmony import */ var _render_backend_CanvasRenderer__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./render/backend/CanvasRenderer */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/backend/CanvasRenderer.js\");\n/* harmony import */ var _util_Percent__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./util/Percent */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Percent.js\");\n/* harmony import */ var _util_Color__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./util/Color */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Color.js\");\n/* harmony import */ var _util_PopulateString__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./util/PopulateString */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/PopulateString.js\");\n/* harmony import */ var _Registry__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./Registry */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/Registry.js\");\n/* harmony import */ var _util_Order__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./util/Order */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Order.js\");\n/* harmony import */ var _util_Array__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./util/Array */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Array.js\");\n/* harmony import */ var _util_Object__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./util/Object */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Object.js\");\n/* harmony import */ var _util_Utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./util/Utils */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Utils.js\");\n/* harmony import */ var _util_Type__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./util/Type */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Type.js\");\n/* harmony import */ var _locales_en__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../locales/en */ \"(ssr)/./node_modules/@amcharts/amcharts5/locales/en.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction rAF(fps, callback) {\r\n    if (fps == null) {\r\n        requestAnimationFrame(callback);\r\n    }\r\n    else {\r\n        setTimeout(() => {\r\n            requestAnimationFrame(callback);\r\n        }, 1000 / fps);\r\n    }\r\n}\r\n// TODO implement Disposer\r\n/**\r\n * Root element of the chart.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/getting-started/#Root_element} for more info\r\n */\r\nclass Root {\r\n    constructor(id, settings = {}, isReal) {\r\n        /**\r\n         * A reference to original chart container (div element).\r\n         */\r\n        Object.defineProperty(this, \"dom\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_inner\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_settings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_isDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_isDirtyParents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_isDirtyAnimation\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dirtyParents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dirtyBounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dirtyPositions\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_ticker\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"_tickers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_updateTick\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        /**\r\n         * Root's event dispatcher.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/events/} for more info\r\n         */\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new _util_EventDispatcher__WEBPACK_IMPORTED_MODULE_0__.EventDispatcher()\r\n        });\r\n        /**\r\n         * @ignore\r\n         * @todo needs description\r\n         */\r\n        Object.defineProperty(this, \"animationTime\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"_animations\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_renderer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_rootContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Main content container.\r\n         */\r\n        Object.defineProperty(this, \"container\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A [[Container]] used to display tooltips in.\r\n         */\r\n        Object.defineProperty(this, \"tooltipContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipContainerSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltip\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // Locale-related\r\n        /**\r\n         * @ignore\r\n         */\r\n        Object.defineProperty(this, \"language\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _util_Language__WEBPACK_IMPORTED_MODULE_1__.Language.new(this, {})\r\n        });\r\n        /**\r\n         * Locale used by the chart.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/locales/}\r\n         */\r\n        Object.defineProperty(this, \"locale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _locales_en__WEBPACK_IMPORTED_MODULE_2__[\"default\"]\r\n        });\r\n        // Date-time related\r\n        /**\r\n         * Use UTC when formatting date/time.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/#utc-and-time-zones} for more info\r\n         */\r\n        Object.defineProperty(this, \"utc\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * If set, will format date/time in specific time zone.\r\n         *\r\n         * The value should be named time zone, e.g.:\r\n         * `\"America/Vancouver\"`, `\"Australia/Sydney\"`, `\"UTC\"`.\r\n         *\r\n         * NOTE: Using time zone feature may noticeable affect performance of the\r\n         * chart, especially with large data sets, since every single date will need\r\n         * to be recalculated.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#time-zone} for more info\r\n         * @since 5.1.0\r\n         */\r\n        Object.defineProperty(this, \"timezone\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * The maximum FPS that the Root will run at.\r\n         *\r\n         * If `undefined` it will run at the highest FPS.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#Performance} for more info\r\n         */\r\n        Object.defineProperty(this, \"fps\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Number formatter.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/} for more info\r\n         */\r\n        Object.defineProperty(this, \"numberFormatter\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _util_NumberFormatter__WEBPACK_IMPORTED_MODULE_3__.NumberFormatter.new(this, {})\r\n        });\r\n        /**\r\n         * Date/time formatter.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\r\n         */\r\n        Object.defineProperty(this, \"dateFormatter\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _util_DateFormatter__WEBPACK_IMPORTED_MODULE_4__.DateFormatter.new(this, {})\r\n        });\r\n        /**\r\n         * Duration formatter.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\r\n         */\r\n        Object.defineProperty(this, \"durationFormatter\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _util_DurationFormatter__WEBPACK_IMPORTED_MODULE_5__.DurationFormatter.new(this, {})\r\n        });\r\n        // Accessibility\r\n        /**\r\n         * Global tab index for using for the whole chart\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/accessibility/} for more info\r\n         */\r\n        Object.defineProperty(this, \"tabindex\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        //@todo maybe make this better\r\n        Object.defineProperty(this, \"_tabindexes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_a11yD\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_focusElementDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_focusElementContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_focusedSprite\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_isShift\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_keyboardDragPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipElementContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_readerAlertElement\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_logo\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipDiv\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Used for dynamically-created CSS and JavaScript with strict source policies.\r\n         */\r\n        Object.defineProperty(this, \"nonce\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Special color set to be used for various controls.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/#Interface_colors} for more info\r\n         */\r\n        Object.defineProperty(this, \"interfaceColors\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * An instance of vertical layout object that can be used to set `layout` setting\r\n         * of a [[Container]].\r\n         *\r\n         * @default VerticalLayout.new()\r\n         */\r\n        Object.defineProperty(this, \"verticalLayout\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _render_VerticalLayout__WEBPACK_IMPORTED_MODULE_6__.VerticalLayout.new(this, {})\r\n        });\r\n        /**\r\n         * An instance of horizontal layout object that can be used to set `layout` setting\r\n         * of a [[Container]].\r\n         *\r\n         * @default HorizontalLayout.new()\r\n         */\r\n        Object.defineProperty(this, \"horizontalLayout\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _render_HorizontalLayout__WEBPACK_IMPORTED_MODULE_7__.HorizontalLayout.new(this, {})\r\n        });\r\n        /**\r\n         * An instance of grid layout object that can be used to set `layout` setting\r\n         * of a [[Container]].\r\n         *\r\n         * @default VerticalLayout.new()\r\n         */\r\n        Object.defineProperty(this, \"gridLayout\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _render_GridLayout__WEBPACK_IMPORTED_MODULE_8__.GridLayout.new(this, {})\r\n        });\r\n        Object.defineProperty(this, \"_paused\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * Indicates whether chart should resized automatically when parent container\r\n         * width and/or height changes.\r\n         *\r\n         * If disabled (`autoResize = false`) you can make the chart resize manually\r\n         * by calling root element's `resize()` method.\r\n         */\r\n        Object.defineProperty(this, \"autoResize\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"_fontHash\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"\"\r\n        });\r\n        Object.defineProperty(this, \"_isDisposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_disposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_resizeSensorDisposer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltips\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_htmlElementContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_htmlEnabledContainers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        /**\r\n         * Entities that have their `id` setting set.\r\n         *\r\n         * @since 5.11.0\r\n         */\r\n        Object.defineProperty(this, \"entitiesById\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        if (!isReal) {\r\n            throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\r\n        }\r\n        this._settings = settings;\r\n        if (settings.accessible == false) {\r\n            this._a11yD = true;\r\n        }\r\n        if (settings.useSafeResolution == null) {\r\n            settings.useSafeResolution = true;\r\n        }\r\n        let resolution;\r\n        if (settings.useSafeResolution) {\r\n            resolution = _util_Utils__WEBPACK_IMPORTED_MODULE_9__.getSafeResolution();\r\n        }\r\n        this._renderer = new _render_backend_CanvasRenderer__WEBPACK_IMPORTED_MODULE_10__.CanvasRenderer(resolution);\r\n        let dom;\r\n        if (id instanceof HTMLElement) {\r\n            dom = id;\r\n        }\r\n        else {\r\n            dom = document.getElementById(id);\r\n        }\r\n        _util_Array__WEBPACK_IMPORTED_MODULE_11__.each(_Registry__WEBPACK_IMPORTED_MODULE_12__.registry.rootElements, (root) => {\r\n            if (root.dom === dom) {\r\n                throw new Error(\"You cannot have multiple Roots on the same DOM node\");\r\n            }\r\n        });\r\n        this.interfaceColors = _util_InterfaceColors__WEBPACK_IMPORTED_MODULE_13__.InterfaceColors.new(this, {});\r\n        if (dom === null) {\r\n            throw new Error(\"Could not find HTML element with id `\" + id + \"`\");\r\n        }\r\n        this.dom = dom;\r\n        let inner = document.createElement(\"div\");\r\n        inner.style.position = \"relative\";\r\n        inner.style.width = \"100%\";\r\n        inner.style.height = \"100%\";\r\n        dom.appendChild(inner);\r\n        const tooltipContainerBounds = settings.tooltipContainerBounds;\r\n        if (tooltipContainerBounds) {\r\n            this._tooltipContainerSettings = tooltipContainerBounds;\r\n        }\r\n        this._inner = inner;\r\n        this._updateComputedStyles();\r\n        _Registry__WEBPACK_IMPORTED_MODULE_12__.registry.rootElements.push(this);\r\n    }\r\n    static new(id, settings) {\r\n        const root = new Root(id, settings, true);\r\n        root._init();\r\n        return root;\r\n    }\r\n    moveDOM(id) {\r\n        let dom;\r\n        if (id instanceof HTMLElement) {\r\n            dom = id;\r\n        }\r\n        else {\r\n            dom = document.getElementById(id);\r\n        }\r\n        if (dom) {\r\n            while (this.dom.childNodes.length > 0) {\r\n                dom.appendChild(this.dom.childNodes[0]);\r\n            }\r\n            this.dom = dom;\r\n            this._initResizeSensor();\r\n            this.resize();\r\n        }\r\n    }\r\n    _handleLogo() {\r\n        if (this._logo) {\r\n            const w = this.dom.offsetWidth;\r\n            const h = this.dom.offsetHeight;\r\n            if ((w <= 150) || (h <= 60)) {\r\n                this._logo.hide();\r\n            }\r\n            else {\r\n                this._logo.show();\r\n            }\r\n        }\r\n    }\r\n    _showBranding() {\r\n        if (!this._logo) {\r\n            const logo = this.tooltipContainer.children.push(_render_Container__WEBPACK_IMPORTED_MODULE_14__.Container.new(this, {\r\n                interactive: true,\r\n                interactiveChildren: false,\r\n                position: \"absolute\",\r\n                setStateOnChildren: true,\r\n                paddingTop: 9,\r\n                paddingRight: 9,\r\n                paddingBottom: 9,\r\n                paddingLeft: 9,\r\n                scale: .6,\r\n                y: (0,_util_Percent__WEBPACK_IMPORTED_MODULE_15__.percent)(100),\r\n                centerY: _util_Percent__WEBPACK_IMPORTED_MODULE_15__.p100,\r\n                tooltipText: \"Created using amCharts 5\",\r\n                tooltipX: _util_Percent__WEBPACK_IMPORTED_MODULE_15__.p100,\r\n                cursorOverStyle: \"pointer\",\r\n                background: _render_Rectangle__WEBPACK_IMPORTED_MODULE_16__.Rectangle.new(this, {\r\n                    fill: (0,_util_Color__WEBPACK_IMPORTED_MODULE_17__.color)(0x474758),\r\n                    fillOpacity: 0,\r\n                    tooltipY: 5\r\n                })\r\n            }));\r\n            const tooltip = _render_Tooltip__WEBPACK_IMPORTED_MODULE_18__.Tooltip.new(this, {\r\n                pointerOrientation: \"horizontal\",\r\n                paddingTop: 4,\r\n                paddingRight: 7,\r\n                paddingBottom: 4,\r\n                paddingLeft: 7\r\n            });\r\n            tooltip.label.setAll({\r\n                fontSize: 12\r\n            });\r\n            tooltip.get(\"background\").setAll({\r\n                fill: this.interfaceColors.get(\"background\"),\r\n                stroke: this.interfaceColors.get(\"grid\"),\r\n                strokeOpacity: 0.3\r\n            });\r\n            logo.set(\"tooltip\", tooltip);\r\n            logo.events.on(\"click\", () => {\r\n                window.open(\"https://www.amcharts.com/\", \"_blank\");\r\n            });\r\n            logo.states.create(\"hover\", {});\r\n            const m = logo.children.push(_render_Graphics__WEBPACK_IMPORTED_MODULE_19__.Graphics.new(this, {\r\n                stroke: (0,_util_Color__WEBPACK_IMPORTED_MODULE_17__.color)(0xcccccc),\r\n                strokeWidth: 3,\r\n                svgPath: \"M5 25 L13 25h13.6c3.4 0 6 0 10.3-4.3s5.2-12 8.6-12c3.4 0 4.3 8.6 7.7 8.6M83.4 25H79.8c-3.4 0-6 0-10.3-4.3s-5.2-12-8.6-12-4.3 8.6-7.7 8.6\"\r\n            }));\r\n            m.states.create(\"hover\", { stroke: (0,_util_Color__WEBPACK_IMPORTED_MODULE_17__.color)(0x3CABFF) });\r\n            const a = logo.children.push(_render_Graphics__WEBPACK_IMPORTED_MODULE_19__.Graphics.new(this, {\r\n                stroke: (0,_util_Color__WEBPACK_IMPORTED_MODULE_17__.color)(0x888888),\r\n                strokeWidth: 3,\r\n                svgPath: \"M83.4 25h-31C37 25 39.5 4.4 28.4 4.4S18.9 24.2 4.3 25H0\"\r\n            }));\r\n            a.states.create(\"hover\", { stroke: (0,_util_Color__WEBPACK_IMPORTED_MODULE_17__.color)(0x474758) });\r\n            //logo.set(\"tooltip\", this._tooltip);\r\n            //logo.setPrivate(\"tooltipTarget\", logo.get(\"background\"));\r\n            this._logo = logo;\r\n            this._handleLogo();\r\n        }\r\n    }\r\n    _getRealSize() {\r\n        return this.dom.getBoundingClientRect();\r\n    }\r\n    _getCalculatedSize(rect) {\r\n        if (this._settings.calculateSize) {\r\n            return this._settings.calculateSize(rect);\r\n        }\r\n        else {\r\n            return {\r\n                width: rect.width,\r\n                height: rect.height,\r\n            };\r\n        }\r\n    }\r\n    _init() {\r\n        const settings = this._settings;\r\n        if (settings.accessible !== false) {\r\n            if (settings.focusable) {\r\n                this._inner.setAttribute(\"focusable\", \"true\");\r\n                this._inner.setAttribute(\"tabindex\", this.tabindex + \"\");\r\n            }\r\n            if (settings.ariaLabel) {\r\n                this._inner.setAttribute(\"aria-label\", settings.ariaLabel);\r\n            }\r\n            if (settings.role) {\r\n                this._inner.setAttribute(\"role\", settings.role);\r\n            }\r\n        }\r\n        const renderer = this._renderer;\r\n        const rect = this._getRealSize();\r\n        const size = this._getCalculatedSize(rect);\r\n        const width = Math.floor(size.width);\r\n        const height = Math.floor(size.height);\r\n        const realWidth = Math.floor(rect.width);\r\n        const realHeight = Math.floor(rect.height);\r\n        const rootContainer = _render_Container__WEBPACK_IMPORTED_MODULE_14__.Container.new(this, {\r\n            visible: true,\r\n            width: width,\r\n            height: height,\r\n        });\r\n        this._rootContainer = rootContainer;\r\n        this._rootContainer._defaultThemes.push(_themes_DefaultTheme__WEBPACK_IMPORTED_MODULE_20__.DefaultTheme.new(this));\r\n        const container = rootContainer.children.push(_render_Container__WEBPACK_IMPORTED_MODULE_14__.Container.new(this, { visible: true, width: _util_Percent__WEBPACK_IMPORTED_MODULE_15__.p100, height: _util_Percent__WEBPACK_IMPORTED_MODULE_15__.p100 }));\r\n        this.container = container;\r\n        renderer.resize(realWidth, realHeight, width, height);\r\n        //@todo: better appendChild - refer\r\n        this._inner.appendChild(renderer.view);\r\n        // TODO: TMP TMP TMP for testing only, remove\r\n        //renderer.debugGhostView = true;\r\n        this._initResizeSensor();\r\n        // HTML content holder\r\n        const htmlElementContainer = document.createElement(\"div\");\r\n        this._htmlElementContainer = htmlElementContainer;\r\n        htmlElementContainer.className = \"am5-html-container\";\r\n        htmlElementContainer.style.position = \"absolute\";\r\n        htmlElementContainer.style.pointerEvents = \"none\";\r\n        if (!this._tooltipContainerSettings) {\r\n            htmlElementContainer.style.overflow = \"hidden\";\r\n        }\r\n        this._inner.appendChild(htmlElementContainer);\r\n        if (this._a11yD !== true) {\r\n            // Create element which is used to make announcements to screen reader\r\n            const readerAlertElement = document.createElement(\"div\");\r\n            readerAlertElement.className = \"am5-reader-container\";\r\n            readerAlertElement.setAttribute(\"role\", \"alert\");\r\n            // readerAlertElement.style.zIndex = \"-100000\";\r\n            // readerAlertElement.style.opacity = \"0\";\r\n            // readerAlertElement.style.top = \"0\";\r\n            readerAlertElement.style.position = \"absolute\";\r\n            readerAlertElement.style.width = \"1px\";\r\n            readerAlertElement.style.height = \"1px\";\r\n            readerAlertElement.style.overflow = \"hidden\";\r\n            readerAlertElement.style.clip = \"rect(1px, 1px, 1px, 1px)\";\r\n            this._readerAlertElement = readerAlertElement;\r\n            this._inner.appendChild(this._readerAlertElement);\r\n            const focusElementContainer = document.createElement(\"div\");\r\n            focusElementContainer.className = \"am5-focus-container\";\r\n            focusElementContainer.style.position = \"absolute\";\r\n            focusElementContainer.style.pointerEvents = \"none\";\r\n            focusElementContainer.style.top = \"0px\";\r\n            focusElementContainer.style.left = \"0px\";\r\n            focusElementContainer.style.overflow = \"hidden\";\r\n            focusElementContainer.style.width = width + \"px\";\r\n            focusElementContainer.style.height = height + \"px\";\r\n            focusElementContainer.setAttribute(\"role\", \"graphics-document\");\r\n            _util_Utils__WEBPACK_IMPORTED_MODULE_9__.setInteractive(focusElementContainer, false);\r\n            this._focusElementContainer = focusElementContainer;\r\n            this._inner.appendChild(this._focusElementContainer);\r\n            const tooltipElementContainer = document.createElement(\"div\");\r\n            this._tooltipElementContainer = tooltipElementContainer;\r\n            tooltipElementContainer.className = \"am5-tooltip-container\";\r\n            this._inner.appendChild(tooltipElementContainer);\r\n            // Add keyboard events for accessibility, e.g. simulating drag with arrow\r\n            // keys and click with ENTER\r\n            if (_util_Utils__WEBPACK_IMPORTED_MODULE_9__.supports(\"keyboardevents\")) {\r\n                this._disposers.push(_util_Utils__WEBPACK_IMPORTED_MODULE_9__.addEventListener(window, \"keydown\", (ev) => {\r\n                    const eventKey = _util_Utils__WEBPACK_IMPORTED_MODULE_9__.getEventKey(ev);\r\n                    if (eventKey == \"Shift\") {\r\n                        this._isShift = true;\r\n                    }\r\n                    else if (eventKey == \"Tab\") {\r\n                        this._isShift = ev.shiftKey;\r\n                    }\r\n                }));\r\n                this._disposers.push(_util_Utils__WEBPACK_IMPORTED_MODULE_9__.addEventListener(window, \"keyup\", (ev) => {\r\n                    const eventKey = _util_Utils__WEBPACK_IMPORTED_MODULE_9__.getEventKey(ev);\r\n                    if (eventKey == \"Shift\") {\r\n                        this._isShift = false;\r\n                    }\r\n                }));\r\n                this._disposers.push(_util_Utils__WEBPACK_IMPORTED_MODULE_9__.addEventListener(focusElementContainer, \"click\", () => {\r\n                    // Some screen readers convert ENTER (and some SPACE) press whil on\r\n                    // focused element to a \"click\" event, preventing actual \"keydown\"\r\n                    // event from firing. We're using this \"click\" event to still\r\n                    // generate internal click events.\r\n                    const focusedSprite = this._focusedSprite;\r\n                    if (focusedSprite) {\r\n                        const announceText = focusedSprite.get(\"clickAnnounceText\", \"\");\r\n                        if (announceText !== \"\") {\r\n                            this.readerAlert(announceText);\r\n                        }\r\n                        const downEvent = renderer.getEvent(new MouseEvent(\"click\"));\r\n                        focusedSprite.events.dispatch(\"click\", {\r\n                            type: \"click\",\r\n                            originalEvent: downEvent.event,\r\n                            point: downEvent.point,\r\n                            simulated: true,\r\n                            target: focusedSprite\r\n                        });\r\n                    }\r\n                }));\r\n                this._disposers.push(_util_Utils__WEBPACK_IMPORTED_MODULE_9__.addEventListener(focusElementContainer, \"keydown\", (ev) => {\r\n                    const focusedSprite = this._focusedSprite;\r\n                    if (focusedSprite) {\r\n                        if (ev.key == \"Escape\") {\r\n                            // ESC pressed - lose current focus\r\n                            _util_Utils__WEBPACK_IMPORTED_MODULE_9__.blur();\r\n                            this._focusedSprite = undefined;\r\n                        }\r\n                        let dragOffsetX = 0;\r\n                        let dragOffsetY = 0;\r\n                        // TODO: figure out if using bogus MouseEvent is fine, or it will\r\n                        // fail on some platforms\r\n                        const eventKey = _util_Utils__WEBPACK_IMPORTED_MODULE_9__.getEventKey(ev);\r\n                        switch (eventKey) {\r\n                            case \"Enter\":\r\n                            case \" \":\r\n                                const announceText = focusedSprite.get(\"clickAnnounceText\", \"\");\r\n                                if (announceText !== \"\") {\r\n                                    this.readerAlert(announceText);\r\n                                }\r\n                                if (eventKey == \" \" && focusedSprite.get(\"role\") != \"checkbox\") {\r\n                                    return;\r\n                                }\r\n                                ev.preventDefault();\r\n                                const downEvent = renderer.getEvent(new MouseEvent(\"mouse\"));\r\n                                focusedSprite.events.dispatch(\"click\", {\r\n                                    type: \"click\",\r\n                                    originalEvent: downEvent.event,\r\n                                    point: downEvent.point,\r\n                                    simulated: true,\r\n                                    target: focusedSprite\r\n                                });\r\n                                return;\r\n                            case \"ArrowLeft\":\r\n                                dragOffsetX = -6;\r\n                                break;\r\n                            case \"ArrowRight\":\r\n                                dragOffsetX = 6;\r\n                                break;\r\n                            case \"ArrowUp\":\r\n                                dragOffsetY = -6;\r\n                                break;\r\n                            case \"ArrowDown\":\r\n                                dragOffsetY = 6;\r\n                                break;\r\n                            default:\r\n                                return;\r\n                        }\r\n                        if (dragOffsetX != 0 || dragOffsetY != 0) {\r\n                            ev.preventDefault();\r\n                            if (!focusedSprite.isDragging()) {\r\n                                // Start dragging\r\n                                this._keyboardDragPoint = {\r\n                                    x: 0,\r\n                                    y: 0\r\n                                };\r\n                                const downEvent = renderer.getEvent(new MouseEvent(\"mousedown\", {\r\n                                    clientX: 0,\r\n                                    clientY: 0\r\n                                }));\r\n                                downEvent.point = {\r\n                                    x: 0,\r\n                                    y: 0\r\n                                };\r\n                                if (focusedSprite.events.isEnabled(\"pointerdown\")) {\r\n                                    focusedSprite.events.dispatch(\"pointerdown\", {\r\n                                        type: \"pointerdown\",\r\n                                        originalEvent: downEvent.event,\r\n                                        point: downEvent.point,\r\n                                        simulated: true,\r\n                                        target: focusedSprite\r\n                                    });\r\n                                }\r\n                            }\r\n                            else {\r\n                                // Move focus marker\r\n                                //this._positionFocusElement(focusedSprite);\r\n                            }\r\n                            // Move incrementally\r\n                            const dragPoint = this._keyboardDragPoint;\r\n                            dragPoint.x += dragOffsetX;\r\n                            dragPoint.y += dragOffsetY;\r\n                            const moveEvent = renderer.getEvent(new MouseEvent(\"mousemove\", {\r\n                                clientX: dragPoint.x,\r\n                                clientY: dragPoint.y\r\n                            }), false);\r\n                            if (focusedSprite.events.isEnabled(\"globalpointermove\")) {\r\n                                focusedSprite.events.dispatch(\"globalpointermove\", {\r\n                                    type: \"globalpointermove\",\r\n                                    originalEvent: moveEvent.event,\r\n                                    point: moveEvent.point,\r\n                                    simulated: true,\r\n                                    target: focusedSprite\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                }));\r\n                this._disposers.push(_util_Utils__WEBPACK_IMPORTED_MODULE_9__.addEventListener(focusElementContainer, \"keyup\", (ev) => {\r\n                    if (this._focusedSprite) {\r\n                        const focusedSprite = this._focusedSprite;\r\n                        const eventKey = _util_Utils__WEBPACK_IMPORTED_MODULE_9__.getEventKey(ev);\r\n                        switch (eventKey) {\r\n                            case \"ArrowLeft\":\r\n                            case \"ArrowRight\":\r\n                            case \"ArrowUp\":\r\n                            case \"ArrowDown\":\r\n                                if (focusedSprite.isDragging()) {\r\n                                    // Simulate drag stop\r\n                                    const dragPoint = this._keyboardDragPoint;\r\n                                    const upEvent = renderer.getEvent(new MouseEvent(\"mouseup\", {\r\n                                        clientX: dragPoint.x,\r\n                                        clientY: dragPoint.y\r\n                                    }));\r\n                                    if (focusedSprite.events.isEnabled(\"globalpointerup\")) {\r\n                                        focusedSprite.events.dispatch(\"globalpointerup\", {\r\n                                            type: \"globalpointerup\",\r\n                                            originalEvent: upEvent.event,\r\n                                            point: upEvent.point,\r\n                                            simulated: true,\r\n                                            target: focusedSprite\r\n                                        });\r\n                                    }\r\n                                    //this._positionFocusElement(focusedSprite);\r\n                                    this._keyboardDragPoint = undefined;\r\n                                    // @todo dispatch mouseup event instead of calling dragStop?\r\n                                    // this._dispatchEvent(\"globalpointerup\", target, upEvent);\r\n                                    return;\r\n                                }\r\n                                else if (focusedSprite.get(\"focusableGroup\")) {\r\n                                    // Find next item in focusable group\r\n                                    const group = focusedSprite.get(\"focusableGroup\");\r\n                                    const items = this._tabindexes.filter((item) => {\r\n                                        return item.get(\"focusableGroup\") == group && item.getPrivate(\"focusable\") !== false && item.isVisibleDeep() ? true : false;\r\n                                    });\r\n                                    let index = items.indexOf(focusedSprite);\r\n                                    const lastIndex = items.length - 1;\r\n                                    index += (eventKey == \"ArrowRight\" || eventKey == \"ArrowDown\") ? 1 : -1;\r\n                                    if (index < 0) {\r\n                                        index = lastIndex;\r\n                                    }\r\n                                    else if (index > lastIndex) {\r\n                                        index = 0;\r\n                                    }\r\n                                    _util_Utils__WEBPACK_IMPORTED_MODULE_9__.focus(items[index].getPrivate(\"focusElement\").dom);\r\n                                }\r\n                                break;\r\n                            case \"Tab\":\r\n                                const group = focusedSprite.get(\"focusableGroup\");\r\n                                if (group && this._isShift) {\r\n                                    this._focusNext(focusedSprite.getPrivate(\"focusElement\").dom, -1, group);\r\n                                    return;\r\n                                }\r\n                                break;\r\n                        }\r\n                    }\r\n                }));\r\n            }\r\n        }\r\n        this._startTicker();\r\n        this.setThemes([]);\r\n        this._addTooltip();\r\n        if (!this._hasLicense()) {\r\n            this._showBranding();\r\n        }\r\n    }\r\n    _initResizeSensor() {\r\n        if (this._resizeSensorDisposer) {\r\n            this._resizeSensorDisposer.dispose();\r\n        }\r\n        this._resizeSensorDisposer = new _util_ResizeSensor__WEBPACK_IMPORTED_MODULE_21__.ResizeSensor(this.dom, () => {\r\n            if (this.autoResize) {\r\n                this.resize();\r\n            }\r\n        });\r\n        this._disposers.push(this._resizeSensorDisposer);\r\n    }\r\n    /**\r\n     * If automatic resizing of char is disabled (`root.autoResize = false`), it\r\n     * can be resized manually by calling this method.\r\n     */\r\n    resize() {\r\n        const rect = this._getRealSize();\r\n        const size = this._getCalculatedSize(rect);\r\n        const w = Math.floor(size.width);\r\n        const h = Math.floor(size.height);\r\n        if (w > 0 && h > 0) {\r\n            const realWidth = Math.floor(rect.width);\r\n            const realHeight = Math.floor(rect.height);\r\n            const htmlElementContainer = this._htmlElementContainer;\r\n            htmlElementContainer.style.width = w + \"px\";\r\n            htmlElementContainer.style.height = h + \"px\";\r\n            if (this._a11yD !== true) {\r\n                const focusElementContainer = this._focusElementContainer;\r\n                focusElementContainer.style.width = w + \"px\";\r\n                focusElementContainer.style.height = h + \"px\";\r\n            }\r\n            this._renderer.resize(realWidth, realHeight, w, h);\r\n            const rootContainer = this._rootContainer;\r\n            rootContainer.setPrivate(\"width\", w);\r\n            rootContainer.setPrivate(\"height\", h);\r\n            this._render();\r\n            this._handleLogo();\r\n        }\r\n    }\r\n    _render() {\r\n        this._renderer.render(this._rootContainer._display);\r\n        if (this._focusElementDirty) {\r\n            this._updateCurrentFocus();\r\n            this._focusElementDirty = false;\r\n        }\r\n    }\r\n    _runTickers(currentTime) {\r\n        _util_Array__WEBPACK_IMPORTED_MODULE_11__.each(this._tickers, (f) => {\r\n            f(currentTime);\r\n        });\r\n    }\r\n    _runAnimations(currentTime) {\r\n        let running = 0;\r\n        _util_Array__WEBPACK_IMPORTED_MODULE_11__.keepIf(this._animations, (animation) => {\r\n            const state = animation._runAnimation(currentTime);\r\n            if (state === _util_Animation__WEBPACK_IMPORTED_MODULE_22__.AnimationState.Stopped) {\r\n                return false;\r\n            }\r\n            else if (state === _util_Animation__WEBPACK_IMPORTED_MODULE_22__.AnimationState.Playing) {\r\n                ++running;\r\n                return true;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        });\r\n        this._isDirtyAnimation = false;\r\n        return running === 0;\r\n    }\r\n    _runDirties() {\r\n        //console.log(\"tick **************************************************************\");\r\n        let allParents = {};\r\n        while (this._isDirtyParents) {\r\n            // This must be before calling _prepareChildren\r\n            this._isDirtyParents = false;\r\n            _util_Object__WEBPACK_IMPORTED_MODULE_23__.keys(this._dirtyParents).forEach((key) => {\r\n                const parent = this._dirtyParents[key];\r\n                delete this._dirtyParents[key];\r\n                if (!parent.isDisposed()) {\r\n                    allParents[parent.uid] = parent;\r\n                    parent._prepareChildren();\r\n                }\r\n            });\r\n        }\r\n        _util_Object__WEBPACK_IMPORTED_MODULE_23__.keys(allParents).forEach((key) => {\r\n            allParents[key]._updateChildren();\r\n        });\r\n        const objects = [];\r\n        //\t\tconsole.log(\"_beforeChanged\")\r\n        _util_Object__WEBPACK_IMPORTED_MODULE_23__.keys(this._dirty).forEach((key) => {\r\n            const entity = this._dirty[key];\r\n            if (entity.isDisposed()) {\r\n                delete this._dirty[entity.uid];\r\n            }\r\n            else {\r\n                objects.push(entity);\r\n                entity._beforeChanged();\r\n            }\r\n        });\r\n        //\t\tconsole.log(\"_changed\")\r\n        objects.forEach((entity) => {\r\n            entity._changed();\r\n            delete this._dirty[entity.uid];\r\n            entity._clearDirty();\r\n        });\r\n        this._isDirty = false;\r\n        const depths = {};\r\n        const bounds = [];\r\n        _util_Object__WEBPACK_IMPORTED_MODULE_23__.keys(this._dirtyBounds).forEach((key) => {\r\n            const entity = this._dirtyBounds[key];\r\n            delete this._dirtyBounds[key];\r\n            if (!entity.isDisposed()) {\r\n                depths[entity.uid] = entity.depth();\r\n                bounds.push(entity);\r\n            }\r\n        });\r\n        this._positionHTMLElements();\r\n        // High depth -> low depth\r\n        bounds.sort((x, y) => {\r\n            return _util_Order__WEBPACK_IMPORTED_MODULE_24__.compare(depths[y.uid], depths[x.uid]);\r\n        });\r\n        //\t\tconsole.log(\"_updateBounds\")\r\n        bounds.forEach((entity) => {\r\n            entity._updateBounds();\r\n        });\r\n        //\t\tconsole.log(\"_updatePosition\")\r\n        const dirtyPositions = this._dirtyPositions;\r\n        _util_Object__WEBPACK_IMPORTED_MODULE_23__.keys(dirtyPositions).forEach((key) => {\r\n            const sprite = dirtyPositions[key];\r\n            delete dirtyPositions[key];\r\n            if (!sprite.isDisposed()) {\r\n                sprite._updatePosition();\r\n            }\r\n        });\r\n        //\t\tconsole.log(\"_afterChanged\")\r\n        objects.forEach((entity) => {\r\n            entity._afterChanged();\r\n        });\r\n    }\r\n    _renderFrame(currentTime) {\r\n        if (this._updateTick) {\r\n            if (this.events.isEnabled(\"framestarted\")) {\r\n                this.events.dispatch(\"framestarted\", {\r\n                    type: \"framestarted\",\r\n                    target: this,\r\n                    timestamp: currentTime,\r\n                });\r\n            }\r\n            this._checkComputedStyles();\r\n            this._runTickers(currentTime);\r\n            const animationDone = this._runAnimations(currentTime);\r\n            this._runDirties();\r\n            this._render();\r\n            this._renderer.resetImageArray();\r\n            this._positionHTMLElements();\r\n            if (this.events.isEnabled(\"frameended\")) {\r\n                this.events.dispatch(\"frameended\", {\r\n                    type: \"frameended\",\r\n                    target: this,\r\n                    timestamp: currentTime,\r\n                });\r\n            }\r\n            return this._tickers.length === 0 &&\r\n                animationDone &&\r\n                !this._isDirtyAnimation &&\r\n                !this._isDirty;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n    _runTicker(currentTime, now) {\r\n        if (!this.isDisposed()) {\r\n            this.animationTime = currentTime;\r\n            const done = this._renderFrame(currentTime);\r\n            // No more work to do\r\n            if (done) {\r\n                this._ticker = null;\r\n                this.animationTime = null;\r\n            }\r\n            else {\r\n                if (!this._paused) {\r\n                    if (now) {\r\n                        this._ticker;\r\n                    }\r\n                    else {\r\n                        rAF(this.fps, this._ticker);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _runTickerNow(timeout = 10000) {\r\n        if (!this.isDisposed()) {\r\n            const endTime = performance.now() + timeout;\r\n            for (;;) {\r\n                const currentTime = performance.now();\r\n                if (currentTime >= endTime) {\r\n                    this.animationTime = null;\r\n                    break;\r\n                }\r\n                this.animationTime = currentTime;\r\n                const done = this._renderFrame(currentTime);\r\n                if (done) {\r\n                    this.animationTime = null;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _startTicker() {\r\n        if (this._ticker === null) {\r\n            this.animationTime = null;\r\n            this._ticker = (currentTime) => {\r\n                this._runTicker(currentTime);\r\n            };\r\n            rAF(this.fps, this._ticker);\r\n        }\r\n    }\r\n    /**\r\n     * Returns whether the root is updating or not.\r\n     */\r\n    get updateTick() {\r\n        return this._updateTick;\r\n    }\r\n    /**\r\n     * Enables or disables the root updating.\r\n     */\r\n    set updateTick(value) {\r\n        this._updateTick = value;\r\n        if (value) {\r\n            this._startTicker();\r\n        }\r\n    }\r\n    _addDirtyEntity(entity) {\r\n        this._isDirty = true;\r\n        if (this._dirty[entity.uid] === undefined) {\r\n            this._dirty[entity.uid] = entity;\r\n        }\r\n        this._startTicker();\r\n    }\r\n    _addDirtyParent(parent) {\r\n        this._isDirty = true;\r\n        this._isDirtyParents = true;\r\n        if (this._dirtyParents[parent.uid] === undefined) {\r\n            this._dirtyParents[parent.uid] = parent;\r\n        }\r\n        this._startTicker();\r\n    }\r\n    _addDirtyBounds(entity) {\r\n        this._isDirty = true;\r\n        if (this._dirtyBounds[entity.uid] === undefined) {\r\n            this._dirtyBounds[entity.uid] = entity;\r\n        }\r\n        this._startTicker();\r\n    }\r\n    _addDirtyPosition(sprite) {\r\n        this._isDirty = true;\r\n        if (this._dirtyPositions[sprite.uid] === undefined) {\r\n            this._dirtyPositions[sprite.uid] = sprite;\r\n        }\r\n        this._startTicker();\r\n    }\r\n    _addAnimation(animation) {\r\n        this._isDirtyAnimation = true;\r\n        // TODO use numeric id instead\r\n        if (this._animations.indexOf(animation) === -1) {\r\n            this._animations.push(animation);\r\n        }\r\n        this._startTicker();\r\n    }\r\n    _markDirty() {\r\n        this._isDirty = true;\r\n    }\r\n    _markDirtyRedraw() {\r\n        this.events.once(\"frameended\", () => {\r\n            this._isDirty = true;\r\n            this._startTicker();\r\n        });\r\n    }\r\n    eachFrame(f) {\r\n        this._tickers.push(f);\r\n        this._startTicker();\r\n        return new _util_Disposer__WEBPACK_IMPORTED_MODULE_25__.Disposer(() => {\r\n            _util_Array__WEBPACK_IMPORTED_MODULE_11__.removeFirst(this._tickers, f);\r\n        });\r\n    }\r\n    markDirtyGlobal(container) {\r\n        if (!container) {\r\n            container = this.container;\r\n        }\r\n        container.walkChildren((child) => {\r\n            if (child instanceof _render_Container__WEBPACK_IMPORTED_MODULE_14__.Container) {\r\n                this.markDirtyGlobal(child);\r\n            }\r\n            child.markDirty();\r\n            child.markDirtyBounds();\r\n        });\r\n    }\r\n    /**\r\n     * Returns width of the target container, in pixels.\r\n     *\r\n     * @return Width\r\n     */\r\n    width() {\r\n        // TODO make this more efficient, maybe just return the renderer's width ?\r\n        return Math.floor(this._getCalculatedSize(this._getRealSize()).width);\r\n    }\r\n    /**\r\n     * Returns height of the target container, in pixels.\r\n     *\r\n     * @return Height\r\n     */\r\n    height() {\r\n        // TODO make this more efficient, maybe just return the renderer's height ?\r\n        return Math.floor(this._getCalculatedSize(this._getRealSize()).height);\r\n    }\r\n    /**\r\n     * Disposes root and all the content in it.\r\n     */\r\n    dispose() {\r\n        if (!this._isDisposed) {\r\n            this._isDisposed = true;\r\n            this._rootContainer.dispose();\r\n            this._renderer.dispose();\r\n            this.horizontalLayout.dispose();\r\n            this.verticalLayout.dispose();\r\n            this.interfaceColors.dispose();\r\n            _util_Array__WEBPACK_IMPORTED_MODULE_11__.each(this._disposers, (x) => {\r\n                x.dispose();\r\n            });\r\n            if (this._inner) {\r\n                _util_Utils__WEBPACK_IMPORTED_MODULE_9__.removeElement(this._inner);\r\n            }\r\n            _util_Array__WEBPACK_IMPORTED_MODULE_11__.remove(_Registry__WEBPACK_IMPORTED_MODULE_12__.registry.rootElements, this);\r\n        }\r\n    }\r\n    /**\r\n     * Returns `true` if root element is disposed.\r\n     *\r\n     * @return Disposed?\r\n     */\r\n    isDisposed() {\r\n        return this._isDisposed;\r\n    }\r\n    /**\r\n     * Triggers screen reader read out a message.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/accessibility/} for more info\r\n     * @param  text  Alert text\r\n     */\r\n    readerAlert(text) {\r\n        if (this._a11yD !== true) {\r\n            const element = this._readerAlertElement;\r\n            text = _util_Utils__WEBPACK_IMPORTED_MODULE_9__.stripTags(text);\r\n            if (element.innerHTML == text) {\r\n                element.innerHTML = \"\";\r\n            }\r\n            element.innerHTML = text;\r\n        }\r\n    }\r\n    /**\r\n     * Sets themes to be used for the chart.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/themes/} for more info\r\n     * @param  themes  A list of themes\r\n     */\r\n    setThemes(themes) {\r\n        this._rootContainer.set(\"themes\", themes);\r\n        // otherwise new themes are not applied\r\n        const tooltipContainer = this.tooltipContainer;\r\n        if (tooltipContainer) {\r\n            tooltipContainer._applyThemes();\r\n        }\r\n        // @todo review this\r\n        const interfaceColors = this.interfaceColors;\r\n        if (interfaceColors) {\r\n            interfaceColors._applyThemes();\r\n        }\r\n    }\r\n    _addTooltip() {\r\n        if (!this.tooltipContainer) {\r\n            const tooltipContainerSettings = this._tooltipContainerSettings;\r\n            const tooltipContainer = this._rootContainer.children.push(_render_Container__WEBPACK_IMPORTED_MODULE_14__.Container.new(this, {\r\n                position: \"absolute\",\r\n                isMeasured: false,\r\n                width: _util_Percent__WEBPACK_IMPORTED_MODULE_15__.p100,\r\n                height: _util_Percent__WEBPACK_IMPORTED_MODULE_15__.p100,\r\n                layer: tooltipContainerSettings ? 35 : 30,\r\n                layerMargin: tooltipContainerSettings ? tooltipContainerSettings : undefined\r\n            }));\r\n            this.tooltipContainer = tooltipContainer;\r\n            const tooltip = _render_Tooltip__WEBPACK_IMPORTED_MODULE_18__.Tooltip.new(this, {});\r\n            this.container.set(\"tooltip\", tooltip);\r\n            tooltip.hide(0);\r\n            this._tooltip = tooltip;\r\n        }\r\n    }\r\n    /**\r\n     * Accesibility\r\n     */\r\n    _registerTabindexOrder(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        if (target.get(\"focusable\")) {\r\n            _util_Array__WEBPACK_IMPORTED_MODULE_11__.pushOne(this._tabindexes, target);\r\n        }\r\n        else {\r\n            _util_Array__WEBPACK_IMPORTED_MODULE_11__.remove(this._tabindexes, target);\r\n        }\r\n        this._invalidateTabindexes();\r\n    }\r\n    _unregisterTabindexOrder(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        _util_Array__WEBPACK_IMPORTED_MODULE_11__.remove(this._tabindexes, target);\r\n        this._invalidateTabindexes();\r\n    }\r\n    _invalidateTabindexes() {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        this._tabindexes.sort((a, b) => {\r\n            const aindex = a.get(\"tabindexOrder\", 0);\r\n            const bindex = b.get(\"tabindexOrder\", 0);\r\n            if (aindex == bindex) {\r\n                return 0;\r\n            }\r\n            else if (aindex > bindex) {\r\n                return 1;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        });\r\n        const groups = [];\r\n        _util_Array__WEBPACK_IMPORTED_MODULE_11__.each(this._tabindexes, (item, index) => {\r\n            if (!item.getPrivate(\"focusElement\")) {\r\n                this._makeFocusElement(index, item);\r\n            }\r\n            else {\r\n                this._moveFocusElement(index, item);\r\n            }\r\n            const group = item.get(\"focusableGroup\");\r\n            if (group && item.getPrivate(\"focusable\") !== false) {\r\n                if (groups.indexOf(group) !== -1) {\r\n                    // Non-first element in the group, make it not directly focusable\r\n                    item.getPrivate(\"focusElement\").dom.setAttribute(\"tabindex\", \"-1\");\r\n                }\r\n                else {\r\n                    groups.push(group);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    _updateCurrentFocus() {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        if (this._focusedSprite) {\r\n            this._decorateFocusElement(this._focusedSprite);\r\n            this._positionFocusElement(this._focusedSprite);\r\n        }\r\n    }\r\n    _decorateFocusElement(target, focusElement) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        // Decorate with proper accessibility attributes\r\n        if (!focusElement) {\r\n            focusElement = target.getPrivate(\"focusElement\").dom;\r\n        }\r\n        if (!focusElement) {\r\n            return;\r\n        }\r\n        const role = target.get(\"role\");\r\n        if (role) {\r\n            focusElement.setAttribute(\"role\", role);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"role\");\r\n        }\r\n        const ariaLabel = target.get(\"ariaLabel\");\r\n        if (ariaLabel) {\r\n            const label = (0,_util_PopulateString__WEBPACK_IMPORTED_MODULE_26__.populateString)(target, ariaLabel);\r\n            focusElement.setAttribute(\"aria-label\", label);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-label\");\r\n        }\r\n        const ariaLive = target.get(\"ariaLive\");\r\n        if (ariaLive) {\r\n            focusElement.setAttribute(\"aria-live\", ariaLive);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-live\");\r\n        }\r\n        const ariaChecked = target.get(\"ariaChecked\");\r\n        if (ariaChecked != null && role && [\"checkbox\", \"option\", \"radio\", \"menuitemcheckbox\", \"menuitemradio\", \"treeitem\"].indexOf(role) !== -1) {\r\n            focusElement.setAttribute(\"aria-checked\", ariaChecked ? \"true\" : \"false\");\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-checked\");\r\n        }\r\n        const ariaCurrent = target.get(\"ariaCurrent\");\r\n        if (ariaCurrent != null) {\r\n            focusElement.setAttribute(\"aria-current\", ariaCurrent);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-current\");\r\n        }\r\n        const ariaSelected = target.get(\"ariaSelected\");\r\n        if (ariaSelected != null && role && [\"gridcell\", \"option\", \"row\", \"tab\", \"columnheader\", \"rowheader\", \"treeitem\"].indexOf(role) !== -1) {\r\n            focusElement.setAttribute(\"aria-selected\", ariaSelected ? \"true\" : \"false\");\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-selected\");\r\n        }\r\n        if (target.get(\"ariaHidden\")) {\r\n            focusElement.setAttribute(\"aria-hidden\", \"true\");\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-hidden\");\r\n        }\r\n        const ariaOrientation = target.get(\"ariaOrientation\");\r\n        if (ariaOrientation) {\r\n            focusElement.setAttribute(\"aria-orientation\", ariaOrientation);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-orientation\");\r\n        }\r\n        const ariaValueNow = target.get(\"ariaValueNow\");\r\n        if (ariaValueNow) {\r\n            focusElement.setAttribute(\"aria-valuenow\", ariaValueNow);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-valuenow\");\r\n        }\r\n        const ariaValueMin = target.get(\"ariaValueMin\");\r\n        if (ariaValueMin) {\r\n            focusElement.setAttribute(\"aria-valuemin\", ariaValueMin);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-valuemin\");\r\n        }\r\n        const ariaValueMax = target.get(\"ariaValueMax\");\r\n        if (ariaValueMax) {\r\n            focusElement.setAttribute(\"aria-valuemax\", ariaValueMax);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-valuemax\");\r\n        }\r\n        const ariaValueText = target.get(\"ariaValueText\");\r\n        if (ariaValueText) {\r\n            focusElement.setAttribute(\"aria-valuetext\", ariaValueText);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-valuetext\");\r\n        }\r\n        const ariaControls = target.get(\"ariaControls\");\r\n        if (ariaControls) {\r\n            focusElement.setAttribute(\"aria-controls\", ariaControls);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-controls\");\r\n        }\r\n        if (target.get(\"visible\") && target.get(\"opacity\") !== 0 && target.get(\"role\") != \"tooltip\" && !target.isHidden() && target.getPrivate(\"focusable\") !== false && (target.height() || target.width())) {\r\n            if (focusElement.getAttribute(\"tabindex\") != \"-1\") {\r\n                focusElement.setAttribute(\"tabindex\", \"\" + this.tabindex);\r\n            }\r\n            focusElement.removeAttribute(\"aria-hidden\");\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"tabindex\");\r\n            focusElement.setAttribute(\"aria-hidden\", \"true\");\r\n        }\r\n    }\r\n    _makeFocusElement(index, target) {\r\n        if (target.getPrivate(\"focusElement\") || this._a11yD == true) {\r\n            return;\r\n        }\r\n        // Init\r\n        const focusElement = document.createElement(\"div\");\r\n        if (target.get(\"role\") != \"tooltip\") {\r\n            focusElement.tabIndex = this.tabindex;\r\n        }\r\n        focusElement.style.position = \"absolute\";\r\n        _util_Utils__WEBPACK_IMPORTED_MODULE_9__.setInteractive(focusElement, false);\r\n        const disposers = [];\r\n        target.setPrivate(\"focusElement\", {\r\n            dom: focusElement,\r\n            disposers,\r\n        });\r\n        this._decorateFocusElement(target);\r\n        disposers.push(_util_Utils__WEBPACK_IMPORTED_MODULE_9__.addEventListener(focusElement, \"focus\", (ev) => {\r\n            this._handleFocus(ev);\r\n        }));\r\n        disposers.push(_util_Utils__WEBPACK_IMPORTED_MODULE_9__.addEventListener(focusElement, \"blur\", (ev) => {\r\n            this._handleBlur(ev);\r\n        }));\r\n        this._moveFocusElement(index, target);\r\n    }\r\n    _removeFocusElement(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        _util_Array__WEBPACK_IMPORTED_MODULE_11__.remove(this._tabindexes, target);\r\n        const focusElement = target.getPrivate(\"focusElement\");\r\n        if (focusElement) {\r\n            const container = this._focusElementContainer;\r\n            container.removeChild(focusElement.dom);\r\n            _util_Array__WEBPACK_IMPORTED_MODULE_11__.each(focusElement.disposers, (x) => {\r\n                x.dispose();\r\n            });\r\n        }\r\n    }\r\n    _hideFocusElement(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        const focusElement = target.getPrivate(\"focusElement\");\r\n        focusElement.dom.style.display = \"none\";\r\n    }\r\n    _moveFocusElement(index, target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        // Get container\r\n        const container = this._focusElementContainer;\r\n        const focusElement = target.getPrivate(\"focusElement\").dom;\r\n        if (focusElement === this._focusElementContainer.children[index]) {\r\n            // Nothing to do\r\n            return;\r\n        }\r\n        const next = this._focusElementContainer.children[index + 1];\r\n        if (next) {\r\n            container.insertBefore(focusElement, next);\r\n        }\r\n        else {\r\n            container.append(focusElement);\r\n        }\r\n    }\r\n    _positionFocusElement(target) {\r\n        if (this._a11yD == true || target == undefined) {\r\n            return;\r\n        }\r\n        const bounds = target.globalBounds();\r\n        let width = bounds.right == bounds.left ? target.width() : bounds.right - bounds.left;\r\n        let height = bounds.top == bounds.bottom ? target.height() : bounds.bottom - bounds.top;\r\n        const padding = this._settings.focusPadding !== undefined ? this._settings.focusPadding : 2;\r\n        let x = bounds.left - padding;\r\n        let y = bounds.top - padding;\r\n        if (width < 0) {\r\n            x += width;\r\n            width = Math.abs(width);\r\n        }\r\n        if (height < 0) {\r\n            y += height;\r\n            height = Math.abs(height);\r\n        }\r\n        const focusElement = target.getPrivate(\"focusElement\").dom;\r\n        focusElement.style.top = y + \"px\";\r\n        focusElement.style.left = x + \"px\";\r\n        focusElement.style.width = (width + padding * 2) + \"px\";\r\n        focusElement.style.height = (height + padding * 2) + \"px\";\r\n    }\r\n    _getSpriteByFocusElement(target) {\r\n        let found;\r\n        _util_Array__WEBPACK_IMPORTED_MODULE_11__.eachContinue(this._tabindexes, (item, _index) => {\r\n            if (item.getPrivate(\"focusElement\").dom === target) {\r\n                found = item;\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n        return found;\r\n    }\r\n    _handleFocus(ev) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        // Get element\r\n        //const focused = this._tabindexes[index];\r\n        const focused = this._getSpriteByFocusElement(ev.target);\r\n        if (!focused) {\r\n            return;\r\n        }\r\n        // Jump over hidden elements\r\n        if (!focused.isVisibleDeep()) {\r\n            this._focusNext(ev.target, this._isShift ? -1 : 1);\r\n            return;\r\n        }\r\n        // Size and position\r\n        this._positionFocusElement(focused);\r\n        //this._decorateFocusElement(focused);\r\n        this._focusedSprite = focused;\r\n        if (focused.events.isEnabled(\"focus\")) {\r\n            focused.events.dispatch(\"focus\", {\r\n                type: \"focus\",\r\n                originalEvent: ev,\r\n                target: focused\r\n            });\r\n        }\r\n    }\r\n    _focusNext(el, direction, group) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        const focusableElements = Array.from(document.querySelectorAll([\r\n            'a[href]',\r\n            'area[href]',\r\n            'button:not([disabled])',\r\n            'details',\r\n            'input:not([disabled])',\r\n            'iframe:not([disabled])',\r\n            'select:not([disabled])',\r\n            'textarea:not([disabled])',\r\n            '[contentEditable=\"\"]',\r\n            '[contentEditable=\"true\"]',\r\n            '[contentEditable=\"TRUE\"]',\r\n            '[tabindex]:not([tabindex^=\"-\"])',\r\n            //':not([disabled])'\r\n        ].join(',')));\r\n        let index = focusableElements.indexOf(el) + direction;\r\n        if (index < 0) {\r\n            index = focusableElements.length - 1;\r\n        }\r\n        else if (index >= focusableElements.length) {\r\n            index = 0;\r\n        }\r\n        const targetElement = focusableElements[index];\r\n        if (group && direction == -1) {\r\n            const target = this._getSpriteByFocusElement(targetElement);\r\n            if (target && target.get(\"focusableGroup\") == group) {\r\n                this._focusNext(targetElement, direction);\r\n                return;\r\n            }\r\n        }\r\n        targetElement.focus();\r\n    }\r\n    _handleBlur(ev) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        const focused = this._focusedSprite;\r\n        if (focused && !focused.isDisposed() && focused.events.isEnabled(\"blur\")) {\r\n            focused.events.dispatch(\"blur\", {\r\n                type: \"blur\",\r\n                originalEvent: ev,\r\n                target: focused\r\n            });\r\n        }\r\n        this._focusedSprite = undefined;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateTooltip(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        const text = _util_Utils__WEBPACK_IMPORTED_MODULE_9__.stripTags(target._getText());\r\n        let tooltipElement = target.getPrivate(\"tooltipElement\");\r\n        if (target.get(\"role\") == \"tooltip\" && text != \"\") {\r\n            if (!tooltipElement) {\r\n                tooltipElement = this._makeTooltipElement(target);\r\n            }\r\n            if (tooltipElement.innerHTML != text) {\r\n                tooltipElement.innerHTML = text;\r\n            }\r\n            tooltipElement.setAttribute(\"aria-hidden\", target.isVisibleDeep() ? \"false\" : \"true\");\r\n        }\r\n        else if (tooltipElement) {\r\n            tooltipElement.remove();\r\n            target.removePrivate(\"tooltipElement\");\r\n        }\r\n    }\r\n    _makeTooltipElement(target) {\r\n        const container = this._tooltipElementContainer;\r\n        const tooltipElement = document.createElement(\"div\");\r\n        tooltipElement.style.position = \"absolute\";\r\n        tooltipElement.style.width = \"1px\";\r\n        tooltipElement.style.height = \"1px\";\r\n        tooltipElement.style.overflow = \"hidden\";\r\n        tooltipElement.style.clip = \"rect(1px, 1px, 1px, 1px)\";\r\n        _util_Utils__WEBPACK_IMPORTED_MODULE_9__.setInteractive(tooltipElement, false);\r\n        this._decorateFocusElement(target, tooltipElement);\r\n        container.append(tooltipElement);\r\n        target.setPrivate(\"tooltipElement\", tooltipElement);\r\n        return tooltipElement;\r\n    }\r\n    _removeTooltipElement(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        const tooltipElement = target.getPrivate(\"tooltipElement\");\r\n        if (tooltipElement) {\r\n            const parent = tooltipElement.parentElement;\r\n            if (parent) {\r\n                parent.removeChild(tooltipElement);\r\n            }\r\n        }\r\n    }\r\n    _invalidateAccessibility(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        this._focusElementDirty = true;\r\n        const focusElement = target.getPrivate(\"focusElement\");\r\n        if (target.get(\"focusable\")) {\r\n            if (focusElement) {\r\n                this._decorateFocusElement(target);\r\n                this._positionFocusElement(target);\r\n            }\r\n            // else {\r\n            // \tthis._renderer._makeFocusElement(0, this);\r\n            // }\r\n        }\r\n        else if (focusElement) {\r\n            this._removeFocusElement(target);\r\n        }\r\n        //this.updateCurrentFocus();\r\n    }\r\n    /**\r\n     * Returns `true` if `target` is currently focused.\r\n     *\r\n     * @param   target  Target\r\n     * @return          Focused?\r\n     */\r\n    focused(target) {\r\n        return this._focusedSprite === target;\r\n    }\r\n    /**\r\n     * Converts document coordinates to coordinates withing root element.\r\n     *\r\n     * @param   point  Document point\r\n     * @return         Root point\r\n     */\r\n    documentPointToRoot(point) {\r\n        const rect = this._getRealSize();\r\n        const size = this._getCalculatedSize(rect);\r\n        const scaleWidth = size.width / rect.width;\r\n        const scaleHeight = size.height / rect.height;\r\n        return {\r\n            x: (point.x - rect.left) * scaleWidth,\r\n            y: (point.y - rect.top) * scaleHeight,\r\n        };\r\n    }\r\n    /**\r\n     * Converts root coordinates to document\r\n     *\r\n     * @param   point  Document point\r\n     * @return         Root point\r\n     */\r\n    rootPointToDocument(point) {\r\n        const rect = this._getRealSize();\r\n        const size = this._getCalculatedSize(rect);\r\n        const scaleWidth = size.width / rect.width;\r\n        const scaleHeight = size.height / rect.height;\r\n        return {\r\n            x: (point.x / scaleWidth) + rect.left,\r\n            y: (point.y / scaleHeight) + rect.top\r\n        };\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    addDisposer(disposer) {\r\n        this._disposers.push(disposer);\r\n        return disposer;\r\n    }\r\n    _updateComputedStyles() {\r\n        const styles = window.getComputedStyle(this.dom);\r\n        let fontHash = \"\";\r\n        _util_Object__WEBPACK_IMPORTED_MODULE_23__.each(styles, (key, val) => {\r\n            if (_util_Type__WEBPACK_IMPORTED_MODULE_27__.isString(key) && key.match(/^font/)) {\r\n                fontHash += val;\r\n            }\r\n        });\r\n        const changed = fontHash != this._fontHash;\r\n        if (changed) {\r\n            this._fontHash = fontHash;\r\n        }\r\n        return changed;\r\n    }\r\n    _checkComputedStyles() {\r\n        if (this._updateComputedStyles()) {\r\n            this._invalidateLabelBounds(this.container);\r\n        }\r\n    }\r\n    _invalidateLabelBounds(target) {\r\n        if (target instanceof _render_Container__WEBPACK_IMPORTED_MODULE_14__.Container) {\r\n            target.children.each((child) => {\r\n                this._invalidateLabelBounds(child);\r\n            });\r\n        }\r\n        else if (target instanceof _render_Text__WEBPACK_IMPORTED_MODULE_28__.Text) {\r\n            target.markDirtyBounds();\r\n        }\r\n    }\r\n    /**\r\n     * To all the clever heads out there. Yes, we did not make any attempts to\r\n     * scramble this.\r\n     *\r\n     * This is a part of a tool meant for our users to manage their commercial\r\n     * licenses for removal of amCharts branding from charts.\r\n     *\r\n     * The only legit way to do so is to purchase a commercial license for amCharts:\r\n     * https://www.amcharts.com/online-store/\r\n     *\r\n     * Removing or altering this code, or disabling amCharts branding in any other\r\n     * way is against the license and thus illegal.\r\n     */\r\n    _hasLicense() {\r\n        for (let i = 0; i < _Registry__WEBPACK_IMPORTED_MODULE_12__.registry.licenses.length; i++) {\r\n            if (_Registry__WEBPACK_IMPORTED_MODULE_12__.registry.licenses[i].match(/^AM5C.{5,}/i)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    _licenseApplied() {\r\n        if (this._logo) {\r\n            this._logo.set(\"forceHidden\", true);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    get debugGhostView() {\r\n        return this._renderer.debugGhostView;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    set debugGhostView(value) {\r\n        this._renderer.debugGhostView = value;\r\n    }\r\n    /**\r\n     * Set this to `true` if you need chart to require first a tap onto it before\r\n     * touch gesture related functionality like zoom/pan is turned on.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#Touch_related_options} for more info\r\n     * @default false\r\n     * @since 5.2.9\r\n     * @param  value  Needs a tap to activate touch functions\r\n     */\r\n    set tapToActivate(value) {\r\n        this._renderer.tapToActivate = value;\r\n    }\r\n    /**\r\n     * @return Needs a tap to activate touch functions\r\n     */\r\n    get tapToActivate() {\r\n        return this._renderer.tapToActivate;\r\n    }\r\n    /**\r\n     * If `tapToActivate` is set to `true`, this setting will determine number\r\n     * of milliseconds the chart will stay \"active\", before releasing the\r\n     * controls back to the page.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#Touch_related_options} for more info\r\n     * @default 3000\r\n     * @since 5.2.9\r\n     * @param  value  Timeout\r\n     */\r\n    set tapToActivateTimeout(value) {\r\n        this._renderer.tapToActivateTimeout = value;\r\n    }\r\n    /**\r\n     * @return Timeout\r\n     */\r\n    get tapToActivateTimeout() {\r\n        return this._renderer.tapToActivateTimeout;\r\n    }\r\n    _makeHTMLElement(target) {\r\n        // Get container\r\n        const container = this._htmlElementContainer;\r\n        // Init\r\n        const htmlElement = document.createElement(\"div\");\r\n        target.setPrivate(\"htmlElement\", htmlElement);\r\n        // Should we put this into a wrapper?\r\n        let needWrapper = false;\r\n        let wrapperTarget;\r\n        target._walkParents((parent) => {\r\n            if (parent.get(\"verticalScrollbar\")) {\r\n                needWrapper = true;\r\n                wrapperTarget = parent;\r\n                return false;\r\n            }\r\n        });\r\n        let htmlElementWrapper;\r\n        if (needWrapper) {\r\n            htmlElementWrapper = document.createElement(\"div\");\r\n            target.setPrivate(\"htmlElementWrapper\", htmlElementWrapper);\r\n            target.setPrivate(\"wrapperContainer\", wrapperTarget);\r\n            htmlElementWrapper.style.position = \"absolute\";\r\n            htmlElementWrapper.style.overflow = \"hidden\";\r\n            htmlElementWrapper.style.boxSizing = \"border-box\";\r\n            htmlElementWrapper.style.top = \"0px\";\r\n            htmlElementWrapper.style.left = \"0px\";\r\n            htmlElementWrapper.style.width = \"100%\";\r\n            htmlElementWrapper.style.height = \"100%\";\r\n            wrapperTarget.events.on(\"boundschanged\", () => {\r\n                this._positionHTMLElement(target);\r\n            });\r\n        }\r\n        //htmlElement.tabIndex = this.tabindex;\r\n        htmlElement.style.position = \"absolute\";\r\n        htmlElement.style.overflow = \"auto\";\r\n        htmlElement.style.boxSizing = \"border-box\";\r\n        _util_Utils__WEBPACK_IMPORTED_MODULE_9__.setInteractive(htmlElement, target.get(\"interactive\", false));\r\n        // Translate events\r\n        if (target.events.isEnabled(\"click\")) {\r\n            _util_Utils__WEBPACK_IMPORTED_MODULE_9__.setInteractive(htmlElement, true);\r\n            this._disposers.push(_util_Utils__WEBPACK_IMPORTED_MODULE_9__.addEventListener(htmlElement, \"click\", (ev) => {\r\n                const downEvent = this._renderer.getEvent(ev);\r\n                target.events.dispatch(\"click\", {\r\n                    type: \"click\",\r\n                    originalEvent: downEvent.event,\r\n                    point: downEvent.point,\r\n                    simulated: false,\r\n                    target: target\r\n                });\r\n            }));\r\n        }\r\n        this._positionHTMLElement(target);\r\n        if (needWrapper) {\r\n            htmlElementWrapper.append(htmlElement);\r\n            container.append(htmlElementWrapper);\r\n        }\r\n        else {\r\n            container.append(htmlElement);\r\n        }\r\n        _util_Array__WEBPACK_IMPORTED_MODULE_11__.pushOne(this._htmlEnabledContainers, target);\r\n        return htmlElement;\r\n    }\r\n    _positionHTMLElements() {\r\n        _util_Array__WEBPACK_IMPORTED_MODULE_11__.each(this._htmlEnabledContainers, (target) => {\r\n            this._positionHTMLElement(target);\r\n        });\r\n    }\r\n    _positionHTMLElement(target) {\r\n        const htmlElementWrapper = target.getPrivate(\"htmlElementWrapper\");\r\n        if (htmlElementWrapper) {\r\n            const wrapperTarget = target.getPrivate(\"wrapperContainer\");\r\n            if (wrapperTarget) {\r\n                const bounds = wrapperTarget.globalBounds();\r\n                htmlElementWrapper.style.clipPath = \"rect(\" + bounds.top + \"px \" + bounds.right + \"px \" + bounds.bottom + \"px \" + bounds.left + \"px)\";\r\n            }\r\n        }\r\n        const htmlElement = target.getPrivate(\"htmlElement\");\r\n        if (htmlElement) {\r\n            // Translate settings\r\n            const visualSettings = [\r\n                \"paddingTop\",\r\n                \"paddingRight\",\r\n                \"paddingBottom\",\r\n                \"paddingLeft\",\r\n                \"minWidth\",\r\n                \"minHeight\",\r\n                \"maxWidth\",\r\n                \"maxHeight\"\r\n            ];\r\n            _util_Array__WEBPACK_IMPORTED_MODULE_11__.each(visualSettings, (setting) => {\r\n                const value = target.get(setting);\r\n                if (value) {\r\n                    htmlElement.style[setting] = value + \"px\";\r\n                }\r\n                else {\r\n                    htmlElement.style[setting] = \"\";\r\n                }\r\n            });\r\n            const strtingSettings = [\r\n                \"fontFamily\",\r\n                \"fontSize\",\r\n                \"fontStyle\",\r\n                \"fontWeight\",\r\n                \"fontStyle\",\r\n                \"fontVariant\",\r\n                \"textDecoration\"\r\n            ];\r\n            _util_Array__WEBPACK_IMPORTED_MODULE_11__.each(strtingSettings, (setting) => {\r\n                const value = target.get(setting);\r\n                if (value) {\r\n                    if (setting == \"fontSize\" && !_util_Type__WEBPACK_IMPORTED_MODULE_27__.isString(value)) {\r\n                        htmlElement.style[setting] = value + \"px\";\r\n                    }\r\n                    else {\r\n                        htmlElement.style[setting] = value + \"\";\r\n                    }\r\n                }\r\n                else {\r\n                    htmlElement.style[setting] = \"\";\r\n                }\r\n            });\r\n            // Init and reset scale / rotation\r\n            const scale = target.compositeScale() || 1;\r\n            const rotation = target.compositeRotation() || 0;\r\n            htmlElement.style.transform = \"\";\r\n            htmlElement.style.transformOrigin = \"\";\r\n            // Deal with opacity\r\n            const opacity = target.compositeOpacity();\r\n            setTimeout(() => {\r\n                htmlElement.style.opacity = opacity + \"\";\r\n            }, 10);\r\n            const visible = target.isVisibleDeep();\r\n            if (visible) {\r\n                htmlElement.style.display = \"block\";\r\n            }\r\n            // Deal with position\r\n            // const bounds = target.globalBounds();\r\n            // htmlElement.style.top = (bounds.top) + \"px\";\r\n            // htmlElement.style.left = (bounds.left) + \"px\";\r\n            let pos = {\r\n                x: target.x() + target.get(\"dx\", 0),\r\n                y: target.y() + target.get(\"dy\", 0)\r\n            };\r\n            if (target.parent) {\r\n                pos = target.parent.toGlobal(pos);\r\n            }\r\n            htmlElement.style.top = pos.y + \"px\";\r\n            htmlElement.style.left = pos.x + \"px\";\r\n            // Use width/height if those are set\r\n            const width = target.get(\"width\");\r\n            const height = target.get(\"height\");\r\n            let w = 0;\r\n            let h = 0;\r\n            if (width) {\r\n                w = target.width();\r\n            }\r\n            if (height) {\r\n                h = target.height();\r\n            }\r\n            if (!width || !height) {\r\n                htmlElement.style.position = \"fixed\";\r\n                htmlElement.style.width = \"\";\r\n                htmlElement.style.height = \"\";\r\n                const bbox = htmlElement.getBoundingClientRect();\r\n                htmlElement.style.position = \"absolute\";\r\n                if (!width)\r\n                    w = bbox.width;\r\n                if (!height)\r\n                    h = bbox.height;\r\n                let lw = w / scale;\r\n                let lh = h / scale;\r\n                let cx = target.get(\"centerX\", 0);\r\n                let cy = target.get(\"centerY\", 0);\r\n                let ll = 0;\r\n                let lr = 0;\r\n                let lt = 0;\r\n                let lb = 0;\r\n                if (cx instanceof _util_Percent__WEBPACK_IMPORTED_MODULE_15__.Percent) {\r\n                    ll = -cx.value * lw;\r\n                    lr = (1 - cx.value) * lw;\r\n                }\r\n                else {\r\n                    ll = -cx;\r\n                    lr = lw - cx;\r\n                }\r\n                if (cy instanceof _util_Percent__WEBPACK_IMPORTED_MODULE_15__.Percent) {\r\n                    lt = -cy.value * lh;\r\n                    lb = (1 - cy.value) * lh;\r\n                }\r\n                else {\r\n                    lt = -cy;\r\n                    lb = lh - cy;\r\n                }\r\n                target._localBounds = { left: ll, right: lr, top: lt, bottom: lb };\r\n                let previousBounds = target._adjustedLocalBounds;\r\n                let newBounds = target._display.getAdjustedBounds(target._localBounds);\r\n                target._adjustedLocalBounds = newBounds;\r\n                // compare each value of the bounds\r\n                if (previousBounds.left !== newBounds.left || previousBounds.right !== newBounds.right || previousBounds.top !== newBounds.top || previousBounds.bottom !== newBounds.bottom) {\r\n                    target.markDirtyBounds();\r\n                }\r\n            }\r\n            if (w > 0) {\r\n                htmlElement.style.minWidth = (w) + \"px\";\r\n            }\r\n            if (h > 0) {\r\n                htmlElement.style.minHeight = (h) + \"px\";\r\n            }\r\n            // Hide or show\r\n            if (!visible || opacity == 0) {\r\n                htmlElement.style.display = \"none\";\r\n            }\r\n            // Center position\r\n            const x = target.get(\"centerX\", 0);\r\n            const originX = (0,_util_Percent__WEBPACK_IMPORTED_MODULE_15__.isPercent)(x) ? x.percent + \"%\" : x + \"px\";\r\n            const y = target.get(\"centerY\", 0);\r\n            const originY = (0,_util_Percent__WEBPACK_IMPORTED_MODULE_15__.isPercent)(y) ? y.percent + \"%\" : y + \"px\";\r\n            if (x || y) {\r\n                htmlElement.style.transform = \"translate(-\" + originX + \", -\" + originY + \")\" + htmlElement.style.transform;\r\n            }\r\n            // Deal with scale\r\n            if (scale != 1) {\r\n                htmlElement.style.transform += \"scale(\" + scale + \")\";\r\n            }\r\n            if (rotation != 0) {\r\n                htmlElement.style.transform += \" rotate(\" + rotation + \"deg)\";\r\n            }\r\n            if (htmlElement.style.transform != \"\") {\r\n                htmlElement.style.transformOrigin = originX + \" \" + originY;\r\n                //htmlElement.style.transformOrigin = \"0% 0%\";\r\n            }\r\n        }\r\n    }\r\n    _setHTMLContent(target, html) {\r\n        let htmlElement = target.getPrivate(\"htmlElement\");\r\n        if (!htmlElement) {\r\n            htmlElement = this._makeHTMLElement(target);\r\n        }\r\n        if (htmlElement.innerHTML != html) {\r\n            htmlElement.innerHTML = html;\r\n        }\r\n    }\r\n    _removeHTMLContent(target) {\r\n        const htmlElementWrapper = target.getPrivate(\"htmlElementWrapper\");\r\n        const htmlElement = target.getPrivate(\"htmlElement\");\r\n        if (htmlElementWrapper) {\r\n            this._htmlElementContainer.removeChild(htmlElementWrapper);\r\n            target.removePrivate(\"htmlElement\");\r\n            target.removePrivate(\"htmlElementWrapper\");\r\n            target.removePrivate(\"wrapperContainer\");\r\n        }\r\n        else if (htmlElement) {\r\n            this._htmlElementContainer.removeChild(htmlElement);\r\n            target.removePrivate(\"htmlElement\");\r\n            target.removePrivate(\"wrapperContainer\");\r\n        }\r\n        _util_Array__WEBPACK_IMPORTED_MODULE_11__.remove(this._htmlEnabledContainers, target);\r\n    }\r\n}\r\n//# sourceMappingURL=Root.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/Root.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/Theme.js":
/*!******************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/core/Theme.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Theme: () => (/* binding */ Theme)\n/* harmony export */ });\n/* harmony import */ var _util_Template__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util/Template */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Template.js\");\n/* harmony import */ var _util_Order__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/Order */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Order.js\");\n/* harmony import */ var _util_Array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/Array */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Array.js\");\n\r\n\r\n\r\n/**\r\n * A base class for an amCharts theme.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/themes/} for more info\r\n * @important\r\n */\r\nclass Theme {\r\n    constructor(root, isReal) {\r\n        Object.defineProperty(this, \"_root\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_rules\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        this._root = root;\r\n        if (!isReal) {\r\n            throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\r\n        }\r\n    }\r\n    /**\r\n     * Use this method to create an instance of this class.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n     * @param   root      Root element\r\n     * @param   settings  Settings\r\n     * @param   template  Template\r\n     * @return            Instantiated object\r\n     */\r\n    static new(root) {\r\n        const x = (new this(root, true));\r\n        x.setupDefaultRules();\r\n        return x;\r\n    }\r\n    setupDefaultRules() { }\r\n    /**\r\n     * Looks up the rules for a specific theme class.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/themes/} for more info\r\n     * @param   themeClass Theme class\r\n     * @return             Array<IRule<A>>\r\n     */\r\n    _lookupRules(themeClass) {\r\n        return this._rules[themeClass];\r\n    }\r\n    /**\r\n     * Creates a [[Template]] for specific theme class and tags.\r\n     *\r\n     * NOTE: the difference from `rule()` is that `ruleRaw()` does not do any\r\n     * type checks.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/themes/} for more info\r\n     * @param   themeClass Theme class\r\n     * @param   themeTags  Theme tags\r\n     * @return             Template\r\n     */\r\n    ruleRaw(themeClass, themeTags = []) {\r\n        let rules = this._rules[themeClass];\r\n        if (!rules) {\r\n            rules = this._rules[themeClass] = [];\r\n        }\r\n        themeTags.sort(_util_Order__WEBPACK_IMPORTED_MODULE_0__.compare);\r\n        const { index, found } = _util_Array__WEBPACK_IMPORTED_MODULE_1__.getSortedIndex(rules, (x) => {\r\n            const order = _util_Order__WEBPACK_IMPORTED_MODULE_0__.compare(x.tags.length, themeTags.length);\r\n            if (order === 0) {\r\n                return _util_Order__WEBPACK_IMPORTED_MODULE_0__.compareArray(x.tags, themeTags, _util_Order__WEBPACK_IMPORTED_MODULE_0__.compare);\r\n            }\r\n            else {\r\n                return order;\r\n            }\r\n        });\r\n        if (found) {\r\n            return rules[index].template;\r\n        }\r\n        else {\r\n            const template = _util_Template__WEBPACK_IMPORTED_MODULE_2__.Template.new({});\r\n            rules.splice(index, 0, {\r\n                tags: themeTags,\r\n                template,\r\n            });\r\n            return template;\r\n        }\r\n    }\r\n    /**\r\n     * Creates a [[Template]] for specific theme class and tags.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/themes/} for more info\r\n     * @param   themeClass Theme class\r\n     * @param   themeTags  Theme tags\r\n     * @return             Template\r\n     */\r\n    rule(themeClass, themeTags = []) {\r\n        return this.ruleRaw(themeClass, themeTags);\r\n    }\r\n}\r\n//# sourceMappingURL=Theme.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNS8uaW50ZXJuYWwvY29yZS9UaGVtZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQTJDO0FBQ0o7QUFDQTtBQUN2QztBQUNBO0FBQ0E7QUFDQSxTQUFTLHlEQUF5RDtBQUNsRTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSw0RUFBNEU7QUFDekY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsZ0RBQWdEO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsZ0RBQWdEO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixnREFBYztBQUNyQyxnQkFBZ0IsZUFBZSxFQUFFLHVEQUFxQjtBQUN0RCwwQkFBMEIsZ0RBQWM7QUFDeEM7QUFDQSx1QkFBdUIscURBQW1CLG9CQUFvQixnREFBYztBQUM1RTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QixvREFBUSxPQUFPO0FBQzVDO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLGdEQUFnRDtBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3Jrc3BhY2Uvbm9kZV9tb2R1bGVzL0BhbWNoYXJ0cy9hbWNoYXJ0czUvLmludGVybmFsL2NvcmUvVGhlbWUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVGVtcGxhdGUgfSBmcm9tIFwiLi91dGlsL1RlbXBsYXRlXCI7XHJcbmltcG9ydCAqIGFzICRvcmRlciBmcm9tIFwiLi91dGlsL09yZGVyXCI7XHJcbmltcG9ydCAqIGFzICRhcnJheSBmcm9tIFwiLi91dGlsL0FycmF5XCI7XHJcbi8qKlxyXG4gKiBBIGJhc2UgY2xhc3MgZm9yIGFuIGFtQ2hhcnRzIHRoZW1lLlxyXG4gKlxyXG4gKiBAc2VlIHtAbGluayBodHRwczovL3d3dy5hbWNoYXJ0cy5jb20vZG9jcy92NS9jb25jZXB0cy90aGVtZXMvfSBmb3IgbW9yZSBpbmZvXHJcbiAqIEBpbXBvcnRhbnRcclxuICovXHJcbmV4cG9ydCBjbGFzcyBUaGVtZSB7XHJcbiAgICBjb25zdHJ1Y3Rvcihyb290LCBpc1JlYWwpIHtcclxuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJfcm9vdFwiLCB7XHJcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcclxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXHJcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcclxuICAgICAgICB9KTtcclxuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJfcnVsZXNcIiwge1xyXG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXHJcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxyXG4gICAgICAgICAgICB2YWx1ZToge31cclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLl9yb290ID0gcm9vdDtcclxuICAgICAgICBpZiAoIWlzUmVhbCkge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJZb3UgY2Fubm90IHVzZSBgbmV3IENsYXNzKClgLCBpbnN0ZWFkIHVzZSBgQ2xhc3MubmV3KClgXCIpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogVXNlIHRoaXMgbWV0aG9kIHRvIGNyZWF0ZSBhbiBpbnN0YW5jZSBvZiB0aGlzIGNsYXNzLlxyXG4gICAgICpcclxuICAgICAqIEBzZWUge0BsaW5rIGh0dHBzOi8vd3d3LmFtY2hhcnRzLmNvbS9kb2NzL3Y1L2dldHRpbmctc3RhcnRlZC8jTmV3X2VsZW1lbnRfc3ludGF4fSBmb3IgbW9yZSBpbmZvXHJcbiAgICAgKiBAcGFyYW0gICByb290ICAgICAgUm9vdCBlbGVtZW50XHJcbiAgICAgKiBAcGFyYW0gICBzZXR0aW5ncyAgU2V0dGluZ3NcclxuICAgICAqIEBwYXJhbSAgIHRlbXBsYXRlICBUZW1wbGF0ZVxyXG4gICAgICogQHJldHVybiAgICAgICAgICAgIEluc3RhbnRpYXRlZCBvYmplY3RcclxuICAgICAqL1xyXG4gICAgc3RhdGljIG5ldyhyb290KSB7XHJcbiAgICAgICAgY29uc3QgeCA9IChuZXcgdGhpcyhyb290LCB0cnVlKSk7XHJcbiAgICAgICAgeC5zZXR1cERlZmF1bHRSdWxlcygpO1xyXG4gICAgICAgIHJldHVybiB4O1xyXG4gICAgfVxyXG4gICAgc2V0dXBEZWZhdWx0UnVsZXMoKSB7IH1cclxuICAgIC8qKlxyXG4gICAgICogTG9va3MgdXAgdGhlIHJ1bGVzIGZvciBhIHNwZWNpZmljIHRoZW1lIGNsYXNzLlxyXG4gICAgICpcclxuICAgICAqIEBzZWUge0BsaW5rIGh0dHBzOi8vd3d3LmFtY2hhcnRzLmNvbS9kb2NzL3Y1L3RoZW1lcy99IGZvciBtb3JlIGluZm9cclxuICAgICAqIEBwYXJhbSAgIHRoZW1lQ2xhc3MgVGhlbWUgY2xhc3NcclxuICAgICAqIEByZXR1cm4gICAgICAgICAgICAgQXJyYXk8SVJ1bGU8QT4+XHJcbiAgICAgKi9cclxuICAgIF9sb29rdXBSdWxlcyh0aGVtZUNsYXNzKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3J1bGVzW3RoZW1lQ2xhc3NdO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBDcmVhdGVzIGEgW1tUZW1wbGF0ZV1dIGZvciBzcGVjaWZpYyB0aGVtZSBjbGFzcyBhbmQgdGFncy5cclxuICAgICAqXHJcbiAgICAgKiBOT1RFOiB0aGUgZGlmZmVyZW5jZSBmcm9tIGBydWxlKClgIGlzIHRoYXQgYHJ1bGVSYXcoKWAgZG9lcyBub3QgZG8gYW55XHJcbiAgICAgKiB0eXBlIGNoZWNrcy5cclxuICAgICAqXHJcbiAgICAgKiBAc2VlIHtAbGluayBodHRwczovL3d3dy5hbWNoYXJ0cy5jb20vZG9jcy92NS90aGVtZXMvfSBmb3IgbW9yZSBpbmZvXHJcbiAgICAgKiBAcGFyYW0gICB0aGVtZUNsYXNzIFRoZW1lIGNsYXNzXHJcbiAgICAgKiBAcGFyYW0gICB0aGVtZVRhZ3MgIFRoZW1lIHRhZ3NcclxuICAgICAqIEByZXR1cm4gICAgICAgICAgICAgVGVtcGxhdGVcclxuICAgICAqL1xyXG4gICAgcnVsZVJhdyh0aGVtZUNsYXNzLCB0aGVtZVRhZ3MgPSBbXSkge1xyXG4gICAgICAgIGxldCBydWxlcyA9IHRoaXMuX3J1bGVzW3RoZW1lQ2xhc3NdO1xyXG4gICAgICAgIGlmICghcnVsZXMpIHtcclxuICAgICAgICAgICAgcnVsZXMgPSB0aGlzLl9ydWxlc1t0aGVtZUNsYXNzXSA9IFtdO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGVtZVRhZ3Muc29ydCgkb3JkZXIuY29tcGFyZSk7XHJcbiAgICAgICAgY29uc3QgeyBpbmRleCwgZm91bmQgfSA9ICRhcnJheS5nZXRTb3J0ZWRJbmRleChydWxlcywgKHgpID0+IHtcclxuICAgICAgICAgICAgY29uc3Qgb3JkZXIgPSAkb3JkZXIuY29tcGFyZSh4LnRhZ3MubGVuZ3RoLCB0aGVtZVRhZ3MubGVuZ3RoKTtcclxuICAgICAgICAgICAgaWYgKG9yZGVyID09PSAwKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gJG9yZGVyLmNvbXBhcmVBcnJheSh4LnRhZ3MsIHRoZW1lVGFncywgJG9yZGVyLmNvbXBhcmUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIG9yZGVyO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgaWYgKGZvdW5kKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBydWxlc1tpbmRleF0udGVtcGxhdGU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBjb25zdCB0ZW1wbGF0ZSA9IFRlbXBsYXRlLm5ldyh7fSk7XHJcbiAgICAgICAgICAgIHJ1bGVzLnNwbGljZShpbmRleCwgMCwge1xyXG4gICAgICAgICAgICAgICAgdGFnczogdGhlbWVUYWdzLFxyXG4gICAgICAgICAgICAgICAgdGVtcGxhdGUsXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICByZXR1cm4gdGVtcGxhdGU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBDcmVhdGVzIGEgW1tUZW1wbGF0ZV1dIGZvciBzcGVjaWZpYyB0aGVtZSBjbGFzcyBhbmQgdGFncy5cclxuICAgICAqXHJcbiAgICAgKiBAc2VlIHtAbGluayBodHRwczovL3d3dy5hbWNoYXJ0cy5jb20vZG9jcy92NS90aGVtZXMvfSBmb3IgbW9yZSBpbmZvXHJcbiAgICAgKiBAcGFyYW0gICB0aGVtZUNsYXNzIFRoZW1lIGNsYXNzXHJcbiAgICAgKiBAcGFyYW0gICB0aGVtZVRhZ3MgIFRoZW1lIHRhZ3NcclxuICAgICAqIEByZXR1cm4gICAgICAgICAgICAgVGVtcGxhdGVcclxuICAgICAqL1xyXG4gICAgcnVsZSh0aGVtZUNsYXNzLCB0aGVtZVRhZ3MgPSBbXSkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLnJ1bGVSYXcodGhlbWVDbGFzcywgdGhlbWVUYWdzKTtcclxuICAgIH1cclxufVxyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1UaGVtZS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/Theme.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/Bullet.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/core/render/Bullet.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Bullet: () => (/* binding */ Bullet)\n/* harmony export */ });\n/* harmony import */ var _core_util_Entity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/util/Entity */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Entity.js\");\n\r\n/**\r\n * A universal placeholder for bullet elements.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/bullets/} for more info\r\n */\r\nclass Bullet extends _core_util_Entity__WEBPACK_IMPORTED_MODULE_0__.Entity {\r\n    constructor() {\r\n        super(...arguments);\r\n        // used by MapPolygons where one data item can have multiple bullets of the same kind\r\n        Object.defineProperty(this, \"_index\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Target series object if it's a bullet for series.\r\n         */\r\n        Object.defineProperty(this, \"series\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        // Applying themes because bullet will not have parent\r\n        super._afterNewApplyThemes();\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"sprite\")) {\r\n            const sprite = this.get(\"sprite\");\r\n            if (sprite) {\r\n                sprite.setAll({ position: \"absolute\", role: \"figure\" });\r\n                this._disposers.push(sprite);\r\n            }\r\n        }\r\n        if (this.isDirty(\"locationX\") || this.isDirty(\"locationY\")) {\r\n            if (this.series) {\r\n                this.series._positionBullet(this);\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Bullet, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Bullet\"\r\n});\r\nObject.defineProperty(Bullet, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: _core_util_Entity__WEBPACK_IMPORTED_MODULE_0__.Entity.classNames.concat([Bullet.className])\r\n});\r\n//# sourceMappingURL=Bullet.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNS8uaW50ZXJuYWwvY29yZS9yZW5kZXIvQnVsbGV0LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWdEO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBLFNBQVMsMEVBQTBFO0FBQ25GO0FBQ08scUJBQXFCLHFEQUFNO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyxzQ0FBc0M7QUFDdEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxxREFBTTtBQUNqQixDQUFDO0FBQ0QiLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3Jrc3BhY2Uvbm9kZV9tb2R1bGVzL0BhbWNoYXJ0cy9hbWNoYXJ0czUvLmludGVybmFsL2NvcmUvcmVuZGVyL0J1bGxldC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbnRpdHkgfSBmcm9tIFwiLi4vLi4vY29yZS91dGlsL0VudGl0eVwiO1xyXG4vKipcclxuICogQSB1bml2ZXJzYWwgcGxhY2Vob2xkZXIgZm9yIGJ1bGxldCBlbGVtZW50cy5cclxuICpcclxuICogQHNlZSB7QGxpbmsgaHR0cHM6Ly93d3cuYW1jaGFydHMuY29tL2RvY3MvdjUvY29uY2VwdHMvY29tbW9uLWVsZW1lbnRzL2J1bGxldHMvfSBmb3IgbW9yZSBpbmZvXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgQnVsbGV0IGV4dGVuZHMgRW50aXR5IHtcclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XHJcbiAgICAgICAgLy8gdXNlZCBieSBNYXBQb2x5Z29ucyB3aGVyZSBvbmUgZGF0YSBpdGVtIGNhbiBoYXZlIG11bHRpcGxlIGJ1bGxldHMgb2YgdGhlIHNhbWUga2luZFxyXG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcIl9pbmRleFwiLCB7XHJcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcclxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXHJcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcclxuICAgICAgICB9KTtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBUYXJnZXQgc2VyaWVzIG9iamVjdCBpZiBpdCdzIGEgYnVsbGV0IGZvciBzZXJpZXMuXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwic2VyaWVzXCIsIHtcclxuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxyXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcclxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgX2FmdGVyTmV3KCkge1xyXG4gICAgICAgIC8vIEFwcGx5aW5nIHRoZW1lcyBiZWNhdXNlIGJ1bGxldCB3aWxsIG5vdCBoYXZlIHBhcmVudFxyXG4gICAgICAgIHN1cGVyLl9hZnRlck5ld0FwcGx5VGhlbWVzKCk7XHJcbiAgICB9XHJcbiAgICBfYmVmb3JlQ2hhbmdlZCgpIHtcclxuICAgICAgICBzdXBlci5fYmVmb3JlQ2hhbmdlZCgpO1xyXG4gICAgICAgIGlmICh0aGlzLmlzRGlydHkoXCJzcHJpdGVcIikpIHtcclxuICAgICAgICAgICAgY29uc3Qgc3ByaXRlID0gdGhpcy5nZXQoXCJzcHJpdGVcIik7XHJcbiAgICAgICAgICAgIGlmIChzcHJpdGUpIHtcclxuICAgICAgICAgICAgICAgIHNwcml0ZS5zZXRBbGwoeyBwb3NpdGlvbjogXCJhYnNvbHV0ZVwiLCByb2xlOiBcImZpZ3VyZVwiIH0pO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fZGlzcG9zZXJzLnB1c2goc3ByaXRlKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAodGhpcy5pc0RpcnR5KFwibG9jYXRpb25YXCIpIHx8IHRoaXMuaXNEaXJ0eShcImxvY2F0aW9uWVwiKSkge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5zZXJpZXMpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuc2VyaWVzLl9wb3NpdGlvbkJ1bGxldCh0aGlzKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoQnVsbGV0LCBcImNsYXNzTmFtZVwiLCB7XHJcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgY29uZmlndXJhYmxlOiB0cnVlLFxyXG4gICAgd3JpdGFibGU6IHRydWUsXHJcbiAgICB2YWx1ZTogXCJCdWxsZXRcIlxyXG59KTtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KEJ1bGxldCwgXCJjbGFzc05hbWVzXCIsIHtcclxuICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICBjb25maWd1cmFibGU6IHRydWUsXHJcbiAgICB3cml0YWJsZTogdHJ1ZSxcclxuICAgIHZhbHVlOiBFbnRpdHkuY2xhc3NOYW1lcy5jb25jYXQoW0J1bGxldC5jbGFzc05hbWVdKVxyXG59KTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QnVsbGV0LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/Bullet.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/Chart.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/core/render/Chart.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Chart: () => (/* binding */ Chart)\n/* harmony export */ });\n/* harmony import */ var _core_render_Container__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/render/Container */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/Container.js\");\n/* harmony import */ var _core_util_Percent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/util/Percent */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Percent.js\");\n\r\n\r\n/**\r\n * A base class for all charts.\r\n */\r\nclass Chart extends _core_render_Container__WEBPACK_IMPORTED_MODULE_0__.Container {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * A [[Container]] chart places its elements in.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"chartContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(_core_render_Container__WEBPACK_IMPORTED_MODULE_0__.Container.new(this._root, { width: _core_util_Percent__WEBPACK_IMPORTED_MODULE_1__.p100, height: _core_util_Percent__WEBPACK_IMPORTED_MODULE_1__.p100, interactiveChildren: false }))\r\n        });\r\n        /**\r\n         * A [[Container]] chart places its bullets in.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"bulletsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _core_render_Container__WEBPACK_IMPORTED_MODULE_0__.Container.new(this._root, { interactiveChildren: false, isMeasured: false, position: \"absolute\", width: _core_util_Percent__WEBPACK_IMPORTED_MODULE_1__.p100, height: _core_util_Percent__WEBPACK_IMPORTED_MODULE_1__.p100 })\r\n        });\r\n    }\r\n}\r\nObject.defineProperty(Chart, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Chart\"\r\n});\r\nObject.defineProperty(Chart, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: _core_render_Container__WEBPACK_IMPORTED_MODULE_0__.Container.classNames.concat([Chart.className])\r\n});\r\n//# sourceMappingURL=Chart.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNS8uaW50ZXJuYWwvY29yZS9yZW5kZXIvQ2hhcnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXdEO0FBQ1Q7QUFDL0M7QUFDQTtBQUNBO0FBQ08sb0JBQW9CLDZEQUFTO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0MsNkRBQVMsbUJBQW1CLE9BQU8sb0RBQUksVUFBVSxvREFBSSw4QkFBOEI7QUFDekgsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQiw2REFBUyxtQkFBbUIsNEVBQTRFLG9EQUFJLFVBQVUsb0RBQUksRUFBRTtBQUMvSSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLDZEQUFTO0FBQ3BCLENBQUM7QUFDRCIsInNvdXJjZXMiOlsiL2hvbWUvcnVubmVyL3dvcmtzcGFjZS9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNS8uaW50ZXJuYWwvY29yZS9yZW5kZXIvQ2hhcnQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29udGFpbmVyIH0gZnJvbSBcIi4uLy4uL2NvcmUvcmVuZGVyL0NvbnRhaW5lclwiO1xyXG5pbXBvcnQgeyBwMTAwIH0gZnJvbSBcIi4uLy4uL2NvcmUvdXRpbC9QZXJjZW50XCI7XHJcbi8qKlxyXG4gKiBBIGJhc2UgY2xhc3MgZm9yIGFsbCBjaGFydHMuXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgQ2hhcnQgZXh0ZW5kcyBDb250YWluZXIge1xyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBBIFtbQ29udGFpbmVyXV0gY2hhcnQgcGxhY2VzIGl0cyBlbGVtZW50cyBpbi5cclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIEBkZWZhdWx0IENvbnRhaW5lci5uZXcoKVxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImNoYXJ0Q29udGFpbmVyXCIsIHtcclxuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxyXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcclxuICAgICAgICAgICAgdmFsdWU6IHRoaXMuY2hpbGRyZW4ucHVzaChDb250YWluZXIubmV3KHRoaXMuX3Jvb3QsIHsgd2lkdGg6IHAxMDAsIGhlaWdodDogcDEwMCwgaW50ZXJhY3RpdmVDaGlsZHJlbjogZmFsc2UgfSkpXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogQSBbW0NvbnRhaW5lcl1dIGNoYXJ0IHBsYWNlcyBpdHMgYnVsbGV0cyBpbi5cclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIEBkZWZhdWx0IENvbnRhaW5lci5uZXcoKVxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImJ1bGxldHNDb250YWluZXJcIiwge1xyXG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXHJcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxyXG4gICAgICAgICAgICB2YWx1ZTogQ29udGFpbmVyLm5ldyh0aGlzLl9yb290LCB7IGludGVyYWN0aXZlQ2hpbGRyZW46IGZhbHNlLCBpc01lYXN1cmVkOiBmYWxzZSwgcG9zaXRpb246IFwiYWJzb2x1dGVcIiwgd2lkdGg6IHAxMDAsIGhlaWdodDogcDEwMCB9KVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG59XHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShDaGFydCwgXCJjbGFzc05hbWVcIiwge1xyXG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcclxuICAgIHdyaXRhYmxlOiB0cnVlLFxyXG4gICAgdmFsdWU6IFwiQ2hhcnRcIlxyXG59KTtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KENoYXJ0LCBcImNsYXNzTmFtZXNcIiwge1xyXG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcclxuICAgIHdyaXRhYmxlOiB0cnVlLFxyXG4gICAgdmFsdWU6IENvbnRhaW5lci5jbGFzc05hbWVzLmNvbmNhdChbQ2hhcnQuY2xhc3NOYW1lXSlcclxufSk7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNoYXJ0LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/Chart.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/Circle.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/core/render/Circle.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Circle: () => (/* binding */ Circle)\n/* harmony export */ });\n/* harmony import */ var _Graphics__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Graphics */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/Graphics.js\");\n\r\n/**\r\n * Draws a circle.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nclass Circle extends _Graphics__WEBPACK_IMPORTED_MODULE_0__.Graphics {\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._display.isMeasured = true;\r\n        this.setPrivateRaw(\"trustBounds\", true);\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"radius\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            this._display.drawCircle(0, 0, Math.abs(this.get(\"radius\", 10)));\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Circle, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Circle\"\r\n});\r\nObject.defineProperty(Circle, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: _Graphics__WEBPACK_IMPORTED_MODULE_0__.Graphics.classNames.concat([Circle.className])\r\n});\r\n//# sourceMappingURL=Circle.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNS8uaW50ZXJuYWwvY29yZS9yZW5kZXIvQ2lyY2xlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXNDO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBLFNBQVMsMkVBQTJFO0FBQ3BGO0FBQ0E7QUFDTyxxQkFBcUIsK0NBQVE7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsK0NBQVE7QUFDbkIsQ0FBQztBQUNEIiwic291cmNlcyI6WyIvaG9tZS9ydW5uZXIvd29ya3NwYWNlL25vZGVfbW9kdWxlcy9AYW1jaGFydHMvYW1jaGFydHM1Ly5pbnRlcm5hbC9jb3JlL3JlbmRlci9DaXJjbGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgR3JhcGhpY3MgfSBmcm9tIFwiLi9HcmFwaGljc1wiO1xyXG4vKipcclxuICogRHJhd3MgYSBjaXJjbGUuXHJcbiAqXHJcbiAqIEBzZWUge0BsaW5rIGh0dHBzOi8vd3d3LmFtY2hhcnRzLmNvbS9kb2NzL3Y1L2NvbmNlcHRzL2NvbW1vbi1lbGVtZW50cy9ncmFwaGljcy99IGZvciBtb3JlIGluZm9cclxuICogQGltcG9ydGFudFxyXG4gKi9cclxuZXhwb3J0IGNsYXNzIENpcmNsZSBleHRlbmRzIEdyYXBoaWNzIHtcclxuICAgIF9hZnRlck5ldygpIHtcclxuICAgICAgICBzdXBlci5fYWZ0ZXJOZXcoKTtcclxuICAgICAgICB0aGlzLl9kaXNwbGF5LmlzTWVhc3VyZWQgPSB0cnVlO1xyXG4gICAgICAgIHRoaXMuc2V0UHJpdmF0ZVJhdyhcInRydXN0Qm91bmRzXCIsIHRydWUpO1xyXG4gICAgfVxyXG4gICAgX2JlZm9yZUNoYW5nZWQoKSB7XHJcbiAgICAgICAgc3VwZXIuX2JlZm9yZUNoYW5nZWQoKTtcclxuICAgICAgICBpZiAodGhpcy5pc0RpcnR5KFwicmFkaXVzXCIpKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2NsZWFyID0gdHJ1ZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBfY2hhbmdlZCgpIHtcclxuICAgICAgICBzdXBlci5fY2hhbmdlZCgpO1xyXG4gICAgICAgIGlmICh0aGlzLl9jbGVhcikge1xyXG4gICAgICAgICAgICB0aGlzLl9kaXNwbGF5LmRyYXdDaXJjbGUoMCwgMCwgTWF0aC5hYnModGhpcy5nZXQoXCJyYWRpdXNcIiwgMTApKSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShDaXJjbGUsIFwiY2xhc3NOYW1lXCIsIHtcclxuICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICBjb25maWd1cmFibGU6IHRydWUsXHJcbiAgICB3cml0YWJsZTogdHJ1ZSxcclxuICAgIHZhbHVlOiBcIkNpcmNsZVwiXHJcbn0pO1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoQ2lyY2xlLCBcImNsYXNzTmFtZXNcIiwge1xyXG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcclxuICAgIHdyaXRhYmxlOiB0cnVlLFxyXG4gICAgdmFsdWU6IEdyYXBoaWNzLmNsYXNzTmFtZXMuY29uY2F0KFtDaXJjbGUuY2xhc3NOYW1lXSlcclxufSk7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNpcmNsZS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/Circle.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/Component.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/core/render/Component.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Component: () => (/* binding */ Component),\n/* harmony export */   DataItem: () => (/* binding */ DataItem)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var _util_Entity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/Entity */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Entity.js\");\n/* harmony import */ var _Container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Container */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/Container.js\");\n/* harmony import */ var _util_Data__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/Data */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Data.js\");\n/* harmony import */ var _util_Array__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/Array */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Array.js\");\n/* harmony import */ var _util_Object__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/Object */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Object.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * A base element that holds data bit (data item) for any [[Component]].\r\n */\r\nclass DataItem extends _util_Entity__WEBPACK_IMPORTED_MODULE_0__.Settings {\r\n    constructor(component, dataContext, settings) {\r\n        super(settings);\r\n        /**\r\n         * A data item's owener [[Component]].\r\n         */\r\n        Object.defineProperty(this, \"component\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A reference to actual item in source data this item is based on.\r\n         */\r\n        Object.defineProperty(this, \"dataContext\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * @todo requires description\r\n         */\r\n        Object.defineProperty(this, \"bullets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A set of \"open\" values.\r\n         */\r\n        Object.defineProperty(this, \"open\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A set of \"close\" values.\r\n         */\r\n        Object.defineProperty(this, \"close\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.dataContext = dataContext;\r\n        this.component = component;\r\n        this._settings.visible = true;\r\n        this._checkDirty();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirty() {\r\n        this.component.markDirtyValues(this);\r\n    }\r\n    _startAnimation() {\r\n        this.component._root._addAnimation(this);\r\n    }\r\n    _animationTime() {\r\n        return this.component._root.animationTime;\r\n    }\r\n    _dispose() {\r\n        if (this.component) {\r\n            this.component.disposeDataItem(this);\r\n        }\r\n        super._dispose();\r\n    }\r\n    /**\r\n     * Shows a data item that's currently hidden.\r\n     */\r\n    show(duration) {\r\n        this.setRaw(\"visible\", true);\r\n        if (this.component) {\r\n            this.component.showDataItem(this, duration);\r\n        }\r\n    }\r\n    /**\r\n     * Hides a data item that's currently visible.\r\n     */\r\n    hide(duration) {\r\n        this.setRaw(\"visible\", false);\r\n        if (this.component) {\r\n            this.component.hideDataItem(this, duration);\r\n        }\r\n    }\r\n    isHidden() {\r\n        return !this.get(\"visible\");\r\n    }\r\n}\r\n/**\r\n * A base class for elements that make use of data.\r\n */\r\nclass Component extends _Container__WEBPACK_IMPORTED_MODULE_1__.Container {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_data\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new _util_Data__WEBPACK_IMPORTED_MODULE_2__.ListData()\r\n        });\r\n        Object.defineProperty(this, \"_dataItems\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_mainDataItems\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._dataItems\r\n        });\r\n        Object.defineProperty(this, \"valueFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"fields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\"id\"]\r\n        });\r\n        Object.defineProperty(this, \"_valueFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_valueFieldsF\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_fields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_fieldsF\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_valuesDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dataChanged\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dataGrouped\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * Indicates if the component has already been initialized.\r\n         */\r\n        Object.defineProperty(this, \"inited\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    /**\r\n     * Component's data.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/data/} for more info\r\n     */\r\n    set data(data) {\r\n        data.incrementRef();\r\n        this._data.decrementRef();\r\n        this._data = data;\r\n    }\r\n    /**\r\n     * @return  Data\r\n     */\r\n    get data() {\r\n        return this._data;\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        this._data.decrementRef();\r\n    }\r\n    _onDataClear() {\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._data.incrementRef();\r\n        this._updateFields();\r\n        this._disposers.push(this.data.events.onAll((change) => {\r\n            const dataItems = this._mainDataItems;\r\n            this.markDirtyValues();\r\n            this._markDirtyGroup();\r\n            this._dataChanged = true;\r\n            if (change.type === \"clear\") {\r\n                _util_Array__WEBPACK_IMPORTED_MODULE_3__.each(dataItems, (dataItem) => {\r\n                    dataItem.dispose();\r\n                });\r\n                dataItems.length = 0;\r\n                this._onDataClear();\r\n            }\r\n            else if (change.type === \"push\") {\r\n                const dataItem = new DataItem(this, change.newValue, this._makeDataItem(change.newValue));\r\n                dataItems.push(dataItem);\r\n                this.processDataItem(dataItem);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                const dataItem = dataItems[change.index];\r\n                const properties = this._makeDataItem(change.newValue);\r\n                if (dataItem.bullets && dataItem.bullets.length == 0) {\r\n                    dataItem.bullets = undefined;\r\n                }\r\n                _util_Object__WEBPACK_IMPORTED_MODULE_4__.keys(properties).forEach((key) => {\r\n                    dataItem.animate({\r\n                        key: key,\r\n                        to: properties[key],\r\n                        duration: this.get(\"interpolationDuration\", 0),\r\n                        easing: this.get(\"interpolationEasing\"),\r\n                    });\r\n                });\r\n                dataItem.dataContext = change.newValue;\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                const dataItem = new DataItem(this, change.newValue, this._makeDataItem(change.newValue));\r\n                dataItems.splice(change.index, 0, dataItem);\r\n                this.processDataItem(dataItem);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                const dataItem = dataItems[change.index];\r\n                dataItem.dispose();\r\n                dataItems.splice(change.index, 1);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                const dataItem = dataItems[change.oldIndex];\r\n                dataItems.splice(change.oldIndex, 1);\r\n                dataItems.splice(change.newIndex, 0, dataItem);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IStreamEvent type\");\r\n            }\r\n            this._afterDataChange();\r\n        }));\r\n    }\r\n    _updateFields() {\r\n        if (this.valueFields) {\r\n            this._valueFields = [];\r\n            this._valueFieldsF = {};\r\n            _util_Array__WEBPACK_IMPORTED_MODULE_3__.each(this.valueFields, (key) => {\r\n                const field = this.get((key + \"Field\"));\r\n                if (field) {\r\n                    this._valueFields.push(key);\r\n                    this._valueFieldsF[key] = { fieldKey: key + \"Field\", workingKey: key + \"Working\" };\r\n                }\r\n            });\r\n        }\r\n        if (this.fields) {\r\n            this._fields = [];\r\n            this._fieldsF = {};\r\n            _util_Array__WEBPACK_IMPORTED_MODULE_3__.each(this.fields, (key) => {\r\n                const field = this.get((key + \"Field\"));\r\n                if (field) {\r\n                    this._fields.push(key);\r\n                    this._fieldsF[key] = key + \"Field\";\r\n                }\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * A list of component's data items.\r\n     *\r\n     * @return  Data items\r\n     */\r\n    get dataItems() {\r\n        return this._dataItems;\r\n    }\r\n    processDataItem(_dataItem) { }\r\n    _makeDataItem(data) {\r\n        //const output: this[\"_dataItemSettings\"] = {};\r\n        const output = {}; // temporary to solve error\r\n        if (this._valueFields) {\r\n            _util_Array__WEBPACK_IMPORTED_MODULE_3__.each(this._valueFields, (key) => {\r\n                const field = this.get((this._valueFieldsF[key].fieldKey));\r\n                output[key] = data[field];\r\n                output[this._valueFieldsF[key].workingKey] = output[key];\r\n            });\r\n        }\r\n        if (this._fields) {\r\n            _util_Array__WEBPACK_IMPORTED_MODULE_3__.each(this._fields, (key) => {\r\n                const field = this.get((this._fieldsF[key]));\r\n                output[key] = data[field];\r\n            });\r\n        }\r\n        return output;\r\n    }\r\n    /**\r\n     * Creates a new data item and processes it.\r\n     *\r\n     * @param   data         Data item settings\r\n     * @param   dataContext  Data context\r\n     * @return               New data item\r\n     */\r\n    makeDataItem(data, dataContext) {\r\n        let dataItem = new DataItem(this, dataContext, data);\r\n        this.processDataItem(dataItem);\r\n        return dataItem;\r\n    }\r\n    /**\r\n     * Adds new explicit data item to series.\r\n     *\r\n     * @param   data         Data item settings\r\n     * @param   dataContext  Data context\r\n     * @return               New data item\r\n     */\r\n    pushDataItem(data, dataContext) {\r\n        const dataItem = this.makeDataItem(data, dataContext);\r\n        this._mainDataItems.push(dataItem);\r\n        return dataItem;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(_dataItem) {\r\n    }\r\n    /**\r\n     * Shows component's data item.\r\n     *\r\n     * @param   dataItem   Data item\r\n     * @param   _duration  Animation duration in milliseconds\r\n     * @return             Promise\r\n     */\r\n    showDataItem(dataItem, _duration) {\r\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(this, void 0, void 0, function* () {\r\n            dataItem.set(\"visible\", true);\r\n        });\r\n    }\r\n    /**\r\n     * Hides component's data item.\r\n     *\r\n     * @param   dataItem   Data item\r\n     * @param   _duration  Animation duration in milliseconds\r\n     * @return             Promise\r\n     */\r\n    hideDataItem(dataItem, _duration) {\r\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(this, void 0, void 0, function* () {\r\n            dataItem.set(\"visible\", false);\r\n        });\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._valuesDirty = false;\r\n    }\r\n    _afterDataChange() {\r\n    }\r\n    _afterChanged() {\r\n        super._afterChanged();\r\n        if (this._dataChanged) {\r\n            const type = \"datavalidated\";\r\n            if (this.events.isEnabled(type)) {\r\n                this.events.dispatch(type, { type: type, target: this });\r\n            }\r\n            this._dataChanged = false;\r\n        }\r\n        this.inited = true;\r\n    }\r\n    /**\r\n     * Forces a repaint of the element which relies on data.\r\n     *\r\n     * @since 5.0.21\r\n     */\r\n    markDirtyValues(_dataItem) {\r\n        this.markDirty();\r\n        this._valuesDirty = true;\r\n    }\r\n    _markDirtyGroup() {\r\n        this._dataGrouped = false;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtySize() {\r\n        this._sizeDirty = true;\r\n        this.markDirty();\r\n    }\r\n}\r\nObject.defineProperty(Component, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Component\"\r\n});\r\nObject.defineProperty(Component, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: _Container__WEBPACK_IMPORTED_MODULE_1__.Container.classNames.concat([Component.className])\r\n});\r\n//# sourceMappingURL=Component.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/Component.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/Container.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/core/render/Container.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Container: () => (/* binding */ Container)\n/* harmony export */ });\n/* harmony import */ var _util_Children__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/Children */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Children.js\");\n/* harmony import */ var _util_Percent__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../util/Percent */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Percent.js\");\n/* harmony import */ var _Sprite__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Sprite */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/Sprite.js\");\n/* harmony import */ var _Rectangle__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Rectangle */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/Rectangle.js\");\n/* harmony import */ var _HorizontalLayout__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./HorizontalLayout */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/HorizontalLayout.js\");\n/* harmony import */ var _VerticalLayout__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./VerticalLayout */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/VerticalLayout.js\");\n/* harmony import */ var _GridLayout__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./GridLayout */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/GridLayout.js\");\n/* harmony import */ var _util_PopulateString__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../util/PopulateString */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/PopulateString.js\");\n/* harmony import */ var _util_Array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/Array */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Array.js\");\n/* harmony import */ var _util_Type__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../util/Type */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Type.js\");\n/* harmony import */ var _util_Utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../util/Utils */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Utils.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * A basic element that can have child elements, maintain their layout, and\r\n * have a background.\r\n *\r\n * It can have any [[Sprite]] element as a child, from very basic shapes, to\r\n * full-fledged charts.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/} for more info\r\n * @important\r\n */\r\nclass Container extends _Sprite__WEBPACK_IMPORTED_MODULE_0__.Sprite {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_display\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeContainer()\r\n        });\r\n        Object.defineProperty(this, \"_childrenDisplay\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeContainer()\r\n        });\r\n        /**\r\n         * List of Container's child elements.\r\n         */\r\n        Object.defineProperty(this, \"children\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new _util_Children__WEBPACK_IMPORTED_MODULE_1__.Children(this)\r\n        });\r\n        Object.defineProperty(this, \"_percentageSizeChildren\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_percentagePositionChildren\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_prevWidth\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_prevHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_contentWidth\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_contentHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_contentMask\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_vsbd0\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_vsbd1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._display.addChild(this._childrenDisplay);\r\n    }\r\n    _dispose() {\r\n        _util_Array__WEBPACK_IMPORTED_MODULE_2__.eachReverse(this.allChildren(), (child) => {\r\n            child.dispose();\r\n        });\r\n        if (this.getPrivate(\"htmlElement\")) {\r\n            this._root._removeHTMLContent(this);\r\n        }\r\n        super._dispose();\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this.isDirty(\"interactiveChildren\")) {\r\n            this._display.interactiveChildren = this.get(\"interactiveChildren\", false);\r\n        }\r\n        if (this.isDirty(\"layout\")) {\r\n            this._prevWidth = 0;\r\n            this._prevHeight = 0;\r\n            this.markDirtyBounds();\r\n            if (this._prevSettings.layout) {\r\n                this.children.each((child) => {\r\n                    child.removePrivate(\"x\");\r\n                    child.removePrivate(\"y\");\r\n                });\r\n            }\r\n        }\r\n        if (this.isDirty(\"paddingTop\") || this.isDirty(\"paddingBottom\") || this.isDirty(\"paddingLeft\") || this.isDirty(\"paddingRight\")) {\r\n            this.children.each((child) => {\r\n                child.markDirtyPosition();\r\n            });\r\n        }\r\n        if (this.isDirty(\"maskContent\")) {\r\n            const childrenDisplay = this._childrenDisplay;\r\n            let contentMask = this._contentMask;\r\n            if (this.get(\"maskContent\")) {\r\n                if (!contentMask) {\r\n                    contentMask = _Rectangle__WEBPACK_IMPORTED_MODULE_3__.Rectangle.new(this._root, {\r\n                        x: -.5,\r\n                        y: -.5,\r\n                        width: this.width() + 1,\r\n                        height: this.height() + 1\r\n                    });\r\n                    this._contentMask = contentMask;\r\n                    childrenDisplay.addChildAt(contentMask._display, 0);\r\n                    childrenDisplay.mask = contentMask._display;\r\n                }\r\n            }\r\n            else {\r\n                if (contentMask) {\r\n                    childrenDisplay.removeChild(contentMask._display);\r\n                    childrenDisplay.mask = null;\r\n                    contentMask.dispose();\r\n                    this._contentMask = undefined;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _updateSize() {\r\n        super._updateSize();\r\n        _util_Array__WEBPACK_IMPORTED_MODULE_2__.each(this._percentageSizeChildren, (child) => {\r\n            child._updateSize();\r\n        });\r\n        _util_Array__WEBPACK_IMPORTED_MODULE_2__.each(this._percentagePositionChildren, (child) => {\r\n            child.markDirtyPosition();\r\n            child._updateSize();\r\n        });\r\n        this.updateBackground();\r\n    }\r\n    updateBackground() {\r\n        const background = this.get(\"background\");\r\n        let bounds = this._localBounds;\r\n        if (bounds && !this.isHidden()) {\r\n            let x = bounds.left;\r\n            let y = bounds.top;\r\n            let w = bounds.right - x;\r\n            let h = bounds.bottom - y;\r\n            let maxWidth = this.get(\"maxWidth\");\r\n            let maxHeight = this.get(\"maxHeight\");\r\n            if (maxHeight) {\r\n                if (h > maxHeight) {\r\n                    h = maxHeight;\r\n                }\r\n            }\r\n            if (maxWidth) {\r\n                if (w > maxWidth) {\r\n                    w = maxWidth;\r\n                }\r\n            }\r\n            let width = this.width();\r\n            let height = this.height();\r\n            if (background) {\r\n                background.setAll({ width: w, height: h, x: x, y: y });\r\n                if (this._display.interactive) {\r\n                    background._display.interactive = true;\r\n                }\r\n            }\r\n            const contentMask = this._contentMask;\r\n            if (contentMask) {\r\n                contentMask.setAll({ width: width + 1, height: height + 1 });\r\n            }\r\n            const verticalScrollbar = this.get(\"verticalScrollbar\");\r\n            if (verticalScrollbar) {\r\n                verticalScrollbar.set(\"height\", height);\r\n                verticalScrollbar.set(\"x\", width - verticalScrollbar.width() - verticalScrollbar.get(\"marginRight\", 0));\r\n                verticalScrollbar.set(\"end\", verticalScrollbar.get(\"start\", 0) + height / this._contentHeight);\r\n                const bg = verticalScrollbar.get(\"background\");\r\n                if (bg) {\r\n                    bg.setAll({ width: verticalScrollbar.width(), height: height });\r\n                }\r\n                let visible = true;\r\n                if (this._contentHeight <= height) {\r\n                    visible = false;\r\n                }\r\n                verticalScrollbar.setPrivate(\"visible\", visible);\r\n            }\r\n        }\r\n    }\r\n    _applyThemes(force = false) {\r\n        if (super._applyThemes(force)) {\r\n            this.eachChildren((child) => {\r\n                child._applyThemes(force);\r\n            });\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    _applyState(name) {\r\n        super._applyState(name);\r\n        if (this.get(\"setStateOnChildren\")) {\r\n            this.eachChildren((child) => {\r\n                child.states.apply(name);\r\n            });\r\n        }\r\n    }\r\n    _applyStateAnimated(name, duration) {\r\n        super._applyStateAnimated(name, duration);\r\n        if (this.get(\"setStateOnChildren\")) {\r\n            this.eachChildren((child) => {\r\n                child.states.applyAnimate(name, duration);\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Returns container's inner width (width without padding) in pixels.\r\n     *\r\n     * @return Inner width (px)\r\n     */\r\n    innerWidth() {\r\n        return this.width() - this.get(\"paddingRight\", 0) - this.get(\"paddingLeft\", 0);\r\n    }\r\n    /**\r\n     * Returns container's inner height (height without padding) in pixels.\r\n     *\r\n     * @return Inner height (px)\r\n     */\r\n    innerHeight() {\r\n        return this.height() - this.get(\"paddingTop\", 0) - this.get(\"paddingBottom\", 0);\r\n    }\r\n    _getBounds() {\r\n        if (!this.get(\"html\")) {\r\n            let width = this.get(\"width\");\r\n            let height = this.get(\"height\");\r\n            let pWidth = this.getPrivate(\"width\");\r\n            let pHeight = this.getPrivate(\"height\");\r\n            let bounds = {\r\n                left: 0,\r\n                top: 0,\r\n                right: this.width(),\r\n                bottom: this.height()\r\n            };\r\n            let layout = this.get(\"layout\");\r\n            let horizontal = false;\r\n            let vertical = false;\r\n            if (layout instanceof _HorizontalLayout__WEBPACK_IMPORTED_MODULE_4__.HorizontalLayout || layout instanceof _GridLayout__WEBPACK_IMPORTED_MODULE_5__.GridLayout) {\r\n                horizontal = true;\r\n            }\r\n            if (layout instanceof _VerticalLayout__WEBPACK_IMPORTED_MODULE_6__.VerticalLayout) {\r\n                vertical = true;\r\n            }\r\n            if ((width != null || pWidth != null) && (height != null || pHeight != null) && !this.get(\"verticalScrollbar\")) {\r\n                // void\r\n            }\r\n            else {\r\n                let m = Number.MAX_VALUE;\r\n                let l = m;\r\n                let r = -m;\r\n                let t = m;\r\n                let b = -m;\r\n                const paddingLeft = this.get(\"paddingLeft\", 0);\r\n                const paddingTop = this.get(\"paddingTop\", 0);\r\n                const paddingRight = this.get(\"paddingRight\", 0);\r\n                const paddingBottom = this.get(\"paddingBottom\", 0);\r\n                this.children.each((child) => {\r\n                    if (child.get(\"position\") != \"absolute\" && child.get(\"isMeasured\")) {\r\n                        let childBounds = child.adjustedLocalBounds();\r\n                        let childX = child.x();\r\n                        let childY = child.y();\r\n                        let cl = childX + childBounds.left;\r\n                        let cr = childX + childBounds.right;\r\n                        let ct = childY + childBounds.top;\r\n                        let cb = childY + childBounds.bottom;\r\n                        if (horizontal) {\r\n                            cl -= child.get(\"marginLeft\", 0);\r\n                            cr += child.get(\"marginRight\", 0);\r\n                        }\r\n                        if (vertical) {\r\n                            ct -= child.get(\"marginTop\", 0);\r\n                            cb += child.get(\"marginBottom\", 0);\r\n                        }\r\n                        if (cl < l) {\r\n                            l = cl;\r\n                        }\r\n                        if (cr > r) {\r\n                            r = cr;\r\n                        }\r\n                        if (ct < t) {\r\n                            t = ct;\r\n                        }\r\n                        if (cb > b) {\r\n                            b = cb;\r\n                        }\r\n                    }\r\n                });\r\n                if (l == m) {\r\n                    l = 0;\r\n                }\r\n                if (r == -m) {\r\n                    r = 0;\r\n                }\r\n                if (t == m) {\r\n                    t = 0;\r\n                }\r\n                if (b == -m) {\r\n                    b = 0;\r\n                }\r\n                bounds.left = l - paddingLeft;\r\n                bounds.top = t - paddingTop;\r\n                bounds.right = r + paddingRight;\r\n                bounds.bottom = b + paddingBottom;\r\n                const minWidth = this.get(\"minWidth\");\r\n                if (_util_Type__WEBPACK_IMPORTED_MODULE_7__.isNumber(minWidth) && minWidth > 0) {\r\n                    if (bounds.right - bounds.left < minWidth) {\r\n                        if (bounds.right >= minWidth) {\r\n                            bounds.left = bounds.right - minWidth;\r\n                        }\r\n                        else {\r\n                            bounds.right = bounds.left + minWidth;\r\n                        }\r\n                    }\r\n                }\r\n                const minHeight = this.get(\"minHeight\");\r\n                if (_util_Type__WEBPACK_IMPORTED_MODULE_7__.isNumber(minHeight) && minHeight > 0) {\r\n                    if (bounds.bottom - bounds.top < minHeight) {\r\n                        if (bounds.bottom >= minHeight) {\r\n                            bounds.top = bounds.bottom - minHeight;\r\n                        }\r\n                        else {\r\n                            bounds.bottom = bounds.top + minHeight;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this._contentWidth = bounds.right - bounds.left;\r\n            this._contentHeight = bounds.bottom - bounds.top;\r\n            if (_util_Type__WEBPACK_IMPORTED_MODULE_7__.isNumber(width)) {\r\n                bounds.left = 0;\r\n                bounds.right = width;\r\n            }\r\n            if (_util_Type__WEBPACK_IMPORTED_MODULE_7__.isNumber(pWidth)) {\r\n                bounds.left = 0;\r\n                bounds.right = pWidth;\r\n            }\r\n            if (_util_Type__WEBPACK_IMPORTED_MODULE_7__.isNumber(height)) {\r\n                bounds.top = 0;\r\n                bounds.bottom = height;\r\n            }\r\n            if (_util_Type__WEBPACK_IMPORTED_MODULE_7__.isNumber(pHeight)) {\r\n                bounds.top = 0;\r\n                bounds.bottom = pHeight;\r\n            }\r\n            this._localBounds = bounds;\r\n        }\r\n        else {\r\n            let bounds = this._localBounds;\r\n            if (bounds) {\r\n                this._contentWidth = bounds.right - bounds.left;\r\n                this._contentHeight = bounds.bottom - bounds.top;\r\n            }\r\n        }\r\n    }\r\n    _updateBounds() {\r\n        const layout = this.get(\"layout\");\r\n        if (layout) {\r\n            layout.updateContainer(this);\r\n        }\r\n        super._updateBounds();\r\n        this.updateBackground();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirty() {\r\n        super.markDirty();\r\n        this._root._addDirtyParent(this);\r\n    }\r\n    _prepareChildren() {\r\n        const innerWidth = this.innerWidth();\r\n        const innerHeight = this.innerHeight();\r\n        if (innerWidth != this._prevWidth || innerHeight != this._prevHeight) {\r\n            let layout = this.get(\"layout\");\r\n            let horizontal = false;\r\n            let vertical = false;\r\n            if (layout) {\r\n                if (layout instanceof _HorizontalLayout__WEBPACK_IMPORTED_MODULE_4__.HorizontalLayout || layout instanceof _GridLayout__WEBPACK_IMPORTED_MODULE_5__.GridLayout) {\r\n                    horizontal = true;\r\n                }\r\n                if (layout instanceof _VerticalLayout__WEBPACK_IMPORTED_MODULE_6__.VerticalLayout) {\r\n                    vertical = true;\r\n                }\r\n            }\r\n            _util_Array__WEBPACK_IMPORTED_MODULE_2__.each(this._percentageSizeChildren, (child) => {\r\n                if (!horizontal) {\r\n                    let width = child.get(\"width\");\r\n                    if (width instanceof _util_Percent__WEBPACK_IMPORTED_MODULE_8__.Percent) {\r\n                        child.setPrivate(\"width\", width.value * innerWidth);\r\n                    }\r\n                }\r\n                if (!vertical) {\r\n                    let height = child.get(\"height\");\r\n                    if (height instanceof _util_Percent__WEBPACK_IMPORTED_MODULE_8__.Percent) {\r\n                        child.setPrivate(\"height\", height.value * innerHeight);\r\n                    }\r\n                }\r\n            });\r\n            _util_Array__WEBPACK_IMPORTED_MODULE_2__.each(this._percentagePositionChildren, (child) => {\r\n                child.markDirtyPosition();\r\n                child.markDirtyBounds();\r\n            });\r\n            this._prevWidth = innerWidth;\r\n            this._prevHeight = innerHeight;\r\n            this._sizeDirty = true;\r\n            this.updateBackground();\r\n        }\r\n        this._handleStates();\r\n    }\r\n    _updateHTMLContent() {\r\n        const html = this.get(\"html\", \"\");\r\n        if (html && html !== \"\") {\r\n            this._root._setHTMLContent(this, (0,_util_PopulateString__WEBPACK_IMPORTED_MODULE_9__.populateString)(this, html));\r\n        }\r\n        else {\r\n            this._root._removeHTMLContent(this);\r\n        }\r\n        this._root._positionHTMLElement(this);\r\n    }\r\n    /**\r\n     * If scrolling is enabled on the Container (by adding `verticalScrollbar`)\r\n     * the Container will scroll in such way so that target element becomes\r\n     * visible if its currently outside of view.\r\n     *\r\n     * @param  child  Target child\r\n     * @since 5.10.5\r\n     */\r\n    scrollToChild(child) {\r\n        const verticalScrollbar = this.get(\"verticalScrollbar\");\r\n        if (verticalScrollbar) {\r\n            let y = child.y();\r\n            let h = this.innerHeight();\r\n            let ch = child.height();\r\n            let contentH = this._contentHeight;\r\n            let max = 1 - (h - ch / 2) / contentH;\r\n            if (y + ch * .7 + this._childrenDisplay.y > h || y - ch * .3 + this._childrenDisplay.y < 0) {\r\n                let pos = Math.max(0, Math.min(max, (y - ch / 2) / contentH));\r\n                verticalScrollbar.animate({ key: \"start\", to: pos, duration: verticalScrollbar.get(\"animationDuration\", 0), easing: verticalScrollbar.get(\"animationEasing\") });\r\n            }\r\n        }\r\n    }\r\n    _updateChildren() {\r\n        if (this.isDirty(\"html\")) {\r\n            this._updateHTMLContent();\r\n        }\r\n        if (this.isDirty(\"verticalScrollbar\")) {\r\n            const verticalScrollbar = this.get(\"verticalScrollbar\");\r\n            if (verticalScrollbar) {\r\n                verticalScrollbar._setParent(this);\r\n                verticalScrollbar.startGrip.setPrivate(\"visible\", false);\r\n                verticalScrollbar.endGrip.setPrivate(\"visible\", false);\r\n                this.set(\"maskContent\", true);\r\n                this.set(\"paddingRight\", verticalScrollbar.width() + verticalScrollbar.get(\"marginRight\", 0) + verticalScrollbar.get(\"marginLeft\", 0));\r\n                let background = this.get(\"background\");\r\n                if (!background) {\r\n                    background = this.set(\"background\", _Rectangle__WEBPACK_IMPORTED_MODULE_3__.Rectangle.new(this._root, {\r\n                        themeTags: [\"background\"],\r\n                        fillOpacity: 0,\r\n                        fill: this._root.interfaceColors.get(\"alternativeBackground\")\r\n                    }));\r\n                }\r\n                this._vsbd0 = this.events.on(\"wheel\", (event) => {\r\n                    const wheelEvent = event.originalEvent;\r\n                    // Ignore wheel event if it is happening on a non-chart element, e.g. if\r\n                    // some page element is over the chart.\r\n                    if (_util_Utils__WEBPACK_IMPORTED_MODULE_10__.isLocalEvent(wheelEvent, this)) {\r\n                        wheelEvent.preventDefault();\r\n                    }\r\n                    else {\r\n                        return;\r\n                    }\r\n                    let shiftY = wheelEvent.deltaY / 5000;\r\n                    const start = verticalScrollbar.get(\"start\", 0);\r\n                    const end = verticalScrollbar.get(\"end\", 1);\r\n                    if (start + shiftY <= 0) {\r\n                        shiftY = -start;\r\n                    }\r\n                    if (end + shiftY >= 1) {\r\n                        shiftY = 1 - end;\r\n                    }\r\n                    if (start + shiftY >= 0 && end + shiftY <= 1) {\r\n                        verticalScrollbar.set(\"start\", start + shiftY);\r\n                        verticalScrollbar.set(\"end\", end + shiftY);\r\n                    }\r\n                });\r\n                this._disposers.push(this._vsbd0);\r\n                this._vsbd1 = verticalScrollbar.events.on(\"rangechanged\", () => {\r\n                    let h = this._contentHeight;\r\n                    const childrenDisplay = this._childrenDisplay;\r\n                    const contentMask = this._contentMask;\r\n                    childrenDisplay.y = -verticalScrollbar.get(\"start\", 0) * h;\r\n                    childrenDisplay.markDirtyLayer();\r\n                    if (contentMask) {\r\n                        contentMask._display.y = -childrenDisplay.y;\r\n                        childrenDisplay.mask = contentMask._display;\r\n                    }\r\n                });\r\n                this._disposers.push(this._vsbd1);\r\n                this._display.addChild(verticalScrollbar._display);\r\n            }\r\n            else {\r\n                const previous = this._prevSettings.verticalScrollbar;\r\n                if (previous) {\r\n                    this._display.removeChild(previous._display);\r\n                    if (this._vsbd0) {\r\n                        this._vsbd0.dispose();\r\n                    }\r\n                    if (this._vsbd1) {\r\n                        this._vsbd1.dispose();\r\n                    }\r\n                    const childrenDisplay = this._childrenDisplay;\r\n                    childrenDisplay.y = 0;\r\n                    this.setPrivate(\"height\", undefined);\r\n                    this.set(\"maskContent\", false);\r\n                    this.set(\"paddingRight\", undefined);\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"background\")) {\r\n            // TODO maybe this should dispose ?\r\n            const previous = this._prevSettings[\"background\"];\r\n            if (previous) {\r\n                this._display.removeChild(previous._display);\r\n            }\r\n            const background = this.get(\"background\");\r\n            if (background instanceof _Sprite__WEBPACK_IMPORTED_MODULE_0__.Sprite) {\r\n                background.set(\"isMeasured\", false);\r\n                background._setParent(this);\r\n                this._display.addChildAt(background._display, 0);\r\n            }\r\n        }\r\n        if (this.isDirty(\"mask\")) {\r\n            const mask = this.get(\"mask\");\r\n            const previous = this._prevSettings[\"mask\"];\r\n            if (previous) {\r\n                this._display.removeChild(previous._display);\r\n                if (previous != mask) {\r\n                    previous.dispose();\r\n                }\r\n            }\r\n            if (mask) {\r\n                const parent = mask.parent;\r\n                if (parent) {\r\n                    parent.children.removeValue(mask);\r\n                }\r\n                mask._setParent(this);\r\n                this._display.addChildAt(mask._display, 0);\r\n                this._childrenDisplay.mask = mask._display;\r\n            }\r\n        }\r\n    }\r\n    _processTemplateField() {\r\n        super._processTemplateField();\r\n        this.children.each((child) => {\r\n            child._processTemplateField();\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    walkChildren(f) {\r\n        this.children.each((child) => {\r\n            if (child instanceof Container) {\r\n                child.walkChildren(f);\r\n            }\r\n            f(child);\r\n        });\r\n    }\r\n    eachChildren(f) {\r\n        const background = this.get(\"background\");\r\n        if (background) {\r\n            f(background);\r\n        }\r\n        const verticalScrollbar = this.get(\"verticalScrollbar\");\r\n        if (verticalScrollbar) {\r\n            f(verticalScrollbar);\r\n        }\r\n        const mask = this.get(\"mask\");\r\n        if (mask) {\r\n            f(mask);\r\n        }\r\n        this.children.values.forEach((child) => {\r\n            f(child);\r\n        });\r\n    }\r\n    allChildren() {\r\n        const output = [];\r\n        this.eachChildren((x) => {\r\n            output.push(x);\r\n        });\r\n        return output;\r\n    }\r\n    _setDataItem(dataItem) {\r\n        const updated = (dataItem !== this._dataItem);\r\n        super._setDataItem(dataItem);\r\n        const html = this.get(\"html\", \"\");\r\n        if (html && html !== \"\" && updated) {\r\n            this._root._setHTMLContent(this, (0,_util_PopulateString__WEBPACK_IMPORTED_MODULE_9__.populateString)(this, html));\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Container, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Container\"\r\n});\r\nObject.defineProperty(Container, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: _Sprite__WEBPACK_IMPORTED_MODULE_0__.Sprite.classNames.concat([Container.className])\r\n});\r\n//# sourceMappingURL=Container.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/Container.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/Graphics.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/core/render/Graphics.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Graphics: () => (/* binding */ Graphics),\n/* harmony export */   visualSettings: () => (/* binding */ visualSettings)\n/* harmony export */ });\n/* harmony import */ var _render_patterns_PicturePattern__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../render/patterns/PicturePattern */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/patterns/PicturePattern.js\");\n/* harmony import */ var _Sprite__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Sprite */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/Sprite.js\");\n/* harmony import */ var _backend_Renderer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./backend/Renderer */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/backend/Renderer.js\");\n/* harmony import */ var _util_Type__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/Type */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Type.js\");\n/* harmony import */ var _util_Array__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/Array */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Array.js\");\n\r\n\r\n\r\n\r\n\r\nconst visualSettings = [\"fill\", \"fillOpacity\", \"stroke\", \"strokeWidth\", \"strokeOpacity\", \"fillPattern\", \"strokePattern\", \"fillGradient\", \"strokeGradient\", \"strokeDasharray\", \"strokeDashoffset\", \"shadowBlur\", \"shadowColor\", \"shadowOpacity\", \"shadowOffsetX\", \"shadowOffsetY\", \"blur\", \"sepia\", \"invert\", \"brightness\", \"hue\", \"contrast\", \"saturate\"];\r\n/**\r\n * Base class used for drawing shapes.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nclass Graphics extends _Sprite__WEBPACK_IMPORTED_MODULE_0__.Sprite {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_display\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeGraphics()\r\n        });\r\n        Object.defineProperty(this, \"_clear\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"draw\") || this.isDirty(\"svgPath\")) {\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"fill\") || this.isDirty(\"stroke\") || this.isDirty(\"visible\") || this.isDirty(\"forceHidden\") || this.isDirty(\"scale\") || this.isDirty(\"fillGradient\") || this.isDirty(\"strokeGradient\") || this.isDirty(\"fillPattern\") || this.isDirty(\"strokePattern\") || this.isDirty(\"fillOpacity\") || this.isDirty(\"strokeOpacity\") || this.isDirty(\"strokeWidth\") || this.isDirty(\"draw\") || this.isDirty(\"blendMode\") || this.isDirty(\"strokeDasharray\") || this.isDirty(\"strokeDashoffset\") || this.isDirty(\"svgPath\") || this.isDirty(\"lineJoin\") || this.isDirty(\"lineCap\") || this.isDirty(\"shadowColor\") || this.isDirty(\"shadowBlur\") || this.isDirty(\"shadowOffsetX\") || this.isDirty(\"shadowOffsetY\")) {\r\n            this._clear = true;\r\n        }\r\n        this._display.crisp = this.get(\"crisp\", false);\r\n        if (this.isDirty(\"fillGradient\")) {\r\n            const gradient = this.get(\"fillGradient\");\r\n            if (gradient) {\r\n                this._display.isMeasured = true;\r\n                const gradientTarget = gradient.get(\"target\");\r\n                if (gradientTarget) {\r\n                    this._disposers.push(gradientTarget.events.on(\"boundschanged\", () => {\r\n                        this._markDirtyKey(\"fill\");\r\n                    }));\r\n                    this._disposers.push(gradientTarget.events.on(\"positionchanged\", () => {\r\n                        this._markDirtyKey(\"fill\");\r\n                    }));\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"strokeGradient\")) {\r\n            const gradient = this.get(\"strokeGradient\");\r\n            if (gradient) {\r\n                this._display.isMeasured = true;\r\n                const gradientTarget = gradient.get(\"target\");\r\n                if (gradientTarget) {\r\n                    this._disposers.push(gradientTarget.events.on(\"boundschanged\", () => {\r\n                        this._markDirtyKey(\"stroke\");\r\n                    }));\r\n                    this._disposers.push(gradientTarget.events.on(\"positionchanged\", () => {\r\n                        this._markDirtyKey(\"stroke\");\r\n                    }));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            this.markDirtyBounds();\r\n            this.markDirtyLayer();\r\n            this._display.clear();\r\n            let strokeDasharray = this.get(\"strokeDasharray\");\r\n            if (_util_Type__WEBPACK_IMPORTED_MODULE_1__.isNumber(strokeDasharray)) {\r\n                if (strokeDasharray < 0.5) {\r\n                    strokeDasharray = [0];\r\n                }\r\n                else {\r\n                    strokeDasharray = [strokeDasharray];\r\n                }\r\n            }\r\n            this._display.setLineDash(strokeDasharray);\r\n            const strokeDashoffset = this.get(\"strokeDashoffset\");\r\n            if (strokeDashoffset) {\r\n                this._display.setLineDashOffset(strokeDashoffset);\r\n            }\r\n            const blendMode = this.get(\"blendMode\", _backend_Renderer__WEBPACK_IMPORTED_MODULE_2__.BlendMode.NORMAL);\r\n            this._display.blendMode = blendMode;\r\n            const draw = this.get(\"draw\");\r\n            if (draw && typeof draw === \"function\") {\r\n                draw(this._display, this);\r\n            }\r\n            const svgPath = this.get(\"svgPath\");\r\n            if (svgPath != null) {\r\n                this._display.svgPath(svgPath);\r\n            }\r\n        }\r\n    }\r\n    _afterChanged() {\r\n        super._afterChanged();\r\n        if (this._clear) {\r\n            const fill = this.get(\"fill\");\r\n            const fillGradient = this.get(\"fillGradient\");\r\n            const fillPattern = this.get(\"fillPattern\");\r\n            const fillOpacity = this.get(\"fillOpacity\");\r\n            const stroke = this.get(\"stroke\");\r\n            const strokeGradient = this.get(\"strokeGradient\");\r\n            const strokePattern = this.get(\"strokePattern\");\r\n            const shadowColor = this.get(\"shadowColor\");\r\n            const shadowBlur = this.get(\"shadowBlur\");\r\n            const shadowOffsetX = this.get(\"shadowOffsetX\");\r\n            const shadowOffsetY = this.get(\"shadowOffsetY\");\r\n            const shadowOpacity = this.get(\"shadowOpacity\");\r\n            if (shadowColor && (shadowBlur || shadowOffsetX || shadowOffsetY)) {\r\n                this._display.shadow(shadowColor, shadowBlur, shadowOffsetX, shadowOffsetY, shadowOpacity);\r\n            }\r\n            if (fill && !fillGradient) {\r\n                this._display.beginFill(fill, fillOpacity);\r\n                this._display.endFill();\r\n            }\r\n            if (fillGradient) {\r\n                if (fill) {\r\n                    const stops = fillGradient.get(\"stops\", []);\r\n                    if (stops.length) {\r\n                        _util_Array__WEBPACK_IMPORTED_MODULE_3__.each(stops, (stop) => {\r\n                            if ((!stop.color || stop.colorInherited) && fill) {\r\n                                stop.color = fill;\r\n                                stop.colorInherited = true;\r\n                            }\r\n                            if (stop.opacity == null || stop.opacityInherited) {\r\n                                stop.opacity = fillOpacity;\r\n                                stop.opacityInherited = true;\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                const gradient = fillGradient.getFill(this);\r\n                if (gradient) {\r\n                    this._display.beginFill(gradient, fillOpacity);\r\n                    this._display.endFill();\r\n                }\r\n            }\r\n            if (fillPattern) {\r\n                const pattern = fillPattern.pattern;\r\n                if (pattern) {\r\n                    this._display.beginFill(pattern, fillOpacity);\r\n                    this._display.endFill();\r\n                    if (fillPattern instanceof _render_patterns_PicturePattern__WEBPACK_IMPORTED_MODULE_4__.PicturePattern) {\r\n                        fillPattern.events.once(\"loaded\", () => {\r\n                            this._clear = true;\r\n                            this.markDirty();\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            if (stroke || strokeGradient || strokePattern) {\r\n                const strokeOpacity = this.get(\"strokeOpacity\");\r\n                let strokeWidth = this.get(\"strokeWidth\", 1);\r\n                if (this.get(\"nonScalingStroke\")) {\r\n                    strokeWidth = strokeWidth / this.get(\"scale\", 1);\r\n                }\r\n                if (this.get(\"crisp\")) {\r\n                    strokeWidth /= this._root._renderer.resolution;\r\n                }\r\n                const lineJoin = this.get(\"lineJoin\");\r\n                const lineCap = this.get(\"lineCap\");\r\n                if (stroke && !strokeGradient) {\r\n                    this._display.lineStyle(strokeWidth, stroke, strokeOpacity, lineJoin, lineCap);\r\n                    this._display.endStroke();\r\n                }\r\n                if (strokeGradient) {\r\n                    const stops = strokeGradient.get(\"stops\", []);\r\n                    if (stops.length) {\r\n                        _util_Array__WEBPACK_IMPORTED_MODULE_3__.each(stops, (stop) => {\r\n                            if ((!stop.color || stop.colorInherited) && stroke) {\r\n                                stop.color = stroke;\r\n                                stop.colorInherited = true;\r\n                            }\r\n                            if (stop.opacity == null || stop.opacityInherited) {\r\n                                stop.opacity = strokeOpacity;\r\n                                stop.opacityInherited = true;\r\n                            }\r\n                        });\r\n                    }\r\n                    const gradient = strokeGradient.getFill(this);\r\n                    if (gradient) {\r\n                        this._display.lineStyle(strokeWidth, gradient, strokeOpacity, lineJoin, lineCap);\r\n                        this._display.endStroke();\r\n                    }\r\n                }\r\n                if (strokePattern) {\r\n                    /*\r\n                    let changed = false;\r\n                    \r\n                    if (stroke && (!strokePattern.get(\"color\") || strokePattern.get(\"colorInherited\"))) {\r\n                        strokePattern.set(\"color\", stroke);\r\n                        strokePattern.set(\"colorInherited\", true);\r\n                        changed = true;\r\n                    }\r\n                    if (changed) {\r\n                        // @todo: is this OK?\r\n                        strokePattern._changed();\r\n                    }\r\n                    */\r\n                    let pattern = strokePattern.pattern;\r\n                    if (pattern) {\r\n                        this._display.lineStyle(strokeWidth, pattern, strokeOpacity, lineJoin, lineCap);\r\n                        this._display.endStroke();\r\n                        if (strokePattern instanceof _render_patterns_PicturePattern__WEBPACK_IMPORTED_MODULE_4__.PicturePattern) {\r\n                            strokePattern.events.once(\"loaded\", () => {\r\n                                this._clear = true;\r\n                                this.markDirty();\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (this.getPrivate(\"showingTooltip\")) {\r\n                this.showTooltip();\r\n            }\r\n        }\r\n        this._clear = false;\r\n    }\r\n}\r\nObject.defineProperty(Graphics, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Graphics\"\r\n});\r\nObject.defineProperty(Graphics, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: _Sprite__WEBPACK_IMPORTED_MODULE_0__.Sprite.classNames.concat([Graphics.className])\r\n});\r\n//# sourceMappingURL=Graphics.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNS8uaW50ZXJuYWwvY29yZS9yZW5kZXIvR3JhcGhpY3MuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFtRTtBQUNqQztBQUNhO0FBQ1Q7QUFDRTtBQUNqQztBQUNQO0FBQ0E7QUFDQTtBQUNBLFNBQVMsMkVBQTJFO0FBQ3BGO0FBQ0E7QUFDTyx1QkFBdUIsMkNBQU07QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixnREFBYztBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvREFBb0Qsd0RBQVM7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsNkNBQVc7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtDQUErQywyRUFBYztBQUM3RDtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLDZDQUFXO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxREFBcUQsMkVBQWM7QUFDbkU7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVywyQ0FBTTtBQUNqQixDQUFDO0FBQ0QiLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3Jrc3BhY2Uvbm9kZV9tb2R1bGVzL0BhbWNoYXJ0cy9hbWNoYXJ0czUvLmludGVybmFsL2NvcmUvcmVuZGVyL0dyYXBoaWNzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBpY3R1cmVQYXR0ZXJuIH0gZnJvbSBcIi4uL3JlbmRlci9wYXR0ZXJucy9QaWN0dXJlUGF0dGVyblwiO1xyXG5pbXBvcnQgeyBTcHJpdGUgfSBmcm9tIFwiLi9TcHJpdGVcIjtcclxuaW1wb3J0IHsgQmxlbmRNb2RlIH0gZnJvbSBcIi4vYmFja2VuZC9SZW5kZXJlclwiO1xyXG5pbXBvcnQgKiBhcyAkdHlwZSBmcm9tIFwiLi4vdXRpbC9UeXBlXCI7XHJcbmltcG9ydCAqIGFzICRhcnJheSBmcm9tIFwiLi4vdXRpbC9BcnJheVwiO1xyXG5leHBvcnQgY29uc3QgdmlzdWFsU2V0dGluZ3MgPSBbXCJmaWxsXCIsIFwiZmlsbE9wYWNpdHlcIiwgXCJzdHJva2VcIiwgXCJzdHJva2VXaWR0aFwiLCBcInN0cm9rZU9wYWNpdHlcIiwgXCJmaWxsUGF0dGVyblwiLCBcInN0cm9rZVBhdHRlcm5cIiwgXCJmaWxsR3JhZGllbnRcIiwgXCJzdHJva2VHcmFkaWVudFwiLCBcInN0cm9rZURhc2hhcnJheVwiLCBcInN0cm9rZURhc2hvZmZzZXRcIiwgXCJzaGFkb3dCbHVyXCIsIFwic2hhZG93Q29sb3JcIiwgXCJzaGFkb3dPcGFjaXR5XCIsIFwic2hhZG93T2Zmc2V0WFwiLCBcInNoYWRvd09mZnNldFlcIiwgXCJibHVyXCIsIFwic2VwaWFcIiwgXCJpbnZlcnRcIiwgXCJicmlnaHRuZXNzXCIsIFwiaHVlXCIsIFwiY29udHJhc3RcIiwgXCJzYXR1cmF0ZVwiXTtcclxuLyoqXHJcbiAqIEJhc2UgY2xhc3MgdXNlZCBmb3IgZHJhd2luZyBzaGFwZXMuXHJcbiAqXHJcbiAqIEBzZWUge0BsaW5rIGh0dHBzOi8vd3d3LmFtY2hhcnRzLmNvbS9kb2NzL3Y1L2NvbmNlcHRzL2NvbW1vbi1lbGVtZW50cy9ncmFwaGljcy99IGZvciBtb3JlIGluZm9cclxuICogQGltcG9ydGFudFxyXG4gKi9cclxuZXhwb3J0IGNsYXNzIEdyYXBoaWNzIGV4dGVuZHMgU3ByaXRlIHtcclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XHJcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiX2Rpc3BsYXlcIiwge1xyXG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXHJcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxyXG4gICAgICAgICAgICB2YWx1ZTogdGhpcy5fcm9vdC5fcmVuZGVyZXIubWFrZUdyYXBoaWNzKClcclxuICAgICAgICB9KTtcclxuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJfY2xlYXJcIiwge1xyXG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXHJcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxyXG4gICAgICAgICAgICB2YWx1ZTogZmFsc2VcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIF9iZWZvcmVDaGFuZ2VkKCkge1xyXG4gICAgICAgIHN1cGVyLl9iZWZvcmVDaGFuZ2VkKCk7XHJcbiAgICAgICAgaWYgKHRoaXMuaXNEaXJ0eShcImRyYXdcIikgfHwgdGhpcy5pc0RpcnR5KFwic3ZnUGF0aFwiKSkge1xyXG4gICAgICAgICAgICB0aGlzLm1hcmtEaXJ0eUJvdW5kcygpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAodGhpcy5pc0RpcnR5KFwiZmlsbFwiKSB8fCB0aGlzLmlzRGlydHkoXCJzdHJva2VcIikgfHwgdGhpcy5pc0RpcnR5KFwidmlzaWJsZVwiKSB8fCB0aGlzLmlzRGlydHkoXCJmb3JjZUhpZGRlblwiKSB8fCB0aGlzLmlzRGlydHkoXCJzY2FsZVwiKSB8fCB0aGlzLmlzRGlydHkoXCJmaWxsR3JhZGllbnRcIikgfHwgdGhpcy5pc0RpcnR5KFwic3Ryb2tlR3JhZGllbnRcIikgfHwgdGhpcy5pc0RpcnR5KFwiZmlsbFBhdHRlcm5cIikgfHwgdGhpcy5pc0RpcnR5KFwic3Ryb2tlUGF0dGVyblwiKSB8fCB0aGlzLmlzRGlydHkoXCJmaWxsT3BhY2l0eVwiKSB8fCB0aGlzLmlzRGlydHkoXCJzdHJva2VPcGFjaXR5XCIpIHx8IHRoaXMuaXNEaXJ0eShcInN0cm9rZVdpZHRoXCIpIHx8IHRoaXMuaXNEaXJ0eShcImRyYXdcIikgfHwgdGhpcy5pc0RpcnR5KFwiYmxlbmRNb2RlXCIpIHx8IHRoaXMuaXNEaXJ0eShcInN0cm9rZURhc2hhcnJheVwiKSB8fCB0aGlzLmlzRGlydHkoXCJzdHJva2VEYXNob2Zmc2V0XCIpIHx8IHRoaXMuaXNEaXJ0eShcInN2Z1BhdGhcIikgfHwgdGhpcy5pc0RpcnR5KFwibGluZUpvaW5cIikgfHwgdGhpcy5pc0RpcnR5KFwibGluZUNhcFwiKSB8fCB0aGlzLmlzRGlydHkoXCJzaGFkb3dDb2xvclwiKSB8fCB0aGlzLmlzRGlydHkoXCJzaGFkb3dCbHVyXCIpIHx8IHRoaXMuaXNEaXJ0eShcInNoYWRvd09mZnNldFhcIikgfHwgdGhpcy5pc0RpcnR5KFwic2hhZG93T2Zmc2V0WVwiKSkge1xyXG4gICAgICAgICAgICB0aGlzLl9jbGVhciA9IHRydWU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuX2Rpc3BsYXkuY3Jpc3AgPSB0aGlzLmdldChcImNyaXNwXCIsIGZhbHNlKTtcclxuICAgICAgICBpZiAodGhpcy5pc0RpcnR5KFwiZmlsbEdyYWRpZW50XCIpKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGdyYWRpZW50ID0gdGhpcy5nZXQoXCJmaWxsR3JhZGllbnRcIik7XHJcbiAgICAgICAgICAgIGlmIChncmFkaWVudCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fZGlzcGxheS5pc01lYXN1cmVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGdyYWRpZW50VGFyZ2V0ID0gZ3JhZGllbnQuZ2V0KFwidGFyZ2V0XCIpO1xyXG4gICAgICAgICAgICAgICAgaWYgKGdyYWRpZW50VGFyZ2V0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fZGlzcG9zZXJzLnB1c2goZ3JhZGllbnRUYXJnZXQuZXZlbnRzLm9uKFwiYm91bmRzY2hhbmdlZFwiLCAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX21hcmtEaXJ0eUtleShcImZpbGxcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgfSkpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2Rpc3Bvc2Vycy5wdXNoKGdyYWRpZW50VGFyZ2V0LmV2ZW50cy5vbihcInBvc2l0aW9uY2hhbmdlZFwiLCAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX21hcmtEaXJ0eUtleShcImZpbGxcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgfSkpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICh0aGlzLmlzRGlydHkoXCJzdHJva2VHcmFkaWVudFwiKSkge1xyXG4gICAgICAgICAgICBjb25zdCBncmFkaWVudCA9IHRoaXMuZ2V0KFwic3Ryb2tlR3JhZGllbnRcIik7XHJcbiAgICAgICAgICAgIGlmIChncmFkaWVudCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fZGlzcGxheS5pc01lYXN1cmVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGdyYWRpZW50VGFyZ2V0ID0gZ3JhZGllbnQuZ2V0KFwidGFyZ2V0XCIpO1xyXG4gICAgICAgICAgICAgICAgaWYgKGdyYWRpZW50VGFyZ2V0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fZGlzcG9zZXJzLnB1c2goZ3JhZGllbnRUYXJnZXQuZXZlbnRzLm9uKFwiYm91bmRzY2hhbmdlZFwiLCAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX21hcmtEaXJ0eUtleShcInN0cm9rZVwiKTtcclxuICAgICAgICAgICAgICAgICAgICB9KSk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fZGlzcG9zZXJzLnB1c2goZ3JhZGllbnRUYXJnZXQuZXZlbnRzLm9uKFwicG9zaXRpb25jaGFuZ2VkXCIsICgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fbWFya0RpcnR5S2V5KFwic3Ryb2tlXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0pKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIF9jaGFuZ2VkKCkge1xyXG4gICAgICAgIHN1cGVyLl9jaGFuZ2VkKCk7XHJcbiAgICAgICAgaWYgKHRoaXMuX2NsZWFyKSB7XHJcbiAgICAgICAgICAgIHRoaXMubWFya0RpcnR5Qm91bmRzKCk7XHJcbiAgICAgICAgICAgIHRoaXMubWFya0RpcnR5TGF5ZXIoKTtcclxuICAgICAgICAgICAgdGhpcy5fZGlzcGxheS5jbGVhcigpO1xyXG4gICAgICAgICAgICBsZXQgc3Ryb2tlRGFzaGFycmF5ID0gdGhpcy5nZXQoXCJzdHJva2VEYXNoYXJyYXlcIik7XHJcbiAgICAgICAgICAgIGlmICgkdHlwZS5pc051bWJlcihzdHJva2VEYXNoYXJyYXkpKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoc3Ryb2tlRGFzaGFycmF5IDwgMC41KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgc3Ryb2tlRGFzaGFycmF5ID0gWzBdO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgc3Ryb2tlRGFzaGFycmF5ID0gW3N0cm9rZURhc2hhcnJheV07XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdGhpcy5fZGlzcGxheS5zZXRMaW5lRGFzaChzdHJva2VEYXNoYXJyYXkpO1xyXG4gICAgICAgICAgICBjb25zdCBzdHJva2VEYXNob2Zmc2V0ID0gdGhpcy5nZXQoXCJzdHJva2VEYXNob2Zmc2V0XCIpO1xyXG4gICAgICAgICAgICBpZiAoc3Ryb2tlRGFzaG9mZnNldCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fZGlzcGxheS5zZXRMaW5lRGFzaE9mZnNldChzdHJva2VEYXNob2Zmc2V0KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjb25zdCBibGVuZE1vZGUgPSB0aGlzLmdldChcImJsZW5kTW9kZVwiLCBCbGVuZE1vZGUuTk9STUFMKTtcclxuICAgICAgICAgICAgdGhpcy5fZGlzcGxheS5ibGVuZE1vZGUgPSBibGVuZE1vZGU7XHJcbiAgICAgICAgICAgIGNvbnN0IGRyYXcgPSB0aGlzLmdldChcImRyYXdcIik7XHJcbiAgICAgICAgICAgIGlmIChkcmF3ICYmIHR5cGVvZiBkcmF3ID09PSBcImZ1bmN0aW9uXCIpIHtcclxuICAgICAgICAgICAgICAgIGRyYXcodGhpcy5fZGlzcGxheSwgdGhpcyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY29uc3Qgc3ZnUGF0aCA9IHRoaXMuZ2V0KFwic3ZnUGF0aFwiKTtcclxuICAgICAgICAgICAgaWYgKHN2Z1BhdGggIT0gbnVsbCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fZGlzcGxheS5zdmdQYXRoKHN2Z1BhdGgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgX2FmdGVyQ2hhbmdlZCgpIHtcclxuICAgICAgICBzdXBlci5fYWZ0ZXJDaGFuZ2VkKCk7XHJcbiAgICAgICAgaWYgKHRoaXMuX2NsZWFyKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGZpbGwgPSB0aGlzLmdldChcImZpbGxcIik7XHJcbiAgICAgICAgICAgIGNvbnN0IGZpbGxHcmFkaWVudCA9IHRoaXMuZ2V0KFwiZmlsbEdyYWRpZW50XCIpO1xyXG4gICAgICAgICAgICBjb25zdCBmaWxsUGF0dGVybiA9IHRoaXMuZ2V0KFwiZmlsbFBhdHRlcm5cIik7XHJcbiAgICAgICAgICAgIGNvbnN0IGZpbGxPcGFjaXR5ID0gdGhpcy5nZXQoXCJmaWxsT3BhY2l0eVwiKTtcclxuICAgICAgICAgICAgY29uc3Qgc3Ryb2tlID0gdGhpcy5nZXQoXCJzdHJva2VcIik7XHJcbiAgICAgICAgICAgIGNvbnN0IHN0cm9rZUdyYWRpZW50ID0gdGhpcy5nZXQoXCJzdHJva2VHcmFkaWVudFwiKTtcclxuICAgICAgICAgICAgY29uc3Qgc3Ryb2tlUGF0dGVybiA9IHRoaXMuZ2V0KFwic3Ryb2tlUGF0dGVyblwiKTtcclxuICAgICAgICAgICAgY29uc3Qgc2hhZG93Q29sb3IgPSB0aGlzLmdldChcInNoYWRvd0NvbG9yXCIpO1xyXG4gICAgICAgICAgICBjb25zdCBzaGFkb3dCbHVyID0gdGhpcy5nZXQoXCJzaGFkb3dCbHVyXCIpO1xyXG4gICAgICAgICAgICBjb25zdCBzaGFkb3dPZmZzZXRYID0gdGhpcy5nZXQoXCJzaGFkb3dPZmZzZXRYXCIpO1xyXG4gICAgICAgICAgICBjb25zdCBzaGFkb3dPZmZzZXRZID0gdGhpcy5nZXQoXCJzaGFkb3dPZmZzZXRZXCIpO1xyXG4gICAgICAgICAgICBjb25zdCBzaGFkb3dPcGFjaXR5ID0gdGhpcy5nZXQoXCJzaGFkb3dPcGFjaXR5XCIpO1xyXG4gICAgICAgICAgICBpZiAoc2hhZG93Q29sb3IgJiYgKHNoYWRvd0JsdXIgfHwgc2hhZG93T2Zmc2V0WCB8fCBzaGFkb3dPZmZzZXRZKSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fZGlzcGxheS5zaGFkb3coc2hhZG93Q29sb3IsIHNoYWRvd0JsdXIsIHNoYWRvd09mZnNldFgsIHNoYWRvd09mZnNldFksIHNoYWRvd09wYWNpdHkpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmIChmaWxsICYmICFmaWxsR3JhZGllbnQpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2Rpc3BsYXkuYmVnaW5GaWxsKGZpbGwsIGZpbGxPcGFjaXR5KTtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2Rpc3BsYXkuZW5kRmlsbCgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmIChmaWxsR3JhZGllbnQpIHtcclxuICAgICAgICAgICAgICAgIGlmIChmaWxsKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc3Qgc3RvcHMgPSBmaWxsR3JhZGllbnQuZ2V0KFwic3RvcHNcIiwgW10pO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChzdG9wcy5sZW5ndGgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJGFycmF5LmVhY2goc3RvcHMsIChzdG9wKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoKCFzdG9wLmNvbG9yIHx8IHN0b3AuY29sb3JJbmhlcml0ZWQpICYmIGZpbGwpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdG9wLmNvbG9yID0gZmlsbDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdG9wLmNvbG9ySW5oZXJpdGVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzdG9wLm9wYWNpdHkgPT0gbnVsbCB8fCBzdG9wLm9wYWNpdHlJbmhlcml0ZWQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdG9wLm9wYWNpdHkgPSBmaWxsT3BhY2l0eTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdG9wLm9wYWNpdHlJbmhlcml0ZWQgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBjb25zdCBncmFkaWVudCA9IGZpbGxHcmFkaWVudC5nZXRGaWxsKHRoaXMpO1xyXG4gICAgICAgICAgICAgICAgaWYgKGdyYWRpZW50KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fZGlzcGxheS5iZWdpbkZpbGwoZ3JhZGllbnQsIGZpbGxPcGFjaXR5KTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLl9kaXNwbGF5LmVuZEZpbGwoKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAoZmlsbFBhdHRlcm4pIHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IHBhdHRlcm4gPSBmaWxsUGF0dGVybi5wYXR0ZXJuO1xyXG4gICAgICAgICAgICAgICAgaWYgKHBhdHRlcm4pIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLl9kaXNwbGF5LmJlZ2luRmlsbChwYXR0ZXJuLCBmaWxsT3BhY2l0eSk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fZGlzcGxheS5lbmRGaWxsKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGZpbGxQYXR0ZXJuIGluc3RhbmNlb2YgUGljdHVyZVBhdHRlcm4pIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZmlsbFBhdHRlcm4uZXZlbnRzLm9uY2UoXCJsb2FkZWRcIiwgKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fY2xlYXIgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5tYXJrRGlydHkoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmIChzdHJva2UgfHwgc3Ryb2tlR3JhZGllbnQgfHwgc3Ryb2tlUGF0dGVybikge1xyXG4gICAgICAgICAgICAgICAgY29uc3Qgc3Ryb2tlT3BhY2l0eSA9IHRoaXMuZ2V0KFwic3Ryb2tlT3BhY2l0eVwiKTtcclxuICAgICAgICAgICAgICAgIGxldCBzdHJva2VXaWR0aCA9IHRoaXMuZ2V0KFwic3Ryb2tlV2lkdGhcIiwgMSk7XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5nZXQoXCJub25TY2FsaW5nU3Ryb2tlXCIpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgc3Ryb2tlV2lkdGggPSBzdHJva2VXaWR0aCAvIHRoaXMuZ2V0KFwic2NhbGVcIiwgMSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5nZXQoXCJjcmlzcFwiKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHN0cm9rZVdpZHRoIC89IHRoaXMuX3Jvb3QuX3JlbmRlcmVyLnJlc29sdXRpb247XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBjb25zdCBsaW5lSm9pbiA9IHRoaXMuZ2V0KFwibGluZUpvaW5cIik7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBsaW5lQ2FwID0gdGhpcy5nZXQoXCJsaW5lQ2FwXCIpO1xyXG4gICAgICAgICAgICAgICAgaWYgKHN0cm9rZSAmJiAhc3Ryb2tlR3JhZGllbnQpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLl9kaXNwbGF5LmxpbmVTdHlsZShzdHJva2VXaWR0aCwgc3Ryb2tlLCBzdHJva2VPcGFjaXR5LCBsaW5lSm9pbiwgbGluZUNhcCk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fZGlzcGxheS5lbmRTdHJva2UoKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmIChzdHJva2VHcmFkaWVudCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHN0b3BzID0gc3Ryb2tlR3JhZGllbnQuZ2V0KFwic3RvcHNcIiwgW10pO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChzdG9wcy5sZW5ndGgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJGFycmF5LmVhY2goc3RvcHMsIChzdG9wKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoKCFzdG9wLmNvbG9yIHx8IHN0b3AuY29sb3JJbmhlcml0ZWQpICYmIHN0cm9rZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0b3AuY29sb3IgPSBzdHJva2U7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RvcC5jb2xvckluaGVyaXRlZCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoc3RvcC5vcGFjaXR5ID09IG51bGwgfHwgc3RvcC5vcGFjaXR5SW5oZXJpdGVkKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RvcC5vcGFjaXR5ID0gc3Ryb2tlT3BhY2l0eTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdG9wLm9wYWNpdHlJbmhlcml0ZWQgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgZ3JhZGllbnQgPSBzdHJva2VHcmFkaWVudC5nZXRGaWxsKHRoaXMpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChncmFkaWVudCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLl9kaXNwbGF5LmxpbmVTdHlsZShzdHJva2VXaWR0aCwgZ3JhZGllbnQsIHN0cm9rZU9wYWNpdHksIGxpbmVKb2luLCBsaW5lQ2FwKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fZGlzcGxheS5lbmRTdHJva2UoKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpZiAoc3Ryb2tlUGF0dGVybikge1xyXG4gICAgICAgICAgICAgICAgICAgIC8qXHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IGNoYW5nZWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICBpZiAoc3Ryb2tlICYmICghc3Ryb2tlUGF0dGVybi5nZXQoXCJjb2xvclwiKSB8fCBzdHJva2VQYXR0ZXJuLmdldChcImNvbG9ySW5oZXJpdGVkXCIpKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzdHJva2VQYXR0ZXJuLnNldChcImNvbG9yXCIsIHN0cm9rZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0cm9rZVBhdHRlcm4uc2V0KFwiY29sb3JJbmhlcml0ZWRcIiwgdHJ1ZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNoYW5nZWQgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBpZiAoY2hhbmdlZCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBAdG9kbzogaXMgdGhpcyBPSz9cclxuICAgICAgICAgICAgICAgICAgICAgICAgc3Ryb2tlUGF0dGVybi5fY2hhbmdlZCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAqL1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBwYXR0ZXJuID0gc3Ryb2tlUGF0dGVybi5wYXR0ZXJuO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChwYXR0ZXJuKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX2Rpc3BsYXkubGluZVN0eWxlKHN0cm9rZVdpZHRoLCBwYXR0ZXJuLCBzdHJva2VPcGFjaXR5LCBsaW5lSm9pbiwgbGluZUNhcCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX2Rpc3BsYXkuZW5kU3Ryb2tlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzdHJva2VQYXR0ZXJuIGluc3RhbmNlb2YgUGljdHVyZVBhdHRlcm4pIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0cm9rZVBhdHRlcm4uZXZlbnRzLm9uY2UoXCJsb2FkZWRcIiwgKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX2NsZWFyID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm1hcmtEaXJ0eSgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKHRoaXMuZ2V0UHJpdmF0ZShcInNob3dpbmdUb29sdGlwXCIpKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnNob3dUb29sdGlwKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5fY2xlYXIgPSBmYWxzZTtcclxuICAgIH1cclxufVxyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoR3JhcGhpY3MsIFwiY2xhc3NOYW1lXCIsIHtcclxuICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICBjb25maWd1cmFibGU6IHRydWUsXHJcbiAgICB3cml0YWJsZTogdHJ1ZSxcclxuICAgIHZhbHVlOiBcIkdyYXBoaWNzXCJcclxufSk7XHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShHcmFwaGljcywgXCJjbGFzc05hbWVzXCIsIHtcclxuICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICBjb25maWd1cmFibGU6IHRydWUsXHJcbiAgICB3cml0YWJsZTogdHJ1ZSxcclxuICAgIHZhbHVlOiBTcHJpdGUuY2xhc3NOYW1lcy5jb25jYXQoW0dyYXBoaWNzLmNsYXNzTmFtZV0pXHJcbn0pO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1HcmFwaGljcy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/Graphics.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/GridLayout.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/core/render/GridLayout.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GridLayout: () => (/* binding */ GridLayout)\n/* harmony export */ });\n/* harmony import */ var _Layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Layout */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/Layout.js\");\n/* harmony import */ var _util_Array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/Array */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Array.js\");\n/* harmony import */ var _util_Math__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/Math */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Math.js\");\n\r\n\r\n\r\n/**\r\n * A grid children layout for [[Container]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/#Layout} for more info\r\n */\r\nclass GridLayout extends _Layout__WEBPACK_IMPORTED_MODULE_0__.Layout {\r\n    _afterNew() {\r\n        this._setRawDefault(\"maxColumns\", Number.MAX_VALUE);\r\n        super._afterNew();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateContainer(container) {\r\n        let paddingLeft = container.get(\"paddingLeft\", 0);\r\n        let paddingRight = container.get(\"paddingRight\", 0);\r\n        let paddingTop = container.get(\"paddingTop\", 0);\r\n        let availableWidth = container.maxWidth() - paddingLeft - paddingRight;\r\n        let minCellWidth = availableWidth;\r\n        let maxCellWidth = 1;\r\n        (0,_Layout__WEBPACK_IMPORTED_MODULE_0__.eachChildren)(container, (child) => {\r\n            if (child.get(\"visible\") && child.getPrivate(\"visible\") && !child.get(\"forceHidden\")) {\r\n                if (child.get(\"position\") != \"absolute\") {\r\n                    let childWidth = child.width();\r\n                    if (childWidth < minCellWidth) {\r\n                        minCellWidth = childWidth;\r\n                    }\r\n                    if (childWidth > maxCellWidth) {\r\n                        maxCellWidth = childWidth;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        minCellWidth = _util_Math__WEBPACK_IMPORTED_MODULE_1__.fitToRange(minCellWidth, 1, availableWidth);\r\n        maxCellWidth = _util_Math__WEBPACK_IMPORTED_MODULE_1__.fitToRange(maxCellWidth, 1, availableWidth);\r\n        let columnCount = 1;\r\n        if (this.get(\"fixedWidthGrid\")) {\r\n            columnCount = availableWidth / maxCellWidth;\r\n        }\r\n        else {\r\n            columnCount = availableWidth / minCellWidth;\r\n        }\r\n        columnCount = Math.max(1, Math.floor(columnCount));\r\n        columnCount = Math.min(this.get(\"maxColumns\", Number.MAX_VALUE), columnCount);\r\n        let columnWidths = this.getColumnWidths(container, columnCount, maxCellWidth, availableWidth);\r\n        let prevY = paddingTop;\r\n        let column = 0;\r\n        let maxColumnHeight = 0;\r\n        columnCount = columnWidths.length;\r\n        let prevX = paddingLeft;\r\n        (0,_Layout__WEBPACK_IMPORTED_MODULE_0__.eachChildren)(container, (child) => {\r\n            if (child.get(\"position\") == \"relative\" && child.isVisible()) {\r\n                const marginTop = child.get(\"marginTop\", 0);\r\n                const marginBottom = child.get(\"marginBottom\", 0);\r\n                let bounds = child.adjustedLocalBounds();\r\n                let marginLeft = child.get(\"marginLeft\", 0);\r\n                let marginRight = child.get(\"marginRight\", 0);\r\n                let x = prevX + marginLeft - bounds.left;\r\n                let y = prevY + marginTop - bounds.top;\r\n                child.setPrivate(\"x\", x);\r\n                child.setPrivate(\"y\", y);\r\n                prevX += columnWidths[column] + marginRight;\r\n                maxColumnHeight = Math.max(maxColumnHeight, child.height() + marginTop + marginBottom);\r\n                column++;\r\n                if (column >= columnCount) {\r\n                    column = 0;\r\n                    prevX = paddingLeft;\r\n                    prevY += maxColumnHeight;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getColumnWidths(container, columnCount, maxCellWidth, availableWidth) {\r\n        let totalWidth = 0;\r\n        let columnWidths = [];\r\n        let column = 0;\r\n        (0,_Layout__WEBPACK_IMPORTED_MODULE_0__.eachChildren)(container, (child) => {\r\n            let bounds = child.adjustedLocalBounds();\r\n            if (child.get(\"position\") != \"absolute\" && child.isVisible()) {\r\n                if (this.get(\"fixedWidthGrid\")) {\r\n                    columnWidths[column] = maxCellWidth;\r\n                }\r\n                else {\r\n                    columnWidths[column] = Math.max(columnWidths[column] | 0, bounds.right - bounds.left + child.get(\"marginLeft\", 0) + child.get(\"marginRight\", 0));\r\n                }\r\n                if (column < container.children.length - 1) {\r\n                    column++;\r\n                    if (column == columnCount) {\r\n                        column = 0;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        _util_Array__WEBPACK_IMPORTED_MODULE_2__.each(columnWidths, (w) => {\r\n            totalWidth += w;\r\n        });\r\n        if (totalWidth > availableWidth) {\r\n            if (columnCount > 2) {\r\n                columnCount -= 1;\r\n                return this.getColumnWidths(container, columnCount, maxCellWidth, availableWidth);\r\n            }\r\n            else {\r\n                return [availableWidth];\r\n            }\r\n        }\r\n        return columnWidths;\r\n    }\r\n}\r\nObject.defineProperty(GridLayout, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"GridLayout\"\r\n});\r\nObject.defineProperty(GridLayout, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: _Layout__WEBPACK_IMPORTED_MODULE_0__.Layout.classNames.concat([GridLayout.className])\r\n});\r\n//# sourceMappingURL=GridLayout.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNS8uaW50ZXJuYWwvY29yZS9yZW5kZXIvR3JpZExheW91dC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWdEO0FBQ1I7QUFDRjtBQUN0QztBQUNBO0FBQ0E7QUFDQSxTQUFTLG9GQUFvRjtBQUM3RjtBQUNPLHlCQUF5QiwyQ0FBTTtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxxREFBWTtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULHVCQUF1QixrREFBZ0I7QUFDdkMsdUJBQXVCLGtEQUFnQjtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHFEQUFZO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHFEQUFZO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxRQUFRLDZDQUFXO0FBQ25CO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLDJDQUFNO0FBQ2pCLENBQUM7QUFDRCIsInNvdXJjZXMiOlsiL2hvbWUvcnVubmVyL3dvcmtzcGFjZS9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNS8uaW50ZXJuYWwvY29yZS9yZW5kZXIvR3JpZExheW91dC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBMYXlvdXQsIGVhY2hDaGlsZHJlbiB9IGZyb20gXCIuL0xheW91dFwiO1xyXG5pbXBvcnQgKiBhcyAkYXJyYXkgZnJvbSBcIi4uL3V0aWwvQXJyYXlcIjtcclxuaW1wb3J0ICogYXMgJG1hdGggZnJvbSBcIi4uL3V0aWwvTWF0aFwiO1xyXG4vKipcclxuICogQSBncmlkIGNoaWxkcmVuIGxheW91dCBmb3IgW1tDb250YWluZXJdXS5cclxuICpcclxuICogQHNlZSB7QGxpbmsgaHR0cHM6Ly93d3cuYW1jaGFydHMuY29tL2RvY3MvdjUvY29uY2VwdHMvY29tbW9uLWVsZW1lbnRzL2NvbnRhaW5lcnMvI0xheW91dH0gZm9yIG1vcmUgaW5mb1xyXG4gKi9cclxuZXhwb3J0IGNsYXNzIEdyaWRMYXlvdXQgZXh0ZW5kcyBMYXlvdXQge1xyXG4gICAgX2FmdGVyTmV3KCkge1xyXG4gICAgICAgIHRoaXMuX3NldFJhd0RlZmF1bHQoXCJtYXhDb2x1bW5zXCIsIE51bWJlci5NQVhfVkFMVUUpO1xyXG4gICAgICAgIHN1cGVyLl9hZnRlck5ldygpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBAaWdub3JlXHJcbiAgICAgKi9cclxuICAgIHVwZGF0ZUNvbnRhaW5lcihjb250YWluZXIpIHtcclxuICAgICAgICBsZXQgcGFkZGluZ0xlZnQgPSBjb250YWluZXIuZ2V0KFwicGFkZGluZ0xlZnRcIiwgMCk7XHJcbiAgICAgICAgbGV0IHBhZGRpbmdSaWdodCA9IGNvbnRhaW5lci5nZXQoXCJwYWRkaW5nUmlnaHRcIiwgMCk7XHJcbiAgICAgICAgbGV0IHBhZGRpbmdUb3AgPSBjb250YWluZXIuZ2V0KFwicGFkZGluZ1RvcFwiLCAwKTtcclxuICAgICAgICBsZXQgYXZhaWxhYmxlV2lkdGggPSBjb250YWluZXIubWF4V2lkdGgoKSAtIHBhZGRpbmdMZWZ0IC0gcGFkZGluZ1JpZ2h0O1xyXG4gICAgICAgIGxldCBtaW5DZWxsV2lkdGggPSBhdmFpbGFibGVXaWR0aDtcclxuICAgICAgICBsZXQgbWF4Q2VsbFdpZHRoID0gMTtcclxuICAgICAgICBlYWNoQ2hpbGRyZW4oY29udGFpbmVyLCAoY2hpbGQpID0+IHtcclxuICAgICAgICAgICAgaWYgKGNoaWxkLmdldChcInZpc2libGVcIikgJiYgY2hpbGQuZ2V0UHJpdmF0ZShcInZpc2libGVcIikgJiYgIWNoaWxkLmdldChcImZvcmNlSGlkZGVuXCIpKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoY2hpbGQuZ2V0KFwicG9zaXRpb25cIikgIT0gXCJhYnNvbHV0ZVwiKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IGNoaWxkV2lkdGggPSBjaGlsZC53aWR0aCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChjaGlsZFdpZHRoIDwgbWluQ2VsbFdpZHRoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG1pbkNlbGxXaWR0aCA9IGNoaWxkV2lkdGg7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGlmIChjaGlsZFdpZHRoID4gbWF4Q2VsbFdpZHRoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG1heENlbGxXaWR0aCA9IGNoaWxkV2lkdGg7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgbWluQ2VsbFdpZHRoID0gJG1hdGguZml0VG9SYW5nZShtaW5DZWxsV2lkdGgsIDEsIGF2YWlsYWJsZVdpZHRoKTtcclxuICAgICAgICBtYXhDZWxsV2lkdGggPSAkbWF0aC5maXRUb1JhbmdlKG1heENlbGxXaWR0aCwgMSwgYXZhaWxhYmxlV2lkdGgpO1xyXG4gICAgICAgIGxldCBjb2x1bW5Db3VudCA9IDE7XHJcbiAgICAgICAgaWYgKHRoaXMuZ2V0KFwiZml4ZWRXaWR0aEdyaWRcIikpIHtcclxuICAgICAgICAgICAgY29sdW1uQ291bnQgPSBhdmFpbGFibGVXaWR0aCAvIG1heENlbGxXaWR0aDtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIGNvbHVtbkNvdW50ID0gYXZhaWxhYmxlV2lkdGggLyBtaW5DZWxsV2lkdGg7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbHVtbkNvdW50ID0gTWF0aC5tYXgoMSwgTWF0aC5mbG9vcihjb2x1bW5Db3VudCkpO1xyXG4gICAgICAgIGNvbHVtbkNvdW50ID0gTWF0aC5taW4odGhpcy5nZXQoXCJtYXhDb2x1bW5zXCIsIE51bWJlci5NQVhfVkFMVUUpLCBjb2x1bW5Db3VudCk7XHJcbiAgICAgICAgbGV0IGNvbHVtbldpZHRocyA9IHRoaXMuZ2V0Q29sdW1uV2lkdGhzKGNvbnRhaW5lciwgY29sdW1uQ291bnQsIG1heENlbGxXaWR0aCwgYXZhaWxhYmxlV2lkdGgpO1xyXG4gICAgICAgIGxldCBwcmV2WSA9IHBhZGRpbmdUb3A7XHJcbiAgICAgICAgbGV0IGNvbHVtbiA9IDA7XHJcbiAgICAgICAgbGV0IG1heENvbHVtbkhlaWdodCA9IDA7XHJcbiAgICAgICAgY29sdW1uQ291bnQgPSBjb2x1bW5XaWR0aHMubGVuZ3RoO1xyXG4gICAgICAgIGxldCBwcmV2WCA9IHBhZGRpbmdMZWZ0O1xyXG4gICAgICAgIGVhY2hDaGlsZHJlbihjb250YWluZXIsIChjaGlsZCkgPT4ge1xyXG4gICAgICAgICAgICBpZiAoY2hpbGQuZ2V0KFwicG9zaXRpb25cIikgPT0gXCJyZWxhdGl2ZVwiICYmIGNoaWxkLmlzVmlzaWJsZSgpKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBtYXJnaW5Ub3AgPSBjaGlsZC5nZXQoXCJtYXJnaW5Ub3BcIiwgMCk7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBtYXJnaW5Cb3R0b20gPSBjaGlsZC5nZXQoXCJtYXJnaW5Cb3R0b21cIiwgMCk7XHJcbiAgICAgICAgICAgICAgICBsZXQgYm91bmRzID0gY2hpbGQuYWRqdXN0ZWRMb2NhbEJvdW5kcygpO1xyXG4gICAgICAgICAgICAgICAgbGV0IG1hcmdpbkxlZnQgPSBjaGlsZC5nZXQoXCJtYXJnaW5MZWZ0XCIsIDApO1xyXG4gICAgICAgICAgICAgICAgbGV0IG1hcmdpblJpZ2h0ID0gY2hpbGQuZ2V0KFwibWFyZ2luUmlnaHRcIiwgMCk7XHJcbiAgICAgICAgICAgICAgICBsZXQgeCA9IHByZXZYICsgbWFyZ2luTGVmdCAtIGJvdW5kcy5sZWZ0O1xyXG4gICAgICAgICAgICAgICAgbGV0IHkgPSBwcmV2WSArIG1hcmdpblRvcCAtIGJvdW5kcy50b3A7XHJcbiAgICAgICAgICAgICAgICBjaGlsZC5zZXRQcml2YXRlKFwieFwiLCB4KTtcclxuICAgICAgICAgICAgICAgIGNoaWxkLnNldFByaXZhdGUoXCJ5XCIsIHkpO1xyXG4gICAgICAgICAgICAgICAgcHJldlggKz0gY29sdW1uV2lkdGhzW2NvbHVtbl0gKyBtYXJnaW5SaWdodDtcclxuICAgICAgICAgICAgICAgIG1heENvbHVtbkhlaWdodCA9IE1hdGgubWF4KG1heENvbHVtbkhlaWdodCwgY2hpbGQuaGVpZ2h0KCkgKyBtYXJnaW5Ub3AgKyBtYXJnaW5Cb3R0b20pO1xyXG4gICAgICAgICAgICAgICAgY29sdW1uKys7XHJcbiAgICAgICAgICAgICAgICBpZiAoY29sdW1uID49IGNvbHVtbkNvdW50KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29sdW1uID0gMDtcclxuICAgICAgICAgICAgICAgICAgICBwcmV2WCA9IHBhZGRpbmdMZWZ0O1xyXG4gICAgICAgICAgICAgICAgICAgIHByZXZZICs9IG1heENvbHVtbkhlaWdodDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBAaWdub3JlXHJcbiAgICAgKi9cclxuICAgIGdldENvbHVtbldpZHRocyhjb250YWluZXIsIGNvbHVtbkNvdW50LCBtYXhDZWxsV2lkdGgsIGF2YWlsYWJsZVdpZHRoKSB7XHJcbiAgICAgICAgbGV0IHRvdGFsV2lkdGggPSAwO1xyXG4gICAgICAgIGxldCBjb2x1bW5XaWR0aHMgPSBbXTtcclxuICAgICAgICBsZXQgY29sdW1uID0gMDtcclxuICAgICAgICBlYWNoQ2hpbGRyZW4oY29udGFpbmVyLCAoY2hpbGQpID0+IHtcclxuICAgICAgICAgICAgbGV0IGJvdW5kcyA9IGNoaWxkLmFkanVzdGVkTG9jYWxCb3VuZHMoKTtcclxuICAgICAgICAgICAgaWYgKGNoaWxkLmdldChcInBvc2l0aW9uXCIpICE9IFwiYWJzb2x1dGVcIiAmJiBjaGlsZC5pc1Zpc2libGUoKSkge1xyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuZ2V0KFwiZml4ZWRXaWR0aEdyaWRcIikpIHtcclxuICAgICAgICAgICAgICAgICAgICBjb2x1bW5XaWR0aHNbY29sdW1uXSA9IG1heENlbGxXaWR0aDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbHVtbldpZHRoc1tjb2x1bW5dID0gTWF0aC5tYXgoY29sdW1uV2lkdGhzW2NvbHVtbl0gfCAwLCBib3VuZHMucmlnaHQgLSBib3VuZHMubGVmdCArIGNoaWxkLmdldChcIm1hcmdpbkxlZnRcIiwgMCkgKyBjaGlsZC5nZXQoXCJtYXJnaW5SaWdodFwiLCAwKSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpZiAoY29sdW1uIDwgY29udGFpbmVyLmNoaWxkcmVuLmxlbmd0aCAtIDEpIHtcclxuICAgICAgICAgICAgICAgICAgICBjb2x1bW4rKztcclxuICAgICAgICAgICAgICAgICAgICBpZiAoY29sdW1uID09IGNvbHVtbkNvdW50KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbHVtbiA9IDA7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgJGFycmF5LmVhY2goY29sdW1uV2lkdGhzLCAodykgPT4ge1xyXG4gICAgICAgICAgICB0b3RhbFdpZHRoICs9IHc7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgaWYgKHRvdGFsV2lkdGggPiBhdmFpbGFibGVXaWR0aCkge1xyXG4gICAgICAgICAgICBpZiAoY29sdW1uQ291bnQgPiAyKSB7XHJcbiAgICAgICAgICAgICAgICBjb2x1bW5Db3VudCAtPSAxO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuZ2V0Q29sdW1uV2lkdGhzKGNvbnRhaW5lciwgY29sdW1uQ291bnQsIG1heENlbGxXaWR0aCwgYXZhaWxhYmxlV2lkdGgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIFthdmFpbGFibGVXaWR0aF07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGNvbHVtbldpZHRocztcclxuICAgIH1cclxufVxyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoR3JpZExheW91dCwgXCJjbGFzc05hbWVcIiwge1xyXG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcclxuICAgIHdyaXRhYmxlOiB0cnVlLFxyXG4gICAgdmFsdWU6IFwiR3JpZExheW91dFwiXHJcbn0pO1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoR3JpZExheW91dCwgXCJjbGFzc05hbWVzXCIsIHtcclxuICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICBjb25maWd1cmFibGU6IHRydWUsXHJcbiAgICB3cml0YWJsZTogdHJ1ZSxcclxuICAgIHZhbHVlOiBMYXlvdXQuY2xhc3NOYW1lcy5jb25jYXQoW0dyaWRMYXlvdXQuY2xhc3NOYW1lXSlcclxufSk7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUdyaWRMYXlvdXQuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/GridLayout.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/HorizontalLayout.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/core/render/HorizontalLayout.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HorizontalLayout: () => (/* binding */ HorizontalLayout)\n/* harmony export */ });\n/* harmony import */ var _Layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Layout */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/Layout.js\");\n/* harmony import */ var _util_Type__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/Type */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Type.js\");\n/* harmony import */ var _util_Percent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/Percent */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Percent.js\");\n\r\n\r\n\r\n/**\r\n * A horizontal children layout for [[Container]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/#Layout} for more info\r\n */\r\nclass HorizontalLayout extends _Layout__WEBPACK_IMPORTED_MODULE_0__.Layout {\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateContainer(container) {\r\n        let paddingLeft = container.get(\"paddingLeft\", 0);\r\n        let availableWidth = container.innerWidth();\r\n        let totalPercent = 0;\r\n        (0,_Layout__WEBPACK_IMPORTED_MODULE_0__.eachChildren)(container, (child) => {\r\n            if (child.isVisible()) {\r\n                if (child.get(\"position\") == \"relative\") {\r\n                    let childWidth = child.get(\"width\");\r\n                    if (childWidth instanceof _util_Percent__WEBPACK_IMPORTED_MODULE_1__.Percent) {\r\n                        totalPercent += childWidth.value;\r\n                        let w = availableWidth * childWidth.value;\r\n                        let minWidth = child.get(\"minWidth\", child.getPrivate(\"minWidth\", -Infinity));\r\n                        if (minWidth > w) {\r\n                            availableWidth -= minWidth;\r\n                            totalPercent -= childWidth.value;\r\n                        }\r\n                        let maxWidth = child.get(\"maxWidth\", child.getPrivate(\"maxWidth\", Infinity));\r\n                        if (w > maxWidth) {\r\n                            availableWidth -= maxWidth;\r\n                            totalPercent -= childWidth.value;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (!_util_Type__WEBPACK_IMPORTED_MODULE_2__.isNumber(childWidth)) {\r\n                            childWidth = child.width();\r\n                        }\r\n                        availableWidth -= childWidth + child.get(\"marginLeft\", 0) + child.get(\"marginRight\", 0);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        if (availableWidth <= 0 || availableWidth == Infinity) {\r\n            availableWidth = .1;\r\n        }\r\n        //if (availableWidth > 0) {\r\n        (0,_Layout__WEBPACK_IMPORTED_MODULE_0__.eachChildren)(container, (child) => {\r\n            if (child.isVisible()) {\r\n                if (child.get(\"position\") == \"relative\") {\r\n                    let childWidth = child.get(\"width\");\r\n                    if (childWidth instanceof _util_Percent__WEBPACK_IMPORTED_MODULE_1__.Percent) {\r\n                        let privateWidth = availableWidth * childWidth.value / totalPercent - child.get(\"marginLeft\", 0) - child.get(\"marginRight\", 0);\r\n                        let minWidth = child.get(\"minWidth\", child.getPrivate(\"minWidth\", -Infinity));\r\n                        let maxWidth = child.get(\"maxWidth\", child.getPrivate(\"maxWidth\", Infinity));\r\n                        privateWidth = Math.min(Math.max(minWidth, privateWidth), maxWidth);\r\n                        child.setPrivate(\"width\", privateWidth);\r\n                    }\r\n                    else {\r\n                        if (child._prevSettings.width instanceof _util_Percent__WEBPACK_IMPORTED_MODULE_1__.Percent) {\r\n                            child.setPrivate(\"width\", undefined);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        //}\r\n        let prevX = paddingLeft;\r\n        (0,_Layout__WEBPACK_IMPORTED_MODULE_0__.eachChildren)(container, (child) => {\r\n            if (child.get(\"position\") == \"relative\") {\r\n                if (child.isVisible()) {\r\n                    let bounds = child.adjustedLocalBounds();\r\n                    let marginLeft = child.get(\"marginLeft\", 0);\r\n                    let marginRight = child.get(\"marginRight\", 0);\r\n                    let maxWidth = child.get(\"maxWidth\");\r\n                    let left = bounds.left;\r\n                    let right = bounds.right;\r\n                    if (maxWidth) {\r\n                        if (right - left > maxWidth) {\r\n                            right = left + maxWidth;\r\n                        }\r\n                    }\r\n                    let x = prevX + marginLeft - left;\r\n                    child.setPrivate(\"x\", x);\r\n                    prevX = x + right + marginRight;\r\n                }\r\n                else {\r\n                    child.setPrivate(\"x\", undefined);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\nObject.defineProperty(HorizontalLayout, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"HorizontalLayout\"\r\n});\r\nObject.defineProperty(HorizontalLayout, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: _Layout__WEBPACK_IMPORTED_MODULE_0__.Layout.classNames.concat([HorizontalLayout.className])\r\n});\r\n//# sourceMappingURL=HorizontalLayout.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNS8uaW50ZXJuYWwvY29yZS9yZW5kZXIvSG9yaXpvbnRhbExheW91dC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWdEO0FBQ1Y7QUFDSTtBQUMxQztBQUNBO0FBQ0E7QUFDQSxTQUFTLG9GQUFvRjtBQUM3RjtBQUNPLCtCQUErQiwyQ0FBTTtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEscURBQVk7QUFDcEI7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGtEQUFPO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsZ0RBQWM7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxxREFBWTtBQUNwQjtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsa0RBQU87QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpRUFBaUUsa0RBQU87QUFDeEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsUUFBUSxxREFBWTtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLDJDQUFNO0FBQ2pCLENBQUM7QUFDRCIsInNvdXJjZXMiOlsiL2hvbWUvcnVubmVyL3dvcmtzcGFjZS9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNS8uaW50ZXJuYWwvY29yZS9yZW5kZXIvSG9yaXpvbnRhbExheW91dC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBMYXlvdXQsIGVhY2hDaGlsZHJlbiB9IGZyb20gXCIuL0xheW91dFwiO1xyXG5pbXBvcnQgKiBhcyAkdHlwZSBmcm9tIFwiLi4vdXRpbC9UeXBlXCI7XHJcbmltcG9ydCB7IFBlcmNlbnQgfSBmcm9tIFwiLi4vdXRpbC9QZXJjZW50XCI7XHJcbi8qKlxyXG4gKiBBIGhvcml6b250YWwgY2hpbGRyZW4gbGF5b3V0IGZvciBbW0NvbnRhaW5lcl1dLlxyXG4gKlxyXG4gKiBAc2VlIHtAbGluayBodHRwczovL3d3dy5hbWNoYXJ0cy5jb20vZG9jcy92NS9jb25jZXB0cy9jb21tb24tZWxlbWVudHMvY29udGFpbmVycy8jTGF5b3V0fSBmb3IgbW9yZSBpbmZvXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgSG9yaXpvbnRhbExheW91dCBleHRlbmRzIExheW91dCB7XHJcbiAgICAvKipcclxuICAgICAqIEBpZ25vcmVcclxuICAgICAqL1xyXG4gICAgdXBkYXRlQ29udGFpbmVyKGNvbnRhaW5lcikge1xyXG4gICAgICAgIGxldCBwYWRkaW5nTGVmdCA9IGNvbnRhaW5lci5nZXQoXCJwYWRkaW5nTGVmdFwiLCAwKTtcclxuICAgICAgICBsZXQgYXZhaWxhYmxlV2lkdGggPSBjb250YWluZXIuaW5uZXJXaWR0aCgpO1xyXG4gICAgICAgIGxldCB0b3RhbFBlcmNlbnQgPSAwO1xyXG4gICAgICAgIGVhY2hDaGlsZHJlbihjb250YWluZXIsIChjaGlsZCkgPT4ge1xyXG4gICAgICAgICAgICBpZiAoY2hpbGQuaXNWaXNpYmxlKCkpIHtcclxuICAgICAgICAgICAgICAgIGlmIChjaGlsZC5nZXQoXCJwb3NpdGlvblwiKSA9PSBcInJlbGF0aXZlXCIpIHtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgY2hpbGRXaWR0aCA9IGNoaWxkLmdldChcIndpZHRoXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChjaGlsZFdpZHRoIGluc3RhbmNlb2YgUGVyY2VudCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0b3RhbFBlcmNlbnQgKz0gY2hpbGRXaWR0aC52YWx1ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHcgPSBhdmFpbGFibGVXaWR0aCAqIGNoaWxkV2lkdGgudmFsdWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBtaW5XaWR0aCA9IGNoaWxkLmdldChcIm1pbldpZHRoXCIsIGNoaWxkLmdldFByaXZhdGUoXCJtaW5XaWR0aFwiLCAtSW5maW5pdHkpKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG1pbldpZHRoID4gdykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYXZhaWxhYmxlV2lkdGggLT0gbWluV2lkdGg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b3RhbFBlcmNlbnQgLT0gY2hpbGRXaWR0aC52YWx1ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgbWF4V2lkdGggPSBjaGlsZC5nZXQoXCJtYXhXaWR0aFwiLCBjaGlsZC5nZXRQcml2YXRlKFwibWF4V2lkdGhcIiwgSW5maW5pdHkpKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHcgPiBtYXhXaWR0aCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYXZhaWxhYmxlV2lkdGggLT0gbWF4V2lkdGg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b3RhbFBlcmNlbnQgLT0gY2hpbGRXaWR0aC52YWx1ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCEkdHlwZS5pc051bWJlcihjaGlsZFdpZHRoKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRXaWR0aCA9IGNoaWxkLndpZHRoKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgYXZhaWxhYmxlV2lkdGggLT0gY2hpbGRXaWR0aCArIGNoaWxkLmdldChcIm1hcmdpbkxlZnRcIiwgMCkgKyBjaGlsZC5nZXQoXCJtYXJnaW5SaWdodFwiLCAwKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgICBpZiAoYXZhaWxhYmxlV2lkdGggPD0gMCB8fCBhdmFpbGFibGVXaWR0aCA9PSBJbmZpbml0eSkge1xyXG4gICAgICAgICAgICBhdmFpbGFibGVXaWR0aCA9IC4xO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvL2lmIChhdmFpbGFibGVXaWR0aCA+IDApIHtcclxuICAgICAgICBlYWNoQ2hpbGRyZW4oY29udGFpbmVyLCAoY2hpbGQpID0+IHtcclxuICAgICAgICAgICAgaWYgKGNoaWxkLmlzVmlzaWJsZSgpKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoY2hpbGQuZ2V0KFwicG9zaXRpb25cIikgPT0gXCJyZWxhdGl2ZVwiKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IGNoaWxkV2lkdGggPSBjaGlsZC5nZXQoXCJ3aWR0aFwiKTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoY2hpbGRXaWR0aCBpbnN0YW5jZW9mIFBlcmNlbnQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHByaXZhdGVXaWR0aCA9IGF2YWlsYWJsZVdpZHRoICogY2hpbGRXaWR0aC52YWx1ZSAvIHRvdGFsUGVyY2VudCAtIGNoaWxkLmdldChcIm1hcmdpbkxlZnRcIiwgMCkgLSBjaGlsZC5nZXQoXCJtYXJnaW5SaWdodFwiLCAwKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IG1pbldpZHRoID0gY2hpbGQuZ2V0KFwibWluV2lkdGhcIiwgY2hpbGQuZ2V0UHJpdmF0ZShcIm1pbldpZHRoXCIsIC1JbmZpbml0eSkpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgbWF4V2lkdGggPSBjaGlsZC5nZXQoXCJtYXhXaWR0aFwiLCBjaGlsZC5nZXRQcml2YXRlKFwibWF4V2lkdGhcIiwgSW5maW5pdHkpKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcHJpdmF0ZVdpZHRoID0gTWF0aC5taW4oTWF0aC5tYXgobWluV2lkdGgsIHByaXZhdGVXaWR0aCksIG1heFdpZHRoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGQuc2V0UHJpdmF0ZShcIndpZHRoXCIsIHByaXZhdGVXaWR0aCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoY2hpbGQuX3ByZXZTZXR0aW5ncy53aWR0aCBpbnN0YW5jZW9mIFBlcmNlbnQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkLnNldFByaXZhdGUoXCJ3aWR0aFwiLCB1bmRlZmluZWQpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgLy99XHJcbiAgICAgICAgbGV0IHByZXZYID0gcGFkZGluZ0xlZnQ7XHJcbiAgICAgICAgZWFjaENoaWxkcmVuKGNvbnRhaW5lciwgKGNoaWxkKSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChjaGlsZC5nZXQoXCJwb3NpdGlvblwiKSA9PSBcInJlbGF0aXZlXCIpIHtcclxuICAgICAgICAgICAgICAgIGlmIChjaGlsZC5pc1Zpc2libGUoKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBib3VuZHMgPSBjaGlsZC5hZGp1c3RlZExvY2FsQm91bmRzKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IG1hcmdpbkxlZnQgPSBjaGlsZC5nZXQoXCJtYXJnaW5MZWZ0XCIsIDApO1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBtYXJnaW5SaWdodCA9IGNoaWxkLmdldChcIm1hcmdpblJpZ2h0XCIsIDApO1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBtYXhXaWR0aCA9IGNoaWxkLmdldChcIm1heFdpZHRoXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBsZWZ0ID0gYm91bmRzLmxlZnQ7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IHJpZ2h0ID0gYm91bmRzLnJpZ2h0O1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChtYXhXaWR0aCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocmlnaHQgLSBsZWZ0ID4gbWF4V2lkdGgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJpZ2h0ID0gbGVmdCArIG1heFdpZHRoO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGxldCB4ID0gcHJldlggKyBtYXJnaW5MZWZ0IC0gbGVmdDtcclxuICAgICAgICAgICAgICAgICAgICBjaGlsZC5zZXRQcml2YXRlKFwieFwiLCB4KTtcclxuICAgICAgICAgICAgICAgICAgICBwcmV2WCA9IHggKyByaWdodCArIG1hcmdpblJpZ2h0O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY2hpbGQuc2V0UHJpdmF0ZShcInhcIiwgdW5kZWZpbmVkKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG59XHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShIb3Jpem9udGFsTGF5b3V0LCBcImNsYXNzTmFtZVwiLCB7XHJcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgY29uZmlndXJhYmxlOiB0cnVlLFxyXG4gICAgd3JpdGFibGU6IHRydWUsXHJcbiAgICB2YWx1ZTogXCJIb3Jpem9udGFsTGF5b3V0XCJcclxufSk7XHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShIb3Jpem9udGFsTGF5b3V0LCBcImNsYXNzTmFtZXNcIiwge1xyXG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcclxuICAgIHdyaXRhYmxlOiB0cnVlLFxyXG4gICAgdmFsdWU6IExheW91dC5jbGFzc05hbWVzLmNvbmNhdChbSG9yaXpvbnRhbExheW91dC5jbGFzc05hbWVdKVxyXG59KTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9SG9yaXpvbnRhbExheW91dC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/HorizontalLayout.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/Label.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/core/render/Label.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Label: () => (/* binding */ Label)\n/* harmony export */ });\n/* harmony import */ var _render_Text__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../render/Text */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/Text.js\");\n/* harmony import */ var _util_Percent__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/Percent */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Percent.js\");\n/* harmony import */ var _Container__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Container */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/Container.js\");\n/* harmony import */ var _core_util_Array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/util/Array */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Array.js\");\n/* harmony import */ var _core_util_Type__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/util/Type */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Type.js\");\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Creates a label with support for in-line styling and data bindings.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/labels/} for more info\r\n */\r\nclass Label extends _Container__WEBPACK_IMPORTED_MODULE_0__.Container {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_text\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_textKeys\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\r\n                \"text\",\r\n                \"fill\",\r\n                \"fillGradient\",\r\n                \"fillOpacity\",\r\n                \"textAlign\",\r\n                \"fontFamily\",\r\n                \"fontSize\",\r\n                \"fontStyle\",\r\n                \"fontWeight\",\r\n                \"fontStyle\",\r\n                \"fontVariant\",\r\n                \"textDecoration\",\r\n                \"shadowColor\",\r\n                \"shadowBlur\",\r\n                \"shadowOffsetX\",\r\n                \"shadowOffsetY\",\r\n                \"shadowOpacity\",\r\n                // \"leading\",\r\n                // \"letterSpacing\",\r\n                \"lineHeight\",\r\n                \"baselineRatio\",\r\n                //\"padding\",\r\n                // \"stroke\",\r\n                // \"strokeThickness\",\r\n                // \"trim\",\r\n                // \"wordWrap\",\r\n                \"direction\",\r\n                \"textBaseline\",\r\n                \"oversizedBehavior\",\r\n                \"breakWords\",\r\n                \"ellipsis\",\r\n                \"minScale\",\r\n                \"populateText\",\r\n                \"role\",\r\n                \"ignoreFormatting\",\r\n                \"maxChars\",\r\n                \"ariaLabel\"\r\n            ]\r\n        });\r\n    }\r\n    /**\r\n     * @ignore Text is not to be used directly\r\n     */\r\n    get text() {\r\n        return this._text;\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._makeText();\r\n        _core_util_Array__WEBPACK_IMPORTED_MODULE_1__.each(this._textKeys, (property) => {\r\n            const propValue = this.get(property);\r\n            if (propValue != undefined) {\r\n                this._text.set(property, propValue);\r\n            }\r\n        });\r\n        if (this.get(\"html\", \"\") !== \"\") {\r\n            this._text.set(\"text\", \"\");\r\n        }\r\n        this.onPrivate(\"maxWidth\", () => {\r\n            this._setMaxDimentions();\r\n        });\r\n        this.onPrivate(\"maxHeight\", () => {\r\n            this._setMaxDimentions();\r\n        });\r\n    }\r\n    _makeText() {\r\n        this._text = this.children.push(_render_Text__WEBPACK_IMPORTED_MODULE_2__.Text.new(this._root, {}));\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        const text = this._text;\r\n        _core_util_Array__WEBPACK_IMPORTED_MODULE_1__.each(this._textKeys, (property) => {\r\n            this._text.set(property, this.get(property));\r\n        });\r\n        if (this.isDirty(\"maxWidth\") || this.isDirty(\"maxHeight\") || this.isDirty(\"rotation\")) {\r\n            this._setMaxDimentions();\r\n        }\r\n        // Do not show regular text if HTML is used\r\n        if (this.get(\"html\", \"\") !== \"\") {\r\n            text.set(\"text\", \"\");\r\n        }\r\n        else {\r\n            text.set(\"text\", this.get(\"text\"));\r\n            this._maybeUpdateHTMLColor();\r\n        }\r\n        if (this.isDirty(\"fill\") || this.isDirty(\"fillGradient\")) {\r\n            this._maybeUpdateHTMLColor();\r\n        }\r\n        if (this.isDirty(\"textAlign\") || this.isDirty(\"width\")) {\r\n            const textAlign = this.get(\"textAlign\");\r\n            let x;\r\n            if (this.get(\"width\") != null) {\r\n                if (textAlign == \"right\") {\r\n                    x = _util_Percent__WEBPACK_IMPORTED_MODULE_3__.p100;\r\n                }\r\n                else if (textAlign == \"center\") {\r\n                    x = _util_Percent__WEBPACK_IMPORTED_MODULE_3__.p50;\r\n                }\r\n                else {\r\n                    x = 0;\r\n                }\r\n            }\r\n            else {\r\n                if (textAlign == \"left\" || textAlign == \"start\") {\r\n                    x = this.get(\"paddingLeft\", 0);\r\n                }\r\n                else if (textAlign == \"right\" || textAlign == \"end\") {\r\n                    x = -this.get(\"paddingRight\", 0);\r\n                }\r\n            }\r\n            text.set(\"x\", x);\r\n        }\r\n        const background = this.get(\"background\");\r\n        if (background) {\r\n            background.setPrivate(\"visible\", text._display.textVisible);\r\n        }\r\n    }\r\n    _maybeUpdateHTMLColor() {\r\n        const htmlElement = this.getPrivate(\"htmlElement\");\r\n        if (htmlElement && this.get(\"fill\")) {\r\n            htmlElement.style.color = this.get(\"fill\").toCSSHex();\r\n            //@todo support gradient\r\n        }\r\n    }\r\n    _setMaxDimentions() {\r\n        const rotation = this.get(\"rotation\");\r\n        const vertical = rotation == 90 || rotation == 270 || rotation == -90;\r\n        const text = this._text;\r\n        const maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\", Infinity));\r\n        if (_core_util_Type__WEBPACK_IMPORTED_MODULE_4__.isNumber(maxWidth)) {\r\n            text.set(vertical ? \"maxHeight\" : \"maxWidth\", maxWidth - this.get(\"paddingTop\", 0) - this.get(\"paddingBottom\", 0));\r\n        }\r\n        else {\r\n            text.set(vertical ? \"maxHeight\" : \"maxWidth\", undefined);\r\n        }\r\n        const maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\", Infinity));\r\n        if (_core_util_Type__WEBPACK_IMPORTED_MODULE_4__.isNumber(maxHeight)) {\r\n            text.set(vertical ? \"maxWidth\" : \"maxHeight\", maxHeight - this.get(\"paddingLeft\", 0) - this.get(\"paddingRight\", 0));\r\n        }\r\n        else {\r\n            text.set(vertical ? \"maxWidth\" : \"maxHeight\", undefined);\r\n        }\r\n        this.root.events.once(\"frameended\", () => {\r\n            text.markDirtyBounds();\r\n        });\r\n    }\r\n    _setDataItem(dataItem) {\r\n        super._setDataItem(dataItem);\r\n        this._markDirtyKey(\"text\");\r\n        this._markDirtyKey(\"html\");\r\n        const text = this._text;\r\n        if (text.get(\"populateText\")) {\r\n            text.markDirtyText();\r\n        }\r\n        const html = this.get(\"html\");\r\n        if (html && html !== \"\") {\r\n            this._updateHTMLContent();\r\n        }\r\n    }\r\n    /**\r\n     * Returns text with populated placeholders and formatting if `populateText` is\r\n     * set to `true`.\r\n     *\r\n     * @return Populated text\r\n     */\r\n    getText() {\r\n        return this._text._getText();\r\n    }\r\n    /**\r\n     * Returns \"aria-label\" text with populated placeholders and formatting\r\n     * if `populateText` is set to `true`.\r\n     *\r\n     * @return Populated text\r\n     */\r\n    getAccessibleText() {\r\n        return this._text._getAccessibleText();\r\n    }\r\n}\r\nObject.defineProperty(Label, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Label\"\r\n});\r\nObject.defineProperty(Label, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: _Container__WEBPACK_IMPORTED_MODULE_0__.Container.classNames.concat([Label.className])\r\n});\r\n//# sourceMappingURL=Label.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/Label.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/Layout.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/core/render/Layout.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Layout: () => (/* binding */ Layout),\n/* harmony export */   eachChildren: () => (/* binding */ eachChildren)\n/* harmony export */ });\n/* harmony import */ var _util_Entity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/Entity */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Entity.js\");\n\r\nfunction eachChildren(container, f) {\r\n    if (container.get(\"reverseChildren\", false)) {\r\n        container.children.eachReverse(f);\r\n    }\r\n    else {\r\n        container.children.each(f);\r\n    }\r\n}\r\n/**\r\n * Base class for [[Container]] layouts.\r\n */\r\nclass Layout extends _util_Entity__WEBPACK_IMPORTED_MODULE_0__.Entity {\r\n}\r\nObject.defineProperty(Layout, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Layout\"\r\n});\r\nObject.defineProperty(Layout, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: _util_Entity__WEBPACK_IMPORTED_MODULE_0__.Entity.classNames.concat([Layout.className])\r\n});\r\n//# sourceMappingURL=Layout.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNS8uaW50ZXJuYWwvY29yZS9yZW5kZXIvTGF5b3V0LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUF3QztBQUNqQztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08scUJBQXFCLGdEQUFNO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsZ0RBQU07QUFDakIsQ0FBQztBQUNEIiwic291cmNlcyI6WyIvaG9tZS9ydW5uZXIvd29ya3NwYWNlL25vZGVfbW9kdWxlcy9AYW1jaGFydHMvYW1jaGFydHM1Ly5pbnRlcm5hbC9jb3JlL3JlbmRlci9MYXlvdXQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRW50aXR5IH0gZnJvbSBcIi4uL3V0aWwvRW50aXR5XCI7XHJcbmV4cG9ydCBmdW5jdGlvbiBlYWNoQ2hpbGRyZW4oY29udGFpbmVyLCBmKSB7XHJcbiAgICBpZiAoY29udGFpbmVyLmdldChcInJldmVyc2VDaGlsZHJlblwiLCBmYWxzZSkpIHtcclxuICAgICAgICBjb250YWluZXIuY2hpbGRyZW4uZWFjaFJldmVyc2UoZik7XHJcbiAgICB9XHJcbiAgICBlbHNlIHtcclxuICAgICAgICBjb250YWluZXIuY2hpbGRyZW4uZWFjaChmKTtcclxuICAgIH1cclxufVxyXG4vKipcclxuICogQmFzZSBjbGFzcyBmb3IgW1tDb250YWluZXJdXSBsYXlvdXRzLlxyXG4gKi9cclxuZXhwb3J0IGNsYXNzIExheW91dCBleHRlbmRzIEVudGl0eSB7XHJcbn1cclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KExheW91dCwgXCJjbGFzc05hbWVcIiwge1xyXG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcclxuICAgIHdyaXRhYmxlOiB0cnVlLFxyXG4gICAgdmFsdWU6IFwiTGF5b3V0XCJcclxufSk7XHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShMYXlvdXQsIFwiY2xhc3NOYW1lc1wiLCB7XHJcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgY29uZmlndXJhYmxlOiB0cnVlLFxyXG4gICAgd3JpdGFibGU6IHRydWUsXHJcbiAgICB2YWx1ZTogRW50aXR5LmNsYXNzTmFtZXMuY29uY2F0KFtMYXlvdXQuY2xhc3NOYW1lXSlcclxufSk7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUxheW91dC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/Layout.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/PointedRectangle.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/core/render/PointedRectangle.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PointedRectangle: () => (/* binding */ PointedRectangle)\n/* harmony export */ });\n/* harmony import */ var _Graphics__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Graphics */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/Graphics.js\");\n/* harmony import */ var _util_Math__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/Math */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Math.js\");\n\r\n\r\n/**\r\n * Draws a rectangle with a pointer.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nclass PointedRectangle extends _Graphics__WEBPACK_IMPORTED_MODULE_0__.Graphics {\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"pointerBaseWidth\") || this.isDirty(\"cornerRadius\") || this.isDirty(\"pointerLength\") || this.isDirty(\"pointerX\") || this.isDirty(\"pointerY\") || this.isDirty(\"width\") || this.isDirty(\"height\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            this.markDirtyBounds();\r\n            let w = this.width();\r\n            let h = this.height();\r\n            if (w > 0 && h > 0) {\r\n                let cr = this.get(\"cornerRadius\", 8);\r\n                cr = _util_Math__WEBPACK_IMPORTED_MODULE_1__.fitToRange(cr, 0, Math.min(w / 2, h / 2));\r\n                let x = this.get(\"pointerX\", 0);\r\n                let y = this.get(\"pointerY\", 0);\r\n                let bwh = this.get(\"pointerBaseWidth\", 15) / 2;\r\n                // corner coordinates\r\n                // top left\r\n                let xtl = 0;\r\n                let ytl = 0;\r\n                // top right\r\n                let xtr = w;\r\n                let ytr = 0;\r\n                // bottom right\r\n                let xbr = w;\r\n                let ybr = h;\r\n                // bottom left\r\n                let xbl = 0;\r\n                let ybl = h;\r\n                // find stem base side: http://$math.stackexchange.com/questions/274712/calculate-on-which-side-of-straign-line-is-dot-located\r\n                // d=(x−x1)(y2−y1)−(y−y1)(x2−x1)\r\n                let d1 = (x - xtl) * (ybr - ytl) - (y - ytl) * (xbr - xtl);\r\n                let d2 = (x - xbl) * (ytr - ybl) - (y - ybl) * (xtr - xbl);\r\n                const display = this._display;\r\n                // top\r\n                display.moveTo(cr, 0);\r\n                if (d1 > 0 && d2 > 0) {\r\n                    let stemX = Math.round(_util_Math__WEBPACK_IMPORTED_MODULE_1__.fitToRange(x, cr + bwh, w - bwh - cr));\r\n                    y = _util_Math__WEBPACK_IMPORTED_MODULE_1__.fitToRange(y, -Infinity, 0);\r\n                    display.lineTo(stemX - bwh, 0);\r\n                    display.lineTo(x, y);\r\n                    display.lineTo(stemX + bwh, 0);\r\n                }\r\n                display.lineTo(w - cr, 0);\r\n                display.arcTo(w, 0, w, cr, cr);\r\n                // right\r\n                if (d1 > 0 && d2 < 0) {\r\n                    let stemY = Math.round(_util_Math__WEBPACK_IMPORTED_MODULE_1__.fitToRange(y, cr + bwh, h - bwh - cr));\r\n                    x = _util_Math__WEBPACK_IMPORTED_MODULE_1__.fitToRange(x, w, Infinity);\r\n                    display.lineTo(w, cr);\r\n                    display.lineTo(w, Math.max(stemY - bwh, cr));\r\n                    display.lineTo(x, y);\r\n                    display.lineTo(w, stemY + bwh);\r\n                }\r\n                display.lineTo(w, h - cr);\r\n                display.arcTo(w, h, w - cr, h, cr);\r\n                // bottom\r\n                if (d1 < 0 && d2 < 0) {\r\n                    let stemX = Math.round(_util_Math__WEBPACK_IMPORTED_MODULE_1__.fitToRange(x, cr + bwh, w - bwh - cr));\r\n                    y = _util_Math__WEBPACK_IMPORTED_MODULE_1__.fitToRange(y, h, Infinity);\r\n                    display.lineTo(w - cr, h);\r\n                    display.lineTo(stemX + bwh, h);\r\n                    display.lineTo(x, y);\r\n                    display.lineTo(stemX - bwh, h);\r\n                }\r\n                display.lineTo(cr, h);\r\n                display.arcTo(0, h, 0, h - cr, cr);\r\n                // left\r\n                if (d1 < 0 && d2 > 0) {\r\n                    let stemY = Math.round(_util_Math__WEBPACK_IMPORTED_MODULE_1__.fitToRange(y, cr + bwh, h - cr - bwh));\r\n                    x = _util_Math__WEBPACK_IMPORTED_MODULE_1__.fitToRange(x, -Infinity, 0);\r\n                    display.lineTo(0, h - cr);\r\n                    display.lineTo(0, stemY + bwh);\r\n                    display.lineTo(x, y);\r\n                    display.lineTo(0, Math.max(stemY - bwh, cr));\r\n                }\r\n                display.lineTo(0, cr);\r\n                display.arcTo(0, 0, cr, 0, cr);\r\n                display.closePath();\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(PointedRectangle, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"PointedRectangle\"\r\n});\r\nObject.defineProperty(PointedRectangle, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: _Graphics__WEBPACK_IMPORTED_MODULE_0__.Graphics.classNames.concat([PointedRectangle.className])\r\n});\r\n//# sourceMappingURL=PointedRectangle.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNS8uaW50ZXJuYWwvY29yZS9yZW5kZXIvUG9pbnRlZFJlY3RhbmdsZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBc0M7QUFDQTtBQUN0QztBQUNBO0FBQ0E7QUFDQSxTQUFTLDJFQUEyRTtBQUNwRjtBQUNBO0FBQ08sK0JBQStCLCtDQUFRO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsa0RBQWdCO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyxrREFBZ0I7QUFDM0Qsd0JBQXdCLGtEQUFnQjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDLGtEQUFnQjtBQUMzRCx3QkFBd0Isa0RBQWdCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyxrREFBZ0I7QUFDM0Qsd0JBQXdCLGtEQUFnQjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMsa0RBQWdCO0FBQzNELHdCQUF3QixrREFBZ0I7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsK0NBQVE7QUFDbkIsQ0FBQztBQUNEIiwic291cmNlcyI6WyIvaG9tZS9ydW5uZXIvd29ya3NwYWNlL25vZGVfbW9kdWxlcy9AYW1jaGFydHMvYW1jaGFydHM1Ly5pbnRlcm5hbC9jb3JlL3JlbmRlci9Qb2ludGVkUmVjdGFuZ2xlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEdyYXBoaWNzIH0gZnJvbSBcIi4vR3JhcGhpY3NcIjtcclxuaW1wb3J0ICogYXMgJG1hdGggZnJvbSBcIi4uL3V0aWwvTWF0aFwiO1xyXG4vKipcclxuICogRHJhd3MgYSByZWN0YW5nbGUgd2l0aCBhIHBvaW50ZXIuXHJcbiAqXHJcbiAqIEBzZWUge0BsaW5rIGh0dHBzOi8vd3d3LmFtY2hhcnRzLmNvbS9kb2NzL3Y1L2NvbmNlcHRzL2NvbW1vbi1lbGVtZW50cy9ncmFwaGljcy99IGZvciBtb3JlIGluZm9cclxuICogQGltcG9ydGFudFxyXG4gKi9cclxuZXhwb3J0IGNsYXNzIFBvaW50ZWRSZWN0YW5nbGUgZXh0ZW5kcyBHcmFwaGljcyB7XHJcbiAgICBfYmVmb3JlQ2hhbmdlZCgpIHtcclxuICAgICAgICBzdXBlci5fYmVmb3JlQ2hhbmdlZCgpO1xyXG4gICAgICAgIGlmICh0aGlzLmlzRGlydHkoXCJwb2ludGVyQmFzZVdpZHRoXCIpIHx8IHRoaXMuaXNEaXJ0eShcImNvcm5lclJhZGl1c1wiKSB8fCB0aGlzLmlzRGlydHkoXCJwb2ludGVyTGVuZ3RoXCIpIHx8IHRoaXMuaXNEaXJ0eShcInBvaW50ZXJYXCIpIHx8IHRoaXMuaXNEaXJ0eShcInBvaW50ZXJZXCIpIHx8IHRoaXMuaXNEaXJ0eShcIndpZHRoXCIpIHx8IHRoaXMuaXNEaXJ0eShcImhlaWdodFwiKSkge1xyXG4gICAgICAgICAgICB0aGlzLl9jbGVhciA9IHRydWU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgX2NoYW5nZWQoKSB7XHJcbiAgICAgICAgc3VwZXIuX2NoYW5nZWQoKTtcclxuICAgICAgICBpZiAodGhpcy5fY2xlYXIpIHtcclxuICAgICAgICAgICAgdGhpcy5tYXJrRGlydHlCb3VuZHMoKTtcclxuICAgICAgICAgICAgbGV0IHcgPSB0aGlzLndpZHRoKCk7XHJcbiAgICAgICAgICAgIGxldCBoID0gdGhpcy5oZWlnaHQoKTtcclxuICAgICAgICAgICAgaWYgKHcgPiAwICYmIGggPiAwKSB7XHJcbiAgICAgICAgICAgICAgICBsZXQgY3IgPSB0aGlzLmdldChcImNvcm5lclJhZGl1c1wiLCA4KTtcclxuICAgICAgICAgICAgICAgIGNyID0gJG1hdGguZml0VG9SYW5nZShjciwgMCwgTWF0aC5taW4odyAvIDIsIGggLyAyKSk7XHJcbiAgICAgICAgICAgICAgICBsZXQgeCA9IHRoaXMuZ2V0KFwicG9pbnRlclhcIiwgMCk7XHJcbiAgICAgICAgICAgICAgICBsZXQgeSA9IHRoaXMuZ2V0KFwicG9pbnRlcllcIiwgMCk7XHJcbiAgICAgICAgICAgICAgICBsZXQgYndoID0gdGhpcy5nZXQoXCJwb2ludGVyQmFzZVdpZHRoXCIsIDE1KSAvIDI7XHJcbiAgICAgICAgICAgICAgICAvLyBjb3JuZXIgY29vcmRpbmF0ZXNcclxuICAgICAgICAgICAgICAgIC8vIHRvcCBsZWZ0XHJcbiAgICAgICAgICAgICAgICBsZXQgeHRsID0gMDtcclxuICAgICAgICAgICAgICAgIGxldCB5dGwgPSAwO1xyXG4gICAgICAgICAgICAgICAgLy8gdG9wIHJpZ2h0XHJcbiAgICAgICAgICAgICAgICBsZXQgeHRyID0gdztcclxuICAgICAgICAgICAgICAgIGxldCB5dHIgPSAwO1xyXG4gICAgICAgICAgICAgICAgLy8gYm90dG9tIHJpZ2h0XHJcbiAgICAgICAgICAgICAgICBsZXQgeGJyID0gdztcclxuICAgICAgICAgICAgICAgIGxldCB5YnIgPSBoO1xyXG4gICAgICAgICAgICAgICAgLy8gYm90dG9tIGxlZnRcclxuICAgICAgICAgICAgICAgIGxldCB4YmwgPSAwO1xyXG4gICAgICAgICAgICAgICAgbGV0IHlibCA9IGg7XHJcbiAgICAgICAgICAgICAgICAvLyBmaW5kIHN0ZW0gYmFzZSBzaWRlOiBodHRwOi8vJG1hdGguc3RhY2tleGNoYW5nZS5jb20vcXVlc3Rpb25zLzI3NDcxMi9jYWxjdWxhdGUtb24td2hpY2gtc2lkZS1vZi1zdHJhaWduLWxpbmUtaXMtZG90LWxvY2F0ZWRcclxuICAgICAgICAgICAgICAgIC8vIGQ9KHjiiJJ4MSkoeTLiiJJ5MSniiJIoeeKIknkxKSh4MuKIkngxKVxyXG4gICAgICAgICAgICAgICAgbGV0IGQxID0gKHggLSB4dGwpICogKHliciAtIHl0bCkgLSAoeSAtIHl0bCkgKiAoeGJyIC0geHRsKTtcclxuICAgICAgICAgICAgICAgIGxldCBkMiA9ICh4IC0geGJsKSAqICh5dHIgLSB5YmwpIC0gKHkgLSB5YmwpICogKHh0ciAtIHhibCk7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBkaXNwbGF5ID0gdGhpcy5fZGlzcGxheTtcclxuICAgICAgICAgICAgICAgIC8vIHRvcFxyXG4gICAgICAgICAgICAgICAgZGlzcGxheS5tb3ZlVG8oY3IsIDApO1xyXG4gICAgICAgICAgICAgICAgaWYgKGQxID4gMCAmJiBkMiA+IDApIHtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgc3RlbVggPSBNYXRoLnJvdW5kKCRtYXRoLmZpdFRvUmFuZ2UoeCwgY3IgKyBid2gsIHcgLSBid2ggLSBjcikpO1xyXG4gICAgICAgICAgICAgICAgICAgIHkgPSAkbWF0aC5maXRUb1JhbmdlKHksIC1JbmZpbml0eSwgMCk7XHJcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheS5saW5lVG8oc3RlbVggLSBid2gsIDApO1xyXG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXkubGluZVRvKHgsIHkpO1xyXG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXkubGluZVRvKHN0ZW1YICsgYndoLCAwKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGRpc3BsYXkubGluZVRvKHcgLSBjciwgMCk7XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5LmFyY1RvKHcsIDAsIHcsIGNyLCBjcik7XHJcbiAgICAgICAgICAgICAgICAvLyByaWdodFxyXG4gICAgICAgICAgICAgICAgaWYgKGQxID4gMCAmJiBkMiA8IDApIHtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgc3RlbVkgPSBNYXRoLnJvdW5kKCRtYXRoLmZpdFRvUmFuZ2UoeSwgY3IgKyBid2gsIGggLSBid2ggLSBjcikpO1xyXG4gICAgICAgICAgICAgICAgICAgIHggPSAkbWF0aC5maXRUb1JhbmdlKHgsIHcsIEluZmluaXR5KTtcclxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5LmxpbmVUbyh3LCBjcik7XHJcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheS5saW5lVG8odywgTWF0aC5tYXgoc3RlbVkgLSBid2gsIGNyKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheS5saW5lVG8oeCwgeSk7XHJcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheS5saW5lVG8odywgc3RlbVkgKyBid2gpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgZGlzcGxheS5saW5lVG8odywgaCAtIGNyKTtcclxuICAgICAgICAgICAgICAgIGRpc3BsYXkuYXJjVG8odywgaCwgdyAtIGNyLCBoLCBjcik7XHJcbiAgICAgICAgICAgICAgICAvLyBib3R0b21cclxuICAgICAgICAgICAgICAgIGlmIChkMSA8IDAgJiYgZDIgPCAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IHN0ZW1YID0gTWF0aC5yb3VuZCgkbWF0aC5maXRUb1JhbmdlKHgsIGNyICsgYndoLCB3IC0gYndoIC0gY3IpKTtcclxuICAgICAgICAgICAgICAgICAgICB5ID0gJG1hdGguZml0VG9SYW5nZSh5LCBoLCBJbmZpbml0eSk7XHJcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheS5saW5lVG8odyAtIGNyLCBoKTtcclxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5LmxpbmVUbyhzdGVtWCArIGJ3aCwgaCk7XHJcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheS5saW5lVG8oeCwgeSk7XHJcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheS5saW5lVG8oc3RlbVggLSBid2gsIGgpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgZGlzcGxheS5saW5lVG8oY3IsIGgpO1xyXG4gICAgICAgICAgICAgICAgZGlzcGxheS5hcmNUbygwLCBoLCAwLCBoIC0gY3IsIGNyKTtcclxuICAgICAgICAgICAgICAgIC8vIGxlZnRcclxuICAgICAgICAgICAgICAgIGlmIChkMSA8IDAgJiYgZDIgPiAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IHN0ZW1ZID0gTWF0aC5yb3VuZCgkbWF0aC5maXRUb1JhbmdlKHksIGNyICsgYndoLCBoIC0gY3IgLSBid2gpKTtcclxuICAgICAgICAgICAgICAgICAgICB4ID0gJG1hdGguZml0VG9SYW5nZSh4LCAtSW5maW5pdHksIDApO1xyXG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXkubGluZVRvKDAsIGggLSBjcik7XHJcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheS5saW5lVG8oMCwgc3RlbVkgKyBid2gpO1xyXG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXkubGluZVRvKHgsIHkpO1xyXG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXkubGluZVRvKDAsIE1hdGgubWF4KHN0ZW1ZIC0gYndoLCBjcikpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgZGlzcGxheS5saW5lVG8oMCwgY3IpO1xyXG4gICAgICAgICAgICAgICAgZGlzcGxheS5hcmNUbygwLCAwLCBjciwgMCwgY3IpO1xyXG4gICAgICAgICAgICAgICAgZGlzcGxheS5jbG9zZVBhdGgoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoUG9pbnRlZFJlY3RhbmdsZSwgXCJjbGFzc05hbWVcIiwge1xyXG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcclxuICAgIHdyaXRhYmxlOiB0cnVlLFxyXG4gICAgdmFsdWU6IFwiUG9pbnRlZFJlY3RhbmdsZVwiXHJcbn0pO1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoUG9pbnRlZFJlY3RhbmdsZSwgXCJjbGFzc05hbWVzXCIsIHtcclxuICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICBjb25maWd1cmFibGU6IHRydWUsXHJcbiAgICB3cml0YWJsZTogdHJ1ZSxcclxuICAgIHZhbHVlOiBHcmFwaGljcy5jbGFzc05hbWVzLmNvbmNhdChbUG9pbnRlZFJlY3RhbmdsZS5jbGFzc05hbWVdKVxyXG59KTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9UG9pbnRlZFJlY3RhbmdsZS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/PointedRectangle.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/Rectangle.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/core/render/Rectangle.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Rectangle: () => (/* binding */ Rectangle)\n/* harmony export */ });\n/* harmony import */ var _Graphics__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Graphics */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/Graphics.js\");\n\r\n/**\r\n * Draws a rectangle.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nclass Rectangle extends _Graphics__WEBPACK_IMPORTED_MODULE_0__.Graphics {\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._display.isMeasured = true;\r\n        this.setPrivateRaw(\"trustBounds\", true);\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"width\") || this.isDirty(\"height\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear && !this.get(\"draw\")) {\r\n            this._draw();\r\n        }\r\n    }\r\n    _draw() {\r\n        this._display.drawRect(0, 0, this.width(), this.height());\r\n    }\r\n    _updateSize() {\r\n        this.markDirty();\r\n        this._clear = true;\r\n    }\r\n}\r\nObject.defineProperty(Rectangle, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Rectangle\"\r\n});\r\nObject.defineProperty(Rectangle, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: _Graphics__WEBPACK_IMPORTED_MODULE_0__.Graphics.classNames.concat([Rectangle.className])\r\n});\r\n//# sourceMappingURL=Rectangle.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNS8uaW50ZXJuYWwvY29yZS9yZW5kZXIvUmVjdGFuZ2xlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXNDO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBLFNBQVMsMkVBQTJFO0FBQ3BGO0FBQ0E7QUFDTyx3QkFBd0IsK0NBQVE7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVywrQ0FBUTtBQUNuQixDQUFDO0FBQ0QiLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3Jrc3BhY2Uvbm9kZV9tb2R1bGVzL0BhbWNoYXJ0cy9hbWNoYXJ0czUvLmludGVybmFsL2NvcmUvcmVuZGVyL1JlY3RhbmdsZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBHcmFwaGljcyB9IGZyb20gXCIuL0dyYXBoaWNzXCI7XHJcbi8qKlxyXG4gKiBEcmF3cyBhIHJlY3RhbmdsZS5cclxuICpcclxuICogQHNlZSB7QGxpbmsgaHR0cHM6Ly93d3cuYW1jaGFydHMuY29tL2RvY3MvdjUvY29uY2VwdHMvY29tbW9uLWVsZW1lbnRzL2dyYXBoaWNzL30gZm9yIG1vcmUgaW5mb1xyXG4gKiBAaW1wb3J0YW50XHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgUmVjdGFuZ2xlIGV4dGVuZHMgR3JhcGhpY3Mge1xyXG4gICAgX2FmdGVyTmV3KCkge1xyXG4gICAgICAgIHN1cGVyLl9hZnRlck5ldygpO1xyXG4gICAgICAgIHRoaXMuX2Rpc3BsYXkuaXNNZWFzdXJlZCA9IHRydWU7XHJcbiAgICAgICAgdGhpcy5zZXRQcml2YXRlUmF3KFwidHJ1c3RCb3VuZHNcIiwgdHJ1ZSk7XHJcbiAgICB9XHJcbiAgICBfYmVmb3JlQ2hhbmdlZCgpIHtcclxuICAgICAgICBzdXBlci5fYmVmb3JlQ2hhbmdlZCgpO1xyXG4gICAgICAgIGlmICh0aGlzLmlzRGlydHkoXCJ3aWR0aFwiKSB8fCB0aGlzLmlzRGlydHkoXCJoZWlnaHRcIikgfHwgdGhpcy5pc1ByaXZhdGVEaXJ0eShcIndpZHRoXCIpIHx8IHRoaXMuaXNQcml2YXRlRGlydHkoXCJoZWlnaHRcIikpIHtcclxuICAgICAgICAgICAgdGhpcy5fY2xlYXIgPSB0cnVlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIF9jaGFuZ2VkKCkge1xyXG4gICAgICAgIHN1cGVyLl9jaGFuZ2VkKCk7XHJcbiAgICAgICAgaWYgKHRoaXMuX2NsZWFyICYmICF0aGlzLmdldChcImRyYXdcIikpIHtcclxuICAgICAgICAgICAgdGhpcy5fZHJhdygpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIF9kcmF3KCkge1xyXG4gICAgICAgIHRoaXMuX2Rpc3BsYXkuZHJhd1JlY3QoMCwgMCwgdGhpcy53aWR0aCgpLCB0aGlzLmhlaWdodCgpKTtcclxuICAgIH1cclxuICAgIF91cGRhdGVTaXplKCkge1xyXG4gICAgICAgIHRoaXMubWFya0RpcnR5KCk7XHJcbiAgICAgICAgdGhpcy5fY2xlYXIgPSB0cnVlO1xyXG4gICAgfVxyXG59XHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShSZWN0YW5nbGUsIFwiY2xhc3NOYW1lXCIsIHtcclxuICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICBjb25maWd1cmFibGU6IHRydWUsXHJcbiAgICB3cml0YWJsZTogdHJ1ZSxcclxuICAgIHZhbHVlOiBcIlJlY3RhbmdsZVwiXHJcbn0pO1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoUmVjdGFuZ2xlLCBcImNsYXNzTmFtZXNcIiwge1xyXG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcclxuICAgIHdyaXRhYmxlOiB0cnVlLFxyXG4gICAgdmFsdWU6IEdyYXBoaWNzLmNsYXNzTmFtZXMuY29uY2F0KFtSZWN0YW5nbGUuY2xhc3NOYW1lXSlcclxufSk7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVJlY3RhbmdsZS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/Rectangle.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/SerialChart.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/core/render/SerialChart.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SerialChart: () => (/* binding */ SerialChart)\n/* harmony export */ });\n/* harmony import */ var _Chart__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Chart */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/Chart.js\");\n/* harmony import */ var _core_render_Container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/render/Container */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/Container.js\");\n/* harmony import */ var _core_util_List__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/util/List */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/List.js\");\n/* harmony import */ var _core_util_Percent__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/util/Percent */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Percent.js\");\n/* harmony import */ var _core_util_Array__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/util/Array */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Array.js\");\n\r\n\r\n\r\n\r\n\r\n/**\r\n * A base class for all series-based charts.\r\n */\r\nclass SerialChart extends _Chart__WEBPACK_IMPORTED_MODULE_0__.Chart {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * A [[Container]] where chart will store all series.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"seriesContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _core_render_Container__WEBPACK_IMPORTED_MODULE_1__.Container.new(this._root, { width: _core_util_Percent__WEBPACK_IMPORTED_MODULE_2__.p100, height: _core_util_Percent__WEBPACK_IMPORTED_MODULE_2__.p100, isMeasured: false })\r\n        });\r\n        /**\r\n         * A list of chart's series.\r\n         */\r\n        Object.defineProperty(this, \"series\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new _core_util_List__WEBPACK_IMPORTED_MODULE_3__.ListAutoDispose()\r\n        });\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._disposers.push(this.series);\r\n        const children = this.seriesContainer.children;\r\n        this._disposers.push(this.series.events.onAll((change) => {\r\n            if (change.type === \"clear\") {\r\n                _core_util_Array__WEBPACK_IMPORTED_MODULE_4__.each(change.oldValues, (series) => {\r\n                    this._removeSeries(series);\r\n                });\r\n                const colors = this.get(\"colors\");\r\n                if (colors) {\r\n                    colors.reset();\r\n                }\r\n                const patterns = this.get(\"patterns\");\r\n                if (patterns) {\r\n                    patterns.reset();\r\n                }\r\n            }\r\n            else if (change.type === \"push\") {\r\n                children.moveValue(change.newValue);\r\n                this._processSeries(change.newValue);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                children.setIndex(change.index, change.newValue);\r\n                this._processSeries(change.newValue);\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                children.insertIndex(change.index, change.newValue);\r\n                this._processSeries(change.newValue);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                this._removeSeries(change.oldValue);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                children.moveValue(change.value, change.newIndex);\r\n                this._processSeries(change.value);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IListEvent type\");\r\n            }\r\n        }));\r\n    }\r\n    _processSeries(series) {\r\n        series.chart = this;\r\n        series._placeBulletsContainer(this);\r\n    }\r\n    _removeSeries(series) {\r\n        series._handleRemoved();\r\n        if (!series.isDisposed()) {\r\n            this.seriesContainer.children.removeValue(series);\r\n            series._removeBulletsContainer();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(SerialChart, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"SerialChart\"\r\n});\r\nObject.defineProperty(SerialChart, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: _Chart__WEBPACK_IMPORTED_MODULE_0__.Chart.classNames.concat([SerialChart.className])\r\n});\r\n//# sourceMappingURL=SerialChart.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNS8uaW50ZXJuYWwvY29yZS9yZW5kZXIvU2VyaWFsQ2hhcnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQWdDO0FBQ3dCO0FBQ0Q7QUFDUjtBQUNDO0FBQ2hEO0FBQ0E7QUFDQTtBQUNPLDBCQUEwQix5Q0FBSztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLDZEQUFTLG1CQUFtQixPQUFPLG9EQUFJLFVBQVUsb0RBQUkscUJBQXFCO0FBQzdGLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1Qiw0REFBZTtBQUN0QyxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0Isa0RBQVc7QUFDM0I7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyx5Q0FBSztBQUNoQixDQUFDO0FBQ0QiLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3Jrc3BhY2Uvbm9kZV9tb2R1bGVzL0BhbWNoYXJ0cy9hbWNoYXJ0czUvLmludGVybmFsL2NvcmUvcmVuZGVyL1NlcmlhbENoYXJ0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYXJ0IH0gZnJvbSBcIi4vQ2hhcnRcIjtcclxuaW1wb3J0IHsgQ29udGFpbmVyIH0gZnJvbSBcIi4uLy4uL2NvcmUvcmVuZGVyL0NvbnRhaW5lclwiO1xyXG5pbXBvcnQgeyBMaXN0QXV0b0Rpc3Bvc2UgfSBmcm9tIFwiLi4vLi4vY29yZS91dGlsL0xpc3RcIjtcclxuaW1wb3J0IHsgcDEwMCB9IGZyb20gXCIuLi8uLi9jb3JlL3V0aWwvUGVyY2VudFwiO1xyXG5pbXBvcnQgKiBhcyAkYXJyYXkgZnJvbSBcIi4uLy4uL2NvcmUvdXRpbC9BcnJheVwiO1xyXG4vKipcclxuICogQSBiYXNlIGNsYXNzIGZvciBhbGwgc2VyaWVzLWJhc2VkIGNoYXJ0cy5cclxuICovXHJcbmV4cG9ydCBjbGFzcyBTZXJpYWxDaGFydCBleHRlbmRzIENoYXJ0IHtcclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogQSBbW0NvbnRhaW5lcl1dIHdoZXJlIGNoYXJ0IHdpbGwgc3RvcmUgYWxsIHNlcmllcy5cclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIEBkZWZhdWx0IENvbnRhaW5lci5uZXcoKVxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcInNlcmllc0NvbnRhaW5lclwiLCB7XHJcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcclxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXHJcbiAgICAgICAgICAgIHZhbHVlOiBDb250YWluZXIubmV3KHRoaXMuX3Jvb3QsIHsgd2lkdGg6IHAxMDAsIGhlaWdodDogcDEwMCwgaXNNZWFzdXJlZDogZmFsc2UgfSlcclxuICAgICAgICB9KTtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBBIGxpc3Qgb2YgY2hhcnQncyBzZXJpZXMuXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwic2VyaWVzXCIsIHtcclxuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxyXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcclxuICAgICAgICAgICAgdmFsdWU6IG5ldyBMaXN0QXV0b0Rpc3Bvc2UoKVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgX2FmdGVyTmV3KCkge1xyXG4gICAgICAgIHN1cGVyLl9hZnRlck5ldygpO1xyXG4gICAgICAgIHRoaXMuX2Rpc3Bvc2Vycy5wdXNoKHRoaXMuc2VyaWVzKTtcclxuICAgICAgICBjb25zdCBjaGlsZHJlbiA9IHRoaXMuc2VyaWVzQ29udGFpbmVyLmNoaWxkcmVuO1xyXG4gICAgICAgIHRoaXMuX2Rpc3Bvc2Vycy5wdXNoKHRoaXMuc2VyaWVzLmV2ZW50cy5vbkFsbCgoY2hhbmdlKSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChjaGFuZ2UudHlwZSA9PT0gXCJjbGVhclwiKSB7XHJcbiAgICAgICAgICAgICAgICAkYXJyYXkuZWFjaChjaGFuZ2Uub2xkVmFsdWVzLCAoc2VyaWVzKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fcmVtb3ZlU2VyaWVzKHNlcmllcyk7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGNvbG9ycyA9IHRoaXMuZ2V0KFwiY29sb3JzXCIpO1xyXG4gICAgICAgICAgICAgICAgaWYgKGNvbG9ycykge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbG9ycy5yZXNldCgpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgY29uc3QgcGF0dGVybnMgPSB0aGlzLmdldChcInBhdHRlcm5zXCIpO1xyXG4gICAgICAgICAgICAgICAgaWYgKHBhdHRlcm5zKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcGF0dGVybnMucmVzZXQoKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIGlmIChjaGFuZ2UudHlwZSA9PT0gXCJwdXNoXCIpIHtcclxuICAgICAgICAgICAgICAgIGNoaWxkcmVuLm1vdmVWYWx1ZShjaGFuZ2UubmV3VmFsdWUpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fcHJvY2Vzc1NlcmllcyhjaGFuZ2UubmV3VmFsdWUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2UgaWYgKGNoYW5nZS50eXBlID09PSBcInNldEluZGV4XCIpIHtcclxuICAgICAgICAgICAgICAgIGNoaWxkcmVuLnNldEluZGV4KGNoYW5nZS5pbmRleCwgY2hhbmdlLm5ld1ZhbHVlKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuX3Byb2Nlc3NTZXJpZXMoY2hhbmdlLm5ld1ZhbHVlKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIGlmIChjaGFuZ2UudHlwZSA9PT0gXCJpbnNlcnRJbmRleFwiKSB7XHJcbiAgICAgICAgICAgICAgICBjaGlsZHJlbi5pbnNlcnRJbmRleChjaGFuZ2UuaW5kZXgsIGNoYW5nZS5uZXdWYWx1ZSk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9wcm9jZXNzU2VyaWVzKGNoYW5nZS5uZXdWYWx1ZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSBpZiAoY2hhbmdlLnR5cGUgPT09IFwicmVtb3ZlSW5kZXhcIikge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fcmVtb3ZlU2VyaWVzKGNoYW5nZS5vbGRWYWx1ZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSBpZiAoY2hhbmdlLnR5cGUgPT09IFwibW92ZUluZGV4XCIpIHtcclxuICAgICAgICAgICAgICAgIGNoaWxkcmVuLm1vdmVWYWx1ZShjaGFuZ2UudmFsdWUsIGNoYW5nZS5uZXdJbmRleCk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9wcm9jZXNzU2VyaWVzKGNoYW5nZS52YWx1ZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJVbmtub3duIElMaXN0RXZlbnQgdHlwZVwiKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pKTtcclxuICAgIH1cclxuICAgIF9wcm9jZXNzU2VyaWVzKHNlcmllcykge1xyXG4gICAgICAgIHNlcmllcy5jaGFydCA9IHRoaXM7XHJcbiAgICAgICAgc2VyaWVzLl9wbGFjZUJ1bGxldHNDb250YWluZXIodGhpcyk7XHJcbiAgICB9XHJcbiAgICBfcmVtb3ZlU2VyaWVzKHNlcmllcykge1xyXG4gICAgICAgIHNlcmllcy5faGFuZGxlUmVtb3ZlZCgpO1xyXG4gICAgICAgIGlmICghc2VyaWVzLmlzRGlzcG9zZWQoKSkge1xyXG4gICAgICAgICAgICB0aGlzLnNlcmllc0NvbnRhaW5lci5jaGlsZHJlbi5yZW1vdmVWYWx1ZShzZXJpZXMpO1xyXG4gICAgICAgICAgICBzZXJpZXMuX3JlbW92ZUJ1bGxldHNDb250YWluZXIoKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KFNlcmlhbENoYXJ0LCBcImNsYXNzTmFtZVwiLCB7XHJcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgY29uZmlndXJhYmxlOiB0cnVlLFxyXG4gICAgd3JpdGFibGU6IHRydWUsXHJcbiAgICB2YWx1ZTogXCJTZXJpYWxDaGFydFwiXHJcbn0pO1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoU2VyaWFsQ2hhcnQsIFwiY2xhc3NOYW1lc1wiLCB7XHJcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgY29uZmlndXJhYmxlOiB0cnVlLFxyXG4gICAgd3JpdGFibGU6IHRydWUsXHJcbiAgICB2YWx1ZTogQ2hhcnQuY2xhc3NOYW1lcy5jb25jYXQoW1NlcmlhbENoYXJ0LmNsYXNzTmFtZV0pXHJcbn0pO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1TZXJpYWxDaGFydC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/SerialChart.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/Series.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/core/render/Series.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Series: () => (/* binding */ Series)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var _core_render_Component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/render/Component */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/Component.js\");\n/* harmony import */ var _core_util_List__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/util/List */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/List.js\");\n/* harmony import */ var _core_util_Color__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/util/Color */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Color.js\");\n/* harmony import */ var _core_util_Animation__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/util/Animation */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Animation.js\");\n/* harmony import */ var _core_util_Percent__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/util/Percent */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Percent.js\");\n/* harmony import */ var _core_render_Container__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/render/Container */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/Container.js\");\n/* harmony import */ var _core_render_Label__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/render/Label */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/Label.js\");\n/* harmony import */ var _core_util_Array__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/util/Array */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Array.js\");\n/* harmony import */ var _core_util_Type__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/util/Type */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Type.js\");\n/* harmony import */ var _core_util_Time__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/util/Time */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Time.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//import { Animations } from \"../../core/util/Animation\";\r\n\r\n\r\n\r\n/**\r\n * A base class for all series.\r\n */\r\nclass Series extends _core_render_Component__WEBPACK_IMPORTED_MODULE_0__.Component {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_aggregatesCalculated\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_selectionAggregatesCalculated\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dataProcessed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_psi\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_pei\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A chart series belongs to.\r\n         */\r\n        Object.defineProperty(this, \"chart\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * List of bullets to use for the series.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/bullets/} for more info\r\n         */\r\n        Object.defineProperty(this, \"bullets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new _core_util_List__WEBPACK_IMPORTED_MODULE_1__.List()\r\n        });\r\n        /**\r\n         * A [[Container]] series' bullets are stored in.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"bulletsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _core_render_Container__WEBPACK_IMPORTED_MODULE_2__.Container.new(this._root, { width: _core_util_Percent__WEBPACK_IMPORTED_MODULE_3__.p100, height: _core_util_Percent__WEBPACK_IMPORTED_MODULE_3__.p100, position: \"absolute\" })\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this.valueFields.push(\"value\", \"customValue\");\r\n        super._afterNew();\r\n        this.setPrivate(\"customData\", {});\r\n        this._disposers.push(this.bullets.events.onAll((change) => {\r\n            if (change.type === \"clear\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else if (change.type === \"push\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IListEvent type\");\r\n            }\r\n        }));\r\n    }\r\n    _dispose() {\r\n        this.bulletsContainer.dispose(); // can be in a different parent\r\n        super._dispose();\r\n    }\r\n    startIndex() {\r\n        let len = this.dataItems.length;\r\n        return Math.min(this.getPrivate(\"startIndex\", 0), len);\r\n    }\r\n    endIndex() {\r\n        let len = this.dataItems.length;\r\n        return Math.min(this.getPrivate(\"endIndex\", len), len);\r\n    }\r\n    _handleBullets(dataItems) {\r\n        _core_util_Array__WEBPACK_IMPORTED_MODULE_4__.each(dataItems, (dataItem) => {\r\n            const bullets = dataItem.bullets;\r\n            if (bullets) {\r\n                _core_util_Array__WEBPACK_IMPORTED_MODULE_4__.each(bullets, (bullet) => {\r\n                    bullet.dispose();\r\n                });\r\n                dataItem.bullets = undefined;\r\n            }\r\n        });\r\n        this.markDirtyValues();\r\n    }\r\n    /**\r\n     * Looks up and returns a data item by its ID.\r\n     *\r\n     * @param   id  ID\r\n     * @return      Data item\r\n     */\r\n    getDataItemById(id) {\r\n        return _core_util_Array__WEBPACK_IMPORTED_MODULE_4__.find(this.dataItems, (dataItem) => {\r\n            return dataItem.get(\"id\") == id;\r\n        });\r\n    }\r\n    _makeBullets(dataItem) {\r\n        if (this._shouldMakeBullet(dataItem)) {\r\n            dataItem.bullets = [];\r\n            this.bullets.each((bulletFunction) => {\r\n                this._makeBullet(dataItem, bulletFunction);\r\n            });\r\n        }\r\n    }\r\n    _shouldMakeBullet(_dataItem) {\r\n        return true;\r\n    }\r\n    _makeBullet(dataItem, bulletFunction, index) {\r\n        const bullet = bulletFunction(this._root, this, dataItem);\r\n        if (bullet) {\r\n            bullet._index = index;\r\n            this._makeBulletReal(dataItem, bullet);\r\n        }\r\n        return bullet;\r\n    }\r\n    _makeBulletReal(dataItem, bullet) {\r\n        let sprite = bullet.get(\"sprite\");\r\n        if (sprite) {\r\n            sprite._setDataItem(dataItem);\r\n            sprite.setRaw(\"position\", \"absolute\");\r\n            this.bulletsContainer.children.push(sprite);\r\n        }\r\n        bullet.series = this;\r\n        dataItem.bullets.push(bullet);\r\n    }\r\n    /**\r\n     * Adds bullet directly to a data item.\r\n     *\r\n     * Please note: method accepts [[Bullet]] instance as a paramter, not a\r\n     * reference to a function.\r\n     *\r\n     * You should add Bullet instance, not a method like you do it on series.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/bullets/#Adding_directly_to_data_item} for more info\r\n     * @since 5.6.0\r\n     *\r\n     * @param  dataItem  Target data item\r\n     * @param  bullet    Bullet instance\r\n     */\r\n    addBullet(dataItem, bullet) {\r\n        if (!dataItem.bullets) {\r\n            dataItem.bullets = [];\r\n        }\r\n        if (bullet) {\r\n            this._makeBulletReal(dataItem, bullet);\r\n        }\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._aggregatesCalculated = false;\r\n        this._selectionAggregatesCalculated = false;\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        let startIndex = this.startIndex();\r\n        let endIndex = this.endIndex();\r\n        if (this.isDirty(\"name\")) {\r\n            this.updateLegendValue();\r\n        }\r\n        if (this.isDirty(\"heatRules\")) {\r\n            this._valuesDirty = true;\r\n        }\r\n        if (this.isPrivateDirty(\"baseValueSeries\")) {\r\n            const baseValueSeries = this.getPrivate(\"baseValueSeries\");\r\n            if (baseValueSeries) {\r\n                this._disposers.push(baseValueSeries.onPrivate(\"startIndex\", () => {\r\n                    this.markDirtyValues();\r\n                }));\r\n            }\r\n        }\r\n        const calculateAggregates = this.get(\"calculateAggregates\");\r\n        if (calculateAggregates) {\r\n            if (this._valuesDirty && !this._dataProcessed) {\r\n                if (!this._aggregatesCalculated) {\r\n                    this._calculateAggregates(0, this.dataItems.length);\r\n                    this._aggregatesCalculated = true;\r\n                    if (startIndex != 0) {\r\n                        this._psi = undefined;\r\n                    }\r\n                }\r\n            }\r\n            if ((this._psi != startIndex || this._pei != endIndex || this.isPrivateDirty(\"adjustedStartIndex\")) && !this._selectionAggregatesCalculated) {\r\n                if (startIndex === 0 && endIndex === this.dataItems.length && this._aggregatesCalculated) {\r\n                    // void\r\n                }\r\n                else {\r\n                    this._calculateAggregates(startIndex, endIndex);\r\n                }\r\n                this._selectionAggregatesCalculated = true;\r\n            }\r\n        }\r\n        if (this.isDirty(\"tooltip\")) {\r\n            let tooltip = this.get(\"tooltip\");\r\n            if (tooltip) {\r\n                tooltip.hide(0);\r\n                tooltip.set(\"tooltipTarget\", this);\r\n            }\r\n        }\r\n        if (this.isDirty(\"fill\") || this.isDirty(\"stroke\")) {\r\n            let markerRectangle;\r\n            const legendDataItem = this.get(\"legendDataItem\");\r\n            if (legendDataItem) {\r\n                markerRectangle = legendDataItem.get(\"markerRectangle\");\r\n                if (markerRectangle) {\r\n                    if (this.isVisible()) {\r\n                        if (this.isDirty(\"stroke\")) {\r\n                            let stroke = this.get(\"stroke\");\r\n                            markerRectangle.set(\"stroke\", stroke);\r\n                        }\r\n                        if (this.isDirty(\"fill\")) {\r\n                            let fill = this.get(\"fill\");\r\n                            markerRectangle.set(\"fill\", fill);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.updateLegendMarker(undefined);\r\n        }\r\n        if (this.bullets.length > 0) {\r\n            let startIndex = this.startIndex();\r\n            let endIndex = this.endIndex();\r\n            if (endIndex < this.dataItems.length) {\r\n                endIndex++;\r\n            }\r\n            for (let i = startIndex; i < endIndex; i++) {\r\n                let dataItem = this.dataItems[i];\r\n                if (!dataItem.bullets) {\r\n                    this._makeBullets(dataItem);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _handleRemoved() {\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _adjustStartIndex(index) {\r\n        return index;\r\n    }\r\n    _calculateAggregates(startIndex, endIndex) {\r\n        let fields = this._valueFields;\r\n        if (!fields) {\r\n            throw new Error(\"No value fields are set for the series.\");\r\n        }\r\n        const sum = {};\r\n        const absSum = {};\r\n        const count = {};\r\n        const low = {};\r\n        const high = {};\r\n        const open = {};\r\n        const close = {};\r\n        const average = {};\r\n        const previous = {};\r\n        _core_util_Array__WEBPACK_IMPORTED_MODULE_4__.each(fields, (key) => {\r\n            sum[key] = 0;\r\n            absSum[key] = 0;\r\n            count[key] = 0;\r\n        });\r\n        _core_util_Array__WEBPACK_IMPORTED_MODULE_4__.each(fields, (key) => {\r\n            let change = key + \"Change\";\r\n            let changePercent = key + \"ChangePercent\";\r\n            let changePrevious = key + \"ChangePrevious\";\r\n            let changePreviousPercent = key + \"ChangePreviousPercent\";\r\n            let changeSelection = key + \"ChangeSelection\";\r\n            let changeSelectionPercent = key + \"ChangeSelectionPercent\";\r\n            let openKey = \"valueY\";\r\n            if (key == \"valueX\" || key == \"openValueX\" || key == \"lowValueX\" || key == \"highValueX\") {\r\n                openKey = \"valueX\";\r\n            }\r\n            const baseValueSeries = this.getPrivate(\"baseValueSeries\");\r\n            const adjustedStartIndex = this.getPrivate(\"adjustedStartIndex\", startIndex);\r\n            for (let i = adjustedStartIndex; i < endIndex; i++) {\r\n                const dataItem = this.dataItems[i];\r\n                if (dataItem) {\r\n                    let value = dataItem.get(key);\r\n                    if (value != null) {\r\n                        count[key]++;\r\n                        sum[key] += value;\r\n                        absSum[key] += Math.abs(value);\r\n                        average[key] = sum[key] / count[key];\r\n                        if (low[key] > value || low[key] == null) {\r\n                            low[key] = value;\r\n                        }\r\n                        if (high[key] < value || high[key] == null) {\r\n                            high[key] = value;\r\n                        }\r\n                        close[key] = value;\r\n                        if (open[key] == null) {\r\n                            open[key] = value;\r\n                            previous[key] = value;\r\n                            if (baseValueSeries) {\r\n                                open[openKey] = baseValueSeries._getBase(openKey);\r\n                            }\r\n                        }\r\n                        if (startIndex === 0) {\r\n                            dataItem.setRaw((change), value - open[openKey]);\r\n                            dataItem.setRaw((changePercent), (value - open[openKey]) / open[openKey] * 100);\r\n                        }\r\n                        dataItem.setRaw((changePrevious), value - previous[openKey]);\r\n                        dataItem.setRaw((changePreviousPercent), (value - previous[openKey]) / previous[openKey] * 100);\r\n                        dataItem.setRaw((changeSelection), value - open[openKey]);\r\n                        dataItem.setRaw((changeSelectionPercent), (value - open[openKey]) / open[openKey] * 100);\r\n                        previous[key] = value;\r\n                    }\r\n                }\r\n            }\r\n            if (endIndex < this.dataItems.length - 1) {\r\n                const dataItem = this.dataItems[endIndex];\r\n                if (dataItem) {\r\n                    let value = dataItem.get(key);\r\n                    dataItem.setRaw((changePrevious), value - previous[openKey]);\r\n                    dataItem.setRaw((changePreviousPercent), (value - previous[openKey]) / previous[openKey] * 100);\r\n                    dataItem.setRaw((changeSelection), value - open[openKey]);\r\n                    dataItem.setRaw((changeSelectionPercent), (value - open[openKey]) / open[openKey] * 100);\r\n                }\r\n            }\r\n            if (startIndex > 0) {\r\n                startIndex--;\r\n            }\r\n            delete previous[key];\r\n            for (let i = startIndex; i < adjustedStartIndex; i++) {\r\n                const dataItem = this.dataItems[i];\r\n                if (dataItem) {\r\n                    let value = dataItem.get(key);\r\n                    if (previous[key] == null) {\r\n                        previous[key] = value;\r\n                    }\r\n                    if (value != null) {\r\n                        dataItem.setRaw((changePrevious), value - previous[openKey]);\r\n                        dataItem.setRaw((changePreviousPercent), (value - previous[openKey]) / previous[openKey] * 100);\r\n                        dataItem.setRaw((changeSelection), value - open[openKey]);\r\n                        dataItem.setRaw((changeSelectionPercent), (value - open[openKey]) / open[openKey] * 100);\r\n                        previous[key] = value;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        _core_util_Array__WEBPACK_IMPORTED_MODULE_4__.each(fields, (key) => {\r\n            this.setPrivate((key + \"AverageSelection\"), average[key]);\r\n            this.setPrivate((key + \"CountSelection\"), count[key]);\r\n            this.setPrivate((key + \"SumSelection\"), sum[key]);\r\n            this.setPrivate((key + \"AbsoluteSumSelection\"), absSum[key]);\r\n            this.setPrivate((key + \"LowSelection\"), low[key]);\r\n            this.setPrivate((key + \"HighSelection\"), high[key]);\r\n            this.setPrivate((key + \"OpenSelection\"), open[key]);\r\n            this.setPrivate((key + \"CloseSelection\"), close[key]);\r\n        });\r\n        if (startIndex === 0 && endIndex === this.dataItems.length) {\r\n            _core_util_Array__WEBPACK_IMPORTED_MODULE_4__.each(fields, (key) => {\r\n                this.setPrivate((key + \"Average\"), average[key]);\r\n                this.setPrivate((key + \"Count\"), count[key]);\r\n                this.setPrivate((key + \"Sum\"), sum[key]);\r\n                this.setPrivate((key + \"AbsoluteSum\"), absSum[key]);\r\n                this.setPrivate((key + \"Low\"), low[key]);\r\n                this.setPrivate((key + \"High\"), high[key]);\r\n                this.setPrivate((key + \"Open\"), open[key]);\r\n                this.setPrivate((key + \"Close\"), close[key]);\r\n            });\r\n        }\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        this._psi = this.startIndex();\r\n        this._pei = this.endIndex();\r\n        if (this.isDirty(\"visible\")) {\r\n            this.bulletsContainer.set(\"visible\", this.get(\"visible\"));\r\n        }\r\n        // Apply heat rules\r\n        const rules = this.get(\"heatRules\");\r\n        if (this._valuesDirty && rules && rules.length > 0) {\r\n            _core_util_Array__WEBPACK_IMPORTED_MODULE_4__.each(rules, (rule) => {\r\n                const minValue = rule.minValue || this.getPrivate((rule.dataField + \"Low\")) || 0;\r\n                const maxValue = rule.maxValue || this.getPrivate((rule.dataField + \"High\")) || 0;\r\n                _core_util_Array__WEBPACK_IMPORTED_MODULE_4__.each(rule.target._entities, (target) => {\r\n                    const value = target.dataItem.get(rule.dataField);\r\n                    if (!_core_util_Type__WEBPACK_IMPORTED_MODULE_5__.isNumber(value)) {\r\n                        if (rule.neutral) {\r\n                            target.set(rule.key, rule.neutral);\r\n                        }\r\n                        const states = target.states;\r\n                        if (states) {\r\n                            const defaultState = states.lookup(\"default\");\r\n                            if (defaultState && rule.neutral) {\r\n                                defaultState.set(rule.key, rule.neutral);\r\n                            }\r\n                        }\r\n                        if (!rule.customFunction) {\r\n                            return;\r\n                        }\r\n                    }\r\n                    if (rule.customFunction) {\r\n                        rule.customFunction.call(this, target, minValue, maxValue, value);\r\n                    }\r\n                    else {\r\n                        let percent;\r\n                        if (rule.logarithmic) {\r\n                            percent = (Math.log(value) * Math.LOG10E - Math.log(minValue) * Math.LOG10E) / ((Math.log(maxValue) * Math.LOG10E - Math.log(minValue) * Math.LOG10E));\r\n                        }\r\n                        else {\r\n                            percent = (value - minValue) / (maxValue - minValue);\r\n                        }\r\n                        if (_core_util_Type__WEBPACK_IMPORTED_MODULE_5__.isNumber(value) && (!_core_util_Type__WEBPACK_IMPORTED_MODULE_5__.isNumber(percent) || Math.abs(percent) == Infinity)) {\r\n                            percent = 0.5;\r\n                        }\r\n                        // fixes problems if all values are the same\r\n                        let propertyValue;\r\n                        if (_core_util_Type__WEBPACK_IMPORTED_MODULE_5__.isNumber(rule.min)) {\r\n                            propertyValue = rule.min + (rule.max - rule.min) * percent;\r\n                        }\r\n                        else if (rule.min instanceof _core_util_Color__WEBPACK_IMPORTED_MODULE_6__.Color) {\r\n                            propertyValue = _core_util_Color__WEBPACK_IMPORTED_MODULE_6__.Color.interpolate(percent, rule.min, rule.max);\r\n                        }\r\n                        else if (rule.min instanceof _core_util_Percent__WEBPACK_IMPORTED_MODULE_3__.Percent) {\r\n                            propertyValue = (0,_core_util_Animation__WEBPACK_IMPORTED_MODULE_7__.percentInterpolate)(percent, rule.min, rule.max);\r\n                        }\r\n                        target.set(rule.key, propertyValue);\r\n                        const states = target.states;\r\n                        if (states) {\r\n                            const defaultState = states.lookup(\"default\");\r\n                            if (defaultState) {\r\n                                defaultState.set(rule.key, propertyValue);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        if (this.get(\"visible\")) {\r\n            let count = this.dataItems.length;\r\n            let startIndex = this.startIndex();\r\n            let endIndex = this.endIndex();\r\n            if (endIndex < count) {\r\n                endIndex++;\r\n            }\r\n            if (startIndex > 0) {\r\n                startIndex--;\r\n            }\r\n            for (let i = 0; i < startIndex; i++) {\r\n                this._hideBullets(this.dataItems[i]);\r\n            }\r\n            for (let i = startIndex; i < endIndex; i++) {\r\n                this._positionBullets(this.dataItems[i]);\r\n            }\r\n            for (let i = endIndex; i < count; i++) {\r\n                this._hideBullets(this.dataItems[i]);\r\n            }\r\n        }\r\n    }\r\n    _positionBullets(dataItem) {\r\n        if (dataItem.bullets) {\r\n            _core_util_Array__WEBPACK_IMPORTED_MODULE_4__.each(dataItem.bullets, (bullet) => {\r\n                this._positionBullet(bullet);\r\n                const sprite = bullet.get(\"sprite\");\r\n                if (bullet.get(\"dynamic\")) {\r\n                    if (sprite) {\r\n                        sprite._markDirtyKey(\"fill\");\r\n                        sprite.markDirtySize();\r\n                    }\r\n                    if (sprite instanceof _core_render_Container__WEBPACK_IMPORTED_MODULE_2__.Container) {\r\n                        sprite.walkChildren((child) => {\r\n                            child._markDirtyKey(\"fill\");\r\n                            child.markDirtySize();\r\n                            if (child instanceof _core_render_Label__WEBPACK_IMPORTED_MODULE_8__.Label) {\r\n                                child.text.markDirtyText();\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                if (sprite instanceof _core_render_Label__WEBPACK_IMPORTED_MODULE_8__.Label && sprite.get(\"populateText\")) {\r\n                    sprite.text.markDirtyText();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _hideBullets(dataItem) {\r\n        if (dataItem.bullets) {\r\n            _core_util_Array__WEBPACK_IMPORTED_MODULE_4__.each(dataItem.bullets, (bullet) => {\r\n                let sprite = bullet.get(\"sprite\");\r\n                if (sprite) {\r\n                    sprite.setPrivate(\"visible\", false);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _positionBullet(_bullet) {\r\n    }\r\n    _placeBulletsContainer(chart) {\r\n        chart.bulletsContainer.children.moveValue(this.bulletsContainer);\r\n    }\r\n    _removeBulletsContainer() {\r\n        const bulletsContainer = this.bulletsContainer;\r\n        if (bulletsContainer.parent) {\r\n            bulletsContainer.parent.children.removeValue(bulletsContainer);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(dataItem) {\r\n        //super.disposeDataItem(dataItem); // does nothing\r\n        const bullets = dataItem.bullets;\r\n        if (bullets) {\r\n            _core_util_Array__WEBPACK_IMPORTED_MODULE_4__.each(bullets, (bullet) => {\r\n                bullet.dispose();\r\n            });\r\n        }\r\n    }\r\n    _getItemReaderLabel() {\r\n        return \"\";\r\n    }\r\n    /**\r\n     * Shows series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    showDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            showDataItem: { get: () => super.showDataItem }\r\n        });\r\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(this, void 0, void 0, function* () {\r\n            const promises = [_super.showDataItem.call(this, dataItem, duration)];\r\n            const bullets = dataItem.bullets;\r\n            if (bullets) {\r\n                _core_util_Array__WEBPACK_IMPORTED_MODULE_4__.each(bullets, (bullet) => {\r\n                    const sprite = bullet.get(\"sprite\");\r\n                    if (sprite) {\r\n                        promises.push(sprite.show(duration));\r\n                    }\r\n                });\r\n            }\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * Hides series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    hideDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            hideDataItem: { get: () => super.hideDataItem }\r\n        });\r\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(this, void 0, void 0, function* () {\r\n            const promises = [_super.hideDataItem.call(this, dataItem, duration)];\r\n            const bullets = dataItem.bullets;\r\n            if (bullets) {\r\n                _core_util_Array__WEBPACK_IMPORTED_MODULE_4__.each(bullets, (bullet) => {\r\n                    const sprite = bullet.get(\"sprite\");\r\n                    if (sprite) {\r\n                        promises.push(sprite.hide(duration));\r\n                    }\r\n                });\r\n            }\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    _sequencedShowHide(show, duration) {\r\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(this, void 0, void 0, function* () {\r\n            if (this.get(\"sequencedInterpolation\")) {\r\n                if (!_core_util_Type__WEBPACK_IMPORTED_MODULE_5__.isNumber(duration)) {\r\n                    duration = this.get(\"interpolationDuration\", 0);\r\n                }\r\n                if (duration > 0) {\r\n                    const startIndex = this.startIndex();\r\n                    const endIndex = this.endIndex();\r\n                    yield Promise.all(_core_util_Array__WEBPACK_IMPORTED_MODULE_4__.map(this.dataItems, (dataItem, i) => (0,tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(this, void 0, void 0, function* () {\r\n                        let realDuration = duration || 0;\r\n                        if (i < startIndex - 10 || i > endIndex + 10) {\r\n                            realDuration = 0;\r\n                        }\r\n                        //let delay = this.get(\"sequencedDelay\", 0) * i + realDuration * (i - startIndex) / (endIndex - startIndex);\r\n                        let delay = this.get(\"sequencedDelay\", 0) + realDuration / (endIndex - startIndex);\r\n                        yield _core_util_Time__WEBPACK_IMPORTED_MODULE_10__.sleep(delay * (i - startIndex));\r\n                        if (show) {\r\n                            yield this.showDataItem(dataItem, realDuration);\r\n                        }\r\n                        else {\r\n                            yield this.hideDataItem(dataItem, realDuration);\r\n                        }\r\n                    })));\r\n                }\r\n                else {\r\n                    yield Promise.all(_core_util_Array__WEBPACK_IMPORTED_MODULE_4__.map(this.dataItems, (dataItem) => {\r\n                        if (show) {\r\n                            return this.showDataItem(dataItem, 0);\r\n                        }\r\n                        else {\r\n                            return this.hideDataItem(dataItem, 0);\r\n                        }\r\n                    }));\r\n                }\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLegendValue(dataItem) {\r\n        if (dataItem) {\r\n            const legendDataItem = dataItem.get(\"legendDataItem\");\r\n            if (legendDataItem) {\r\n                const valueLabel = legendDataItem.get(\"valueLabel\");\r\n                if (valueLabel) {\r\n                    const text = valueLabel.text;\r\n                    let txt = \"\";\r\n                    valueLabel._setDataItem(dataItem);\r\n                    txt = this.get(\"legendValueText\", text.get(\"text\", \"\"));\r\n                    valueLabel.set(\"text\", txt);\r\n                    text.markDirtyText();\r\n                }\r\n                const label = legendDataItem.get(\"label\");\r\n                if (label) {\r\n                    const text = label.text;\r\n                    let txt = \"\";\r\n                    label._setDataItem(dataItem);\r\n                    txt = this.get(\"legendLabelText\", text.get(\"text\", \"\"));\r\n                    label.set(\"text\", txt);\r\n                    text.markDirtyText();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLegendMarker(_dataItem) {\r\n    }\r\n    _onHide() {\r\n        super._onHide();\r\n        const tooltip = this.getTooltip();\r\n        if (tooltip) {\r\n            tooltip.hide();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    hoverDataItem(_dataItem) { }\r\n    /**\r\n     * @ignore\r\n     */\r\n    unhoverDataItem(_dataItem) { }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _getBase(key) {\r\n        const dataItem = this.dataItems[this.startIndex()];\r\n        if (dataItem) {\r\n            return dataItem.get(key);\r\n        }\r\n        return 0;\r\n    }\r\n}\r\nObject.defineProperty(Series, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Series\"\r\n});\r\nObject.defineProperty(Series, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: _core_render_Component__WEBPACK_IMPORTED_MODULE_0__.Component.classNames.concat([Series.className])\r\n});\r\n//# sourceMappingURL=Series.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/Series.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/Sprite.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/core/render/Sprite.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Sprite: () => (/* binding */ Sprite)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var _util_Entity__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/Entity */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Entity.js\");\n/* harmony import */ var _util_Template__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/Template */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Template.js\");\n/* harmony import */ var _util_Percent__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/Percent */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Percent.js\");\n/* harmony import */ var _util_EventDispatcher__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/EventDispatcher */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/EventDispatcher.js\");\n/* harmony import */ var _util_Disposer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/Disposer */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Disposer.js\");\n/* harmony import */ var _util_Animation__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../util/Animation */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Animation.js\");\n/* harmony import */ var _util_Utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../util/Utils */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Utils.js\");\n/* harmony import */ var _util_Array__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/Array */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Array.js\");\n/* harmony import */ var _util_Type__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../util/Type */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Type.js\");\n/* harmony import */ var _util_Object__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../util/Object */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Object.js\");\n/* harmony import */ var _util_Math__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/Math */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Math.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//import { populateString } from \"../util/PopulateString\";\r\n/**\r\n * An [[EventDispatcher]] for [[Sprite]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/events/} for more info\r\n */\r\nclass SpriteEventDispatcher extends _util_EventDispatcher__WEBPACK_IMPORTED_MODULE_0__.EventDispatcher {\r\n    constructor(sprite) {\r\n        super();\r\n        Object.defineProperty(this, \"_sprite\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_rendererDisposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dispatchParents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        this._sprite = sprite;\r\n    }\r\n    _makePointerEvent(key, event) {\r\n        return {\r\n            type: key,\r\n            originalEvent: event.event,\r\n            point: event.point,\r\n            simulated: event.simulated,\r\n            native: event.native,\r\n            target: this._sprite\r\n        };\r\n    }\r\n    _onRenderer(key, dispatch) {\r\n        // TODO: is this OK? it'd be good not to require to set this on each individual element\r\n        this._sprite.set(\"interactive\", true);\r\n        this._sprite._display.interactive = true;\r\n        let events = this._rendererDisposers[key];\r\n        if (events === undefined) {\r\n            const disposer = this._sprite._display.on(key, (e) => {\r\n                dispatch.call(this, e);\r\n            });\r\n            events = this._rendererDisposers[key] = new _util_Disposer__WEBPACK_IMPORTED_MODULE_1__.CounterDisposer(() => {\r\n                delete this._rendererDisposers[key];\r\n                disposer.dispose();\r\n            });\r\n        }\r\n        return events.increment();\r\n    }\r\n    _on(once, type, callback, context, shouldClone, dispatch) {\r\n        const info = super._on(once, type, callback, context, shouldClone, dispatch);\r\n        const rendererEvent = SpriteEventDispatcher.RENDERER_EVENTS[type];\r\n        if (rendererEvent !== undefined) {\r\n            info.disposer = new _util_Disposer__WEBPACK_IMPORTED_MODULE_1__.MultiDisposer([\r\n                info.disposer,\r\n                this._onRenderer(type, rendererEvent),\r\n            ]);\r\n        }\r\n        return info;\r\n    }\r\n    /**\r\n     * Will stop any bubbling up of the event to element's parents.\r\n     *\r\n     * Should be called in an event handler, e.g.:\r\n     *\r\n     * ```TypeScript\r\n     * element.events.on(\"pointerdown\", function(ev) {\r\n     *   // Do something here and prevent from \"pointerdown\" bubbling up\r\n     *   // ...\r\n     *   ev.target.events.stopParentDispatch();\r\n     * });\r\n     * ```\r\n     * ```JavaScript\r\n     * element.events.on(\"pointerdown\", function(ev) {\r\n     *   // Do something here and prevent from \"pointerdown\" bubbling up\r\n     *   // ...\r\n     *   ev.target.events.stopParentDispatch();\r\n     * });\r\n     * ```\r\n     */\r\n    stopParentDispatch() {\r\n        this._dispatchParents = false;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    dispatchParents(type, event) {\r\n        const old = this._dispatchParents;\r\n        this._dispatchParents = true;\r\n        try {\r\n            this.dispatch(type, event);\r\n            if (this._dispatchParents && this._sprite.parent) {\r\n                this._sprite.parent.events.dispatchParents(type, event);\r\n            }\r\n        }\r\n        finally {\r\n            this._dispatchParents = old;\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(SpriteEventDispatcher, \"RENDERER_EVENTS\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: {\r\n        \"click\": function (event) {\r\n            if (this.isEnabled(\"click\") && !this._sprite.isDragging() && this._sprite._hasDown() && !this._sprite._hasMoved(this._makePointerEvent(\"click\", event))) {\r\n                this.dispatch(\"click\", this._makePointerEvent(\"click\", event));\r\n            }\r\n        },\r\n        \"rightclick\": function (event) {\r\n            if (this.isEnabled(\"rightclick\")) {\r\n                this.dispatch(\"rightclick\", this._makePointerEvent(\"rightclick\", event));\r\n            }\r\n        },\r\n        \"middleclick\": function (event) {\r\n            if (this.isEnabled(\"middleclick\")) {\r\n                this.dispatch(\"middleclick\", this._makePointerEvent(\"middleclick\", event));\r\n            }\r\n        },\r\n        \"dblclick\": function (event) {\r\n            this.dispatchParents(\"dblclick\", this._makePointerEvent(\"dblclick\", event));\r\n        },\r\n        \"pointerover\": function (event) {\r\n            const sprite = this._sprite;\r\n            let dispatch = true;\r\n            if (sprite.getPrivate(\"trustBounds\")) {\r\n                sprite._getBounds();\r\n                const bounds = sprite.globalBounds();\r\n                if (sprite.isType(\"Graphics\")) {\r\n                    const strokeWidth = sprite.get(\"strokeWidth\", 1) / 2;\r\n                    if (strokeWidth >= 1) {\r\n                        bounds.left -= strokeWidth;\r\n                        bounds.right += strokeWidth;\r\n                        bounds.top -= strokeWidth;\r\n                        bounds.bottom += strokeWidth;\r\n                    }\r\n                }\r\n                if (!_util_Math__WEBPACK_IMPORTED_MODULE_2__.inBounds(event.point, bounds)) {\r\n                    dispatch = false;\r\n                    sprite._root._renderer.removeHovering(sprite._display);\r\n                }\r\n            }\r\n            if (dispatch && this.isEnabled(\"pointerover\")) {\r\n                this.dispatch(\"pointerover\", this._makePointerEvent(\"pointerover\", event));\r\n            }\r\n        },\r\n        \"pointerout\": function (event) {\r\n            if (this.isEnabled(\"pointerout\")) {\r\n                this.dispatch(\"pointerout\", this._makePointerEvent(\"pointerout\", event));\r\n            }\r\n        },\r\n        \"pointerdown\": function (event) {\r\n            this.dispatchParents(\"pointerdown\", this._makePointerEvent(\"pointerdown\", event));\r\n        },\r\n        \"pointerup\": function (event) {\r\n            if (this.isEnabled(\"pointerup\")) {\r\n                this.dispatch(\"pointerup\", this._makePointerEvent(\"pointerup\", event));\r\n            }\r\n        },\r\n        \"globalpointerup\": function (event) {\r\n            if (this.isEnabled(\"globalpointerup\")) {\r\n                this.dispatch(\"globalpointerup\", this._makePointerEvent(\"globalpointerup\", event));\r\n            }\r\n        },\r\n        \"globalpointermove\": function (event) {\r\n            if (this.isEnabled(\"globalpointermove\")) {\r\n                this.dispatch(\"globalpointermove\", this._makePointerEvent(\"globalpointermove\", event));\r\n            }\r\n        },\r\n        \"wheel\": function (event) {\r\n            this.dispatchParents(\"wheel\", {\r\n                type: \"wheel\",\r\n                target: this._sprite,\r\n                originalEvent: event.event,\r\n                point: event.point,\r\n            });\r\n        },\r\n    }\r\n});\r\n/**\r\n * A base class for all visual elements.\r\n *\r\n * @important\r\n */\r\nclass Sprite extends _util_Entity__WEBPACK_IMPORTED_MODULE_3__.Entity {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_adjustedLocalBounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: { left: 0, right: 0, top: 0, bottom: 0 }\r\n        });\r\n        Object.defineProperty(this, \"_localBounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: { left: 0, right: 0, top: 0, bottom: 0 }\r\n        });\r\n        Object.defineProperty(this, \"_parent\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_dataItem\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_templateField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_sizeDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        // Will be true only when dragging\r\n        Object.defineProperty(this, \"_isDragging\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        // The event when the dragging starts\r\n        Object.defineProperty(this, \"_dragEvent\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // The position when dragging starts\r\n        Object.defineProperty(this, \"_dragPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_isHidden\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_isShowing\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_isHiding\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_isDown\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_downPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_downPoints\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_toggleDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_dragDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_hoverDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_focusDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipMoveDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipPointerDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_statesHandled\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this.setPrivateRaw(\"visible\", true);\r\n        super._afterNew();\r\n    }\r\n    /**\r\n     * Marks some setting as dirty. Could be used to trigger adapter.\r\n     * @param key\r\n     */\r\n    markDirtyKey(key) {\r\n        this._markDirtyKey(key);\r\n    }\r\n    _markDirtyKey(key) {\r\n        super._markDirtyKey(key);\r\n        if (key == \"x\" || key == \"y\" || key == \"dx\" || key == \"dy\") {\r\n            this.markDirtyBounds();\r\n            this._addPercentagePositionChildren();\r\n            this.markDirtyPosition();\r\n        }\r\n    }\r\n    _markDirtyPrivateKey(key) {\r\n        super._markDirtyPrivateKey(key);\r\n        if (key == \"x\" || key == \"y\") {\r\n            this.markDirtyPosition();\r\n        }\r\n    }\r\n    _removeTemplateField() {\r\n        if (this._templateField) {\r\n            this._templateField._removeObjectTemplate(this);\r\n        }\r\n    }\r\n    _createEvents() {\r\n        return new SpriteEventDispatcher(this);\r\n    }\r\n    _processTemplateField() {\r\n        let template;\r\n        const field = this.get(\"templateField\");\r\n        if (field) {\r\n            const dataItem = this.dataItem;\r\n            if (dataItem) {\r\n                const context = dataItem.dataContext;\r\n                if (context) {\r\n                    template = context[field];\r\n                    if (!(template instanceof _util_Template__WEBPACK_IMPORTED_MODULE_4__.Template) && template) {\r\n                        template = _util_Template__WEBPACK_IMPORTED_MODULE_4__.Template.new(template);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this._templateField !== template) {\r\n            this._removeTemplateField();\r\n            this._templateField = template;\r\n            if (template) {\r\n                template._setObjectTemplate(this);\r\n            }\r\n            this._applyTemplates();\r\n        }\r\n    }\r\n    // TODO change this to run before the element is added to the parent, so that way\r\n    //      it doesn't need to apply the themes twice\r\n    _setDataItem(dataItem) {\r\n        const oldDataItem = this._dataItem;\r\n        this._dataItem = dataItem;\r\n        this._processTemplateField();\r\n        const eventType = \"dataitemchanged\";\r\n        if (dataItem != oldDataItem) {\r\n            if (this.events.isEnabled(eventType)) {\r\n                this.events.dispatch(eventType, {\r\n                    type: eventType,\r\n                    target: this,\r\n                    oldDataItem: oldDataItem,\r\n                    newDataItem: dataItem\r\n                });\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * A [[DataItem]] used for this element.\r\n     *\r\n     * NOTE: data item is being assigned automatically in most cases where it\r\n     * matters. Use this accessor to set data item only if you know what you're\r\n     * doing.\r\n     *\r\n     * @param  value  Data item\r\n     */\r\n    set dataItem(value) {\r\n        this._setDataItem(value);\r\n    }\r\n    /**\r\n     * @return DataItem\r\n     */\r\n    get dataItem() {\r\n        if (this._dataItem) {\r\n            return this._dataItem;\r\n        }\r\n        else {\r\n            let parent = this._parent;\r\n            while (parent) {\r\n                if (parent._dataItem) {\r\n                    return parent._dataItem;\r\n                }\r\n                else {\r\n                    parent = parent._parent;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _addPercentageSizeChildren() {\r\n        let parent = this.parent;\r\n        if (parent) {\r\n            if (this.get(\"width\") instanceof _util_Percent__WEBPACK_IMPORTED_MODULE_5__.Percent || this.get(\"height\") instanceof _util_Percent__WEBPACK_IMPORTED_MODULE_5__.Percent) {\r\n                _util_Array__WEBPACK_IMPORTED_MODULE_6__.pushOne(parent._percentageSizeChildren, this);\r\n            }\r\n            else {\r\n                _util_Array__WEBPACK_IMPORTED_MODULE_6__.removeFirst(parent._percentageSizeChildren, this);\r\n            }\r\n        }\r\n    }\r\n    _addPercentagePositionChildren() {\r\n        let parent = this.parent;\r\n        if (parent) {\r\n            if (this.get(\"x\") instanceof _util_Percent__WEBPACK_IMPORTED_MODULE_5__.Percent || this.get(\"y\") instanceof _util_Percent__WEBPACK_IMPORTED_MODULE_5__.Percent) {\r\n                _util_Array__WEBPACK_IMPORTED_MODULE_6__.pushOne(parent._percentagePositionChildren, this);\r\n            }\r\n            else {\r\n                _util_Array__WEBPACK_IMPORTED_MODULE_6__.removeFirst(parent._percentagePositionChildren, this);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyPosition() {\r\n        this._root._addDirtyPosition(this);\r\n    }\r\n    updatePivotPoint() {\r\n        const bounds = this._localBounds;\r\n        if (bounds) {\r\n            const centerX = this.get(\"centerX\");\r\n            if (centerX != null) {\r\n                this._display.pivot.x = bounds.left + _util_Utils__WEBPACK_IMPORTED_MODULE_7__.relativeToValue(centerX, bounds.right - bounds.left);\r\n            }\r\n            const centerY = this.get(\"centerY\");\r\n            if (centerY != null) {\r\n                this._display.pivot.y = bounds.top + _util_Utils__WEBPACK_IMPORTED_MODULE_7__.relativeToValue(centerY, bounds.bottom - bounds.top);\r\n            }\r\n        }\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        // handling states in beforeChanged, otherwise states is not applied without animated theme\r\n        this._handleStates();\r\n        if (this.isDirty(\"tooltip\")) {\r\n            const previous = this._prevSettings.tooltip;\r\n            if (previous) {\r\n                previous.dispose();\r\n            }\r\n        }\r\n        if (this.isDirty(\"layer\") || this.isDirty(\"layerMargin\")) {\r\n            this._display.setLayer(this.get(\"layer\"), this.get(\"layerMargin\"));\r\n            this.markDirtyLayer();\r\n        }\r\n        if (this.isDirty(\"tooltipPosition\")) {\r\n            const tooltipMoveDp = this._tooltipMoveDp;\r\n            if (tooltipMoveDp) {\r\n                tooltipMoveDp.dispose();\r\n                this._tooltipMoveDp = undefined;\r\n            }\r\n            const tooltipPointerDp = this._tooltipPointerDp;\r\n            if (tooltipPointerDp) {\r\n                tooltipPointerDp.dispose();\r\n                this._tooltipPointerDp = undefined;\r\n            }\r\n            if (this.get(\"tooltipPosition\") == \"pointer\") {\r\n                if (this.isHover()) {\r\n                    this._tooltipMoveDp = this.events.on(\"globalpointermove\", (e) => {\r\n                        this.showTooltip(e.point);\r\n                    });\r\n                }\r\n                this._tooltipPointerDp = new _util_Disposer__WEBPACK_IMPORTED_MODULE_1__.MultiDisposer([\r\n                    this.events.on(\"pointerover\", () => {\r\n                        this._tooltipMoveDp = this.events.on(\"globalpointermove\", (e) => {\r\n                            this.showTooltip(e.point);\r\n                        });\r\n                    }),\r\n                    this.events.on(\"pointerout\", () => {\r\n                        const tooltipMoveDp = this._tooltipMoveDp;\r\n                        if (tooltipMoveDp) {\r\n                            tooltipMoveDp.dispose();\r\n                            this._tooltipMoveDp = undefined;\r\n                        }\r\n                    })\r\n                ]);\r\n            }\r\n        }\r\n    }\r\n    _handleStates() {\r\n        if (!this._statesHandled) {\r\n            if (this.isDirty(\"active\")) {\r\n                if (this.get(\"active\")) {\r\n                    this.states.applyAnimate(\"active\");\r\n                    this.set(\"ariaChecked\", true);\r\n                }\r\n                else {\r\n                    if (!this.isHidden()) {\r\n                        this.states.applyAnimate(\"default\");\r\n                    }\r\n                    this.set(\"ariaChecked\", false);\r\n                }\r\n                this.markDirtyAccessibility();\r\n            }\r\n            if (this.isDirty(\"disabled\")) {\r\n                if (this.get(\"disabled\")) {\r\n                    this.states.applyAnimate(\"disabled\");\r\n                    this.set(\"ariaChecked\", false);\r\n                }\r\n                else {\r\n                    if (!this.isHidden()) {\r\n                        this.states.applyAnimate(\"default\");\r\n                    }\r\n                    this.set(\"ariaChecked\", true);\r\n                }\r\n                this.markDirtyAccessibility();\r\n            }\r\n            this._statesHandled = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        const display = this._display;\r\n        const events = this.events;\r\n        if (this.isDirty(\"draggable\")) {\r\n            const draggable = this.get(\"draggable\");\r\n            if (draggable) {\r\n                this.set(\"interactive\", true);\r\n                this._dragDp = new _util_Disposer__WEBPACK_IMPORTED_MODULE_1__.MultiDisposer([\r\n                    events.on(\"pointerdown\", (ev) => {\r\n                        this.dragStart(ev);\r\n                    }),\r\n                    events.on(\"globalpointermove\", (ev) => {\r\n                        this.dragMove(ev);\r\n                    }),\r\n                    events.on(\"globalpointerup\", (ev) => {\r\n                        this.dragStop(ev);\r\n                    })\r\n                ]);\r\n            }\r\n            else {\r\n                if (this._dragDp) {\r\n                    this._dragDp.dispose();\r\n                    this._dragDp = undefined;\r\n                }\r\n            }\r\n            display.cancelTouch = draggable ? true : false;\r\n        }\r\n        if (this.isDirty(\"tooltipText\") || this.isDirty(\"tooltipHTML\") || this.isDirty(\"showTooltipOn\")) {\r\n            const tooltipText = this.get(\"tooltipText\");\r\n            const tooltipHTML = this.get(\"tooltipHTML\");\r\n            const showTooltipOn = this.get(\"showTooltipOn\", \"hover\");\r\n            if (this._tooltipDp) {\r\n                this._tooltipDp.dispose();\r\n                this._tooltipDp = undefined;\r\n            }\r\n            if (tooltipText || tooltipHTML) {\r\n                if (showTooltipOn == \"click\") {\r\n                    this._tooltipDp = new _util_Disposer__WEBPACK_IMPORTED_MODULE_1__.MultiDisposer([\r\n                        events.on(\"click\", () => {\r\n                            this.setTimeout(() => {\r\n                                const tooltip = this.getTooltip();\r\n                                if (tooltip && !tooltip.isHidden() && tooltip.get(\"tooltipTarget\") === this) {\r\n                                    this.hideTooltip();\r\n                                }\r\n                                else {\r\n                                    this.showTooltip();\r\n                                }\r\n                            }, 10);\r\n                        }),\r\n                        _util_Utils__WEBPACK_IMPORTED_MODULE_7__.addEventListener(document, \"click\", (_ev) => {\r\n                            this.hideTooltip();\r\n                        })\r\n                    ]);\r\n                    this._disposers.push(this._tooltipDp);\r\n                }\r\n                else if (showTooltipOn == \"always\") {\r\n                    // nothing\r\n                }\r\n                else {\r\n                    this._tooltipDp = new _util_Disposer__WEBPACK_IMPORTED_MODULE_1__.MultiDisposer([\r\n                        events.on(\"pointerover\", () => {\r\n                            this.showTooltip();\r\n                        }),\r\n                        events.on(\"pointerout\", () => {\r\n                            this.hideTooltip();\r\n                        })\r\n                    ]);\r\n                    this._disposers.push(this._tooltipDp);\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"toggleKey\")) {\r\n            let toggleKey = this.get(\"toggleKey\");\r\n            if (toggleKey && toggleKey != \"none\") {\r\n                this._toggleDp = events.on(\"click\", () => {\r\n                    if (!this._isDragging) {\r\n                        this.set(toggleKey, !this.get(toggleKey));\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                if (this._toggleDp) {\r\n                    this._toggleDp.dispose();\r\n                    this._toggleDp = undefined;\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"opacity\")) {\r\n            display.alpha = Math.max(0, this.get(\"opacity\", 1));\r\n            if (this.get(\"focusable\")) {\r\n                this.markDirtyAccessibility();\r\n            }\r\n        }\r\n        if (this.isDirty(\"rotation\")) {\r\n            this.markDirtyBounds();\r\n            display.angle = this.get(\"rotation\", 0);\r\n        }\r\n        if (this.isDirty(\"scale\")) {\r\n            this.markDirtyBounds();\r\n            display.scale = this.get(\"scale\", 0);\r\n        }\r\n        if (this.isDirty(\"centerX\") || this.isDirty(\"centerY\")) {\r\n            this.markDirtyBounds();\r\n            this.updatePivotPoint();\r\n        }\r\n        if (this.isDirty(\"visible\") || this.isPrivateDirty(\"visible\") || this.isDirty(\"forceHidden\")) {\r\n            if (!this.get(\"visible\") || !this.getPrivate(\"visible\") || this.get(\"forceHidden\")) {\r\n                display.visible = false;\r\n                this.hideTooltip();\r\n            }\r\n            else {\r\n                display.visible = true;\r\n            }\r\n            this.markDirtyBounds();\r\n            if (this.get(\"focusable\")) {\r\n                this.markDirtyAccessibility();\r\n            }\r\n        }\r\n        if (this.isDirty(\"width\") || this.isDirty(\"height\")) {\r\n            this.markDirtyBounds();\r\n            this._addPercentageSizeChildren();\r\n            const parent = this.parent;\r\n            if (parent) {\r\n                if ((this.isDirty(\"width\") && this.get(\"width\") instanceof _util_Percent__WEBPACK_IMPORTED_MODULE_5__.Percent) || (this.isDirty(\"height\") && this.get(\"height\") instanceof _util_Percent__WEBPACK_IMPORTED_MODULE_5__.Percent)) {\r\n                    parent.markDirty();\r\n                    parent._prevWidth = 0;\r\n                }\r\n            }\r\n            this._sizeDirty = true;\r\n        }\r\n        if (this.isDirty(\"maxWidth\") || this.isDirty(\"maxHeight\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"minWidth\") || this.isDirty(\"minHeight\") || this.isPrivateDirty(\"maxWidth\") || this.isPrivateDirty(\"maxHeight\") || this.isPrivateDirty(\"minWidth\") || this.isPrivateDirty(\"minHeight\") || this.isDirty(\"marginLeft\") || this.isDirty(\"marginTop\") || this.isDirty(\"marginRight\") || this.isDirty(\"marginBottom\")) {\r\n            this.markDirtyBounds();\r\n            this._sizeDirty = true;\r\n        }\r\n        if (this._sizeDirty) {\r\n            this._updateSize();\r\n        }\r\n        if (this.isDirty(\"wheelable\")) {\r\n            const wheelable = this.get(\"wheelable\");\r\n            if (wheelable) {\r\n                this.set(\"interactive\", true);\r\n            }\r\n            display.wheelable = wheelable ? true : false;\r\n        }\r\n        // Accessibility\r\n        if (this.isDirty(\"tabindexOrder\") || this.isDirty(\"focusableGroup\")) {\r\n            if (this.get(\"focusable\")) {\r\n                this._root._registerTabindexOrder(this);\r\n            }\r\n            else {\r\n                this._root._unregisterTabindexOrder(this);\r\n            }\r\n        }\r\n        if (this.isDirty(\"filter\")) {\r\n            //this.markDirtyBounds();\r\n            display.filter = this.get(\"filter\");\r\n        }\r\n        let filter = this.get(\"filter\", \"\");\r\n        if (this.isDirty(\"blur\")) {\r\n            const blur = this.get(\"blur\", 0);\r\n            if (blur != 0) {\r\n                filter += \" blur(\" + blur + \"px)\";\r\n            }\r\n        }\r\n        if (this.isDirty(\"saturate\")) {\r\n            const saturate = this.get(\"saturate\", 1);\r\n            if (saturate != 1) {\r\n                filter += \" saturate(\" + saturate + \")\";\r\n            }\r\n        }\r\n        if (this.isDirty(\"brightness\")) {\r\n            const brightness = this.get(\"brightness\", 1);\r\n            if (brightness != 1) {\r\n                filter += \" brightness(\" + brightness + \")\";\r\n            }\r\n        }\r\n        if (this.isDirty(\"contrast\")) {\r\n            const contrast = this.get(\"contrast\", 1);\r\n            if (contrast != 1) {\r\n                filter += \" contrast(\" + contrast + \")\";\r\n            }\r\n        }\r\n        if (this.isDirty(\"sepia\")) {\r\n            const sepia = this.get(\"sepia\", 0);\r\n            if (sepia != 0) {\r\n                filter += \" sepia(\" + sepia + \")\";\r\n            }\r\n        }\r\n        if (this.isDirty(\"hue\")) {\r\n            const hue = this.get(\"hue\", 0);\r\n            if (hue != 0) {\r\n                filter += \" hue-rotate(\" + hue + \"deg)\";\r\n            }\r\n        }\r\n        if (this.isDirty(\"invert\")) {\r\n            const invert = this.get(\"invert\", 0);\r\n            if (invert != 0) {\r\n                filter += \" invert(\" + invert + \")\";\r\n            }\r\n        }\r\n        if (filter) {\r\n            display.filter = filter;\r\n        }\r\n        if (this.isDirty(\"cursorOverStyle\")) {\r\n            display.cursorOverStyle = this.get(\"cursorOverStyle\");\r\n        }\r\n        if (this.isDirty(\"hoverOnFocus\")) {\r\n            if (this.get(\"hoverOnFocus\")) {\r\n                this._focusDp = new _util_Disposer__WEBPACK_IMPORTED_MODULE_1__.MultiDisposer([\r\n                    events.on(\"focus\", () => {\r\n                        // TODO: proper hover, not just tooltip\r\n                        this.showTooltip();\r\n                    }),\r\n                    events.on(\"blur\", () => {\r\n                        // TODO: proper hover, not just tooltip\r\n                        this.hideTooltip();\r\n                    })\r\n                ]);\r\n            }\r\n            else {\r\n                if (this._focusDp) {\r\n                    this._focusDp.dispose();\r\n                    this._focusDp = undefined;\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"focusable\")) {\r\n            if (this.get(\"focusable\")) {\r\n                this._root._registerTabindexOrder(this);\r\n            }\r\n            else {\r\n                this._root._unregisterTabindexOrder(this);\r\n            }\r\n            this.markDirtyAccessibility();\r\n            this._disposers.push(events.on(\"blur\", () => {\r\n                this.setPrivateRaw(\"touchHovering\", false);\r\n            }));\r\n            this._disposers.push(events.once(\"boundschanged\", () => {\r\n                // We might need to do this to re-evaluate accessibility attributes\r\n                // once the element gains size (bounds)\r\n                this.markDirtyAccessibility();\r\n            }));\r\n        }\r\n        if (this.isPrivateDirty(\"focusable\")) {\r\n            this.markDirtyAccessibility();\r\n        }\r\n        if (this.isDirty(\"role\") || this.isDirty(\"ariaLive\") || this.isDirty(\"ariaChecked\") || this.isDirty(\"ariaHidden\") || this.isDirty(\"ariaOrientation\") || this.isDirty(\"ariaValueNow\") || this.isDirty(\"ariaValueMin\") || this.isDirty(\"ariaValueMax\") || this.isDirty(\"ariaValueText\") || this.isDirty(\"ariaLabel\") || this.isDirty(\"ariaControls\")) {\r\n            // display.accessibility.ariaLabel = populateString(this, this.get(\"ariaLabel\", \"\"));\r\n            // @todo make sure ariaLabel gets populated in Root\r\n            this.markDirtyAccessibility();\r\n        }\r\n        if (this.isDirty(\"exportable\")) {\r\n            display.exportable = this.get(\"exportable\");\r\n        }\r\n        if (this.isDirty(\"interactive\")) {\r\n            const events = this.events;\r\n            if (this.get(\"interactive\") && !events.isDisposed()) {\r\n                this._hoverDp = new _util_Disposer__WEBPACK_IMPORTED_MODULE_1__.MultiDisposer([\r\n                    events.on(\"click\", (ev) => {\r\n                        if (_util_Utils__WEBPACK_IMPORTED_MODULE_7__.isTouchEvent(ev.originalEvent)) {\r\n                            if (!this.getPrivate(\"touchHovering\")) {\r\n                                this.setTimeout(() => {\r\n                                    this._handleOver();\r\n                                    if (this.get(\"tooltipText\") || this.get(\"tooltipHTML\")) {\r\n                                        this.showTooltip();\r\n                                    }\r\n                                    this.setPrivateRaw(\"touchHovering\", true);\r\n                                    this.events.dispatch(\"pointerover\", {\r\n                                        type: \"pointerover\",\r\n                                        target: ev.target,\r\n                                        originalEvent: ev.originalEvent,\r\n                                        point: ev.point,\r\n                                        simulated: ev.simulated\r\n                                    });\r\n                                }, 10);\r\n                            }\r\n                        }\r\n                    }),\r\n                    events.on(\"globalpointerup\", (ev) => {\r\n                        if (_util_Utils__WEBPACK_IMPORTED_MODULE_7__.isTouchEvent(ev.originalEvent)) {\r\n                            if (this.getPrivate(\"touchHovering\")) {\r\n                                this._handleOut();\r\n                                if (this.get(\"tooltipText\") || this.get(\"tooltipHTML\")) {\r\n                                    this.hideTooltip();\r\n                                }\r\n                                this.setPrivateRaw(\"touchHovering\", false);\r\n                                this.events.dispatch(\"pointerout\", {\r\n                                    type: \"pointerout\",\r\n                                    target: ev.target,\r\n                                    originalEvent: ev.originalEvent,\r\n                                    point: ev.point,\r\n                                    simulated: ev.simulated\r\n                                });\r\n                            }\r\n                        }\r\n                        if (this._isDown) {\r\n                            this._handleUp(ev);\r\n                        }\r\n                        //this._isDown = false;\r\n                    }),\r\n                    events.on(\"pointerover\", () => {\r\n                        this._handleOver();\r\n                    }),\r\n                    events.on(\"pointerout\", () => {\r\n                        this._handleOut();\r\n                    }),\r\n                    events.on(\"pointerdown\", (e) => {\r\n                        this._handleDown(e);\r\n                    })\r\n                ]);\r\n            }\r\n            else {\r\n                this._display.interactive = false;\r\n                if (this._hoverDp) {\r\n                    this._hoverDp.dispose();\r\n                    this._hoverDp = undefined;\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"forceInactive\")) {\r\n            this._display.inactive = this.get(\"forceInactive\", null);\r\n        }\r\n        if (this.get(\"showTooltipOn\") == \"always\" && this._display.visible) {\r\n            this.showTooltip();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     * @todo should this be user-accessible?\r\n     */\r\n    dragStart(e) {\r\n        this._dragEvent = e;\r\n        this.events.stopParentDispatch();\r\n    }\r\n    /**\r\n     * @ignore\r\n     * @todo should this be user-accessible?\r\n     */\r\n    dragStop(e) {\r\n        this._dragEvent = undefined;\r\n        this._dragPoint = undefined;\r\n        this.events.stopParentDispatch();\r\n        if (this._isDragging) {\r\n            this._isDragging = false;\r\n            const type = \"dragstop\";\r\n            if (this.events.isEnabled(type)) {\r\n                this.events.dispatch(type, {\r\n                    type: type,\r\n                    target: this,\r\n                    originalEvent: e.originalEvent,\r\n                    point: e.point,\r\n                    simulated: e.simulated,\r\n                });\r\n            }\r\n        }\r\n    }\r\n    _handleOver() {\r\n        if (!this.isHidden()) {\r\n            if (this.get(\"active\") && this.states.lookup(\"hoverActive\")) {\r\n                this.states.applyAnimate(\"hoverActive\");\r\n            }\r\n            else if (this.get(\"disabled\") && this.states.lookup(\"hoverDisabled\")) {\r\n                this.states.applyAnimate(\"hoverDisabled\");\r\n            }\r\n            else {\r\n                this.states.applyAnimate(\"hover\");\r\n            }\r\n            if (this.get(\"draggable\") && this._isDown && this.states.lookup(\"down\")) {\r\n                this.states.applyAnimate(\"down\");\r\n            }\r\n        }\r\n    }\r\n    _handleOut() {\r\n        if (!this.isHidden()) {\r\n            if (this.get(\"active\") && this.states.lookup(\"active\")) {\r\n                this.states.applyAnimate(\"active\");\r\n            }\r\n            else if (this.get(\"disabled\") && this.states.lookup(\"disabled\")) {\r\n                this.states.applyAnimate(\"disabled\");\r\n            }\r\n            else {\r\n                if (this.states.lookup(\"hover\") || this.states.lookup(\"hoverActive\")) {\r\n                    this.states.applyAnimate(\"default\");\r\n                }\r\n            }\r\n            if (this.get(\"draggable\") && this._isDown && this.states.lookup(\"down\")) {\r\n                this.states.applyAnimate(\"down\");\r\n            }\r\n        }\r\n    }\r\n    _handleUp(e) {\r\n        if (!this.isHidden()) {\r\n            if (this.get(\"active\") && this.states.lookup(\"active\")) {\r\n                this.states.applyAnimate(\"active\");\r\n            }\r\n            else if (this.get(\"disabled\") && this.states.lookup(\"disabled\")) {\r\n                this.states.applyAnimate(\"disabled\");\r\n            }\r\n            else if (this.states.lookup(\"down\")) {\r\n                if (this.isHover()) {\r\n                    this.states.applyAnimate(\"hover\");\r\n                }\r\n                else {\r\n                    this.states.applyAnimate(\"default\");\r\n                }\r\n            }\r\n            // @todo remove this once migrated to _downPoints\r\n            this._downPoint = undefined;\r\n            const pointerId = _util_Utils__WEBPACK_IMPORTED_MODULE_7__.getPointerId(e.originalEvent);\r\n            delete this._downPoints[pointerId];\r\n            if (_util_Object__WEBPACK_IMPORTED_MODULE_8__.keys(this._downPoints).length == 0) {\r\n                this._isDown = false;\r\n            }\r\n        }\r\n    }\r\n    _hasMoved(e) {\r\n        // @todo remove this once migrated to _downPoints\r\n        // if (this._downPoint) {\r\n        // \tconst x = Math.abs(this._downPoint.x - e.point.x);\r\n        // \tconst y = Math.abs(this._downPoint.y - e.point.y);\r\n        // \treturn (x > 5) || (y > 5);\r\n        // }\r\n        const pointerId = _util_Utils__WEBPACK_IMPORTED_MODULE_7__.getPointerId(e.originalEvent);\r\n        const downPoint = this._downPoints[pointerId];\r\n        if (downPoint) {\r\n            const x = Math.abs(downPoint.x - e.point.x);\r\n            const y = Math.abs(downPoint.y - e.point.y);\r\n            return (x > 5) || (y > 5);\r\n        }\r\n        return false;\r\n    }\r\n    _hasDown() {\r\n        return _util_Object__WEBPACK_IMPORTED_MODULE_8__.keys(this._downPoints).length > 0;\r\n    }\r\n    _handleDown(e) {\r\n        const parent = this.parent;\r\n        if (parent && !this.get(\"draggable\")) {\r\n            parent._handleDown(e);\r\n        }\r\n        if (this.get(\"interactive\") && !this.isHidden()) {\r\n            if (this.states.lookup(\"down\")) {\r\n                this.states.applyAnimate(\"down\");\r\n            }\r\n            this._downPoint = {\r\n                x: e.point.x,\r\n                y: e.point.y\r\n            };\r\n            // @todo remove this once migrated to _downPoints\r\n            this._isDown = true;\r\n            const pointerId = _util_Utils__WEBPACK_IMPORTED_MODULE_7__.getPointerId(e.originalEvent);\r\n            this._downPoints[pointerId] = {\r\n                x: e.point.x,\r\n                y: e.point.y\r\n            };\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     * @todo should this be user-accessible?\r\n     */\r\n    dragMove(e) {\r\n        let dragEvent = this._dragEvent;\r\n        if (dragEvent) {\r\n            if (dragEvent.simulated && !e.simulated) {\r\n                return true;\r\n            }\r\n            let angle = 0;\r\n            let parent = this.parent;\r\n            let scale = 1;\r\n            while (parent != null) {\r\n                angle += parent.get(\"rotation\", 0);\r\n                parent = parent.parent;\r\n                if (parent) {\r\n                    scale *= parent.get(\"scale\", 1);\r\n                }\r\n            }\r\n            let x = (e.point.x - dragEvent.point.x) / scale;\r\n            let y = (e.point.y - dragEvent.point.y) / scale;\r\n            const events = this.events;\r\n            if (dragEvent.simulated && !this._isDragging) {\r\n                this._isDragging = true;\r\n                this._dragEvent = e;\r\n                this._dragPoint = {\r\n                    x: this.x(),\r\n                    y: this.y()\r\n                };\r\n                const type = \"dragstart\";\r\n                if (events.isEnabled(type)) {\r\n                    events.dispatch(type, {\r\n                        type: type,\r\n                        target: this,\r\n                        originalEvent: e.originalEvent,\r\n                        point: e.point,\r\n                        simulated: e.simulated,\r\n                    });\r\n                }\r\n            }\r\n            if (this._isDragging) {\r\n                let dragPoint = this._dragPoint;\r\n                this.set(\"x\", dragPoint.x + x * _util_Math__WEBPACK_IMPORTED_MODULE_2__.cos(angle) + y * _util_Math__WEBPACK_IMPORTED_MODULE_2__.sin(angle));\r\n                this.set(\"y\", dragPoint.y + y * _util_Math__WEBPACK_IMPORTED_MODULE_2__.cos(angle) - x * _util_Math__WEBPACK_IMPORTED_MODULE_2__.sin(angle));\r\n                const type = \"dragged\";\r\n                if (events.isEnabled(type)) {\r\n                    events.dispatch(type, {\r\n                        type: type,\r\n                        target: this,\r\n                        originalEvent: e.originalEvent,\r\n                        point: e.point,\r\n                        simulated: e.simulated,\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                if (Math.hypot(x, y) > 5) {\r\n                    this._isDragging = true;\r\n                    this._dragEvent = e;\r\n                    this._dragPoint = {\r\n                        x: this.x(),\r\n                        y: this.y()\r\n                    };\r\n                    const type = \"dragstart\";\r\n                    if (events.isEnabled(type)) {\r\n                        events.dispatch(type, {\r\n                            type: type,\r\n                            target: this,\r\n                            originalEvent: e.originalEvent,\r\n                            point: e.point,\r\n                            simulated: e.simulated\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _updateSize() {\r\n    }\r\n    _getBounds() {\r\n        this._localBounds = this._display.getLocalBounds();\r\n    }\r\n    /**\r\n     * Returns depth (how deep in the hierachy of the content tree) of this\r\n     * element.\r\n     *\r\n     * @return Depth\r\n     */\r\n    depth() {\r\n        let self = this.parent;\r\n        let depth = 0;\r\n        while (true) {\r\n            if (self) {\r\n                ++depth;\r\n                self = self.parent;\r\n            }\r\n            else {\r\n                return depth;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtySize() {\r\n        this._sizeDirty = true;\r\n        this.markDirty();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyBounds() {\r\n        const display = this._display;\r\n        if (this.get(\"isMeasured\")) {\r\n            this._root._addDirtyBounds(this);\r\n            display.isMeasured = true;\r\n            display.invalidateBounds();\r\n            const parent = this.parent;\r\n            if (parent && this.get(\"position\") != \"absolute\") {\r\n                if (parent.get(\"width\") == null || parent.get(\"height\") == null || parent.get(\"layout\")) {\r\n                    parent.markDirtyBounds();\r\n                }\r\n            }\r\n            if (this.get(\"focusable\")) {\r\n                this.markDirtyAccessibility();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyAccessibility() {\r\n        //if (this._root.focused(this)) {\r\n        this._root._invalidateAccessibility(this);\r\n        //}\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyLayer() {\r\n        //this._display.markDirtyLayer(this.isDirty(\"opacity\") || this.isDirty(\"visible\")); https://codepen.io/team/amcharts/pen/gOWZPmP <- problems\r\n        this._display.markDirtyLayer(true);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirty() {\r\n        super.markDirty();\r\n        this.markDirtyLayer();\r\n    }\r\n    _updateBounds() {\r\n        const oldBounds = this._adjustedLocalBounds;\r\n        let newBounds;\r\n        // if display.visible == false, it still returns bounds\r\n        if (!this.get(\"visible\") || !this.getPrivate(\"visible\") || this.get(\"forceHidden\")) {\r\n            newBounds = {\r\n                left: 0,\r\n                right: 0,\r\n                top: 0,\r\n                bottom: 0\r\n            };\r\n            this._localBounds = newBounds;\r\n            this._adjustedLocalBounds = newBounds;\r\n        }\r\n        else {\r\n            this._getBounds();\r\n            this._fixMinBounds(this._localBounds);\r\n            this.updatePivotPoint();\r\n            this._adjustedLocalBounds = this._display.getAdjustedBounds(this._localBounds);\r\n            newBounds = this._adjustedLocalBounds;\r\n        }\r\n        if (!oldBounds || (oldBounds.left !== newBounds.left || oldBounds.top !== newBounds.top || oldBounds.right !== newBounds.right || oldBounds.bottom !== newBounds.bottom)) {\r\n            const eventType = \"boundschanged\";\r\n            if (this.events.isEnabled(eventType)) {\r\n                this.events.dispatch(eventType, { type: eventType, target: this });\r\n            }\r\n            if (this.parent) {\r\n                this.parent.markDirty();\r\n                this.parent.markDirtyBounds();\r\n            }\r\n            // Update tooltip position together with the Sprite\r\n            if (this.getPrivate(\"showingTooltip\")) {\r\n                this.showTooltip();\r\n            }\r\n        }\r\n    }\r\n    _fixMinBounds(bounds) {\r\n        let minWidth = this.get(\"minWidth\", this.getPrivate(\"minWidth\"));\r\n        let minHeight = this.get(\"minHeight\", this.getPrivate(\"minHeight\"));\r\n        if (_util_Type__WEBPACK_IMPORTED_MODULE_9__.isNumber(minWidth)) {\r\n            if (bounds.right - bounds.left < minWidth) {\r\n                bounds.right = bounds.left + minWidth;\r\n            }\r\n        }\r\n        if (_util_Type__WEBPACK_IMPORTED_MODULE_9__.isNumber(minHeight)) {\r\n            if (bounds.bottom - bounds.top < minHeight) {\r\n                bounds.bottom = bounds.top + minHeight;\r\n            }\r\n        }\r\n        let privateWidth = this.getPrivate(\"width\");\r\n        let privateHeight = this.getPrivate(\"height\");\r\n        if (_util_Type__WEBPACK_IMPORTED_MODULE_9__.isNumber(privateWidth)) {\r\n            if (privateWidth > 0) {\r\n                bounds.right = bounds.left + privateWidth;\r\n            }\r\n            else {\r\n                bounds.left = bounds.right + privateWidth;\r\n            }\r\n        }\r\n        if (_util_Type__WEBPACK_IMPORTED_MODULE_9__.isNumber(privateHeight)) {\r\n            if (privateHeight > 0) {\r\n                bounds.bottom = bounds.top + privateHeight;\r\n            }\r\n            else {\r\n                bounds.top = bounds.bottom + privateHeight;\r\n            }\r\n        }\r\n    }\r\n    _removeParent(parent) {\r\n        if (parent) {\r\n            parent.children.removeValue(this);\r\n            _util_Array__WEBPACK_IMPORTED_MODULE_6__.removeFirst(parent._percentageSizeChildren, this);\r\n            _util_Array__WEBPACK_IMPORTED_MODULE_6__.removeFirst(parent._percentagePositionChildren, this);\r\n        }\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._sizeDirty = false;\r\n        this._statesHandled = false;\r\n    }\r\n    /**\r\n     * Simulate hover over element.\r\n     */\r\n    hover() {\r\n        if (!this.isDisposed()) {\r\n            this.showTooltip();\r\n            this._handleOver();\r\n        }\r\n    }\r\n    /**\r\n     * Simulate unhover over element.\r\n     */\r\n    unhover() {\r\n        if (!this.isDisposed()) {\r\n            this.hideTooltip();\r\n            this._handleOut();\r\n        }\r\n    }\r\n    /**\r\n     * Shows element's [[Tooltip]].\r\n     */\r\n    showTooltip(point) {\r\n        if (!this.isDisposed()) {\r\n            const tooltip = this.getTooltip();\r\n            const tooltipText = this.get(\"tooltipText\");\r\n            const tooltipHTML = this.get(\"tooltipHTML\");\r\n            if ((tooltipText || tooltipHTML) && tooltip) {\r\n                const tooltipPosition = this.get(\"tooltipPosition\");\r\n                const tooltipTarget = this.getPrivate(\"tooltipTarget\", this);\r\n                if (tooltipPosition == \"fixed\" || !point) {\r\n                    this._display._setMatrix();\r\n                    point = this.toGlobal(tooltipTarget._getTooltipPoint());\r\n                }\r\n                tooltip.set(\"pointTo\", point);\r\n                tooltip.set(\"tooltipTarget\", tooltipTarget);\r\n                if (!tooltip.get(\"x\")) {\r\n                    tooltip.set(\"x\", point.x);\r\n                }\r\n                if (!tooltip.get(\"y\")) {\r\n                    tooltip.set(\"y\", point.y);\r\n                }\r\n                if (tooltipText) {\r\n                    tooltip.label.set(\"text\", tooltipText);\r\n                }\r\n                if (tooltipHTML) {\r\n                    tooltip.label.set(\"html\", tooltipHTML);\r\n                }\r\n                const dataItem = this.dataItem;\r\n                if (dataItem) {\r\n                    tooltip.label._setDataItem(dataItem);\r\n                }\r\n                if (this.get(\"showTooltipOn\") == \"always\" && (point.x < 0 || point.x > this._root.width() || point.y < 0 || point.y > this._root.height())) {\r\n                    this.hideTooltip();\r\n                    return;\r\n                }\r\n                tooltip.label.text.markDirtyText();\r\n                const promise = tooltip.show();\r\n                this.setPrivateRaw(\"showingTooltip\", true);\r\n                return promise;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Hides element's [[Tooltip]].\r\n     */\r\n    hideTooltip() {\r\n        const tooltip = this.getTooltip();\r\n        if (tooltip) {\r\n            if (tooltip.get(\"tooltipTarget\") == this.getPrivate(\"tooltipTarget\", this) || this.get(\"tooltip\") == tooltip) {\r\n                let timeout = tooltip.get(\"keepTargetHover\") && tooltip.get(\"stateAnimationDuration\", 0) == 0 ? 400 : undefined;\r\n                const promise = tooltip.hide(timeout);\r\n                this.setPrivateRaw(\"showingTooltip\", false);\r\n                return promise;\r\n            }\r\n        }\r\n    }\r\n    _getTooltipPoint() {\r\n        const bounds = this._localBounds;\r\n        if (bounds) {\r\n            let x = 0;\r\n            let y = 0;\r\n            if (!this.get(\"isMeasured\")) {\r\n                x = _util_Utils__WEBPACK_IMPORTED_MODULE_7__.relativeToValue(this.get(\"tooltipX\", 0), this.width());\r\n                y = _util_Utils__WEBPACK_IMPORTED_MODULE_7__.relativeToValue(this.get(\"tooltipY\", 0), this.height());\r\n            }\r\n            else {\r\n                x = bounds.left + _util_Utils__WEBPACK_IMPORTED_MODULE_7__.relativeToValue(this.get(\"tooltipX\", 0), bounds.right - bounds.left);\r\n                y = bounds.top + _util_Utils__WEBPACK_IMPORTED_MODULE_7__.relativeToValue(this.get(\"tooltipY\", 0), bounds.bottom - bounds.top);\r\n            }\r\n            return { x, y };\r\n        }\r\n        return { x: 0, y: 0 };\r\n    }\r\n    /**\r\n     * Returns [[Tooltip]] used for this element.\r\n     *\r\n     * @return Tooltip\r\n     */\r\n    getTooltip() {\r\n        let tooltip = this.get(\"tooltip\");\r\n        if (!tooltip) {\r\n            let parent = this.parent;\r\n            if (parent) {\r\n                return parent.getTooltip();\r\n            }\r\n        }\r\n        else {\r\n            return tooltip;\r\n        }\r\n    }\r\n    _updatePosition() {\r\n        const parent = this.parent;\r\n        let dx = this.get(\"dx\", 0);\r\n        let dy = this.get(\"dy\", 0);\r\n        let x = this.get(\"x\");\r\n        let _x = this.getPrivate(\"x\");\r\n        let xx = 0;\r\n        let yy = 0;\r\n        const position = this.get(\"position\");\r\n        if (x instanceof _util_Percent__WEBPACK_IMPORTED_MODULE_5__.Percent) {\r\n            if (parent) {\r\n                x = parent.innerWidth() * x.value + parent.get(\"paddingLeft\", 0);\r\n            }\r\n            else {\r\n                x = 0;\r\n            }\r\n        }\r\n        if (_util_Type__WEBPACK_IMPORTED_MODULE_9__.isNumber(x)) {\r\n            xx = x + dx;\r\n        }\r\n        else {\r\n            if (_x != null) {\r\n                xx = _x;\r\n            }\r\n            else if (parent) {\r\n                if (position == \"relative\") {\r\n                    xx = parent.get(\"paddingLeft\", 0) + dx;\r\n                }\r\n            }\r\n        }\r\n        let y = this.get(\"y\");\r\n        let _y = this.getPrivate(\"y\");\r\n        if (y instanceof _util_Percent__WEBPACK_IMPORTED_MODULE_5__.Percent) {\r\n            if (parent) {\r\n                y = parent.innerHeight() * y.value + parent.get(\"paddingTop\", 0);\r\n            }\r\n            else {\r\n                y = 0;\r\n            }\r\n        }\r\n        if (_util_Type__WEBPACK_IMPORTED_MODULE_9__.isNumber(y)) {\r\n            yy = y + dy;\r\n        }\r\n        else {\r\n            if (_y != null) {\r\n                yy = _y;\r\n            }\r\n            else if (parent) {\r\n                if (position == \"relative\") {\r\n                    yy = parent.get(\"paddingTop\", 0) + dy;\r\n                }\r\n            }\r\n        }\r\n        const display = this._display;\r\n        if (display.x != xx || display.y != yy) {\r\n            display.invalidateBounds();\r\n            display.x = xx;\r\n            display.y = yy;\r\n            const eventType = \"positionchanged\";\r\n            if (this.events.isEnabled(eventType)) {\r\n                this.events.dispatch(eventType, { type: eventType, target: this });\r\n            }\r\n        }\r\n        // Update tooltip position together with the Sprite\r\n        if (this.getPrivate(\"showingTooltip\")) {\r\n            this.showTooltip();\r\n        }\r\n    }\r\n    /**\r\n     * Returns element's actual X position in pixels.\r\n     *\r\n     * @return X (px)\r\n     */\r\n    x() {\r\n        let x = this.get(\"x\");\r\n        let _x = this.getPrivate(\"x\");\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            if (x instanceof _util_Percent__WEBPACK_IMPORTED_MODULE_5__.Percent) {\r\n                return _util_Utils__WEBPACK_IMPORTED_MODULE_7__.relativeToValue(x, parent.innerWidth()) + parent.get(\"paddingLeft\", 0);\r\n            }\r\n            else {\r\n                if (!_util_Type__WEBPACK_IMPORTED_MODULE_9__.isNumber(x)) {\r\n                    if (_x != null) {\r\n                        return _x;\r\n                    }\r\n                    else {\r\n                        return parent.get(\"paddingLeft\", this._display.x);\r\n                    }\r\n                }\r\n                else {\r\n                    return x;\r\n                }\r\n            }\r\n        }\r\n        return this._display.x;\r\n    }\r\n    /**\r\n     * Returns element's actual Y position in pixels.\r\n     *\r\n     * @return Y (px)\r\n     */\r\n    y() {\r\n        let _y = this.getPrivate(\"y\");\r\n        if (_y != null) {\r\n            return _y;\r\n        }\r\n        let y = this.get(\"y\");\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            if (y instanceof _util_Percent__WEBPACK_IMPORTED_MODULE_5__.Percent) {\r\n                return _util_Utils__WEBPACK_IMPORTED_MODULE_7__.relativeToValue(y, parent.innerHeight()) + parent.get(\"paddingTop\", 0);\r\n            }\r\n            else {\r\n                if (!_util_Type__WEBPACK_IMPORTED_MODULE_9__.isNumber(y)) {\r\n                    if (_y != null) {\r\n                        return _y;\r\n                    }\r\n                    else {\r\n                        return parent.get(\"paddingTop\", this._display.y);\r\n                    }\r\n                }\r\n                else {\r\n                    return y;\r\n                }\r\n            }\r\n        }\r\n        return this._display.y;\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        this._display.dispose();\r\n        this._removeTemplateField();\r\n        this._removeParent(this.parent);\r\n        this._root._removeFocusElement(this);\r\n        const tooltip = this.get(\"tooltip\");\r\n        if (tooltip) {\r\n            tooltip.dispose();\r\n        }\r\n        this.markDirty();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    adjustedLocalBounds() {\r\n        this._fixMinBounds(this._adjustedLocalBounds);\r\n        return this._adjustedLocalBounds;\r\n    }\r\n    /**\r\n     * Returns local coordinates of the element's bounds.\r\n     *\r\n     * @ignore\r\n     * @return Global bounds\r\n     */\r\n    localBounds() {\r\n        return this._localBounds;\r\n    }\r\n    /**\r\n     * Returns adjusted local coordinates of the element's bounds.\r\n     *\r\n     * @ignore\r\n     * @return Global bounds\r\n     */\r\n    bounds() {\r\n        const bounds = this._adjustedLocalBounds;\r\n        const x = this.x();\r\n        const y = this.y();\r\n        return { left: bounds.left + x, right: bounds.right + x, top: bounds.top + y, bottom: bounds.bottom + y };\r\n    }\r\n    /**\r\n     * Returns global coordinates of the element's bounds.\r\n     *\r\n     * @ignore\r\n     * @return Global bounds\r\n     */\r\n    globalBounds() {\r\n        const bounds = this.localBounds();\r\n        const p0 = this.toGlobal({ x: bounds.left, y: bounds.top });\r\n        const p1 = this.toGlobal({ x: bounds.right, y: bounds.top });\r\n        const p2 = this.toGlobal({ x: bounds.right, y: bounds.bottom });\r\n        const p3 = this.toGlobal({ x: bounds.left, y: bounds.bottom });\r\n        return {\r\n            left: Math.min(p0.x, p1.x, p2.x, p3.x),\r\n            top: Math.min(p0.y, p1.y, p2.y, p3.y),\r\n            right: Math.max(p0.x, p1.x, p2.x, p3.x),\r\n            bottom: Math.max(p0.y, p1.y, p2.y, p3.y)\r\n        };\r\n    }\r\n    _onShow(_duration) {\r\n    }\r\n    _onHide(_duration) {\r\n    }\r\n    /**\r\n     * Plays initial reveal animation regardless if element is currently hidden\r\n     * or visible.\r\n     *\r\n     * @param   duration  Duration of the animation in milliseconds\r\n     * @param   delay     Delay showing of the element by X milliseconds\r\n     * @return            Promise\r\n     */\r\n    appear(duration, delay) {\r\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, function* () {\r\n            yield this.hide(0);\r\n            if (delay) {\r\n                return new Promise((success, _error) => {\r\n                    this.setTimeout(() => {\r\n                        success(this.show(duration));\r\n                    }, delay);\r\n                });\r\n            }\r\n            else {\r\n                return this.show(duration);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Shows currently hidden element and returns a `Promise` which completes\r\n     * when all showing animations are finished.\r\n     *\r\n     * ```TypeScript\r\n     * series.show().then(function(ev) {\r\n     *   console.log(\"Series is now fully visible\");\r\n     * })\r\n     * ```\r\n     * ```JavaScript\r\n     * series.show().then(function(ev) {\r\n     *   console.log(\"Series is now fully visible\");\r\n     * })\r\n     * ```\r\n     *\r\n     * @return Promise\r\n     */\r\n    show(duration) {\r\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, function* () {\r\n            if (!this._isShowing) {\r\n                this._isHidden = false;\r\n                this._isShowing = true;\r\n                this._isHiding = false;\r\n                if (this.states.lookup(\"default\").get(\"visible\")) {\r\n                    this.set(\"visible\", true);\r\n                }\r\n                this._onShow(duration);\r\n                const animations = this.states.applyAnimate(\"default\", duration);\r\n                yield (0,_util_Animation__WEBPACK_IMPORTED_MODULE_11__.waitForAnimations)(animations);\r\n                this._isShowing = false;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Hides the element and returns a `Promise` which completes when all hiding\r\n     * animations are finished.\r\n     *\r\n     * ```TypeScript\r\n     * series.hide().then(function(ev) {\r\n     *   console.log(\"Series finished hiding\");\r\n     * })\r\n     * ```\r\n     * ```JavaScript\r\n     * series.hide().then(function(ev) {\r\n     *   console.log(\"Series finished hiding\");\r\n     * })\r\n     * ```\r\n     *\r\n     * @return Promise\r\n     */\r\n    hide(duration) {\r\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, function* () {\r\n            if (!this._isHiding && !this._isHidden) {\r\n                this._isHiding = true;\r\n                this._isShowing = false;\r\n                let state = this.states.lookup(\"hidden\");\r\n                if (!state) {\r\n                    state = this.states.create(\"hidden\", {\r\n                        \"opacity\": 0,\r\n                        \"visible\": false\r\n                    });\r\n                }\r\n                this._isHidden = true;\r\n                this._onHide(duration);\r\n                const animations = this.states.applyAnimate(\"hidden\", duration);\r\n                yield (0,_util_Animation__WEBPACK_IMPORTED_MODULE_11__.waitForAnimations)(animations);\r\n                this._isHiding = false;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Returns `true` if this element is currently hidden.\r\n     *\r\n     * @return Is hidden?\r\n     */\r\n    isHidden() {\r\n        return this._isHidden;\r\n    }\r\n    /**\r\n     * Returns `true` if this element is currently animating to a default state.\r\n     *\r\n     * @return Is showing?\r\n     */\r\n    isShowing() {\r\n        return this._isShowing;\r\n    }\r\n    /**\r\n     * Returns `true` if this element is currently animating to a hidden state.\r\n     *\r\n     * @return Is hiding?\r\n     */\r\n    isHiding() {\r\n        return this._isHiding;\r\n    }\r\n    /**\r\n     * Returns `true` if this element is currently hovered by a pointer.\r\n     *\r\n     * @return Is hovered?\r\n     */\r\n    isHover() {\r\n        return this._display.hovering();\r\n    }\r\n    /**\r\n     * Returns `true` if this element does currently have focus.\r\n     *\r\n     * @return Is focused?\r\n     */\r\n    isFocus() {\r\n        return this._root.focused(this);\r\n    }\r\n    /**\r\n     * Returns `true` if this element is currently being dragged.\r\n     *\r\n     * @return Is dragged?\r\n     */\r\n    isDragging() {\r\n        return this._isDragging;\r\n    }\r\n    /**\r\n     * Returns `false` if if either public or private setting `visible` is set\r\n     * to `false`, or `forceHidden` is set to `true`.\r\n     *\r\n     * @return Visible?\r\n     */\r\n    isVisible() {\r\n        if (this.get(\"visible\") && this.getPrivate(\"visible\") && !this.get(\"forceHidden\")) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * Same as `isVisible()`, except it checks all ascendants, too.\r\n     *\r\n     * @since 5.2.7\r\n     * @return Visible?\r\n     */\r\n    isVisibleDeep() {\r\n        return this._parent ? (this._parent.isVisibleDeep() && this.isVisible()) : this.isVisible();\r\n    }\r\n    /**\r\n     * Returns an actual opacity of the element, taking into account all parents.\r\n     *\r\n     * @return Opacity\r\n     * @since 5.2.11\r\n     */\r\n    compositeOpacity() {\r\n        const opacity = this.get(\"opacity\", 1);\r\n        return this._parent ? (this._parent.compositeOpacity() * opacity) : opacity;\r\n    }\r\n    /**\r\n     * Returns an actual scale of the element, taking into account all parents.\r\n     *\r\n     * @return Opacity\r\n     * @since 5.9.2\r\n     */\r\n    compositeScale() {\r\n        const scale = this.get(\"scale\", 1);\r\n        return this._parent ? (this._parent.compositeScale() * scale) : scale;\r\n    }\r\n    /**\r\n     * Returns an actual roation of the element, taking into account all parents.\r\n     *\r\n     * @return Opacity\r\n     * @since 5.9.2\r\n     */\r\n    compositeRotation() {\r\n        const rotation = this.get(\"rotation\", 0);\r\n        return this._parent ? (this._parent.compositeRotation() + rotation) : rotation;\r\n    }\r\n    /**\r\n     * Returns width of this element in pixels.\r\n     *\r\n     * @return Width (px)\r\n     */\r\n    width() {\r\n        let width = this.get(\"width\");\r\n        let maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\"));\r\n        let minWidth = this.get(\"minWidth\", this.getPrivate(\"minWidth\"));\r\n        let privateWidth = this.getPrivate(\"width\");\r\n        let w = 0;\r\n        if (_util_Type__WEBPACK_IMPORTED_MODULE_9__.isNumber(privateWidth)) {\r\n            w = privateWidth;\r\n        }\r\n        else {\r\n            if (width == null) {\r\n                if (this._adjustedLocalBounds) {\r\n                    w = this._adjustedLocalBounds.right - this._adjustedLocalBounds.left;\r\n                }\r\n            }\r\n            else {\r\n                if (width instanceof _util_Percent__WEBPACK_IMPORTED_MODULE_5__.Percent) {\r\n                    const parent = this.parent;\r\n                    if (parent) {\r\n                        w = parent.innerWidth() * width.value;\r\n                    }\r\n                    else {\r\n                        w = this._root.width() * width.value;\r\n                    }\r\n                }\r\n                else if (_util_Type__WEBPACK_IMPORTED_MODULE_9__.isNumber(width)) {\r\n                    w = width;\r\n                }\r\n            }\r\n        }\r\n        if (_util_Type__WEBPACK_IMPORTED_MODULE_9__.isNumber(minWidth)) {\r\n            w = Math.max(minWidth, w);\r\n        }\r\n        if (_util_Type__WEBPACK_IMPORTED_MODULE_9__.isNumber(maxWidth)) {\r\n            w = Math.min(maxWidth, w);\r\n        }\r\n        return w;\r\n    }\r\n    /**\r\n     * Returns maximum allowed width of this element in pixels.\r\n     *\r\n     * @return Maximum width (px)\r\n     */\r\n    maxWidth() {\r\n        let maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\"));\r\n        if (_util_Type__WEBPACK_IMPORTED_MODULE_9__.isNumber(maxWidth)) {\r\n            return maxWidth;\r\n        }\r\n        else {\r\n            let width = this.get(\"width\");\r\n            if (_util_Type__WEBPACK_IMPORTED_MODULE_9__.isNumber(width)) {\r\n                return width;\r\n            }\r\n        }\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            return parent.innerWidth();\r\n        }\r\n        return this._root.width();\r\n    }\r\n    /**\r\n     * Returns maximum allowed height of this element in pixels.\r\n     *\r\n     * @return Maximum height (px)\r\n     */\r\n    maxHeight() {\r\n        let maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\"));\r\n        if (_util_Type__WEBPACK_IMPORTED_MODULE_9__.isNumber(maxHeight)) {\r\n            return maxHeight;\r\n        }\r\n        else {\r\n            let height = this.get(\"height\");\r\n            if (_util_Type__WEBPACK_IMPORTED_MODULE_9__.isNumber(height)) {\r\n                return height;\r\n            }\r\n        }\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            return parent.innerHeight();\r\n        }\r\n        return this._root.height();\r\n    }\r\n    /**\r\n     * Returns height of this element in pixels.\r\n     *\r\n     * @return Height (px)\r\n     */\r\n    height() {\r\n        let height = this.get(\"height\");\r\n        let maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\"));\r\n        let minHeight = this.get(\"minHeight\", this.getPrivate(\"minHeight\"));\r\n        let privateHeight = this.getPrivate(\"height\");\r\n        let h = 0;\r\n        if (_util_Type__WEBPACK_IMPORTED_MODULE_9__.isNumber(privateHeight)) {\r\n            h = privateHeight;\r\n        }\r\n        else {\r\n            if (height == null) {\r\n                if (this._adjustedLocalBounds) {\r\n                    h = this._adjustedLocalBounds.bottom - this._adjustedLocalBounds.top;\r\n                }\r\n            }\r\n            else {\r\n                if (height instanceof _util_Percent__WEBPACK_IMPORTED_MODULE_5__.Percent) {\r\n                    const parent = this.parent;\r\n                    if (parent) {\r\n                        h = parent.innerHeight() * height.value;\r\n                    }\r\n                    else {\r\n                        h = this._root.height() * height.value;\r\n                    }\r\n                }\r\n                else if (_util_Type__WEBPACK_IMPORTED_MODULE_9__.isNumber(height)) {\r\n                    h = height;\r\n                }\r\n            }\r\n        }\r\n        if (_util_Type__WEBPACK_IMPORTED_MODULE_9__.isNumber(minHeight)) {\r\n            h = Math.max(minHeight, h);\r\n        }\r\n        if (_util_Type__WEBPACK_IMPORTED_MODULE_9__.isNumber(maxHeight)) {\r\n            h = Math.min(maxHeight, h);\r\n        }\r\n        return h;\r\n    }\r\n    _findStaticTemplate(f) {\r\n        // templateField overrides template\r\n        if (this._templateField && f(this._templateField)) {\r\n            return this._templateField;\r\n        }\r\n        return super._findStaticTemplate(f);\r\n    }\r\n    _walkParents(f) {\r\n        if (this._parent) {\r\n            this._walkParent(f);\r\n        }\r\n    }\r\n    _walkParent(f) {\r\n        if (this._parent) {\r\n            this._parent._walkParent(f);\r\n        }\r\n        f(this);\r\n    }\r\n    /**\r\n     * Parent [[Container]] of this element.\r\n     *\r\n     * @return Parent container\r\n     */\r\n    get parent() {\r\n        return this._parent;\r\n    }\r\n    _setParent(parent, updateChildren = false) {\r\n        const prevParent = this._parent;\r\n        if (parent !== prevParent) {\r\n            this.markDirtyBounds();\r\n            parent.markDirty();\r\n            this._parent = parent;\r\n            if (updateChildren) {\r\n                this._removeParent(prevParent);\r\n                if (parent) {\r\n                    this._addPercentageSizeChildren();\r\n                    this._addPercentagePositionChildren();\r\n                }\r\n            }\r\n            this.markDirtyPosition();\r\n            this._applyThemes();\r\n        }\r\n    }\r\n    /**\r\n     * Returns an instance of [[NumberFormatter]] used in this element.\r\n     *\r\n     * If this element does not have it set, global one form [[Root]] is used.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\r\n     * @return NumberFormatter instace\r\n     */\r\n    getNumberFormatter() {\r\n        return this.get(\"numberFormatter\", this._root.numberFormatter);\r\n    }\r\n    /**\r\n     * Returns an instance of [[DateFormatter]] used in this element.\r\n     *\r\n     * If this element does not have it set, global one form [[Root]] is used.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\r\n     * @return DateFormatter instace\r\n     */\r\n    getDateFormatter() {\r\n        return this.get(\"dateFormatter\", this._root.dateFormatter);\r\n    }\r\n    /**\r\n     * Returns an instance of [[DurationFormatter]] used in this element.\r\n     *\r\n     * If this element does not have it set, global one form [[Root]] is used.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\r\n     * @return DurationFormatter instace\r\n     */\r\n    getDurationFormatter() {\r\n        return this.get(\"durationFormatter\", this._root.durationFormatter);\r\n    }\r\n    /**\r\n     * Converts X/Y coordinate within this element to a global coordinate.\r\n     *\r\n     * @param  point  Local coordinate\r\n     * @return        Global coordinate\r\n     */\r\n    toGlobal(point) {\r\n        return this._display.toGlobal(point);\r\n    }\r\n    /**\r\n     * Converts global X/Y coordinate to a coordinate within this element.\r\n     *\r\n     * @param  point  Global coordinate\r\n     * @return        Local coordinate\r\n     */\r\n    toLocal(point) {\r\n        return this._display.toLocal(point);\r\n    }\r\n    _getDownPoint() {\r\n        const id = this._getDownPointId();\r\n        if (id) {\r\n            return this._downPoints[id];\r\n        }\r\n    }\r\n    _getDownPointId() {\r\n        if (this._downPoints) {\r\n            return _util_Object__WEBPACK_IMPORTED_MODULE_8__.keysOrdered(this._downPoints, (a, b) => {\r\n                if (a > b) {\r\n                    return 1;\r\n                }\r\n                if (a < b) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            })[0];\r\n        }\r\n    }\r\n    /**\r\n     * Moves sprite to the end of the parent's children array.\r\n     *\r\n     * Depending on `layout` setting of the parten container, it may effect the\r\n     * positioning or overlapping order of the elements.\r\n     */\r\n    toFront() {\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            parent.children.moveValue(this, parent.children.length - 1);\r\n        }\r\n    }\r\n    /**\r\n     * Moves sprite to the beginning of the parent's children array.\r\n     *\r\n     * Depending on `layout` setting of the parten container, it may effect the\r\n     * positioning or overlapping order of the elements.\r\n     */\r\n    toBack() {\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            parent.children.moveValue(this, 0);\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Sprite, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Sprite\"\r\n});\r\nObject.defineProperty(Sprite, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: _util_Entity__WEBPACK_IMPORTED_MODULE_3__.Entity.classNames.concat([Sprite.className])\r\n});\r\n//# sourceMappingURL=Sprite.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/Sprite.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/Text.js":
/*!************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/core/render/Text.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Text: () => (/* binding */ Text)\n/* harmony export */ });\n/* harmony import */ var _Sprite__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Sprite */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/Sprite.js\");\n/* harmony import */ var _util_PopulateString__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/PopulateString */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/PopulateString.js\");\n/* harmony import */ var _util_Array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/Array */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Array.js\");\n/* harmony import */ var _util_Utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/Utils */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Utils.js\");\n/* harmony import */ var _util_Disposer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/Disposer */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Disposer.js\");\n\r\n\r\n\r\n\r\n\r\n/**\r\n * @ignore Text is an internal class. Use Label instead.\r\n */\r\nclass Text extends _Sprite__WEBPACK_IMPORTED_MODULE_0__.Sprite {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"textStyle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeTextStyle()\r\n        });\r\n        Object.defineProperty(this, \"_display\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeText(\"\", this.textStyle)\r\n        });\r\n        Object.defineProperty(this, \"_textStyles\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\r\n                \"textAlign\",\r\n                \"fontFamily\",\r\n                \"fontSize\",\r\n                \"fontStyle\",\r\n                \"fontWeight\",\r\n                \"fontStyle\",\r\n                \"fontVariant\",\r\n                \"textDecoration\",\r\n                \"shadowColor\",\r\n                \"shadowBlur\",\r\n                \"shadowOffsetX\",\r\n                \"shadowOffsetY\",\r\n                \"shadowOpacity\",\r\n                // \"leading\",\r\n                // \"letterSpacing\",\r\n                \"lineHeight\",\r\n                \"baselineRatio\",\r\n                //\"padding\",\r\n                // \"stroke\",\r\n                // \"strokeThickness\",\r\n                // \"trim\",\r\n                // \"wordWrap\",\r\n                \"direction\",\r\n                \"textBaseline\",\r\n                \"oversizedBehavior\",\r\n                \"breakWords\",\r\n                \"ellipsis\",\r\n                \"minScale\",\r\n                \"maxChars\"\r\n            ]\r\n        });\r\n        Object.defineProperty(this, \"_originalScale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _updateBounds() {\r\n        if (!this.get(\"text\")) {\r\n            let newBounds = {\r\n                left: 0,\r\n                right: 0,\r\n                top: 0,\r\n                bottom: 0,\r\n            };\r\n            this._adjustedLocalBounds = newBounds;\r\n        }\r\n        else {\r\n            super._updateBounds();\r\n            let fillGradient = this.get(\"fillGradient\");\r\n            if (fillGradient) {\r\n                this._display.style.fill = fillGradient.getFill(this);\r\n            }\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        this._display.clear();\r\n        let textStyle = this.textStyle;\r\n        if (this.isDirty(\"opacity\")) {\r\n            let opacity = this.get(\"opacity\", 1);\r\n            this._display.alpha = opacity;\r\n        }\r\n        if (this.isDirty(\"text\") || this.isDirty(\"populateText\")) {\r\n            this._display.text = this._getText();\r\n            this.markDirtyBounds();\r\n            if (this.get(\"role\") == \"tooltip\") {\r\n                this._root.updateTooltip(this);\r\n            }\r\n        }\r\n        if (this.isPrivateDirty(\"tooltipElement\")) {\r\n            const tooltipElement = this.getPrivate(\"tooltipElement\");\r\n            if (tooltipElement) {\r\n                this._disposers.push(new _util_Disposer__WEBPACK_IMPORTED_MODULE_1__.Disposer(() => {\r\n                    this._root._removeTooltipElement(this);\r\n                }));\r\n            }\r\n        }\r\n        if (this.isDirty(\"width\")) {\r\n            textStyle.wordWrapWidth = this.width();\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"oversizedBehavior\")) {\r\n            textStyle.oversizedBehavior = this.get(\"oversizedBehavior\", \"none\");\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"breakWords\")) {\r\n            textStyle.breakWords = this.get(\"breakWords\", false);\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"ellipsis\")) {\r\n            textStyle.ellipsis = this.get(\"ellipsis\");\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"ignoreFormatting\")) {\r\n            textStyle.ignoreFormatting = this.get(\"ignoreFormatting\", false);\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"minScale\")) {\r\n            textStyle.minScale = this.get(\"minScale\", 0);\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"fill\") || this.isDirty(\"fillGradient\")) {\r\n            const fill = this.get(\"fill\");\r\n            const fillGradient = this.get(\"fillGradient\");\r\n            const fillOpacity = this.get(\"fillOpacity\");\r\n            if (fillGradient) {\r\n                if (fill) {\r\n                    const stops = fillGradient.get(\"stops\", []);\r\n                    if (stops.length) {\r\n                        _util_Array__WEBPACK_IMPORTED_MODULE_2__.each(stops, (stop) => {\r\n                            if ((!stop.color || stop.colorInherited) && fill) {\r\n                                stop.color = fill;\r\n                                stop.colorInherited = true;\r\n                            }\r\n                            if (stop.opacity == null || stop.opacityInherited) {\r\n                                stop.opacity = fillOpacity;\r\n                                stop.opacityInherited = true;\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                textStyle.fill = fillGradient.getFill(this);\r\n            }\r\n            else if (fill) {\r\n                textStyle.fill = fill;\r\n            }\r\n        }\r\n        if (this.isDirty(\"fillOpacity\")) {\r\n            let fillOpacity = this.get(\"fillOpacity\", 1);\r\n            if (fillOpacity) {\r\n                textStyle.fillOpacity = fillOpacity;\r\n            }\r\n        }\r\n        if (this.isDirty(\"maxWidth\") || this.isPrivateDirty(\"maxWidth\")) {\r\n            textStyle.maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\"));\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"maxHeight\") || this.isPrivateDirty(\"maxHeight\")) {\r\n            textStyle.maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\"));\r\n            this.markDirtyBounds();\r\n        }\r\n        _util_Array__WEBPACK_IMPORTED_MODULE_2__.each(this._textStyles, (styleName) => {\r\n            if (this._dirty[styleName]) {\r\n                textStyle[styleName] = this.get(styleName);\r\n                this.markDirtyBounds();\r\n            }\r\n        });\r\n        textStyle[\"fontSize\"] = this.get(\"fontSize\");\r\n        textStyle[\"fontFamily\"] = this.get(\"fontFamily\");\r\n        this._display.style = textStyle;\r\n        if (this.isDirty(\"role\") && this.get(\"role\") == \"tooltip\") {\r\n            this._root.updateTooltip(this);\r\n        }\r\n    }\r\n    _getText() {\r\n        let text = this.get(\"text\", \"\");\r\n        if (this.get(\"maxChars\")) {\r\n            text = _util_Utils__WEBPACK_IMPORTED_MODULE_3__.truncateTextWithEllipsis(text, this.get(\"maxChars\", 100000000), this.get(\"breakWords\"), this.get(\"ellipsis\"));\r\n        }\r\n        return this.get(\"populateText\") ? (0,_util_PopulateString__WEBPACK_IMPORTED_MODULE_4__.populateString)(this, text) : text;\r\n    }\r\n    _getAccessibleText() {\r\n        const ariaLabel = this.get(\"ariaLabel\");\r\n        if (ariaLabel !== undefined) {\r\n            return this.get(\"populateText\") ? (0,_util_PopulateString__WEBPACK_IMPORTED_MODULE_4__.populateString)(this, ariaLabel) : ariaLabel;\r\n        }\r\n        return this._getText();\r\n    }\r\n    /**\r\n     * Forces the text to be re-evaluated and re-populated.\r\n     */\r\n    markDirtyText() {\r\n        this._display.text = this._getText();\r\n        if (this.get(\"role\") == \"tooltip\") {\r\n            this._root.updateTooltip(this);\r\n        }\r\n        this.markDirtyBounds();\r\n        this.markDirty();\r\n    }\r\n    _setDataItem(dataItem) {\r\n        super._setDataItem(dataItem);\r\n        if (this.get(\"populateText\")) {\r\n            this.markDirtyText();\r\n        }\r\n    }\r\n    getNumberFormatter() {\r\n        if (this.parent) {\r\n            return this.parent.getNumberFormatter();\r\n        }\r\n        else {\r\n            return super.getNumberFormatter();\r\n        }\r\n    }\r\n    getDateFormatter() {\r\n        if (this.parent) {\r\n            return this.parent.getDateFormatter();\r\n        }\r\n        else {\r\n            return super.getDateFormatter();\r\n        }\r\n    }\r\n    getDurationFormatter() {\r\n        if (this.parent) {\r\n            return this.parent.getDurationFormatter();\r\n        }\r\n        else {\r\n            return super.getDurationFormatter();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Text, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Text\"\r\n});\r\nObject.defineProperty(Text, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: _Sprite__WEBPACK_IMPORTED_MODULE_0__.Sprite.classNames.concat([Text.className])\r\n});\r\n//# sourceMappingURL=Text.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/Text.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/Tooltip.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/core/render/Tooltip.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Tooltip: () => (/* binding */ Tooltip)\n/* harmony export */ });\n/* harmony import */ var _util_Disposer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/Disposer */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Disposer.js\");\n/* harmony import */ var _render_Label__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../render/Label */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/Label.js\");\n/* harmony import */ var _render_PointedRectangle__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../render/PointedRectangle */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/PointedRectangle.js\");\n/* harmony import */ var _Container__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Container */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/Container.js\");\n/* harmony import */ var _util_Percent__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../util/Percent */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Percent.js\");\n/* harmony import */ var _util_Color__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/Color */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Color.js\");\n/* harmony import */ var _util_Math__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../util/Math */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Math.js\");\n/* harmony import */ var _util_Array__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/Array */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Array.js\");\n/* harmony import */ var _util_Utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/Utils */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Utils.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Creates a tooltip.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/tooltips/} for more info\r\n * @important\r\n */\r\nclass Tooltip extends _Container__WEBPACK_IMPORTED_MODULE_0__.Container {\r\n    constructor(root, settings, isReal, templates = []) {\r\n        super(root, settings, isReal, templates);\r\n        Object.defineProperty(this, \"_fx\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_fy\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_label\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_fillDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_strokeDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_labelDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_w\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_h\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_keepHoverDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_htmlContentHovered\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = _util_Utils__WEBPACK_IMPORTED_MODULE_1__.mergeTags(this._settings.themeTags, [\"tooltip\"]);\r\n        super._afterNew();\r\n        const background = this._setDefaultFn(\"background\", () => {\r\n            return _render_PointedRectangle__WEBPACK_IMPORTED_MODULE_2__.PointedRectangle.new(this._root, {});\r\n        });\r\n        background.set(\"themeTags\", [\"tooltip\", \"background\"]);\r\n        this._label = this.children.push(_render_Label__WEBPACK_IMPORTED_MODULE_3__.Label.new(this._root, {}));\r\n        this._disposers.push(this._label.events.on(\"boundschanged\", () => {\r\n            this._updateBackground();\r\n        }));\r\n        this._disposers.push(this.on(\"bounds\", () => {\r\n            this._updateBackground();\r\n        }));\r\n        this._updateTextColor();\r\n        this._root.tooltipContainer.children.push(this);\r\n        this.hide(0);\r\n        this._disposers.push(this.label.onPrivate(\"htmlElement\", (htmlElement) => {\r\n            if (htmlElement) {\r\n                this._disposers.push(_util_Utils__WEBPACK_IMPORTED_MODULE_1__.addEventListener(htmlElement, \"pointerover\", (_ev) => {\r\n                    this._htmlContentHovered = true;\r\n                }));\r\n                this._disposers.push(_util_Utils__WEBPACK_IMPORTED_MODULE_1__.addEventListener(htmlElement, \"pointerout\", (_ev) => {\r\n                    this._htmlContentHovered = false;\r\n                }));\r\n            }\r\n        }));\r\n        this.on(\"visible\", (_ev) => {\r\n            this._handleReaderAnnouncement();\r\n        });\r\n        this.label.events.on(\"dataitemchanged\", (_ev) => {\r\n            this._handleReaderAnnouncement();\r\n        });\r\n        this._root._tooltips.push(this);\r\n    }\r\n    _handleReaderAnnouncement() {\r\n        if (this.get(\"readerAnnounce\") && this.isVisibleDeep()) {\r\n            this._root.readerAlert(this.label.getAccessibleText());\r\n        }\r\n    }\r\n    /**\r\n     * A [[Label]] element for the tooltip.\r\n     *\r\n     * @readonly\r\n     * @return Label\r\n     */\r\n    get label() {\r\n        return this._label;\r\n    }\r\n    /**\r\n     * Permanently disposes the tooltip.\r\n     */\r\n    _dispose() {\r\n        super._dispose();\r\n        _util_Array__WEBPACK_IMPORTED_MODULE_4__.remove(this._root._tooltips, this);\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        if (this.isDirty(\"pointerOrientation\") || this.isPrivateDirty(\"minWidth\") || this.isPrivateDirty(\"minHeight\")) {\r\n            this.get(\"background\")._markDirtyKey(\"width\");\r\n        }\r\n        const labelText = this.get(\"labelText\");\r\n        if (labelText != null) {\r\n            this.label.set(\"text\", this.get(\"labelText\"));\r\n        }\r\n        const labelHTML = this.get(\"labelHTML\");\r\n        if (labelHTML != null) {\r\n            this.label.set(\"html\", this.get(\"labelHTML\"));\r\n        }\r\n        const labelAriaLabel = this.get(\"labelAriaLabel\");\r\n        if (labelAriaLabel != null) {\r\n            this.label.set(\"ariaLabel\", this.get(\"labelAriaLabel\"));\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this.isDirty(\"pointTo\") || this.isDirty(\"pointerOrientation\")) {\r\n            // can't compare to previous, as sometimes pointTo is set twice (when pointer moves, so the position won't be udpated)\r\n            this._updateBackground();\r\n        }\r\n        if (this.isDirty(\"tooltipTarget\")) {\r\n            this.updateBackgroundColor();\r\n        }\r\n        if (this.isDirty(\"keepTargetHover\")) {\r\n            const keephover = this.get(\"keepTargetHover\");\r\n            if (keephover) {\r\n                const bg = this.get(\"background\");\r\n                this._keepHoverDp = new _util_Disposer__WEBPACK_IMPORTED_MODULE_5__.MultiDisposer([\r\n                    bg.events.on(\"pointerover\", (_ev) => {\r\n                        let target = this.get(\"tooltipTarget\");\r\n                        if (target) {\r\n                            if (target.parent && target.parent.getPrivate(\"tooltipTarget\") == target) {\r\n                                target = target.parent;\r\n                            }\r\n                            target.hover();\r\n                        }\r\n                    }),\r\n                    bg.events.on(\"pointerout\", (_ev) => {\r\n                        let target = this.get(\"tooltipTarget\");\r\n                        if (target) {\r\n                            if (target.parent && target.parent.getPrivate(\"tooltipTarget\") == target) {\r\n                                target = target.parent;\r\n                            }\r\n                            if (!this._htmlContentHovered) {\r\n                                target.unhover();\r\n                            }\r\n                        }\r\n                    })\r\n                ]);\r\n                this.label.onPrivate(\"htmlElement\", (htmlElement) => {\r\n                    if (this._keepHoverDp && htmlElement) {\r\n                        this._keepHoverDp.disposers.push(_util_Utils__WEBPACK_IMPORTED_MODULE_1__.addEventListener(htmlElement, \"pointerleave\", (ev) => {\r\n                            const outEvent = this.root._renderer.getEvent(ev);\r\n                            bg.events.dispatch(\"pointerout\", {\r\n                                type: \"pointerout\",\r\n                                originalEvent: outEvent.event,\r\n                                point: outEvent.point,\r\n                                simulated: false,\r\n                                target: bg\r\n                            });\r\n                        }));\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                if (this._keepHoverDp) {\r\n                    this._keepHoverDp.dispose();\r\n                    this._keepHoverDp = undefined;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _onShow() {\r\n        super._onShow();\r\n        this.updateBackgroundColor();\r\n    }\r\n    updateBackgroundColor() {\r\n        let tooltipTarget = this.get(\"tooltipTarget\");\r\n        const background = this.get(\"background\");\r\n        let fill;\r\n        let stroke;\r\n        if (tooltipTarget && background) {\r\n            fill = tooltipTarget.get(\"fill\");\r\n            stroke = tooltipTarget.get(\"stroke\");\r\n            if (fill == null) {\r\n                fill = stroke;\r\n            }\r\n            if (this.get(\"getFillFromSprite\")) {\r\n                if (this._fillDp) {\r\n                    this._fillDp.dispose();\r\n                }\r\n                if (fill != null) {\r\n                    background.set(\"fill\", fill);\r\n                }\r\n                this._fillDp = tooltipTarget.on(\"fill\", (fill) => {\r\n                    if (fill != null) {\r\n                        background.set(\"fill\", fill);\r\n                        this._updateTextColor(fill);\r\n                    }\r\n                });\r\n                this._disposers.push(this._fillDp);\r\n            }\r\n            if (this.get(\"getStrokeFromSprite\")) {\r\n                if (this._strokeDp) {\r\n                    this._strokeDp.dispose();\r\n                }\r\n                if (fill != null) {\r\n                    background.set(\"stroke\", fill);\r\n                }\r\n                this._strokeDp = tooltipTarget.on(\"fill\", (fill) => {\r\n                    if (fill != null) {\r\n                        background.set(\"stroke\", fill);\r\n                    }\r\n                });\r\n                this._disposers.push(this._strokeDp);\r\n            }\r\n            if (this.get(\"getLabelFillFromSprite\")) {\r\n                if (this._labelDp) {\r\n                    this._labelDp.dispose();\r\n                }\r\n                if (fill != null) {\r\n                    this.label.set(\"fill\", fill);\r\n                }\r\n                this._labelDp = tooltipTarget.on(\"fill\", (fill) => {\r\n                    if (fill != null) {\r\n                        this.label.set(\"fill\", fill);\r\n                    }\r\n                });\r\n                this._disposers.push(this._labelDp);\r\n            }\r\n        }\r\n        this._updateTextColor(fill);\r\n    }\r\n    _updateTextColor(fill) {\r\n        if (this.get(\"autoTextColor\")) {\r\n            if (fill == null) {\r\n                fill = this.get(\"background\").get(\"fill\");\r\n            }\r\n            if (fill == null) {\r\n                fill = this._root.interfaceColors.get(\"background\");\r\n            }\r\n            if (fill instanceof _util_Color__WEBPACK_IMPORTED_MODULE_6__.Color) {\r\n                this.label.set(\"fill\", _util_Color__WEBPACK_IMPORTED_MODULE_6__.Color.alternative(fill, this._root.interfaceColors.get(\"alternativeText\"), this._root.interfaceColors.get(\"text\")));\r\n            }\r\n        }\r\n    }\r\n    _setDataItem(dataItem) {\r\n        super._setDataItem(dataItem);\r\n        this.label._setDataItem(dataItem);\r\n    }\r\n    _updateBackground() {\r\n        super.updateBackground();\r\n        const parent = this._root.container;\r\n        if (parent) {\r\n            let cw = 0.5;\r\n            let ch = 0.5;\r\n            let centerX = this.get(\"centerX\");\r\n            if (centerX instanceof _util_Percent__WEBPACK_IMPORTED_MODULE_7__.Percent) {\r\n                cw = centerX.value;\r\n            }\r\n            let centerY = this.get(\"centerY\");\r\n            if (centerY instanceof _util_Percent__WEBPACK_IMPORTED_MODULE_7__.Percent) {\r\n                ch = centerY.value;\r\n            }\r\n            let parentW = parent.width();\r\n            let parentH = parent.height();\r\n            let tooltipContainer = this.parent;\r\n            let xx = 0;\r\n            let yy = 0;\r\n            if (tooltipContainer) {\r\n                xx = tooltipContainer.x();\r\n                yy = tooltipContainer.y();\r\n                const layerMargin = tooltipContainer.get(\"layerMargin\");\r\n                if (layerMargin) {\r\n                    xx += layerMargin.left || 0;\r\n                    yy += layerMargin.top || 0;\r\n                    parentW += (layerMargin.left || 0) + (layerMargin.right || 0);\r\n                    parentH += (layerMargin.top || 0) + (layerMargin.bottom || 0);\r\n                }\r\n            }\r\n            const bounds = this.get(\"bounds\", { left: -xx, top: -yy, right: parentW - xx, bottom: parentH - yy });\r\n            this._updateBounds();\r\n            let w = this.width();\r\n            let h = this.height();\r\n            // use old w and h,as when tooltip is hidden, these are 0 and unneeded animation happens\r\n            if (w === 0) {\r\n                w = this._w;\r\n            }\r\n            if (h === 0) {\r\n                h = this._h;\r\n            }\r\n            let pointTo = this.get(\"pointTo\", { x: parentW / 2, y: parentH / 2 });\r\n            let x = pointTo.x;\r\n            let y = pointTo.y;\r\n            let pointerOrientation = this.get(\"pointerOrientation\");\r\n            let background = this.get(\"background\");\r\n            let pointerLength = 0;\r\n            let bgStrokeSizeY = 0;\r\n            let bgStrokeSizeX = 0;\r\n            if (background instanceof _render_PointedRectangle__WEBPACK_IMPORTED_MODULE_2__.PointedRectangle) {\r\n                pointerLength = background.get(\"pointerLength\", 0);\r\n                bgStrokeSizeY = background.get(\"strokeWidth\", 0) / 2;\r\n                bgStrokeSizeX = bgStrokeSizeY;\r\n                background.set(\"width\", w);\r\n                background.set(\"height\", h);\r\n            }\r\n            let pointerX = 0;\r\n            let pointerY = 0;\r\n            let boundsW = bounds.right - bounds.left;\r\n            let boundsH = bounds.bottom - bounds.top;\r\n            // horizontal\r\n            if (pointerOrientation == \"horizontal\" || pointerOrientation == \"left\" || pointerOrientation == \"right\") {\r\n                bgStrokeSizeY = 0;\r\n                if (pointerOrientation == \"horizontal\") {\r\n                    if (x > bounds.left + boundsW / 2) {\r\n                        x -= (w * (1 - cw) + pointerLength);\r\n                        bgStrokeSizeX *= -1;\r\n                    }\r\n                    else {\r\n                        x += (w * cw + pointerLength);\r\n                    }\r\n                }\r\n                else if (pointerOrientation == \"left\") {\r\n                    x += (w * (1 - cw) + pointerLength);\r\n                }\r\n                else {\r\n                    x -= (w * cw + pointerLength);\r\n                    bgStrokeSizeX *= -1;\r\n                }\r\n            }\r\n            // vertical pointer\r\n            else {\r\n                bgStrokeSizeX = 0;\r\n                if (pointerOrientation == \"vertical\") {\r\n                    if (y > bounds.top + h / 2 + pointerLength) {\r\n                        y -= (h * (1 - ch) + pointerLength);\r\n                    }\r\n                    else {\r\n                        y += (h * ch + pointerLength);\r\n                        bgStrokeSizeY *= -1;\r\n                    }\r\n                }\r\n                else if (pointerOrientation == \"down\") {\r\n                    y -= (h * (1 - ch) + pointerLength);\r\n                }\r\n                else {\r\n                    y += (h * ch + pointerLength);\r\n                    bgStrokeSizeY *= -1;\r\n                }\r\n            }\r\n            x = _util_Math__WEBPACK_IMPORTED_MODULE_8__.fitToRange(x, bounds.left + w * cw, bounds.left + boundsW - w * (1 - cw)) + bgStrokeSizeX;\r\n            y = _util_Math__WEBPACK_IMPORTED_MODULE_8__.fitToRange(y, bounds.top + h * ch, bounds.top + boundsH - h * (1 - ch)) - bgStrokeSizeY;\r\n            pointerX = pointTo.x - x + w * cw + bgStrokeSizeX;\r\n            pointerY = pointTo.y - y + h * ch - bgStrokeSizeY;\r\n            this._fx = x;\r\n            this._fy = y;\r\n            const animationDuration = this.get(\"animationDuration\", 0);\r\n            if (animationDuration > 0 && this.get(\"visible\") && this.get(\"opacity\") > 0.1) {\r\n                const animationEasing = this.get(\"animationEasing\");\r\n                this.animate({ key: \"x\", to: x, duration: animationDuration, easing: animationEasing });\r\n                this.animate({ key: \"y\", to: y, duration: animationDuration, easing: animationEasing });\r\n            }\r\n            else {\r\n                this.set(\"x\", x);\r\n                this.set(\"y\", y);\r\n            }\r\n            if (background instanceof _render_PointedRectangle__WEBPACK_IMPORTED_MODULE_2__.PointedRectangle) {\r\n                background.set(\"pointerX\", pointerX);\r\n                background.set(\"pointerY\", pointerY);\r\n            }\r\n            if (w > 0) {\r\n                this._w = w;\r\n            }\r\n            if (h > 0) {\r\n                this._h = h;\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Tooltip, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Tooltip\"\r\n});\r\nObject.defineProperty(Tooltip, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: _Container__WEBPACK_IMPORTED_MODULE_0__.Container.classNames.concat([Tooltip.className])\r\n});\r\n//# sourceMappingURL=Tooltip.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/Tooltip.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/VerticalLayout.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/core/render/VerticalLayout.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VerticalLayout: () => (/* binding */ VerticalLayout)\n/* harmony export */ });\n/* harmony import */ var _Layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Layout */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/Layout.js\");\n/* harmony import */ var _util_Type__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/Type */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Type.js\");\n/* harmony import */ var _util_Percent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/Percent */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Percent.js\");\n\r\n\r\n\r\n/**\r\n * A vertical children layout for [[Container]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/#Layout} for more info\r\n */\r\nclass VerticalLayout extends _Layout__WEBPACK_IMPORTED_MODULE_0__.Layout {\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateContainer(container) {\r\n        let paddingTop = container.get(\"paddingTop\", 0);\r\n        let availableHeight = container.innerHeight();\r\n        let totalPercent = 0;\r\n        (0,_Layout__WEBPACK_IMPORTED_MODULE_0__.eachChildren)(container, (child) => {\r\n            if (child.isVisible()) {\r\n                if (child.get(\"position\") == \"relative\") {\r\n                    let childHeight = child.get(\"height\");\r\n                    if (childHeight instanceof _util_Percent__WEBPACK_IMPORTED_MODULE_1__.Percent) {\r\n                        totalPercent += childHeight.value;\r\n                        let h = availableHeight * childHeight.value;\r\n                        let minHeight = child.get(\"minHeight\", child.getPrivate(\"minHeight\", -Infinity));\r\n                        if (minHeight > h) {\r\n                            availableHeight -= minHeight;\r\n                            totalPercent -= childHeight.value;\r\n                        }\r\n                        let maxHeight = child.get(\"maxHeight\", child.getPrivate(\"maxHeight\", Infinity));\r\n                        if (h > maxHeight) {\r\n                            availableHeight -= maxHeight;\r\n                            totalPercent -= childHeight.value;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (!_util_Type__WEBPACK_IMPORTED_MODULE_2__.isNumber(childHeight)) {\r\n                            childHeight = child.height();\r\n                        }\r\n                        availableHeight -= childHeight + child.get(\"marginTop\", 0) + child.get(\"marginBottom\", 0);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        if (availableHeight <= 0 || availableHeight == Infinity) {\r\n            availableHeight = .1;\r\n        }\r\n        //if (availableHeight > 0) {\r\n        (0,_Layout__WEBPACK_IMPORTED_MODULE_0__.eachChildren)(container, (child) => {\r\n            if (child.isVisible()) {\r\n                if (child.get(\"position\") == \"relative\") {\r\n                    let childHeight = child.get(\"height\");\r\n                    if (childHeight instanceof _util_Percent__WEBPACK_IMPORTED_MODULE_1__.Percent) {\r\n                        let privateHeight = availableHeight * childHeight.value / totalPercent - child.get(\"marginTop\", 0) - child.get(\"marginBottom\", 0);\r\n                        let minHeight = child.get(\"minHeight\", child.getPrivate(\"minHeight\", -Infinity));\r\n                        let maxHeight = child.get(\"maxHeight\", child.getPrivate(\"maxHeight\", Infinity));\r\n                        privateHeight = Math.min(Math.max(minHeight, privateHeight), maxHeight);\r\n                        child.setPrivate(\"height\", privateHeight);\r\n                    }\r\n                    else {\r\n                        if (child._prevSettings.height instanceof _util_Percent__WEBPACK_IMPORTED_MODULE_1__.Percent) {\r\n                            child.setPrivate(\"height\", undefined);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        //}\r\n        let prevY = paddingTop;\r\n        (0,_Layout__WEBPACK_IMPORTED_MODULE_0__.eachChildren)(container, (child) => {\r\n            if (child.get(\"position\") == \"relative\") {\r\n                if (child.isVisible()) {\r\n                    let bounds = child.adjustedLocalBounds();\r\n                    let marginTop = child.get(\"marginTop\", 0);\r\n                    let top = bounds.top;\r\n                    let bottom = bounds.bottom;\r\n                    let maxHeight = child.get(\"maxHeight\");\r\n                    if (maxHeight) {\r\n                        if (bottom - top > maxHeight) {\r\n                            bottom = top + maxHeight;\r\n                        }\r\n                    }\r\n                    let marginBottom = child.get(\"marginBottom\", 0);\r\n                    let y = prevY + marginTop - top;\r\n                    child.setPrivate(\"y\", y);\r\n                    prevY = y + bottom + marginBottom;\r\n                }\r\n                else {\r\n                    child.setPrivate(\"y\", undefined);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\nObject.defineProperty(VerticalLayout, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"VerticalLayout\"\r\n});\r\nObject.defineProperty(VerticalLayout, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: _Layout__WEBPACK_IMPORTED_MODULE_0__.Layout.classNames.concat([VerticalLayout.className])\r\n});\r\n//# sourceMappingURL=VerticalLayout.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNS8uaW50ZXJuYWwvY29yZS9yZW5kZXIvVmVydGljYWxMYXlvdXQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFnRDtBQUNWO0FBQ0k7QUFDMUM7QUFDQTtBQUNBO0FBQ0EsU0FBUyxvRkFBb0Y7QUFDN0Y7QUFDTyw2QkFBNkIsMkNBQU07QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHFEQUFZO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBLCtDQUErQyxrREFBTztBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLGdEQUFjO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEscURBQVk7QUFDcEI7QUFDQTtBQUNBO0FBQ0EsK0NBQStDLGtEQUFPO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0VBQWtFLGtEQUFPO0FBQ3pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFFBQVEscURBQVk7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVywyQ0FBTTtBQUNqQixDQUFDO0FBQ0QiLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3Jrc3BhY2Uvbm9kZV9tb2R1bGVzL0BhbWNoYXJ0cy9hbWNoYXJ0czUvLmludGVybmFsL2NvcmUvcmVuZGVyL1ZlcnRpY2FsTGF5b3V0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IExheW91dCwgZWFjaENoaWxkcmVuIH0gZnJvbSBcIi4vTGF5b3V0XCI7XHJcbmltcG9ydCAqIGFzICR0eXBlIGZyb20gXCIuLi91dGlsL1R5cGVcIjtcclxuaW1wb3J0IHsgUGVyY2VudCB9IGZyb20gXCIuLi91dGlsL1BlcmNlbnRcIjtcclxuLyoqXHJcbiAqIEEgdmVydGljYWwgY2hpbGRyZW4gbGF5b3V0IGZvciBbW0NvbnRhaW5lcl1dLlxyXG4gKlxyXG4gKiBAc2VlIHtAbGluayBodHRwczovL3d3dy5hbWNoYXJ0cy5jb20vZG9jcy92NS9jb25jZXB0cy9jb21tb24tZWxlbWVudHMvY29udGFpbmVycy8jTGF5b3V0fSBmb3IgbW9yZSBpbmZvXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgVmVydGljYWxMYXlvdXQgZXh0ZW5kcyBMYXlvdXQge1xyXG4gICAgLyoqXHJcbiAgICAgKiBAaWdub3JlXHJcbiAgICAgKi9cclxuICAgIHVwZGF0ZUNvbnRhaW5lcihjb250YWluZXIpIHtcclxuICAgICAgICBsZXQgcGFkZGluZ1RvcCA9IGNvbnRhaW5lci5nZXQoXCJwYWRkaW5nVG9wXCIsIDApO1xyXG4gICAgICAgIGxldCBhdmFpbGFibGVIZWlnaHQgPSBjb250YWluZXIuaW5uZXJIZWlnaHQoKTtcclxuICAgICAgICBsZXQgdG90YWxQZXJjZW50ID0gMDtcclxuICAgICAgICBlYWNoQ2hpbGRyZW4oY29udGFpbmVyLCAoY2hpbGQpID0+IHtcclxuICAgICAgICAgICAgaWYgKGNoaWxkLmlzVmlzaWJsZSgpKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoY2hpbGQuZ2V0KFwicG9zaXRpb25cIikgPT0gXCJyZWxhdGl2ZVwiKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IGNoaWxkSGVpZ2h0ID0gY2hpbGQuZ2V0KFwiaGVpZ2h0XCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChjaGlsZEhlaWdodCBpbnN0YW5jZW9mIFBlcmNlbnQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdG90YWxQZXJjZW50ICs9IGNoaWxkSGVpZ2h0LnZhbHVlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgaCA9IGF2YWlsYWJsZUhlaWdodCAqIGNoaWxkSGVpZ2h0LnZhbHVlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgbWluSGVpZ2h0ID0gY2hpbGQuZ2V0KFwibWluSGVpZ2h0XCIsIGNoaWxkLmdldFByaXZhdGUoXCJtaW5IZWlnaHRcIiwgLUluZmluaXR5KSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChtaW5IZWlnaHQgPiBoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdmFpbGFibGVIZWlnaHQgLT0gbWluSGVpZ2h0O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdG90YWxQZXJjZW50IC09IGNoaWxkSGVpZ2h0LnZhbHVlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBtYXhIZWlnaHQgPSBjaGlsZC5nZXQoXCJtYXhIZWlnaHRcIiwgY2hpbGQuZ2V0UHJpdmF0ZShcIm1heEhlaWdodFwiLCBJbmZpbml0eSkpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoaCA+IG1heEhlaWdodCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYXZhaWxhYmxlSGVpZ2h0IC09IG1heEhlaWdodDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvdGFsUGVyY2VudCAtPSBjaGlsZEhlaWdodC52YWx1ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCEkdHlwZS5pc051bWJlcihjaGlsZEhlaWdodCkpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkSGVpZ2h0ID0gY2hpbGQuaGVpZ2h0KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgYXZhaWxhYmxlSGVpZ2h0IC09IGNoaWxkSGVpZ2h0ICsgY2hpbGQuZ2V0KFwibWFyZ2luVG9wXCIsIDApICsgY2hpbGQuZ2V0KFwibWFyZ2luQm90dG9tXCIsIDApO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIGlmIChhdmFpbGFibGVIZWlnaHQgPD0gMCB8fCBhdmFpbGFibGVIZWlnaHQgPT0gSW5maW5pdHkpIHtcclxuICAgICAgICAgICAgYXZhaWxhYmxlSGVpZ2h0ID0gLjE7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vaWYgKGF2YWlsYWJsZUhlaWdodCA+IDApIHtcclxuICAgICAgICBlYWNoQ2hpbGRyZW4oY29udGFpbmVyLCAoY2hpbGQpID0+IHtcclxuICAgICAgICAgICAgaWYgKGNoaWxkLmlzVmlzaWJsZSgpKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoY2hpbGQuZ2V0KFwicG9zaXRpb25cIikgPT0gXCJyZWxhdGl2ZVwiKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IGNoaWxkSGVpZ2h0ID0gY2hpbGQuZ2V0KFwiaGVpZ2h0XCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChjaGlsZEhlaWdodCBpbnN0YW5jZW9mIFBlcmNlbnQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHByaXZhdGVIZWlnaHQgPSBhdmFpbGFibGVIZWlnaHQgKiBjaGlsZEhlaWdodC52YWx1ZSAvIHRvdGFsUGVyY2VudCAtIGNoaWxkLmdldChcIm1hcmdpblRvcFwiLCAwKSAtIGNoaWxkLmdldChcIm1hcmdpbkJvdHRvbVwiLCAwKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IG1pbkhlaWdodCA9IGNoaWxkLmdldChcIm1pbkhlaWdodFwiLCBjaGlsZC5nZXRQcml2YXRlKFwibWluSGVpZ2h0XCIsIC1JbmZpbml0eSkpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgbWF4SGVpZ2h0ID0gY2hpbGQuZ2V0KFwibWF4SGVpZ2h0XCIsIGNoaWxkLmdldFByaXZhdGUoXCJtYXhIZWlnaHRcIiwgSW5maW5pdHkpKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcHJpdmF0ZUhlaWdodCA9IE1hdGgubWluKE1hdGgubWF4KG1pbkhlaWdodCwgcHJpdmF0ZUhlaWdodCksIG1heEhlaWdodCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkLnNldFByaXZhdGUoXCJoZWlnaHRcIiwgcHJpdmF0ZUhlaWdodCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoY2hpbGQuX3ByZXZTZXR0aW5ncy5oZWlnaHQgaW5zdGFuY2VvZiBQZXJjZW50KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZC5zZXRQcml2YXRlKFwiaGVpZ2h0XCIsIHVuZGVmaW5lZCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgICAvL31cclxuICAgICAgICBsZXQgcHJldlkgPSBwYWRkaW5nVG9wO1xyXG4gICAgICAgIGVhY2hDaGlsZHJlbihjb250YWluZXIsIChjaGlsZCkgPT4ge1xyXG4gICAgICAgICAgICBpZiAoY2hpbGQuZ2V0KFwicG9zaXRpb25cIikgPT0gXCJyZWxhdGl2ZVwiKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoY2hpbGQuaXNWaXNpYmxlKCkpIHtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgYm91bmRzID0gY2hpbGQuYWRqdXN0ZWRMb2NhbEJvdW5kcygpO1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBtYXJnaW5Ub3AgPSBjaGlsZC5nZXQoXCJtYXJnaW5Ub3BcIiwgMCk7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IHRvcCA9IGJvdW5kcy50b3A7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IGJvdHRvbSA9IGJvdW5kcy5ib3R0b207XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IG1heEhlaWdodCA9IGNoaWxkLmdldChcIm1heEhlaWdodFwiKTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAobWF4SGVpZ2h0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChib3R0b20gLSB0b3AgPiBtYXhIZWlnaHQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJvdHRvbSA9IHRvcCArIG1heEhlaWdodDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBsZXQgbWFyZ2luQm90dG9tID0gY2hpbGQuZ2V0KFwibWFyZ2luQm90dG9tXCIsIDApO1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCB5ID0gcHJldlkgKyBtYXJnaW5Ub3AgLSB0b3A7XHJcbiAgICAgICAgICAgICAgICAgICAgY2hpbGQuc2V0UHJpdmF0ZShcInlcIiwgeSk7XHJcbiAgICAgICAgICAgICAgICAgICAgcHJldlkgPSB5ICsgYm90dG9tICsgbWFyZ2luQm90dG9tO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY2hpbGQuc2V0UHJpdmF0ZShcInlcIiwgdW5kZWZpbmVkKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG59XHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShWZXJ0aWNhbExheW91dCwgXCJjbGFzc05hbWVcIiwge1xyXG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcclxuICAgIHdyaXRhYmxlOiB0cnVlLFxyXG4gICAgdmFsdWU6IFwiVmVydGljYWxMYXlvdXRcIlxyXG59KTtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KFZlcnRpY2FsTGF5b3V0LCBcImNsYXNzTmFtZXNcIiwge1xyXG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcclxuICAgIHdyaXRhYmxlOiB0cnVlLFxyXG4gICAgdmFsdWU6IExheW91dC5jbGFzc05hbWVzLmNvbmNhdChbVmVydGljYWxMYXlvdXQuY2xhc3NOYW1lXSlcclxufSk7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVZlcnRpY2FsTGF5b3V0LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/VerticalLayout.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/backend/CanvasRenderer.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/core/render/backend/CanvasRenderer.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CanvasContainer: () => (/* binding */ CanvasContainer),\n/* harmony export */   CanvasDisplayObject: () => (/* binding */ CanvasDisplayObject),\n/* harmony export */   CanvasGraphics: () => (/* binding */ CanvasGraphics),\n/* harmony export */   CanvasImage: () => (/* binding */ CanvasImage),\n/* harmony export */   CanvasLayer: () => (/* binding */ CanvasLayer),\n/* harmony export */   CanvasPivot: () => (/* binding */ CanvasPivot),\n/* harmony export */   CanvasRadialText: () => (/* binding */ CanvasRadialText),\n/* harmony export */   CanvasRenderer: () => (/* binding */ CanvasRenderer),\n/* harmony export */   CanvasRendererEvent: () => (/* binding */ CanvasRendererEvent),\n/* harmony export */   CanvasText: () => (/* binding */ CanvasText),\n/* harmony export */   CanvasTextStyle: () => (/* binding */ CanvasTextStyle)\n/* harmony export */ });\n/* harmony import */ var _Renderer__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Renderer */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/backend/Renderer.js\");\n/* harmony import */ var _util_Color__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../util/Color */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Color.js\");\n/* harmony import */ var _util_Matrix__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../util/Matrix */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Matrix.js\");\n/* harmony import */ var _util_Percent__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../util/Percent */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Percent.js\");\n/* harmony import */ var _util_Disposer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../util/Disposer */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Disposer.js\");\n/* harmony import */ var _util_TextFormatter__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../util/TextFormatter */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/TextFormatter.js\");\n/* harmony import */ var _util_Utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../util/Utils */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Utils.js\");\n/* harmony import */ var _util_Array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../util/Array */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Array.js\");\n/* harmony import */ var _util_Object__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../util/Object */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Object.js\");\n/* harmony import */ var _util_Type__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../util/Type */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Type.js\");\n/* harmony import */ var _util_Math__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../util/Math */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Math.js\");\n/* harmony import */ var svg_arc_to_cubic_bezier__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svg-arc-to-cubic-bezier */ \"(ssr)/./node_modules/svg-arc-to-cubic-bezier/modules/index.js\");\n/** @ignore */ /** */\r\n\r\n\r\n\r\n\r\n//import { Throttler } from \"../../util/Throttler\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction checkArgs(name, actual, expected) {\r\n    if (actual !== expected) {\r\n        throw new Error(\"Required \" + expected + \" arguments for \" + name + \" but got \" + actual);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction checkMinArgs(name, actual, expected) {\r\n    if (actual < expected) {\r\n        throw new Error(\"Required at least \" + expected + \" arguments for \" + name + \" but got \" + actual);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction checkEvenArgs(name, actual, expected) {\r\n    checkMinArgs(name, actual, expected);\r\n    if ((actual % expected) !== 0) {\r\n        throw new Error(\"Arguments for \" + name + \" must be in pairs of \" + expected);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n * This splits the flag so that way 0017 will be processed as 0 0 17\r\n *\r\n * This is important for weird paths like `M17 5A1 1 0 0017 30 1 1 0 0017 5`\r\n */\r\nfunction splitArcFlags(args) {\r\n    for (let i = 0; i < args.length; i += 7) {\r\n        let index = i + 3;\r\n        let flag = args[index];\r\n        if (flag.length > 1) {\r\n            const a = /^([01])([01])(.*)$/.exec(flag);\r\n            if (a !== null) {\r\n                args.splice(index, 0, a[1]);\r\n                ++index;\r\n                args.splice(index, 0, a[2]);\r\n                ++index;\r\n                if (a[3].length > 0) {\r\n                    args[index] = a[3];\r\n                }\r\n                else {\r\n                    args.splice(index, 1);\r\n                }\r\n            }\r\n        }\r\n        ++index;\r\n        flag = args[index];\r\n        if (flag.length > 1) {\r\n            const a = /^([01])(.+)$/.exec(flag);\r\n            if (a !== null) {\r\n                args.splice(index, 0, a[1]);\r\n                ++index;\r\n                args[index] = a[2];\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction assertBinary(value) {\r\n    if (value === 0 || value === 1) {\r\n        return value;\r\n    }\r\n    else {\r\n        throw new Error(\"Flag must be 0 or 1\");\r\n    }\r\n}\r\n//  1 -> 0xffffff * (2 / 2)\r\n//  2 -> 0xffffff * (1 / 2)\r\n//\r\n//  3 -> 0xffffff * (3 / 4)\r\n//  4 -> 0xffffff * (1 / 4)\r\n//\r\n//  5 -> 0xffffff * (7 / 8)\r\n//  6 -> 0xffffff * (5 / 8)\r\n//  7 -> 0xffffff * (3 / 8)\r\n//  8 -> 0xffffff * (1 / 8)\r\n//\r\n//  9 -> 0xffffff * (15 / 16)\r\n// 10 -> 0xffffff * (13 / 16)\r\n// 11 -> 0xffffff * (11 / 16)\r\n// 12 -> 0xffffff *  (9 / 16)\r\n// 13 -> 0xffffff *  (7 / 16)\r\n// 14 -> 0xffffff *  (5 / 16)\r\n// 15 -> 0xffffff *  (3 / 16)\r\n// 16 -> 0xffffff *  (1 / 16)\r\n// @todo remove this old color distribution algo if the new one pans out\r\n/*function distributeId(id: number): number {\r\n    if (id === 1) {\r\n        return 0x000001;\r\n\r\n    } else {\r\n        // Finds the closest power of 2\r\n        const base = Math.pow(2, Math.ceil(Math.log(id) / Math.log(2)));\r\n\r\n        // Translates the id into an odd fraction index\r\n        const index = ((base - id) * 2) + 1;\r\n\r\n        // TODO is Math.round correct ?\r\n        return Math.round(0xffffff * (index / base));\r\n    }\r\n}*/\r\n/**\r\n * Function by smeans:\r\n * https://lowcode.life/generating-unique-contrasting-colors-in-javascript/\r\n * @ignore\r\n */\r\nfunction distributeId(id) {\r\n    const rgb = [0, 0, 0];\r\n    for (let i = 0; i < 24; i++) {\r\n        rgb[i % 3] <<= 1;\r\n        rgb[i % 3] |= id & 0x01;\r\n        id >>= 1;\r\n    }\r\n    return (rgb[0] | 0) + (rgb[1] << 8) + (rgb[2] << 16);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction eachTargets(hitTarget, f) {\r\n    for (;;) {\r\n        if (hitTarget.interactive) {\r\n            if (!f(hitTarget)) {\r\n                break;\r\n            }\r\n        }\r\n        if (hitTarget._parent) {\r\n            hitTarget = hitTarget._parent;\r\n        }\r\n        else {\r\n            break;\r\n        }\r\n    }\r\n}\r\n// TODO feature detection for mouse/touch/pointer\r\n/**\r\n * @ignore\r\n */\r\nfunction onPointerEvent(element, name, f) {\r\n    return _util_Utils__WEBPACK_IMPORTED_MODULE_1__.addEventListener(element, _util_Utils__WEBPACK_IMPORTED_MODULE_1__.getRendererEvent(name), (event) => {\r\n        const target = _util_Utils__WEBPACK_IMPORTED_MODULE_1__.getEventTarget(event);\r\n        let touches = event.touches;\r\n        if (touches) {\r\n            if (touches.length == 0) {\r\n                touches = event.changedTouches;\r\n            }\r\n            f(_util_Array__WEBPACK_IMPORTED_MODULE_2__.copy(touches), target);\r\n        }\r\n        else {\r\n            f([event], target);\r\n        }\r\n    });\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction isTainted(image) {\r\n    const canvas = document.createElement(\"canvas\");\r\n    canvas.width = 1;\r\n    canvas.height = 1;\r\n    const context = canvas.getContext(\"2d\", { willReadFrequently: true });\r\n    context.drawImage(image, 0, 0, 1, 1);\r\n    try {\r\n        context.getImageData(0, 0, 1, 1);\r\n        return false;\r\n    }\r\n    catch (err) {\r\n        console.warn(\"Image \\\"\" + image.src + \"\\\" is loaded from different host and is not covered by CORS policy. For more information about the implications read here: https://www.amcharts.com/docs/v5/concepts/cors\");\r\n        return true;\r\n    }\r\n}\r\n/**\r\n * This is needed to workaround a bug in iOS which causes it to not GC canvas elements.\r\n *\r\n * @ignore\r\n */\r\nfunction clearCanvas(view) {\r\n    view.width = 0;\r\n    view.height = 0;\r\n    view.style.width = \"0px\";\r\n    view.style.height = \"0px\";\r\n}\r\n/**\r\n * Aligns the coordinate to the pixel, so it renders crisp\r\n *\r\n * @ignore\r\n */\r\nfunction crisp(x) {\r\n    return Math.floor(x) + .5;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass CanvasPivot {\r\n    constructor() {\r\n        Object.defineProperty(this, \"_x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n    }\r\n    get x() {\r\n        return this._x;\r\n    }\r\n    get y() {\r\n        return this._y;\r\n    }\r\n    set x(value) {\r\n        this._x = value;\r\n    }\r\n    set y(value) {\r\n        this._y = value;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass CanvasDisplayObject extends _util_Disposer__WEBPACK_IMPORTED_MODULE_3__.DisposerClass {\r\n    constructor(renderer) {\r\n        super();\r\n        Object.defineProperty(this, \"_layer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"mask\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"visible\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"exportable\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"interactive\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"inactive\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"wheelable\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"cancelTouch\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"isMeasured\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"buttonMode\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"alpha\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"compoundAlpha\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"angle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"scale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"crisp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"pivot\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new CanvasPivot()\r\n        });\r\n        Object.defineProperty(this, \"filter\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"cursorOverStyle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_replacedCursorStyle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_localMatrix\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new _util_Matrix__WEBPACK_IMPORTED_MODULE_4__.Matrix()\r\n        });\r\n        Object.defineProperty(this, \"_matrix\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new _util_Matrix__WEBPACK_IMPORTED_MODULE_4__.Matrix()\r\n        });\r\n        // TODO can this be replaced with _localMatrix ?\r\n        Object.defineProperty(this, \"_uMatrix\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new _util_Matrix__WEBPACK_IMPORTED_MODULE_4__.Matrix()\r\n        });\r\n        Object.defineProperty(this, \"_renderer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_parent\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_localBounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_bounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_colorId\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._renderer = renderer;\r\n    }\r\n    subStatus(status) {\r\n        return {\r\n            inactive: (this.inactive == null ? status.inactive : this.inactive),\r\n            layer: this._layer || status.layer,\r\n        };\r\n    }\r\n    _dispose() {\r\n        this._renderer._removeObject(this);\r\n        this.getLayer().dirty = true;\r\n    }\r\n    getCanvas() {\r\n        return this.getLayer().view;\r\n    }\r\n    getLayer() {\r\n        let self = this;\r\n        for (;;) {\r\n            if (self._layer) {\r\n                return self._layer;\r\n            }\r\n            else if (self._parent) {\r\n                self = self._parent;\r\n            }\r\n            else {\r\n                return this._renderer.defaultLayer;\r\n            }\r\n        }\r\n    }\r\n    setLayer(order, margin) {\r\n        if (order == null) {\r\n            this._layer = undefined;\r\n        }\r\n        else {\r\n            const visible = true;\r\n            this._layer = this._renderer.getLayer(order, visible);\r\n            this._layer.visible = visible;\r\n            this._layer.margin = margin;\r\n            if (margin) {\r\n                _util_Utils__WEBPACK_IMPORTED_MODULE_1__.setInteractive(this._layer.view, false);\r\n            }\r\n            this._renderer._ghostLayer.setMargin(this._renderer.layers);\r\n            if (this._parent) {\r\n                this._parent.registerChildLayer(this._layer);\r\n            }\r\n            this._layer.dirty = true;\r\n            this._renderer.resizeLayer(this._layer);\r\n            this._renderer.resizeGhost();\r\n        }\r\n    }\r\n    markDirtyLayer() {\r\n        this.getLayer().dirty = true;\r\n    }\r\n    clear() {\r\n        this.invalidateBounds();\r\n    }\r\n    invalidateBounds() {\r\n        this._localBounds = undefined;\r\n    }\r\n    _addBounds(_bounds) { }\r\n    _getColorId() {\r\n        if (this._colorId === undefined) {\r\n            this._colorId = this._renderer.paintId(this);\r\n        }\r\n        return this._colorId;\r\n    }\r\n    _isInteractive(status) {\r\n        return !status.inactive && (this.interactive || this._renderer._forceInteractive > 0);\r\n    }\r\n    _isInteractiveMask(status) {\r\n        return this._isInteractive(status);\r\n    }\r\n    contains(child) {\r\n        for (;;) {\r\n            if (child === this) {\r\n                return true;\r\n            }\r\n            else if (child._parent) {\r\n                child = child._parent;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    toGlobal(point) {\r\n        return this._matrix.apply(point);\r\n    }\r\n    toLocal(point) {\r\n        return this._matrix.applyInverse(point);\r\n    }\r\n    getLocalMatrix() {\r\n        this._uMatrix.setTransform(0, 0, this.pivot.x, this.pivot.y, this.angle * Math.PI / 180, this.scale);\r\n        return this._uMatrix;\r\n    }\r\n    getLocalBounds() {\r\n        if (!this._localBounds) {\r\n            const bn = 10000000;\r\n            this._localBounds = {\r\n                left: bn,\r\n                top: bn,\r\n                right: -bn,\r\n                bottom: -bn\r\n            };\r\n            this._addBounds(this._localBounds);\r\n        }\r\n        return this._localBounds;\r\n    }\r\n    getAdjustedBounds(bounds) {\r\n        this._setMatrix();\r\n        const matrix = this.getLocalMatrix();\r\n        const p0 = matrix.apply({ x: bounds.left, y: bounds.top });\r\n        const p1 = matrix.apply({ x: bounds.right, y: bounds.top });\r\n        const p2 = matrix.apply({ x: bounds.right, y: bounds.bottom });\r\n        const p3 = matrix.apply({ x: bounds.left, y: bounds.bottom });\r\n        return {\r\n            left: Math.min(p0.x, p1.x, p2.x, p3.x),\r\n            top: Math.min(p0.y, p1.y, p2.y, p3.y),\r\n            right: Math.max(p0.x, p1.x, p2.x, p3.x),\r\n            bottom: Math.max(p0.y, p1.y, p2.y, p3.y)\r\n        };\r\n    }\r\n    on(key, callback, context) {\r\n        if (this.interactive) {\r\n            return this._renderer._addEvent(this, key, callback, context);\r\n        }\r\n        else {\r\n            return new _util_Disposer__WEBPACK_IMPORTED_MODULE_3__.Disposer(() => { });\r\n        }\r\n    }\r\n    _setMatrix() {\r\n        // TODO only calculate this if it has actually changed\r\n        this._localMatrix.setTransform(this.x, this.y, this.pivot.x, this.pivot.y, \r\n        // Converts degrees to radians\r\n        this.angle * Math.PI / 180, this.scale);\r\n        this._matrix.copyFrom(this._localMatrix);\r\n        if (this._parent) {\r\n            // TODO only calculate this if it has actually changed\r\n            this._matrix.prepend(this._parent._matrix);\r\n        }\r\n    }\r\n    _transform(context, resolution) {\r\n        const m = this._matrix;\r\n        let tx = m.tx * resolution;\r\n        let ty = m.ty * resolution;\r\n        if (this.crisp) {\r\n            tx = crisp(tx);\r\n            ty = crisp(ty);\r\n        }\r\n        context.setTransform(m.a * resolution, m.b * resolution, m.c * resolution, m.d * resolution, tx, ty);\r\n    }\r\n    _transformMargin(context, resolution, margin) {\r\n        const m = this._matrix;\r\n        context.setTransform(m.a * resolution, m.b * resolution, m.c * resolution, m.d * resolution, (m.tx + margin.left) * resolution, (m.ty + margin.top) * resolution);\r\n    }\r\n    _transformLayer(context, resolution, layer) {\r\n        if (layer.margin) {\r\n            this._transformMargin(context, layer.scale || resolution, layer.margin);\r\n        }\r\n        else {\r\n            this._transform(context, layer.scale || resolution);\r\n        }\r\n    }\r\n    render(status, targetGhostLayer = 0) {\r\n        if (this.visible && (this.exportable !== false || !this._renderer._omitTainted)) {\r\n            this._setMatrix();\r\n            const subStatus = this.subStatus(status);\r\n            const resolution = this._renderer.resolution;\r\n            const layers = this._renderer.layers;\r\n            const ghostLayer = this._renderer._ghostLayer;\r\n            const ghostContext = ghostLayer.context;\r\n            const mask = this.mask;\r\n            if (mask) {\r\n                mask._setMatrix();\r\n            }\r\n            // TODO improve this\r\n            _util_Array__WEBPACK_IMPORTED_MODULE_2__.each(layers, (layer) => {\r\n                if (layer) {\r\n                    const context = layer.context;\r\n                    context.save();\r\n                    // We must apply the mask before we transform the element\r\n                    if (mask) {\r\n                        mask._transformLayer(context, resolution, layer);\r\n                        mask._runPath(context);\r\n                        context.clip();\r\n                    }\r\n                    context.globalAlpha = this.compoundAlpha * this.alpha;\r\n                    this._transformLayer(context, resolution, layer);\r\n                    if (this.filter) {\r\n                        context.filter = this.filter;\r\n                    }\r\n                }\r\n            });\r\n            ghostContext.save();\r\n            // We must apply the mask before we transform the element\r\n            if (mask && this._isInteractiveMask(subStatus)) {\r\n                mask._transformMargin(ghostContext, resolution, ghostLayer.margin);\r\n                mask._runPath(ghostContext);\r\n                ghostContext.clip();\r\n            }\r\n            this._transformMargin(ghostContext, resolution, ghostLayer.margin);\r\n            if ((subStatus.layer.order > 0) && !targetGhostLayer) {\r\n                _util_Array__WEBPACK_IMPORTED_MODULE_2__.move(this._renderer._deferredGhostLayers, subStatus.layer.order);\r\n            }\r\n            this._render(subStatus, targetGhostLayer);\r\n            ghostContext.restore();\r\n            _util_Array__WEBPACK_IMPORTED_MODULE_2__.each(layers, (layer) => {\r\n                if (layer) {\r\n                    layer.context.restore();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _render(status, _targetGhostLayer = 0) {\r\n        if (this.exportable === false) {\r\n            status.layer.tainted = true;\r\n        }\r\n    }\r\n    _ghostOnly(targetGhostLayer = 0) {\r\n        return targetGhostLayer > 0 ? true : false;\r\n    }\r\n    _drawGhost(status, targetGhostLayer = 0) {\r\n        const interactive = this._isInteractive(status);\r\n        const order = status.layer.order || 0;\r\n        return interactive && ((order == 0 && !this._ghostOnly(targetGhostLayer)) || order == targetGhostLayer) ? true : false;\r\n    }\r\n    hovering() {\r\n        return this._renderer._hovering.has(this);\r\n    }\r\n    dragging() {\r\n        return this._renderer._dragging.some((x) => x.value === this);\r\n    }\r\n    shouldCancelTouch() {\r\n        const renderer = this._renderer;\r\n        if (renderer.tapToActivate && !renderer._touchActive) {\r\n            return false;\r\n        }\r\n        if (this.cancelTouch) {\r\n            return true;\r\n        }\r\n        else if (this._parent) {\r\n            return this._parent.shouldCancelTouch();\r\n        }\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass CanvasContainer extends CanvasDisplayObject {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"interactiveChildren\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"_childLayers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_children\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n    _isInteractiveMask(status) {\r\n        return this.interactiveChildren || super._isInteractiveMask(status);\r\n    }\r\n    addChild(child) {\r\n        child._parent = this;\r\n        this._children.push(child);\r\n        if (child._layer) {\r\n            this.registerChildLayer(child._layer);\r\n        }\r\n    }\r\n    addChildAt(child, index) {\r\n        child._parent = this;\r\n        this._children.splice(index, 0, child);\r\n        if (child._layer) {\r\n            this.registerChildLayer(child._layer);\r\n        }\r\n    }\r\n    removeChild(child) {\r\n        child._parent = undefined;\r\n        _util_Array__WEBPACK_IMPORTED_MODULE_2__.removeFirst(this._children, child);\r\n    }\r\n    _render(status, targetGhostLayer) {\r\n        super._render(status);\r\n        const renderer = this._renderer;\r\n        if (this.interactive && this.interactiveChildren) {\r\n            ++renderer._forceInteractive;\r\n        }\r\n        _util_Array__WEBPACK_IMPORTED_MODULE_2__.each(this._children, (child) => {\r\n            child.compoundAlpha = this.compoundAlpha * this.alpha;\r\n            child.render(status, targetGhostLayer);\r\n        });\r\n        if (this.interactive && this.interactiveChildren) {\r\n            --renderer._forceInteractive;\r\n        }\r\n    }\r\n    registerChildLayer(layer) {\r\n        if (!this._childLayers) {\r\n            this._childLayers = [];\r\n        }\r\n        _util_Array__WEBPACK_IMPORTED_MODULE_2__.pushOne(this._childLayers, layer);\r\n        if (this._parent) {\r\n            this._parent.registerChildLayer(layer);\r\n        }\r\n    }\r\n    markDirtyLayer(deep = false) {\r\n        super.markDirtyLayer();\r\n        if (deep && this._childLayers) {\r\n            _util_Array__WEBPACK_IMPORTED_MODULE_2__.each(this._childLayers, (layer) => layer.dirty = true);\r\n        }\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        if (this._childLayers) {\r\n            _util_Array__WEBPACK_IMPORTED_MODULE_2__.each(this._childLayers, (layer) => {\r\n                layer.dirty = true;\r\n            });\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction setPoint(bounds, point) {\r\n    bounds.left = Math.min(bounds.left, point.x);\r\n    bounds.top = Math.min(bounds.top, point.y);\r\n    bounds.right = Math.max(bounds.right, point.x);\r\n    bounds.bottom = Math.max(bounds.bottom, point.y);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass Op {\r\n    colorize(_context, _forceColor) { }\r\n    colorizeGhost(context, forceColor) {\r\n        this.colorize(context, forceColor);\r\n    }\r\n    path(_context) { }\r\n    pathGhost(context) {\r\n        this.path(context);\r\n    }\r\n    addBounds(_bounds) { }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass BeginPath extends Op {\r\n    colorize(context, _forceColor) {\r\n        context.beginPath();\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass BeginFill extends Op {\r\n    constructor(color) {\r\n        super();\r\n        Object.defineProperty(this, \"color\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: color\r\n        });\r\n    }\r\n    colorize(context, forceColor) {\r\n        if (forceColor !== undefined) {\r\n            context.fillStyle = forceColor;\r\n        }\r\n        else {\r\n            context.fillStyle = this.color;\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass EndFill extends Op {\r\n    constructor(clearShadow) {\r\n        super();\r\n        Object.defineProperty(this, \"clearShadow\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: clearShadow\r\n        });\r\n    }\r\n    colorize(context, _forceColor) {\r\n        context.fill();\r\n        if (this.clearShadow) {\r\n            context.shadowColor = \"\";\r\n            context.shadowBlur = 0;\r\n            context.shadowOffsetX = 0;\r\n            context.shadowOffsetY = 0;\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass EndStroke extends Op {\r\n    colorize(context, _forceColor) {\r\n        context.stroke();\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass LineStyle extends Op {\r\n    constructor(width, color, lineJoin, lineCap) {\r\n        super();\r\n        Object.defineProperty(this, \"width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: width\r\n        });\r\n        Object.defineProperty(this, \"color\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: color\r\n        });\r\n        Object.defineProperty(this, \"lineJoin\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: lineJoin\r\n        });\r\n        Object.defineProperty(this, \"lineCap\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: lineCap\r\n        });\r\n    }\r\n    colorize(context, forceColor) {\r\n        if (forceColor !== undefined) {\r\n            context.strokeStyle = forceColor;\r\n        }\r\n        else {\r\n            context.strokeStyle = this.color;\r\n        }\r\n        context.lineWidth = this.width;\r\n        if (this.lineJoin) {\r\n            context.lineJoin = this.lineJoin;\r\n        }\r\n        if (this.lineCap) {\r\n            context.lineCap = this.lineCap;\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass LineDash extends Op {\r\n    constructor(dash) {\r\n        super();\r\n        Object.defineProperty(this, \"dash\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: dash\r\n        });\r\n    }\r\n    colorize(context, _forceColor) {\r\n        context.setLineDash(this.dash);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass LineDashOffset extends Op {\r\n    constructor(dashOffset) {\r\n        super();\r\n        Object.defineProperty(this, \"dashOffset\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: dashOffset\r\n        });\r\n    }\r\n    colorize(context, _forceColor) {\r\n        context.lineDashOffset = this.dashOffset;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass DrawRect extends Op {\r\n    constructor(x, y, width, height) {\r\n        super();\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n        Object.defineProperty(this, \"width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: width\r\n        });\r\n        Object.defineProperty(this, \"height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: height\r\n        });\r\n    }\r\n    path(context) {\r\n        context.rect(this.x, this.y, this.width, this.height);\r\n    }\r\n    addBounds(bounds) {\r\n        const l = this.x;\r\n        const t = this.y;\r\n        const r = l + this.width;\r\n        const b = t + this.height;\r\n        setPoint(bounds, { x: l, y: t });\r\n        setPoint(bounds, { x: r, y: t });\r\n        setPoint(bounds, { x: l, y: b });\r\n        setPoint(bounds, { x: r, y: b });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass DrawCircle extends Op {\r\n    constructor(x, y, radius) {\r\n        super();\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n        Object.defineProperty(this, \"radius\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: radius\r\n        });\r\n    }\r\n    path(context) {\r\n        context.moveTo(this.x + this.radius, this.y);\r\n        context.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);\r\n    }\r\n    // TODO handle skewing and rotation\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.x - this.radius, y: this.y - this.radius });\r\n        setPoint(bounds, { x: this.x + this.radius, y: this.y + this.radius });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass DrawEllipse extends Op {\r\n    constructor(x, y, radiusX, radiusY) {\r\n        super();\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n        Object.defineProperty(this, \"radiusX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: radiusX\r\n        });\r\n        Object.defineProperty(this, \"radiusY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: radiusY\r\n        });\r\n    }\r\n    path(context) {\r\n        context.ellipse(0, 0, this.radiusX, this.radiusY, 0, 0, Math.PI * 2);\r\n    }\r\n    // TODO handle skewing and rotation\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.x - this.radiusX, y: this.y - this.radiusY });\r\n        setPoint(bounds, { x: this.x + this.radiusX, y: this.y + this.radiusY });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass Arc extends Op {\r\n    constructor(cx, cy, radius, startAngle, endAngle, anticlockwise) {\r\n        super();\r\n        Object.defineProperty(this, \"cx\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cx\r\n        });\r\n        Object.defineProperty(this, \"cy\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cy\r\n        });\r\n        Object.defineProperty(this, \"radius\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: radius\r\n        });\r\n        Object.defineProperty(this, \"startAngle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: startAngle\r\n        });\r\n        Object.defineProperty(this, \"endAngle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: endAngle\r\n        });\r\n        Object.defineProperty(this, \"anticlockwise\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: anticlockwise\r\n        });\r\n    }\r\n    path(context) {\r\n        if (this.radius > 0) {\r\n            context.arc(this.cx, this.cy, this.radius, this.startAngle, this.endAngle, this.anticlockwise);\r\n        }\r\n    }\r\n    addBounds(bounds) {\r\n        let arcBounds = _util_Math__WEBPACK_IMPORTED_MODULE_5__.getArcBounds(this.cx, this.cy, this.startAngle * _util_Math__WEBPACK_IMPORTED_MODULE_5__.DEGREES, this.endAngle * _util_Math__WEBPACK_IMPORTED_MODULE_5__.DEGREES, this.radius);\r\n        setPoint(bounds, { x: arcBounds.left, y: arcBounds.top });\r\n        setPoint(bounds, { x: arcBounds.right, y: arcBounds.bottom });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass ArcTo extends Op {\r\n    constructor(x1, y1, x2, y2, radius) {\r\n        super();\r\n        Object.defineProperty(this, \"x1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x1\r\n        });\r\n        Object.defineProperty(this, \"y1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y1\r\n        });\r\n        Object.defineProperty(this, \"x2\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x2\r\n        });\r\n        Object.defineProperty(this, \"y2\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y2\r\n        });\r\n        Object.defineProperty(this, \"radius\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: radius\r\n        });\r\n    }\r\n    path(context) {\r\n        if (this.radius > 0) {\r\n            context.arcTo(this.x1, this.y1, this.x2, this.y2, this.radius);\r\n        }\r\n    }\r\n    // TODO: add points\r\n    addBounds(_bounds) {\r\n        /*\r\n        // not finished\r\n        https://math.stackexchange.com/questions/1781438/finding-the-center-of-a-circle-given-two-points-and-a-radius-algebraically\r\n\r\n        if (prevPoint) {\r\n            let x1 = prevPoint.x;\r\n            let y1 = prevPoint.y;\r\n            let x2 = this.x2;\r\n            let y2 = this.y2;\r\n            let r = this.radius;\r\n\r\n            let xa = (x2 - x1) / 2;\r\n            let ya = (y2 - y1) / 2;\r\n\r\n            let x0 = x1 + xa;\r\n            let y0 = y1 + ya;\r\n\r\n            let a = Math.hypot(xa, ya);\r\n            let b = Math.sqrt(r * r - a * a);\r\n\r\n            let cx = x0 + b * ya / a;\r\n            let cy = y0 - b * xa / a;\r\n\r\n            console.log(cx, cy);\r\n        }*/\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass LineTo extends Op {\r\n    constructor(x, y) {\r\n        super();\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n    }\r\n    path(context) {\r\n        context.lineTo(this.x, this.y);\r\n    }\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.x, y: this.y });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass MoveTo extends Op {\r\n    constructor(x, y) {\r\n        super();\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n    }\r\n    path(context) {\r\n        context.moveTo(this.x, this.y);\r\n    }\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.x, y: this.y });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass ClosePath extends Op {\r\n    path(context) {\r\n        context.closePath();\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass BezierCurveTo extends Op {\r\n    constructor(cpX, cpY, cpX2, cpY2, toX, toY) {\r\n        super();\r\n        Object.defineProperty(this, \"cpX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpX\r\n        });\r\n        Object.defineProperty(this, \"cpY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpY\r\n        });\r\n        Object.defineProperty(this, \"cpX2\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpX2\r\n        });\r\n        Object.defineProperty(this, \"cpY2\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpY2\r\n        });\r\n        Object.defineProperty(this, \"toX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: toX\r\n        });\r\n        Object.defineProperty(this, \"toY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: toY\r\n        });\r\n    }\r\n    path(context) {\r\n        context.bezierCurveTo(this.cpX, this.cpY, this.cpX2, this.cpY2, this.toX, this.toY);\r\n    }\r\n    // TODO: OK?\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.cpX, y: this.cpY });\r\n        setPoint(bounds, { x: this.cpX2, y: this.cpY2 });\r\n        setPoint(bounds, { x: this.toX, y: this.toY });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass QuadraticCurveTo extends Op {\r\n    constructor(cpX, cpY, toX, toY) {\r\n        super();\r\n        Object.defineProperty(this, \"cpX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpX\r\n        });\r\n        Object.defineProperty(this, \"cpY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpY\r\n        });\r\n        Object.defineProperty(this, \"toX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: toX\r\n        });\r\n        Object.defineProperty(this, \"toY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: toY\r\n        });\r\n    }\r\n    path(context) {\r\n        context.quadraticCurveTo(this.cpX, this.cpY, this.toX, this.toY);\r\n    }\r\n    // TODO: OK?\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.cpX, y: this.cpY });\r\n        setPoint(bounds, { x: this.toX, y: this.toY });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass Shadow extends Op {\r\n    constructor(color, blur, offsetX, offsetY, opacity) {\r\n        super();\r\n        Object.defineProperty(this, \"color\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: color\r\n        });\r\n        Object.defineProperty(this, \"blur\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: blur\r\n        });\r\n        Object.defineProperty(this, \"offsetX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: offsetX\r\n        });\r\n        Object.defineProperty(this, \"offsetY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: offsetY\r\n        });\r\n        Object.defineProperty(this, \"opacity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: opacity\r\n        });\r\n    }\r\n    colorize(context, _forceColor) {\r\n        if (this.opacity) {\r\n            context.fillStyle = this.color;\r\n        }\r\n        context.shadowColor = this.color;\r\n        context.shadowBlur = this.blur;\r\n        context.shadowOffsetX = this.offsetX;\r\n        context.shadowOffsetY = this.offsetY;\r\n    }\r\n    colorizeGhost(_context, _forceColor) { }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass GraphicsImage extends Op {\r\n    constructor(image, width, height, x, y) {\r\n        super();\r\n        Object.defineProperty(this, \"image\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: image\r\n        });\r\n        Object.defineProperty(this, \"width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: width\r\n        });\r\n        Object.defineProperty(this, \"height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: height\r\n        });\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n    }\r\n    path(context) {\r\n        context.drawImage(this.image, this.x, this.y, this.width, this.height);\r\n    }\r\n    // TODO: OK?\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.x, y: this.y });\r\n        setPoint(bounds, { x: this.width, y: this.height });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass CanvasGraphics extends CanvasDisplayObject {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_operations\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"blendMode\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _Renderer__WEBPACK_IMPORTED_MODULE_6__.BlendMode.NORMAL\r\n        });\r\n        Object.defineProperty(this, \"_hasShadows\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_fillAlpha\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_strokeAlpha\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    clear() {\r\n        super.clear();\r\n        this._operations.length = 0;\r\n    }\r\n    _pushOp(op) {\r\n        this._operations.push(op);\r\n    }\r\n    beginFill(color, alpha = 1) {\r\n        this._fillAlpha = alpha;\r\n        if (color) {\r\n            if (color instanceof _util_Color__WEBPACK_IMPORTED_MODULE_7__.Color) {\r\n                this._pushOp(new BeginFill(color.toCSS(alpha)));\r\n            }\r\n            else {\r\n                this.isMeasured = true;\r\n                this._pushOp(new BeginFill(color));\r\n            }\r\n        }\r\n        else {\r\n            this._pushOp(new BeginFill(\"rgba(0, 0, 0, \" + alpha + \")\"));\r\n        }\r\n    }\r\n    endFill() {\r\n        this._pushOp(new EndFill(this._hasShadows));\r\n    }\r\n    endStroke() {\r\n        this._pushOp(new EndStroke());\r\n    }\r\n    beginPath() {\r\n        this._pushOp(new BeginPath());\r\n    }\r\n    lineStyle(width = 0, color, alpha = 1, lineJoin, lineCap) {\r\n        this._strokeAlpha = alpha;\r\n        if (color) {\r\n            if (color instanceof _util_Color__WEBPACK_IMPORTED_MODULE_7__.Color) {\r\n                this._pushOp(new LineStyle(width, color.toCSS(alpha), lineJoin, lineCap));\r\n            }\r\n            else {\r\n                this._pushOp(new LineStyle(width, color, lineJoin, lineCap));\r\n            }\r\n        }\r\n        else {\r\n            this._pushOp(new LineStyle(width, \"rgba(0, 0, 0, \" + alpha + \")\", lineJoin, lineCap));\r\n        }\r\n    }\r\n    setLineDash(dash) {\r\n        this._pushOp(new LineDash(dash ? dash : []));\r\n    }\r\n    setLineDashOffset(dashOffset = 0) {\r\n        this._pushOp(new LineDashOffset(dashOffset));\r\n    }\r\n    drawRect(x, y, width, height) {\r\n        this._pushOp(new DrawRect(x, y, width, height));\r\n    }\r\n    drawCircle(x, y, radius) {\r\n        this._pushOp(new DrawCircle(x, y, radius));\r\n    }\r\n    drawEllipse(x, y, radiusX, radiusY) {\r\n        this._pushOp(new DrawEllipse(x, y, radiusX, radiusY));\r\n    }\r\n    arc(cx, cy, radius, startAngle, endAngle, anticlockwise = false) {\r\n        this._pushOp(new Arc(cx, cy, radius, startAngle, endAngle, anticlockwise));\r\n    }\r\n    arcTo(x1, y1, x2, y2, radius) {\r\n        this._pushOp(new ArcTo(x1, y1, x2, y2, radius));\r\n    }\r\n    lineTo(x, y) {\r\n        this._pushOp(new LineTo(x, y));\r\n    }\r\n    moveTo(x, y) {\r\n        this._pushOp(new MoveTo(x, y));\r\n    }\r\n    bezierCurveTo(cpX, cpY, cpX2, cpY2, toX, toY) {\r\n        this._pushOp(new BezierCurveTo(cpX, cpY, cpX2, cpY2, toX, toY));\r\n    }\r\n    quadraticCurveTo(cpX, cpY, toX, toY) {\r\n        this._pushOp(new QuadraticCurveTo(cpX, cpY, toX, toY));\r\n    }\r\n    closePath() {\r\n        this._pushOp(new ClosePath());\r\n    }\r\n    shadow(color, blur = 0, offsetX = 0, offsetY = 0, opacity) {\r\n        this._hasShadows = true;\r\n        this._pushOp(new Shadow(opacity ? color.toCSS(opacity) : color.toCSS(this._fillAlpha || this._strokeAlpha), blur, offsetX, offsetY));\r\n    }\r\n    image(image, width, height, x, y) {\r\n        this._pushOp(new GraphicsImage(image, width, height, x, y));\r\n    }\r\n    // https://svgwg.org/svg2-draft/paths.html#DProperty\r\n    // TODO better error checking\r\n    svgPath(path) {\r\n        let x = 0;\r\n        let y = 0;\r\n        let cpx = null;\r\n        let cpy = null;\r\n        let qcpx = null;\r\n        let qcpy = null;\r\n        const SEGMENTS_REGEXP = /([MmZzLlHhVvCcSsQqTtAa])([^MmZzLlHhVvCcSsQqTtAa]*)/g;\r\n        const ARGS_REGEXP = /[\\u0009\\u0020\\u000A\\u000C\\u000D]*([\\+\\-]?[0-9]*\\.?[0-9]+(?:[eE][\\+\\-]?[0-9]+)?)[\\u0009\\u0020\\u000A\\u000C\\u000D]*,?/g;\r\n        let match;\r\n        while ((match = SEGMENTS_REGEXP.exec(path)) !== null) {\r\n            const name = match[1];\r\n            const rest = match[2];\r\n            const args = [];\r\n            while ((match = ARGS_REGEXP.exec(rest)) !== null) {\r\n                args.push(match[1]);\r\n            }\r\n            // Reset control point\r\n            if (name !== \"S\" && name !== \"s\" && name !== \"C\" && name !== \"c\") {\r\n                cpx = null;\r\n                cpy = null;\r\n            }\r\n            // Reset control point\r\n            if (name !== \"Q\" && name !== \"q\" && name !== \"T\" && name !== \"t\") {\r\n                qcpx = null;\r\n                qcpy = null;\r\n            }\r\n            switch (name) {\r\n                case \"M\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    x = +args[0];\r\n                    y = +args[1];\r\n                    this.moveTo(x, y);\r\n                    for (let i = 2; i < args.length; i += 2) {\r\n                        x = +args[i];\r\n                        y = +args[i + 1];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"m\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    x += +args[0];\r\n                    y += +args[1];\r\n                    this.moveTo(x, y);\r\n                    for (let i = 2; i < args.length; i += 2) {\r\n                        x += +args[i];\r\n                        y += +args[i + 1];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"L\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    for (let i = 0; i < args.length; i += 2) {\r\n                        x = +args[i];\r\n                        y = +args[i + 1];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"l\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    for (let i = 0; i < args.length; i += 2) {\r\n                        x += +args[i];\r\n                        y += +args[i + 1];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"H\":\r\n                    checkMinArgs(name, args.length, 1);\r\n                    for (let i = 0; i < args.length; ++i) {\r\n                        x = +args[i];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"h\":\r\n                    checkMinArgs(name, args.length, 1);\r\n                    for (let i = 0; i < args.length; ++i) {\r\n                        x += +args[i];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"V\":\r\n                    checkMinArgs(name, args.length, 1);\r\n                    for (let i = 0; i < args.length; ++i) {\r\n                        y = +args[i];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"v\":\r\n                    checkMinArgs(name, args.length, 1);\r\n                    for (let i = 0; i < args.length; ++i) {\r\n                        y += +args[i];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"C\":\r\n                    checkEvenArgs(name, args.length, 6);\r\n                    for (let i = 0; i < args.length; i += 6) {\r\n                        const x1 = +args[i];\r\n                        const y1 = +args[i + 1];\r\n                        cpx = +args[i + 2];\r\n                        cpy = +args[i + 3];\r\n                        x = +args[i + 4];\r\n                        y = +args[i + 5];\r\n                        this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"c\":\r\n                    checkEvenArgs(name, args.length, 6);\r\n                    for (let i = 0; i < args.length; i += 6) {\r\n                        const x1 = +args[i] + x;\r\n                        const y1 = +args[i + 1] + y;\r\n                        cpx = +args[i + 2] + x;\r\n                        cpy = +args[i + 3] + y;\r\n                        x += +args[i + 4];\r\n                        y += +args[i + 5];\r\n                        this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"S\":\r\n                    checkEvenArgs(name, args.length, 4);\r\n                    if (cpx === null || cpy === null) {\r\n                        cpx = x;\r\n                        cpy = y;\r\n                    }\r\n                    for (let i = 0; i < args.length; i += 4) {\r\n                        const x1 = 2 * x - cpx;\r\n                        const y1 = 2 * y - cpy;\r\n                        cpx = +args[i];\r\n                        cpy = +args[i + 1];\r\n                        x = +args[i + 2];\r\n                        y = +args[i + 3];\r\n                        this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"s\":\r\n                    checkEvenArgs(name, args.length, 4);\r\n                    if (cpx === null || cpy === null) {\r\n                        cpx = x;\r\n                        cpy = y;\r\n                    }\r\n                    for (let i = 0; i < args.length; i += 4) {\r\n                        const x1 = 2 * x - cpx;\r\n                        const y1 = 2 * y - cpy;\r\n                        cpx = +args[i] + x;\r\n                        cpy = +args[i + 1] + y;\r\n                        x += +args[i + 2];\r\n                        y += +args[i + 3];\r\n                        this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"Q\":\r\n                    checkEvenArgs(name, args.length, 4);\r\n                    for (let i = 0; i < args.length; i += 4) {\r\n                        qcpx = +args[i];\r\n                        qcpy = +args[i + 1];\r\n                        x = +args[i + 2];\r\n                        y = +args[i + 3];\r\n                        this.quadraticCurveTo(qcpx, qcpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"q\":\r\n                    checkEvenArgs(name, args.length, 4);\r\n                    for (let i = 0; i < args.length; i += 4) {\r\n                        qcpx = +args[i] + x;\r\n                        qcpy = +args[i + 1] + y;\r\n                        x += +args[i + 2];\r\n                        y += +args[i + 3];\r\n                        this.quadraticCurveTo(qcpx, qcpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"T\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    if (qcpx === null || qcpy === null) {\r\n                        qcpx = x;\r\n                        qcpy = y;\r\n                    }\r\n                    for (let i = 0; i < args.length; i += 2) {\r\n                        qcpx = 2 * x - qcpx;\r\n                        qcpy = 2 * y - qcpy;\r\n                        x = +args[i];\r\n                        y = +args[i + 1];\r\n                        this.quadraticCurveTo(qcpx, qcpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"t\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    if (qcpx === null || qcpy === null) {\r\n                        qcpx = x;\r\n                        qcpy = y;\r\n                    }\r\n                    for (let i = 0; i < args.length; i += 2) {\r\n                        qcpx = 2 * x - qcpx;\r\n                        qcpy = 2 * y - qcpy;\r\n                        x += +args[i];\r\n                        y += +args[i + 1];\r\n                        this.quadraticCurveTo(qcpx, qcpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"A\":\r\n                case \"a\":\r\n                    const relative = (name === \"a\");\r\n                    splitArcFlags(args);\r\n                    checkEvenArgs(name, args.length, 7);\r\n                    for (let i = 0; i < args.length; i += 7) {\r\n                        let cx = +args[i + 5];\r\n                        let cy = +args[i + 6];\r\n                        if (relative) {\r\n                            cx += x;\r\n                            cy += y;\r\n                        }\r\n                        const bs = (0,svg_arc_to_cubic_bezier__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\r\n                            px: x,\r\n                            py: y,\r\n                            rx: +args[i],\r\n                            ry: +args[i + 1],\r\n                            xAxisRotation: +args[i + 2],\r\n                            largeArcFlag: assertBinary(+args[i + 3]),\r\n                            sweepFlag: assertBinary(+args[i + 4]),\r\n                            cx,\r\n                            cy,\r\n                        });\r\n                        _util_Array__WEBPACK_IMPORTED_MODULE_2__.each(bs, (b) => {\r\n                            this.bezierCurveTo(b.x1, b.y1, b.x2, b.y2, b.x, b.y);\r\n                            x = b.x;\r\n                            y = b.y;\r\n                        });\r\n                    }\r\n                    break;\r\n                case \"Z\":\r\n                case \"z\":\r\n                    checkArgs(name, args.length, 0);\r\n                    this.closePath();\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    _runPath(context) {\r\n        context.beginPath();\r\n        _util_Array__WEBPACK_IMPORTED_MODULE_2__.each(this._operations, (op) => {\r\n            op.path(context);\r\n        });\r\n    }\r\n    _render(status, targetGhostLayer = 0) {\r\n        super._render(status);\r\n        const layerDirty = status.layer.dirty;\r\n        const interactive = this._isInteractive(status);\r\n        const ghostOnly = this._ghostOnly(targetGhostLayer);\r\n        const drawGhost = this._drawGhost(status, targetGhostLayer);\r\n        if (layerDirty || interactive || ghostOnly) {\r\n            const context = status.layer.context;\r\n            const ghostContext = this._renderer._ghostLayer.context;\r\n            if (layerDirty && !ghostOnly) {\r\n                context.globalCompositeOperation = this.blendMode;\r\n                context.beginPath();\r\n            }\r\n            let color;\r\n            if (drawGhost) {\r\n                ghostContext.beginPath();\r\n                color = this._getColorId();\r\n            }\r\n            _util_Array__WEBPACK_IMPORTED_MODULE_2__.each(this._operations, (op) => {\r\n                if (layerDirty && !ghostOnly) {\r\n                    op.path(context);\r\n                    op.colorize(context, undefined);\r\n                }\r\n                if (drawGhost) {\r\n                    op.pathGhost(ghostContext);\r\n                    op.colorizeGhost(ghostContext, color);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    renderDetached(context) {\r\n        if (this.visible) {\r\n            this._setMatrix();\r\n            context.save();\r\n            // We must apply the mask before we transform the element\r\n            const mask = this.mask;\r\n            if (mask) {\r\n                mask._setMatrix();\r\n                mask._transform(context, 1);\r\n                mask._runPath(context);\r\n                context.clip();\r\n            }\r\n            // TODO handle compoundAlpha somehow ?\r\n            context.globalAlpha = this.compoundAlpha * this.alpha;\r\n            this._transform(context, 1);\r\n            if (this.filter) {\r\n                context.filter = this.filter;\r\n            }\r\n            context.globalCompositeOperation = this.blendMode;\r\n            context.beginPath();\r\n            _util_Array__WEBPACK_IMPORTED_MODULE_2__.each(this._operations, (op) => {\r\n                op.path(context);\r\n                op.colorize(context, undefined);\r\n            });\r\n            context.restore();\r\n        }\r\n    }\r\n    _addBounds(bounds) {\r\n        if (this.visible && this.isMeasured) {\r\n            _util_Array__WEBPACK_IMPORTED_MODULE_2__.each(this._operations, (op) => {\r\n                op.addBounds(bounds);\r\n            });\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass CanvasText extends CanvasDisplayObject {\r\n    constructor(renderer, text, style) {\r\n        super(renderer);\r\n        Object.defineProperty(this, \"text\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"style\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"resolution\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"textVisible\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"truncated\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_textInfo\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_originalScale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        this.text = text;\r\n        this.style = style;\r\n    }\r\n    invalidateBounds() {\r\n        super.invalidateBounds();\r\n        this._textInfo = undefined;\r\n    }\r\n    _shared(context) {\r\n        if (this.style.textAlign) {\r\n            context.textAlign = this.style.textAlign;\r\n        }\r\n        if (this.style.direction) {\r\n            context.direction = this.style.direction;\r\n        }\r\n        if (this.style.textBaseline) {\r\n            context.textBaseline = this.style.textBaseline;\r\n        }\r\n    }\r\n    _prerender(status, ignoreGhost = false, ignoreFontWeight = false) {\r\n        super._render(status);\r\n        const context = status.layer.context;\r\n        const ghostContext = this._renderer._ghostLayer.context;\r\n        // Font style\r\n        const style = this.style;\r\n        let fontStyle = this._getFontStyle(undefined, ignoreFontWeight);\r\n        context.font = fontStyle;\r\n        if (this._isInteractive(status) && !ignoreGhost) {\r\n            ghostContext.font = fontStyle;\r\n        }\r\n        // Other parameters\r\n        if (style.fill) {\r\n            if (style.fill instanceof _util_Color__WEBPACK_IMPORTED_MODULE_7__.Color) {\r\n                context.fillStyle = style.fill.toCSS(style.fillOpacity != undefined ? style.fillOpacity : 1);\r\n            }\r\n            else {\r\n                context.fillStyle = style.fill;\r\n            }\r\n        }\r\n        if (style.shadowColor) {\r\n            status.layer.context.shadowColor = style.shadowColor.toCSS(style.shadowOpacity || 1);\r\n        }\r\n        if (style.shadowBlur) {\r\n            status.layer.context.shadowBlur = style.shadowBlur;\r\n        }\r\n        if (style.shadowOffsetX) {\r\n            status.layer.context.shadowOffsetX = style.shadowOffsetX;\r\n        }\r\n        if (style.shadowOffsetY) {\r\n            status.layer.context.shadowOffsetY = style.shadowOffsetY;\r\n        }\r\n        this._shared(context);\r\n        if (this._isInteractive(status) && !ignoreGhost) {\r\n            ghostContext.fillStyle = this._getColorId();\r\n            this._shared(ghostContext);\r\n        }\r\n    }\r\n    _getFontStyle(style2, ignoreFontWeight = false) {\r\n        // Process defaults\r\n        const style = this.style;\r\n        let fontStyle = [];\r\n        if (style2 && style2.fontVariant) {\r\n            fontStyle.push(style2.fontVariant);\r\n        }\r\n        else if (style.fontVariant) {\r\n            fontStyle.push(style.fontVariant);\r\n        }\r\n        if (!ignoreFontWeight) {\r\n            if (style2 && style2.fontWeight) {\r\n                fontStyle.push(style2.fontWeight);\r\n            }\r\n            else if (style.fontWeight) {\r\n                fontStyle.push(style.fontWeight);\r\n            }\r\n        }\r\n        if (style2 && style2.fontStyle) {\r\n            fontStyle.push(style2.fontStyle);\r\n        }\r\n        else if (style.fontStyle) {\r\n            fontStyle.push(style.fontStyle);\r\n        }\r\n        if (style2 && style2.fontSize) {\r\n            if (_util_Type__WEBPACK_IMPORTED_MODULE_8__.isNumber(style2.fontSize)) {\r\n                style2.fontSize = style2.fontSize + \"px\";\r\n            }\r\n            fontStyle.push(style2.fontSize);\r\n        }\r\n        else if (style.fontSize) {\r\n            if (_util_Type__WEBPACK_IMPORTED_MODULE_8__.isNumber(style.fontSize)) {\r\n                style.fontSize = style.fontSize + \"px\";\r\n            }\r\n            fontStyle.push(style.fontSize);\r\n        }\r\n        if (style2 && style2.fontFamily) {\r\n            fontStyle.push(style2.fontFamily);\r\n        }\r\n        else if (style.fontFamily) {\r\n            fontStyle.push(style.fontFamily);\r\n        }\r\n        else if (fontStyle.length) {\r\n            fontStyle.push(\"Arial\");\r\n        }\r\n        return fontStyle.join(\" \");\r\n    }\r\n    _render(status, targetGhostLayer = 0) {\r\n        // We need measurements in order to properly position text for alignment\r\n        if (!this._textInfo) {\r\n            this._measure(status);\r\n        }\r\n        if (this.textVisible) {\r\n            const interactive = this._isInteractive(status);\r\n            const context = status.layer.context;\r\n            const layerDirty = status.layer.dirty;\r\n            const ghostContext = this._renderer._ghostLayer.context;\r\n            const ghostOnly = this._ghostOnly(targetGhostLayer);\r\n            const drawGhost = this._drawGhost(status, targetGhostLayer);\r\n            context.save();\r\n            ghostContext.save();\r\n            this._prerender(status);\r\n            // const lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\r\n            // const x = this._localBounds && (this._localBounds.left < 0) ? Math.abs(this._localBounds.left) : 0;\r\n            // Process text info produced by _measure()\r\n            _util_Array__WEBPACK_IMPORTED_MODULE_2__.each(this._textInfo, (line, _index) => {\r\n                _util_Array__WEBPACK_IMPORTED_MODULE_2__.each(line.textChunks, (chunk, _index) => {\r\n                    // Set style\r\n                    if (chunk.style) {\r\n                        context.save();\r\n                        ghostContext.save();\r\n                        if (!ghostOnly) {\r\n                            context.font = chunk.style;\r\n                        }\r\n                        if (this._isInteractive(status)) {\r\n                            ghostContext.font = chunk.style;\r\n                        }\r\n                    }\r\n                    if (chunk.fill) {\r\n                        context.save();\r\n                        if (!ghostOnly) {\r\n                            context.fillStyle = chunk.fill.toCSS();\r\n                        }\r\n                        // Color does not affect ghostContext so we not set it\r\n                    }\r\n                    // Draw text\r\n                    if (layerDirty && !ghostOnly) {\r\n                        context.fillText(chunk.text, chunk.offsetX, line.offsetY + chunk.offsetY);\r\n                    }\r\n                    // Draw underline\r\n                    if (chunk.textDecoration == \"underline\" || chunk.textDecoration == \"line-through\") {\r\n                        let thickness = 1;\r\n                        let offset = 1;\r\n                        let fontSize = chunk.height;\r\n                        const oversizedBehavior = this.style.oversizedBehavior || \"\";\r\n                        if ([\"truncate\", \"wrap\", \"wrap-no-break\"].indexOf(oversizedBehavior) > -1) {\r\n                            // Measure actual width of the text so the line fits\r\n                            const metrics = this._measureText(chunk.text, context);\r\n                            chunk.width = metrics.actualBoundingBoxLeft + metrics.actualBoundingBoxRight;\r\n                        }\r\n                        let offsetX = chunk.offsetX;\r\n                        switch (this.style.textAlign) {\r\n                            case \"right\":\r\n                            case \"end\":\r\n                                offsetX -= chunk.width;\r\n                                break;\r\n                            case \"center\":\r\n                                offsetX -= chunk.width / 2;\r\n                                break;\r\n                        }\r\n                        if (chunk.style) {\r\n                            const format = _util_TextFormatter__WEBPACK_IMPORTED_MODULE_9__.TextFormatter.getTextStyle(chunk.style);\r\n                            switch (format.fontWeight) {\r\n                                case \"bolder\":\r\n                                case \"bold\":\r\n                                case \"700\":\r\n                                case \"800\":\r\n                                case \"900\":\r\n                                    thickness = 2;\r\n                                    break;\r\n                            }\r\n                        }\r\n                        if (fontSize) {\r\n                            offset = fontSize / 20;\r\n                        }\r\n                        let y;\r\n                        if (chunk.textDecoration == \"line-through\") {\r\n                            y = thickness + line.offsetY + chunk.offsetY - chunk.height / 2;\r\n                        }\r\n                        else {\r\n                            y = thickness + offset * 1.5 + line.offsetY + chunk.offsetY;\r\n                        }\r\n                        if (!ghostOnly) {\r\n                            context.save();\r\n                            context.beginPath();\r\n                            if (chunk.fill) {\r\n                                context.strokeStyle = chunk.fill.toCSS();\r\n                            }\r\n                            else if (this.style.fill && this.style.fill instanceof _util_Color__WEBPACK_IMPORTED_MODULE_7__.Color) {\r\n                                context.strokeStyle = this.style.fill.toCSS();\r\n                            }\r\n                            context.lineWidth = thickness * offset;\r\n                            context.moveTo(offsetX, y);\r\n                            context.lineTo(offsetX + chunk.width, y);\r\n                            context.stroke();\r\n                            context.restore();\r\n                        }\r\n                    }\r\n                    if (interactive && this.interactive && drawGhost) {\r\n                        // Draw text in ghost canvas ONLY if it is set as interactive\r\n                        // explicitly. This way we avoid hit test anomalies caused by anti\r\n                        // aliasing of text.\r\n                        ghostContext.fillText(chunk.text, chunk.offsetX, line.offsetY + chunk.offsetY);\r\n                    }\r\n                    if (chunk.fill) {\r\n                        context.restore();\r\n                        // Color does not affect ghostContext so we not set it\r\n                    }\r\n                    // Reset style\r\n                    if (chunk.style) {\r\n                        context.restore();\r\n                        ghostContext.restore();\r\n                    }\r\n                });\r\n            });\r\n            context.restore();\r\n            ghostContext.restore();\r\n        }\r\n    }\r\n    _addBounds(bounds) {\r\n        if (this.visible && this.isMeasured) {\r\n            //if (this._textVisible) {\r\n            const x = this._measure({\r\n                inactive: this.inactive,\r\n                layer: this.getLayer(),\r\n            });\r\n            setPoint(bounds, { x: x.left, y: x.top });\r\n            setPoint(bounds, { x: x.right, y: x.bottom });\r\n            //}\r\n        }\r\n    }\r\n    _ignoreFontWeight() {\r\n        return /apple/i.test(navigator.vendor);\r\n    }\r\n    _measure(status) {\r\n        const context = status.layer.context;\r\n        const ghostContext = this._renderer._ghostLayer.context;\r\n        const rtl = this.style.direction == \"rtl\";\r\n        // Reset text info\r\n        this._textInfo = [];\r\n        // Init\r\n        const oversizedBehavior = this.style.oversizedBehavior;\r\n        const maxWidth = this.style.maxWidth;\r\n        const truncate = _util_Type__WEBPACK_IMPORTED_MODULE_8__.isNumber(maxWidth) && oversizedBehavior == \"truncate\";\r\n        const wrap = _util_Type__WEBPACK_IMPORTED_MODULE_8__.isNumber(maxWidth) && (oversizedBehavior == \"wrap\" || oversizedBehavior == \"wrap-no-break\");\r\n        // Pre-render\r\n        context.save();\r\n        ghostContext.save();\r\n        this._prerender(status, true, this._ignoreFontWeight());\r\n        // Get default font metrix\r\n        const refText = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789 \";\r\n        // Split up text into lines\r\n        const lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\r\n        let styleRestored = true;\r\n        let minX = 0;\r\n        let maxX = 0;\r\n        // Iterate through the lines\r\n        let offsetY = 0;\r\n        let currentStyle;\r\n        _util_Array__WEBPACK_IMPORTED_MODULE_2__.each(lines, (line, _index) => {\r\n            // Split up line into format/value chunks\r\n            let chunks;\r\n            if (line == \"\") {\r\n                chunks = [{\r\n                        type: \"value\",\r\n                        text: \"\"\r\n                    }];\r\n            }\r\n            else {\r\n                chunks = _util_TextFormatter__WEBPACK_IMPORTED_MODULE_9__.TextFormatter.chunk(line, false, this.style.ignoreFormatting);\r\n            }\r\n            while (chunks.length > 0) {\r\n                // Init line object\r\n                let lineInfo = {\r\n                    offsetY: offsetY,\r\n                    ascent: 0,\r\n                    width: 0,\r\n                    height: 0,\r\n                    left: 0,\r\n                    right: 0,\r\n                    textChunks: []\r\n                };\r\n                // Measure reference text\r\n                const metrics = this._measureText(refText, context);\r\n                const height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\r\n                lineInfo.height = height;\r\n                lineInfo.ascent = metrics.actualBoundingBoxAscent;\r\n                let currentFormat;\r\n                let currentDecoration = this.style.textDecoration;\r\n                let currentFill;\r\n                let currentChunkWidth;\r\n                let skipFurtherText = false;\r\n                let firstTextChunk = true;\r\n                let leftoverChunks = [];\r\n                let currentVerticalAlign;\r\n                //let offsetX = 0;\r\n                //let chunk;\r\n                //while(chunk = chunks.shift()) {\r\n                _util_Array__WEBPACK_IMPORTED_MODULE_2__.eachContinue(chunks, (chunk, index) => {\r\n                    // Format chunk\r\n                    if (chunk.type == \"format\") {\r\n                        if (chunk.text == \"[/]\") {\r\n                            if (!styleRestored) {\r\n                                context.restore();\r\n                                ghostContext.restore();\r\n                                styleRestored = true;\r\n                            }\r\n                            currentFill = undefined;\r\n                            currentStyle = undefined;\r\n                            currentChunkWidth = undefined;\r\n                            currentDecoration = this.style.textDecoration;\r\n                            currentVerticalAlign = undefined;\r\n                            currentFormat = chunk.text;\r\n                        }\r\n                        else {\r\n                            if (!styleRestored) {\r\n                                context.restore();\r\n                                ghostContext.restore();\r\n                            }\r\n                            let format = _util_TextFormatter__WEBPACK_IMPORTED_MODULE_9__.TextFormatter.getTextStyle(chunk.text);\r\n                            const fontStyle = this._getFontStyle(format);\r\n                            context.save();\r\n                            ghostContext.save();\r\n                            context.font = fontStyle;\r\n                            currentStyle = fontStyle;\r\n                            currentFormat = chunk.text;\r\n                            if (format.textDecoration) {\r\n                                currentDecoration = format.textDecoration;\r\n                            }\r\n                            if (format.fill) {\r\n                                currentFill = format.fill;\r\n                            }\r\n                            if (format.width) {\r\n                                currentChunkWidth = _util_Type__WEBPACK_IMPORTED_MODULE_8__.toNumber(format.width);\r\n                            }\r\n                            if (format.verticalAlign) {\r\n                                currentVerticalAlign = format.verticalAlign;\r\n                            }\r\n                            styleRestored = false;\r\n                            // Measure reference text after change of format\r\n                            const metrics = this._measureText(refText, context);\r\n                            const height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\r\n                            if (height > lineInfo.height) {\r\n                                lineInfo.height = height;\r\n                            }\r\n                            if (metrics.actualBoundingBoxAscent > lineInfo.ascent) {\r\n                                lineInfo.ascent = metrics.actualBoundingBoxAscent;\r\n                            }\r\n                        }\r\n                    }\r\n                    // Text chunk\r\n                    else if (chunk.type == \"value\" && !skipFurtherText) {\r\n                        // Measure\r\n                        const metrics = this._measureText(chunk.text, context);\r\n                        let chunkWidth = metrics.actualBoundingBoxLeft + metrics.actualBoundingBoxRight;\r\n                        // Check for fit\r\n                        if (truncate) {\r\n                            this.truncated = undefined;\r\n                            // Break words?\r\n                            let breakWords = firstTextChunk || this.style.breakWords || false;\r\n                            // Measure ellipsis and check if it fits\r\n                            const ellipsis = this.style.ellipsis || \"\";\r\n                            const ellipsisMetrics = this._measureText(ellipsis, context);\r\n                            const ellipsisWidth = ellipsisMetrics.actualBoundingBoxLeft + ellipsisMetrics.actualBoundingBoxRight;\r\n                            // Check fit\r\n                            if ((lineInfo.width + chunkWidth) > maxWidth) {\r\n                                const excessWidth = maxWidth - lineInfo.width - ellipsisWidth;\r\n                                chunk.text = this._truncateText(context, chunk.text, excessWidth, breakWords);\r\n                                chunk.text += ellipsis;\r\n                                skipFurtherText = true;\r\n                                this.truncated = true;\r\n                            }\r\n                        }\r\n                        else if (wrap) {\r\n                            // Check fit\r\n                            if ((lineInfo.width + chunkWidth) > maxWidth) {\r\n                                const excessWidth = maxWidth - lineInfo.width;\r\n                                const tmpText = this._truncateText(context, chunk.text, excessWidth, false, (firstTextChunk && this.style.oversizedBehavior != \"wrap-no-break\"));\r\n                                if (tmpText == \"\") {\r\n                                    // Unable to fit a single letter - hide the whole label\r\n                                    this.textVisible = true;\r\n                                    return false;\r\n                                }\r\n                                //skipFurtherText = true;\r\n                                //Add remaining chunks for the next line\r\n                                leftoverChunks = chunks.slice(index + 1);\r\n                                //Add remaining text of current chunk if it was forced-cut\r\n                                if (_util_Utils__WEBPACK_IMPORTED_MODULE_1__.trim(tmpText) != _util_Utils__WEBPACK_IMPORTED_MODULE_1__.trim(chunk.text)) {\r\n                                    leftoverChunks.unshift({\r\n                                        type: \"value\",\r\n                                        text: chunk.text.substr(tmpText.length)\r\n                                    });\r\n                                    if (currentFormat) {\r\n                                        leftoverChunks.unshift({\r\n                                            type: \"format\",\r\n                                            text: currentFormat\r\n                                        });\r\n                                    }\r\n                                }\r\n                                // Set current chunk (truncated)\r\n                                chunk.text = _util_Utils__WEBPACK_IMPORTED_MODULE_1__.trim(tmpText);\r\n                                chunks = [];\r\n                                skipFurtherText = true;\r\n                            }\r\n                        }\r\n                        // Chunk width?\r\n                        let leftBoundMod = 1;\r\n                        let rightBoundMod = 1;\r\n                        if (currentStyle && currentChunkWidth && (currentChunkWidth > chunkWidth)) {\r\n                            // increase horizontal bounding boxes accordingly\r\n                            const boundsMod = chunkWidth / currentChunkWidth;\r\n                            switch (this.style.textAlign) {\r\n                                case \"right\":\r\n                                case \"end\":\r\n                                    leftBoundMod = boundsMod;\r\n                                    break;\r\n                                case \"center\":\r\n                                    leftBoundMod = boundsMod;\r\n                                    rightBoundMod = boundsMod;\r\n                                    break;\r\n                                default:\r\n                                    rightBoundMod = boundsMod;\r\n                            }\r\n                            chunkWidth = currentChunkWidth;\r\n                        }\r\n                        const chunkHeight = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\r\n                        if (chunkHeight > lineInfo.height) {\r\n                            lineInfo.height = chunkHeight;\r\n                        }\r\n                        if (metrics.actualBoundingBoxAscent > lineInfo.ascent) {\r\n                            lineInfo.ascent = metrics.actualBoundingBoxAscent;\r\n                        }\r\n                        lineInfo.width += chunkWidth;\r\n                        lineInfo.left += metrics.actualBoundingBoxLeft / leftBoundMod;\r\n                        lineInfo.right += metrics.actualBoundingBoxRight / rightBoundMod;\r\n                        lineInfo.textChunks.push({\r\n                            style: currentStyle,\r\n                            fill: currentFill,\r\n                            text: chunk.text,\r\n                            width: chunkWidth,\r\n                            height: chunkHeight,\r\n                            left: metrics.actualBoundingBoxLeft,\r\n                            right: metrics.actualBoundingBoxRight,\r\n                            ascent: metrics.actualBoundingBoxAscent,\r\n                            offsetX: 0,\r\n                            offsetY: 0,\r\n                            textDecoration: currentDecoration,\r\n                            verticalAlign: currentVerticalAlign\r\n                        });\r\n                        //offsetX += chunkWidth;\r\n                        firstTextChunk = false;\r\n                    }\r\n                    if (leftoverChunks) {\r\n                        //return false;\r\n                    }\r\n                    return true;\r\n                    //}\r\n                });\r\n                if (this.style.lineHeight instanceof _util_Percent__WEBPACK_IMPORTED_MODULE_10__.Percent) {\r\n                    lineInfo.height *= this.style.lineHeight.value;\r\n                    lineInfo.ascent *= this.style.lineHeight.value;\r\n                }\r\n                else {\r\n                    lineInfo.height *= this.style.lineHeight || 1.2;\r\n                    lineInfo.ascent *= this.style.lineHeight || 1.2;\r\n                }\r\n                if (minX < lineInfo.left) {\r\n                    minX = lineInfo.left;\r\n                }\r\n                if (maxX < lineInfo.right) {\r\n                    maxX = lineInfo.right;\r\n                }\r\n                this._textInfo.push(lineInfo);\r\n                //lineInfo.offsetY += lineInfo.ascent;\r\n                offsetY += lineInfo.height;\r\n                // Reset chunks so that it can proceed to the next line\r\n                chunks = leftoverChunks || [];\r\n            }\r\n        });\r\n        if (!styleRestored) {\r\n            context.restore();\r\n            ghostContext.restore();\r\n        }\r\n        // Adjust chunk internal offsets\r\n        _util_Array__WEBPACK_IMPORTED_MODULE_2__.each(this._textInfo, (lineInfo, _index) => {\r\n            let currentChunkOffset = 0;\r\n            _util_Array__WEBPACK_IMPORTED_MODULE_2__.each(lineInfo.textChunks, (chunk) => {\r\n                chunk.offsetX = currentChunkOffset + chunk.left - lineInfo.left;\r\n                chunk.offsetY += lineInfo.height - lineInfo.height * (this.style.baselineRatio || 0.19);\r\n                currentChunkOffset += chunk.width;\r\n                if (chunk.verticalAlign) {\r\n                    switch (chunk.verticalAlign) {\r\n                        case \"super\":\r\n                            chunk.offsetY -= lineInfo.height / 2 - chunk.height / 2;\r\n                            break;\r\n                        case \"sub\":\r\n                            chunk.offsetY += chunk.height / 2;\r\n                            break;\r\n                    }\r\n                }\r\n            });\r\n        });\r\n        const bounds = {\r\n            left: rtl ? -maxX : -minX,\r\n            top: 0,\r\n            right: rtl ? minX : maxX,\r\n            bottom: offsetY,\r\n        };\r\n        // We need to fit?\r\n        if (oversizedBehavior !== \"none\") {\r\n            const ratio = this._fitRatio(bounds);\r\n            if (ratio < 1) {\r\n                if (oversizedBehavior == \"fit\") {\r\n                    if (_util_Type__WEBPACK_IMPORTED_MODULE_8__.isNumber(this.style.minScale) && (ratio < this.style.minScale)) {\r\n                        this.textVisible = false;\r\n                        bounds.left = 0;\r\n                        bounds.top = 0;\r\n                        bounds.right = 0;\r\n                        bounds.bottom = 0;\r\n                    }\r\n                    else {\r\n                        if (!this._originalScale) {\r\n                            this._originalScale = this.scale;\r\n                        }\r\n                        this.scale = ratio;\r\n                        this.textVisible = true;\r\n                    }\r\n                }\r\n                else if (oversizedBehavior == \"hide\") {\r\n                    this.textVisible = false;\r\n                    bounds.left = 0;\r\n                    bounds.top = 0;\r\n                    bounds.right = 0;\r\n                    bounds.bottom = 0;\r\n                }\r\n                else {\r\n                    switch (this.style.textAlign) {\r\n                        case \"right\":\r\n                        case \"end\":\r\n                            bounds.left = rtl ? maxWidth : -maxWidth;\r\n                            bounds.right = 0;\r\n                            break;\r\n                        case \"center\":\r\n                            bounds.left = -maxWidth / 2;\r\n                            bounds.right = maxWidth / 2;\r\n                            break;\r\n                        default:\r\n                            bounds.left = 0;\r\n                            bounds.right = rtl ? -maxWidth : maxWidth;\r\n                    }\r\n                    this.scale = this._originalScale || 1;\r\n                    this._originalScale = undefined;\r\n                    this.textVisible = true;\r\n                }\r\n            }\r\n            else {\r\n                this.scale = this._originalScale || 1;\r\n                this._originalScale = undefined;\r\n                this.textVisible = true;\r\n            }\r\n        }\r\n        context.restore();\r\n        ghostContext.restore();\r\n        return bounds;\r\n    }\r\n    _fitRatio(bounds) {\r\n        const maxW = this.style.maxWidth;\r\n        const maxH = this.style.maxHeight;\r\n        if (!_util_Type__WEBPACK_IMPORTED_MODULE_8__.isNumber(maxW) && !_util_Type__WEBPACK_IMPORTED_MODULE_8__.isNumber(maxH)) {\r\n            return 1;\r\n        }\r\n        const w = bounds.right - bounds.left;\r\n        const h = bounds.bottom - bounds.top;\r\n        return Math.min(maxW / w || 1, maxH / h || 1);\r\n    }\r\n    _truncateText(context, text, maxWidth, breakWords = false, fallbackBreakWords = true) {\r\n        let width;\r\n        do {\r\n            if (breakWords) {\r\n                text = text.slice(0, -1);\r\n            }\r\n            else {\r\n                let tmp = text.replace(/[^,;:!?\\\\\\/\\s​]+[,;:!?\\\\\\/\\s​]*$/g, \"\");\r\n                if ((tmp == \"\" || tmp === text) && fallbackBreakWords) {\r\n                    breakWords = true;\r\n                }\r\n                else if (tmp == \"\") {\r\n                    return text;\r\n                }\r\n                else {\r\n                    text = tmp;\r\n                }\r\n            }\r\n            const metrics = this._measureText(text, context);\r\n            width = metrics.actualBoundingBoxLeft + metrics.actualBoundingBoxRight;\r\n        } while ((width > maxWidth) && text != \"\");\r\n        return text;\r\n    }\r\n    _measureText(text, context) {\r\n        let metrics = context.measureText(text);\r\n        let fakeMetrics = {};\r\n        if (metrics.actualBoundingBoxAscent == null) {\r\n            const div = document.createElement(\"div\");\r\n            div.innerText = text;\r\n            div.style.visibility = \"hidden\";\r\n            div.style.position = \"absolute\";\r\n            div.style.top = \"-1000000px;\";\r\n            div.style.fontFamily = this.style.fontFamily || \"\";\r\n            div.style.fontSize = this.style.fontSize + \"\";\r\n            document.body.appendChild(div);\r\n            const bbox = div.getBoundingClientRect();\r\n            document.body.removeChild(div);\r\n            const h = bbox.height;\r\n            const w = metrics.width;\r\n            let left = 0;\r\n            let right = w;\r\n            fakeMetrics = {\r\n                actualBoundingBoxAscent: h,\r\n                actualBoundingBoxDescent: 0,\r\n                actualBoundingBoxLeft: left,\r\n                actualBoundingBoxRight: right,\r\n                fontBoundingBoxAscent: h,\r\n                fontBoundingBoxDescent: 0,\r\n                width: w\r\n            };\r\n            //return fake;\r\n        }\r\n        else {\r\n            fakeMetrics = {\r\n                actualBoundingBoxAscent: metrics.actualBoundingBoxAscent,\r\n                actualBoundingBoxDescent: metrics.actualBoundingBoxDescent,\r\n                actualBoundingBoxLeft: metrics.actualBoundingBoxLeft,\r\n                actualBoundingBoxRight: metrics.actualBoundingBoxRight,\r\n                fontBoundingBoxAscent: metrics.actualBoundingBoxAscent,\r\n                fontBoundingBoxDescent: metrics.actualBoundingBoxDescent,\r\n                width: metrics.width\r\n            };\r\n        }\r\n        const w = metrics.width;\r\n        switch (this.style.textAlign) {\r\n            case \"right\":\r\n            case \"end\":\r\n                fakeMetrics.actualBoundingBoxLeft = w;\r\n                fakeMetrics.actualBoundingBoxRight = 0;\r\n                break;\r\n            case \"center\":\r\n                fakeMetrics.actualBoundingBoxLeft = w / 2;\r\n                fakeMetrics.actualBoundingBoxRight = w / 2;\r\n                break;\r\n            default:\r\n                fakeMetrics.actualBoundingBoxLeft = 0;\r\n                fakeMetrics.actualBoundingBoxRight = w;\r\n        }\r\n        return fakeMetrics;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass CanvasTextStyle {\r\n    constructor() {\r\n        //public wordWrapWidth: number = 100;\r\n        Object.defineProperty(this, \"fill\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fillOpacity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"textAlign\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fontFamily\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fontSize\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fontWeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fontStyle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fontVariant\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"textDecoration\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowColor\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowBlur\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOffsetX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOffsetY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOpacity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // leading?: number;\r\n        // letterSpacing?: number;\r\n        Object.defineProperty(this, \"lineHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: (0,_util_Percent__WEBPACK_IMPORTED_MODULE_10__.percent)(120)\r\n        });\r\n        Object.defineProperty(this, \"baselineRatio\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0.19\r\n        });\r\n        // padding?: number;\r\n        // stroke?: number;\r\n        // strokeThickness?: number;\r\n        // trim?: number;\r\n        // wordWrap?: boolean;\r\n        Object.defineProperty(this, \"direction\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"textBaseline\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"oversizedBehavior\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"none\"\r\n        });\r\n        Object.defineProperty(this, \"breakWords\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"ellipsis\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"…\"\r\n        });\r\n        Object.defineProperty(this, \"maxWidth\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"maxHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"minScale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"ignoreFormatting\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass CanvasRadialText extends CanvasText {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"textType\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"circular\"\r\n        });\r\n        Object.defineProperty(this, \"radius\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"startAngle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"inside\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"orientation\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"auto\"\r\n        });\r\n        Object.defineProperty(this, \"kerning\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_textReversed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _render(status, targetGhostLayer = 0) {\r\n        switch (this.textType) {\r\n            case \"circular\":\r\n                this._renderCircular(status, targetGhostLayer);\r\n                break;\r\n            default:\r\n                super._render(status, targetGhostLayer);\r\n                break;\r\n        }\r\n    }\r\n    _renderCircular(status, targetGhostLayer = 0) {\r\n        if (this.textVisible) {\r\n            this._prerender(status);\r\n            const interactive = this._isInteractive(status);\r\n            const context = status.layer.context;\r\n            const layerDirty = status.layer.dirty;\r\n            const ghostContext = this._renderer._ghostLayer.context;\r\n            // Savepoint\r\n            context.save();\r\n            if (interactive) {\r\n                ghostContext.save();\r\n            }\r\n            // We need measurements in order to properly position text for alignment\r\n            if (!this._textInfo) {\r\n                this._measure(status);\r\n            }\r\n            // Init\r\n            let radius = (this.radius || 0);\r\n            let startAngle = (this.startAngle || 0);\r\n            let deltaAngle = 0;\r\n            let orientation = this.orientation;\r\n            let inward = orientation == \"auto\" ? \"auto\" : orientation == \"inward\";\r\n            const inside = this.inside;\r\n            const align = this.style.textAlign || \"left\";\r\n            const kerning = this.kerning || 0;\r\n            let clockwise = align == \"left\" ? 1 : -1;\r\n            const shouldReverse = !this._textReversed;\r\n            const ghostOnly = this._ghostOnly(targetGhostLayer);\r\n            const drawGhost = this._drawGhost(status, targetGhostLayer);\r\n            // Check if we need to invert the whole stuff\r\n            if (inward == \"auto\") {\r\n                // Calc max angle so we know whether we need to flip it\r\n                let maxAngle = 0;\r\n                let midAngle = 0;\r\n                _util_Array__WEBPACK_IMPORTED_MODULE_2__.each(this._textInfo, (line, _index) => {\r\n                    const deltaAngle = startAngle + (line.width / (radius - line.height)) / 2 * -clockwise;\r\n                    if (deltaAngle > maxAngle) {\r\n                        maxAngle = deltaAngle;\r\n                    }\r\n                });\r\n                if (align == \"left\") {\r\n                    midAngle = (maxAngle + deltaAngle / 2) * _util_Math__WEBPACK_IMPORTED_MODULE_5__.DEGREES;\r\n                }\r\n                else if (align == \"right\") {\r\n                    midAngle = (maxAngle - deltaAngle / 2) * _util_Math__WEBPACK_IMPORTED_MODULE_5__.DEGREES;\r\n                }\r\n                else {\r\n                    midAngle = startAngle * _util_Math__WEBPACK_IMPORTED_MODULE_5__.DEGREES;\r\n                }\r\n                midAngle = _util_Math__WEBPACK_IMPORTED_MODULE_5__.normalizeAngle(midAngle);\r\n                inward = (midAngle >= 270) || (midAngle <= 90);\r\n            }\r\n            if (inward == true && shouldReverse) {\r\n                this._textInfo.reverse();\r\n                this._textReversed = true;\r\n            }\r\n            // if ((inward == false && align == \"left\") || (inward == true && align == \"right\")) {\r\n            // \tclockwise *= -1;\r\n            // }\r\n            // Process text info produced by _measure()\r\n            _util_Array__WEBPACK_IMPORTED_MODULE_2__.each(this._textInfo, (line, _index) => {\r\n                const textHeight = line.height;\r\n                // Adjust radius (for `inside = false`)\r\n                // Radius adjustment for `inside = false` is below the line calculation\r\n                if (!inside) {\r\n                    radius += textHeight;\r\n                }\r\n                // Reverse letters if we're painting them counter-clockwise\r\n                if (((clockwise == -1 && inward) || (clockwise == 1 && !inward)) && shouldReverse) {\r\n                    line.textChunks.reverse();\r\n                }\r\n                // Init angles\r\n                let lineStartAngle = startAngle;\r\n                deltaAngle = 0;\r\n                // Adjust for center-align\r\n                if (align == \"center\") {\r\n                    lineStartAngle += (line.width / (radius - textHeight)) / 2 * -clockwise;\r\n                    deltaAngle = lineStartAngle - startAngle;\r\n                }\r\n                // if (inward == \"auto\") {\r\n                // \tlet midAngle;\r\n                // \tif (align == \"left\") {\r\n                // \t\tmidAngle = (lineStartAngle + deltaAngle / 2) * $math.DEGREES;\r\n                // \t}\r\n                // \telse if () {\r\n                // \t\tmidAngle = (lineStartAngle - deltaAngle / 2) * $math.DEGREES;\r\n                // \t}\r\n                // \tinward = (midAngle >= 270) || (midAngle <= 90);\r\n                // }\r\n                // Rotate letters if they are facing outward\r\n                lineStartAngle += (Math.PI * (inward ? 0 : 1)); // Rotate 180 if outward\r\n                // Savepoint\r\n                context.save();\r\n                if (interactive) {\r\n                    ghostContext.save();\r\n                }\r\n                // Assume starting angle\r\n                if (!ghostOnly) {\r\n                    context.rotate(lineStartAngle);\r\n                }\r\n                if (interactive) {\r\n                    ghostContext.rotate(lineStartAngle);\r\n                }\r\n                let angleShift = 0;\r\n                _util_Array__WEBPACK_IMPORTED_MODULE_2__.each(line.textChunks, (chunk, _index) => {\r\n                    // Draw the letter\r\n                    const char = chunk.text;\r\n                    const charWidth = chunk.width;\r\n                    // Rotate half a letter\r\n                    angleShift = (charWidth / 2) / (radius - textHeight) * clockwise;\r\n                    if (!ghostOnly) {\r\n                        context.rotate(angleShift);\r\n                    }\r\n                    if (interactive) {\r\n                        ghostContext.rotate(angleShift);\r\n                    }\r\n                    // Set style\r\n                    if (chunk.style) {\r\n                        context.save();\r\n                        ghostContext.save();\r\n                        if (!ghostOnly) {\r\n                            context.font = chunk.style;\r\n                        }\r\n                        if (interactive) {\r\n                            ghostContext.font = chunk.style;\r\n                        }\r\n                    }\r\n                    if (chunk.fill) {\r\n                        context.save();\r\n                        if (!ghostOnly) {\r\n                            context.fillStyle = chunk.fill.toCSS();\r\n                        }\r\n                        // Color does not affect ghostContext so we not set it\r\n                    }\r\n                    // Center letters\r\n                    if (!ghostOnly) {\r\n                        context.textBaseline = \"middle\";\r\n                        context.textAlign = \"center\";\r\n                    }\r\n                    if (interactive) {\r\n                        ghostContext.textBaseline = \"middle\";\r\n                        ghostContext.textAlign = \"center\";\r\n                    }\r\n                    // Plop the letter\r\n                    if (layerDirty && !ghostOnly) {\r\n                        context.fillText(char, 0, (inward ? 1 : -1) * (0 - radius + textHeight / 2));\r\n                    }\r\n                    if (interactive && drawGhost) {\r\n                        ghostContext.fillText(char, 0, (inward ? 1 : -1) * (0 - radius + textHeight / 2));\r\n                    }\r\n                    if (chunk.fill) {\r\n                        context.restore();\r\n                        // Color does not affect ghostContext so we not set it\r\n                    }\r\n                    // Reset style\r\n                    if (chunk.style) {\r\n                        context.restore();\r\n                        ghostContext.restore();\r\n                    }\r\n                    // Rotate half a letter and add spacing\r\n                    angleShift = (charWidth / 2 + kerning) / (radius - textHeight) * clockwise;\r\n                    if (!ghostOnly) {\r\n                        context.rotate(angleShift);\r\n                    }\r\n                    if (interactive) {\r\n                        ghostContext.rotate(angleShift);\r\n                    }\r\n                });\r\n                // Restore angle\r\n                context.restore();\r\n                if (interactive) {\r\n                    ghostContext.restore();\r\n                }\r\n                // Adjust radius (for `inside = true`)\r\n                if (inside) {\r\n                    radius -= textHeight;\r\n                }\r\n            });\r\n            // Restore\r\n            context.restore();\r\n            if (interactive) {\r\n                ghostContext.restore();\r\n            }\r\n        }\r\n    }\r\n    _measure(status) {\r\n        switch (this.textType) {\r\n            case \"circular\":\r\n                return this._measureCircular(status);\r\n            default:\r\n                return super._measure(status);\r\n        }\r\n    }\r\n    _measureCircular(status) {\r\n        const context = status.layer.context;\r\n        const ghostContext = this._renderer._ghostLayer.context;\r\n        const rtl = this.style.direction == \"rtl\";\r\n        const oversizedBehavior = this.style.oversizedBehavior;\r\n        const maxWidth = this.style.maxWidth;\r\n        const truncate = _util_Type__WEBPACK_IMPORTED_MODULE_8__.isNumber(maxWidth) && oversizedBehavior == \"truncate\";\r\n        const ellipsis = this.style.ellipsis || \"\";\r\n        let ellipsisMetrics;\r\n        //const wrap = $type.isNumber(maxWidth) && (oversizedBehavior == \"wrap\" || oversizedBehavior == \"wrap-no-break\");\r\n        // Reset text info\r\n        this.textVisible = true;\r\n        this._textInfo = [];\r\n        this._textReversed = false;\r\n        // Pre-render\r\n        context.save();\r\n        ghostContext.save();\r\n        this._prerender(status, true);\r\n        // Split up text into lines\r\n        const lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\r\n        let styleRestored = true;\r\n        let totalWidth = 0;\r\n        // Iterate through the lines\r\n        let offsetY = 0;\r\n        _util_Array__WEBPACK_IMPORTED_MODULE_2__.each(lines, (line, _index) => {\r\n            // Split up line into format/value chunks\r\n            let chunks = _util_TextFormatter__WEBPACK_IMPORTED_MODULE_9__.TextFormatter.chunk(line, false, this.style.ignoreFormatting);\r\n            // Init line object\r\n            let lineInfo = {\r\n                offsetY: offsetY,\r\n                ascent: 0,\r\n                width: 0,\r\n                height: 0,\r\n                left: 0,\r\n                right: 0,\r\n                textChunks: []\r\n            };\r\n            let currentStyle;\r\n            let currentFill;\r\n            let currentChunkWidth;\r\n            //while(chunk = chunks.shift()) {\r\n            _util_Array__WEBPACK_IMPORTED_MODULE_2__.each(chunks, (chunk, _index) => {\r\n                // Format chunk\r\n                if (chunk.type == \"format\") {\r\n                    if (chunk.text == \"[/]\") {\r\n                        if (!styleRestored) {\r\n                            context.restore();\r\n                            ghostContext.restore();\r\n                            styleRestored = true;\r\n                        }\r\n                        currentFill = undefined;\r\n                        currentStyle = undefined;\r\n                        currentChunkWidth = undefined;\r\n                    }\r\n                    else {\r\n                        let format = _util_TextFormatter__WEBPACK_IMPORTED_MODULE_9__.TextFormatter.getTextStyle(chunk.text);\r\n                        const fontStyle = this._getFontStyle(format);\r\n                        context.save();\r\n                        ghostContext.save();\r\n                        context.font = fontStyle;\r\n                        currentStyle = fontStyle;\r\n                        if (format.fill) {\r\n                            currentFill = format.fill;\r\n                        }\r\n                        if (format.width) {\r\n                            currentChunkWidth = _util_Type__WEBPACK_IMPORTED_MODULE_8__.toNumber(format.width);\r\n                        }\r\n                        styleRestored = false;\r\n                    }\r\n                    if (truncate) {\r\n                        ellipsisMetrics = this._measureText(ellipsis, context);\r\n                    }\r\n                }\r\n                // Text format\r\n                else if (chunk.type == \"value\") {\r\n                    // Measure each letter\r\n                    let chars = chunk.text.match(/./ug) || [];\r\n                    if (rtl) {\r\n                        chars = _util_Utils__WEBPACK_IMPORTED_MODULE_1__.splitString(chunk.text);\r\n                        chars.reverse();\r\n                    }\r\n                    for (let i = 0; i < chars.length; i++) {\r\n                        const char = chars[i];\r\n                        // Measure\r\n                        const metrics = this._measureText(char, context);\r\n                        let chunkWidth = metrics.width;\r\n                        // Chunk width?\r\n                        if (currentStyle && currentChunkWidth && (currentChunkWidth > chunkWidth)) {\r\n                            chunkWidth = currentChunkWidth;\r\n                        }\r\n                        const chunkHeight = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\r\n                        if (chunkHeight > lineInfo.height) {\r\n                            lineInfo.height = chunkHeight;\r\n                        }\r\n                        if (metrics.actualBoundingBoxAscent > lineInfo.ascent) {\r\n                            lineInfo.ascent = metrics.actualBoundingBoxAscent;\r\n                        }\r\n                        totalWidth += chunkWidth;\r\n                        // Handle oversized behavior\r\n                        if (truncate) {\r\n                            // Measure ellipsis and check if it fits\r\n                            if (!ellipsisMetrics) {\r\n                                ellipsisMetrics = this._measureText(ellipsis, context);\r\n                            }\r\n                            const ellipsisWidth = ellipsisMetrics.actualBoundingBoxLeft + ellipsisMetrics.actualBoundingBoxRight;\r\n                            //totalWidth += ellipsisWidth;\r\n                            if ((totalWidth + ellipsisWidth) > maxWidth) {\r\n                                if (lineInfo.textChunks.length == 1) {\r\n                                    this.textVisible = false;\r\n                                }\r\n                                else {\r\n                                    lineInfo.width += ellipsisWidth;\r\n                                    lineInfo.left += ellipsisMetrics.actualBoundingBoxLeft;\r\n                                    lineInfo.right += ellipsisMetrics.actualBoundingBoxRight;\r\n                                    lineInfo.textChunks.push({\r\n                                        style: currentStyle,\r\n                                        fill: currentFill,\r\n                                        text: ellipsis,\r\n                                        width: ellipsisWidth,\r\n                                        height: chunkHeight + ellipsisMetrics.actualBoundingBoxDescent,\r\n                                        left: ellipsisMetrics.actualBoundingBoxLeft,\r\n                                        right: ellipsisMetrics.actualBoundingBoxRight,\r\n                                        ascent: ellipsisMetrics.actualBoundingBoxAscent,\r\n                                        offsetX: 0,\r\n                                        offsetY: chunkHeight,\r\n                                        textDecoration: undefined\r\n                                    });\r\n                                }\r\n                                break;\r\n                            }\r\n                        }\r\n                        lineInfo.width += chunkWidth;\r\n                        lineInfo.left += metrics.actualBoundingBoxLeft;\r\n                        lineInfo.right += metrics.actualBoundingBoxRight;\r\n                        lineInfo.textChunks.push({\r\n                            style: currentStyle,\r\n                            fill: currentFill,\r\n                            text: char,\r\n                            width: chunkWidth,\r\n                            height: chunkHeight + metrics.actualBoundingBoxDescent,\r\n                            left: metrics.actualBoundingBoxLeft,\r\n                            right: metrics.actualBoundingBoxRight,\r\n                            ascent: metrics.actualBoundingBoxAscent,\r\n                            offsetX: 0,\r\n                            offsetY: chunkHeight,\r\n                            textDecoration: undefined\r\n                        });\r\n                        if (rtl) {\r\n                            // @todo still needed?\r\n                            //break;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            if (this.style.lineHeight instanceof _util_Percent__WEBPACK_IMPORTED_MODULE_10__.Percent) {\r\n                lineInfo.height *= this.style.lineHeight.value;\r\n            }\r\n            else {\r\n                lineInfo.height *= this.style.lineHeight || 1.2;\r\n            }\r\n            this._textInfo.push(lineInfo);\r\n            //lineInfo.offsetY += lineInfo.ascent;\r\n            offsetY += lineInfo.height;\r\n        });\r\n        if (!styleRestored) {\r\n            context.restore();\r\n            ghostContext.restore();\r\n        }\r\n        if (oversizedBehavior == \"hide\" && (totalWidth > maxWidth)) {\r\n            this.textVisible = false;\r\n        }\r\n        // Adjust chunk internal offsets\r\n        _util_Array__WEBPACK_IMPORTED_MODULE_2__.each(this._textInfo, (lineInfo) => {\r\n            _util_Array__WEBPACK_IMPORTED_MODULE_2__.each(lineInfo.textChunks, (chunk) => {\r\n                chunk.offsetY += Math.round((lineInfo.height - chunk.height + (lineInfo.ascent - chunk.ascent)) / 2);\r\n            });\r\n        });\r\n        context.restore();\r\n        ghostContext.restore();\r\n        return {\r\n            left: 0,\r\n            top: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n        };\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass CanvasImage extends CanvasDisplayObject {\r\n    constructor(renderer, image) {\r\n        super(renderer);\r\n        Object.defineProperty(this, \"width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"image\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"tainted\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowColor\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowBlur\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOffsetX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOffsetY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOpacity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_imageMask\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.image = image;\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        if (this._imageMask) {\r\n            clearCanvas(this._imageMask);\r\n        }\r\n    }\r\n    getLocalBounds() {\r\n        if (!this._localBounds) {\r\n            let w = 0;\r\n            let h = 0;\r\n            if (this.width) {\r\n                w = this.width;\r\n            }\r\n            if (this.height) {\r\n                h = this.height;\r\n            }\r\n            this._localBounds = {\r\n                left: 0,\r\n                top: 0,\r\n                right: w,\r\n                bottom: h\r\n            };\r\n            this._addBounds(this._localBounds);\r\n        }\r\n        return this._localBounds;\r\n    }\r\n    _render(status, targetGhostLayer = 0) {\r\n        super._render(status);\r\n        if (this.image) {\r\n            if (this.tainted === undefined) {\r\n                this.tainted = isTainted(this.image);\r\n                status.layer.tainted = true;\r\n            }\r\n            if (this.tainted && this._renderer._omitTainted) {\r\n                return;\r\n            }\r\n            const ghostOnly = this._ghostOnly(targetGhostLayer);\r\n            const drawGhost = this._drawGhost(status, targetGhostLayer);\r\n            if (status.layer.dirty && !ghostOnly) {\r\n                if (this.shadowColor) {\r\n                    status.layer.context.shadowColor = this.shadowColor.toCSS(this.shadowOpacity || 1);\r\n                }\r\n                if (this.shadowBlur) {\r\n                    status.layer.context.shadowBlur = this.shadowBlur;\r\n                }\r\n                if (this.shadowOffsetX) {\r\n                    status.layer.context.shadowOffsetX = this.shadowOffsetX;\r\n                }\r\n                if (this.shadowOffsetY) {\r\n                    status.layer.context.shadowOffsetY = this.shadowOffsetY;\r\n                }\r\n                // TODO should this round ?\r\n                const width = this.width || this.image.naturalWidth;\r\n                const height = this.height || this.image.naturalHeight;\r\n                status.layer.context.drawImage(this.image, 0, 0, width, height);\r\n            }\r\n            if (this.interactive && this._isInteractive(status) && drawGhost) {\r\n                const mask = this._getMask(this.image);\r\n                this._renderer._ghostLayer.context.drawImage(mask, 0, 0);\r\n            }\r\n        }\r\n    }\r\n    clear() {\r\n        super.clear();\r\n        this.image = undefined;\r\n        this._imageMask = undefined;\r\n    }\r\n    _getMask(image) {\r\n        if (this._imageMask === undefined) {\r\n            // TODO should this round ?\r\n            const width = this.width || image.naturalWidth;\r\n            const height = this.height || image.naturalHeight;\r\n            // We need to create a second canvas because destination-in clears out the entire canvas\r\n            const canvas = document.createElement(\"canvas\");\r\n            canvas.width = width;\r\n            canvas.height = height;\r\n            const context = canvas.getContext(\"2d\");\r\n            context.imageSmoothingEnabled = false;\r\n            context.fillStyle = this._getColorId();\r\n            context.fillRect(0, 0, width, height);\r\n            if (!isTainted(image)) {\r\n                context.globalCompositeOperation = \"destination-in\";\r\n                context.drawImage(image, 0, 0, width, height);\r\n            }\r\n            this._imageMask = canvas;\r\n        }\r\n        return this._imageMask;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass CanvasRendererEvent {\r\n    constructor(event, originalPoint, point, bbox) {\r\n        Object.defineProperty(this, \"event\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: event\r\n        });\r\n        Object.defineProperty(this, \"originalPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: originalPoint\r\n        });\r\n        Object.defineProperty(this, \"point\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: point\r\n        });\r\n        Object.defineProperty(this, \"bbox\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: bbox\r\n        });\r\n        Object.defineProperty(this, \"id\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"simulated\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"native\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        if (_util_Utils__WEBPACK_IMPORTED_MODULE_1__.supports(\"touchevents\") && event instanceof Touch) {\r\n            this.id = event.identifier;\r\n        }\r\n        else {\r\n            this.id = null;\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass CanvasRenderer extends _util_Disposer__WEBPACK_IMPORTED_MODULE_3__.ArrayDisposer {\r\n    constructor(resolution) {\r\n        super();\r\n        Object.defineProperty(this, \"view\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: document.createElement(\"div\")\r\n        });\r\n        Object.defineProperty(this, \"_layerDom\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: document.createElement(\"div\")\r\n        });\r\n        Object.defineProperty(this, \"layers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_dirtyLayers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"defaultLayer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.getLayer(0)\r\n        });\r\n        Object.defineProperty(this, \"_ghostLayer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new GhostLayer()\r\n        });\r\n        Object.defineProperty(this, \"_deferredGhostLayers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_patternCanvas\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: document.createElement(\"canvas\")\r\n        });\r\n        Object.defineProperty(this, \"_patternContext\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._patternCanvas.getContext(\"2d\")\r\n        });\r\n        Object.defineProperty(this, \"_realWidth\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_realHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_calculatedWidth\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_calculatedHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"resolution\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"interactionsEnabled\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"_listeners\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_colorId\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_colorMap\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_forceInteractive\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_omitTainted\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        // TODO this should store the Id as well\r\n        Object.defineProperty(this, \"_hovering\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Set()\r\n        });\r\n        Object.defineProperty(this, \"_dragging\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_mousedown\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_lastPointerMoveEvent\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"tapToActivate\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"tapToActivateTimeout\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 3000\r\n        });\r\n        Object.defineProperty(this, \"_touchActive\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_touchActiveTimeout\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        if (resolution == null) {\r\n            this.resolution = window.devicePixelRatio;\r\n        }\r\n        else {\r\n            this.resolution = resolution;\r\n        }\r\n        this.view.style.position = \"absolute\";\r\n        this.view.setAttribute(\"aria-hidden\", \"true\");\r\n        this.view.appendChild(this._layerDom);\r\n        this._disposers.push(new _util_Disposer__WEBPACK_IMPORTED_MODULE_3__.Disposer(() => {\r\n            _util_Object__WEBPACK_IMPORTED_MODULE_11__.each(this._events, (_key, events) => {\r\n                events.disposer.dispose();\r\n            });\r\n            _util_Array__WEBPACK_IMPORTED_MODULE_2__.each(this.layers, (layer) => {\r\n                clearCanvas(layer.view);\r\n                if (layer.exportableView) {\r\n                    clearCanvas(layer.exportableView);\r\n                }\r\n            });\r\n            clearCanvas(this._ghostLayer.view);\r\n            clearCanvas(this._patternCanvas);\r\n        }));\r\n        /*\r\n        this._disposers.push($utils.addEventListener(this._ghostLayer.view, \"click\", (originalEvent: MouseEvent) => {\r\n            const event = this.getEvent(originalEvent);\r\n            const target = this._getHitTarget(event.originalPoint, event.bbox);\r\n            console.debug(target);\r\n        }));\r\n        */\r\n        // Monitor for possible pixel ratio changes (when page is zoomed)\r\n        this._disposers.push(_util_Utils__WEBPACK_IMPORTED_MODULE_1__.onZoom(() => {\r\n            if (resolution == null) {\r\n                this.resolution = window.devicePixelRatio;\r\n            }\r\n        }));\r\n        // We need this in order top prevent default touch gestures when dragging\r\n        // draggable elements\r\n        if (_util_Utils__WEBPACK_IMPORTED_MODULE_1__.supports(\"touchevents\")) {\r\n            const listener = (ev) => {\r\n                if (this._dragging.length !== 0) {\r\n                    _util_Array__WEBPACK_IMPORTED_MODULE_2__.eachContinue(this._dragging, (item) => {\r\n                        if (item.value.shouldCancelTouch()) {\r\n                            ev.preventDefault();\r\n                            return false;\r\n                        }\r\n                        return true;\r\n                    });\r\n                }\r\n                // If touch down happends, delay touch out\r\n                if (this._touchActiveTimeout) {\r\n                    this._delayTouchDeactivate();\r\n                }\r\n            };\r\n            this._disposers.push(_util_Utils__WEBPACK_IMPORTED_MODULE_1__.addEventListener(window, \"touchstart\", listener, { passive: false }));\r\n            this._disposers.push(_util_Utils__WEBPACK_IMPORTED_MODULE_1__.addEventListener(this.view, \"touchstart\", listener, { passive: false }));\r\n            this._disposers.push(_util_Utils__WEBPACK_IMPORTED_MODULE_1__.addEventListener(this.view, \"touchmove\", () => {\r\n                // If touch is moving, delay touch out\r\n                if (this._touchActiveTimeout) {\r\n                    this._delayTouchDeactivate();\r\n                }\r\n            }, { passive: true }));\r\n            this._disposers.push(_util_Utils__WEBPACK_IMPORTED_MODULE_1__.addEventListener(window, \"click\", (_ev) => {\r\n                this._touchActive = false;\r\n            }, { passive: true }));\r\n            this._disposers.push(_util_Utils__WEBPACK_IMPORTED_MODULE_1__.addEventListener(this.view, \"click\", (_ev) => {\r\n                window.setTimeout(() => {\r\n                    this._touchActive = true;\r\n                    this._delayTouchDeactivate();\r\n                }, 100);\r\n            }, { passive: true }));\r\n        }\r\n        // Prevent scrolling of the window when hovering on \"wheelable\" object\r\n        if (_util_Utils__WEBPACK_IMPORTED_MODULE_1__.supports(\"wheelevents\")) {\r\n            this._disposers.push(_util_Utils__WEBPACK_IMPORTED_MODULE_1__.addEventListener(this.view, \"wheel\", (ev) => {\r\n                let prevent = false;\r\n                this._hovering.forEach((obj) => {\r\n                    if (obj.wheelable) {\r\n                        prevent = true;\r\n                        return false;\r\n                    }\r\n                });\r\n                if (prevent) {\r\n                    ev.preventDefault();\r\n                }\r\n            }, { passive: false }));\r\n        }\r\n    }\r\n    /*protected _mouseMoveThrottler: Throttler = new Throttler(() => {\r\n        this._dispatchGlobalMousemove(this._lastPointerMoveEvent.event, this._lastPointerMoveEvent.native);\r\n    });\r\n    */\r\n    resetImageArray() {\r\n        this._ghostLayer.imageArray = undefined;\r\n    }\r\n    _delayTouchDeactivate() {\r\n        if (this._touchActiveTimeout) {\r\n            clearTimeout(this._touchActiveTimeout);\r\n        }\r\n        if (this.tapToActivateTimeout > 0) {\r\n            this._touchActiveTimeout = window.setTimeout(() => {\r\n                this._touchActive = false;\r\n            }, this.tapToActivateTimeout);\r\n        }\r\n    }\r\n    get debugGhostView() {\r\n        return !!this._ghostLayer.view.parentNode;\r\n    }\r\n    set debugGhostView(value) {\r\n        if (value) {\r\n            if (!this._ghostLayer.view.parentNode) {\r\n                this.view.appendChild(this._ghostLayer.view);\r\n            }\r\n        }\r\n        else {\r\n            if (this._ghostLayer.view.parentNode) {\r\n                this._ghostLayer.view.parentNode.removeChild(this._ghostLayer.view);\r\n            }\r\n        }\r\n    }\r\n    createLinearGradient(x1, y1, x2, y2) {\r\n        return this.defaultLayer.context.createLinearGradient(x1, y1, x2, y2);\r\n    }\r\n    createRadialGradient(x1, y1, radius1, x2, y2, radius2) {\r\n        return this.defaultLayer.context.createRadialGradient(x1, y1, radius1, x2, y2, radius2);\r\n    }\r\n    createPattern(graphics, background, repetition, width, height) {\r\n        // const patternCanvas = document.createElement(\"canvas\");\r\n        // const patternContext = patternCanvas.getContext(\"2d\")!;\r\n        // patternCanvas.width = width;\r\n        // patternCanvas.height = height;\r\n        // if (fill) {\r\n        // \tpatternContext.fillStyle = fill.toCSS();\r\n        // \tpatternContext.fillRect(0, 0, patternCanvas.width, patternCanvas.height);\r\n        // }\r\n        // const layer = {\r\n        // \tview: patternCanvas,\r\n        // \tcontext: patternContext,\r\n        // \tvisible: true,\r\n        // \torder: 0,\r\n        // \twidth: width,\r\n        // \theight: height,\r\n        // \tdirty: true\r\n        // };\r\n        // // patternContext.arc(0, 0, 50, 0, .5 * Math.PI);\r\n        // // patternContext.stroke();\r\n        // image.targetLayer = layer;\r\n        // image.render(layer);\r\n        //this._layerDom.appendChild(patternCanvas);\r\n        this._patternCanvas.width = width;\r\n        this._patternCanvas.height = height;\r\n        this._patternContext.clearRect(0, 0, width, height);\r\n        // patternCanvas.style.width = width * this.resolution + \"px\";\r\n        // patternCanvas.style.height = height * this.resolution + \"px\";\r\n        background.renderDetached(this._patternContext);\r\n        graphics.renderDetached(this._patternContext);\r\n        return this._patternContext.createPattern(this._patternCanvas, repetition);\r\n    }\r\n    makeContainer() {\r\n        return new CanvasContainer(this);\r\n    }\r\n    makeGraphics() {\r\n        return new CanvasGraphics(this);\r\n    }\r\n    makeText(text, style) {\r\n        return new CanvasText(this, text, style);\r\n    }\r\n    makeTextStyle() {\r\n        return new CanvasTextStyle();\r\n    }\r\n    makeRadialText(text, style) {\r\n        return new CanvasRadialText(this, text, style);\r\n    }\r\n    makePicture(image) {\r\n        return new CanvasImage(this, image);\r\n    }\r\n    resizeLayer(layer) {\r\n        layer.resize(this._calculatedWidth, this._calculatedHeight, this._calculatedWidth, this._calculatedHeight, this.resolution);\r\n    }\r\n    resizeGhost() {\r\n        this._ghostLayer.resize(this._calculatedWidth, this._calculatedHeight, this._calculatedWidth, this._calculatedHeight, this.resolution);\r\n    }\r\n    resize(realWidth, realHeight, calculatedWidth, calculatedHeight) {\r\n        this._realWidth = realWidth;\r\n        this._realHeight = realHeight;\r\n        this._calculatedWidth = calculatedWidth;\r\n        this._calculatedHeight = calculatedHeight;\r\n        _util_Array__WEBPACK_IMPORTED_MODULE_2__.each(this.layers, (layer) => {\r\n            if (layer) {\r\n                layer.dirty = true;\r\n                this.resizeLayer(layer);\r\n            }\r\n        });\r\n        this.resizeGhost();\r\n        this.view.style.width = calculatedWidth + \"px\";\r\n        this.view.style.height = calculatedHeight + \"px\";\r\n    }\r\n    createDetachedLayer(willReadFrequently = false) {\r\n        const view = document.createElement(\"canvas\");\r\n        const context = view.getContext(\"2d\", { willReadFrequently: willReadFrequently });\r\n        const layer = new CanvasLayer(view, context);\r\n        view.style.position = \"absolute\";\r\n        view.style.top = \"0px\";\r\n        view.style.left = \"0px\";\r\n        return layer;\r\n    }\r\n    getLayerByOrder(order) {\r\n        const layers = this.layers;\r\n        const length = layers.length;\r\n        for (let i = 0; i < length; i++) {\r\n            const layer = layers[i];\r\n            if (layer.order == order) {\r\n                return layer;\r\n            }\r\n        }\r\n    }\r\n    getLayer(order, visible = true) {\r\n        let existingLayer = this.getLayerByOrder(order);\r\n        if (existingLayer) {\r\n            return existingLayer;\r\n        }\r\n        const layer = this.createDetachedLayer(order == 99);\r\n        layer.order = order;\r\n        layer.visible = visible;\r\n        layer.view.className = \"am5-layer-\" + order;\r\n        if (layer.visible) {\r\n            this.resizeLayer(layer);\r\n        }\r\n        const layers = this.layers;\r\n        layers.push(layer);\r\n        layers.sort((a, b) => {\r\n            if (a.order > b.order) {\r\n                return 1;\r\n            }\r\n            else if (a.order < b.order) {\r\n                return -1;\r\n            }\r\n            else {\r\n                return 0;\r\n            }\r\n        });\r\n        const length = layers.length;\r\n        const layerIndex = _util_Array__WEBPACK_IMPORTED_MODULE_2__.indexOf(layers, layer);\r\n        let next;\r\n        for (let i = layerIndex + 1; i < length; i++) {\r\n            if (layers[i].visible) {\r\n                next = layers[i];\r\n                break;\r\n            }\r\n        }\r\n        if (layer.visible) {\r\n            if (next === undefined) {\r\n                this._layerDom.appendChild(layer.view);\r\n            }\r\n            else {\r\n                this._layerDom.insertBefore(layer.view, next.view);\r\n            }\r\n        }\r\n        return layer;\r\n    }\r\n    render(root) {\r\n        this._dirtyLayers.length = 0;\r\n        this._deferredGhostLayers = [];\r\n        _util_Array__WEBPACK_IMPORTED_MODULE_2__.each(this.layers, (layer) => {\r\n            if (layer) {\r\n                if (layer.dirty && layer.visible) {\r\n                    this._dirtyLayers.push(layer);\r\n                    layer.clear();\r\n                }\r\n            }\r\n        });\r\n        this._ghostLayer.clear();\r\n        root.render({\r\n            inactive: null,\r\n            layer: this.defaultLayer,\r\n        });\r\n        const deferredGhostLayers = this._deferredGhostLayers;\r\n        if (deferredGhostLayers.length) {\r\n            deferredGhostLayers.sort((a, b) => a - b);\r\n            _util_Array__WEBPACK_IMPORTED_MODULE_2__.each(deferredGhostLayers, (layerx) => {\r\n                root.render({\r\n                    inactive: null,\r\n                    layer: this.defaultLayer\r\n                }, layerx);\r\n            });\r\n        }\r\n        this._ghostLayer.context.restore();\r\n        //setTimeout(() => {\r\n        // Remove this after the Chrome bug is fixed:\r\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=1279394\r\n        _util_Array__WEBPACK_IMPORTED_MODULE_2__.each(this.layers, (layer) => {\r\n            if (layer) {\r\n                const context = layer.context;\r\n                context.beginPath();\r\n                context.moveTo(0, 0);\r\n                context.stroke();\r\n            }\r\n        });\r\n        _util_Array__WEBPACK_IMPORTED_MODULE_2__.each(this._dirtyLayers, (layer) => {\r\n            layer.context.restore();\r\n            layer.dirty = false;\r\n        });\r\n        //}, 100)\r\n        if (this._hovering.size && this._lastPointerMoveEvent) {\r\n            const { events, target, native } = this._lastPointerMoveEvent;\r\n            //this._mouseMoveThrottler.run();\r\n            _util_Array__WEBPACK_IMPORTED_MODULE_2__.each(events, (event) => {\r\n                this._dispatchGlobalMousemove(event, target, native);\r\n            });\r\n        }\r\n    }\r\n    paintId(obj) {\r\n        const id = distributeId(++this._colorId);\r\n        const color = _util_Color__WEBPACK_IMPORTED_MODULE_7__.Color.fromHex(id).toCSS();\r\n        this._colorMap[color] = obj;\r\n        return color;\r\n    }\r\n    _removeObject(obj) {\r\n        if (obj._colorId !== undefined) {\r\n            delete this._colorMap[obj._colorId];\r\n        }\r\n    }\r\n    // protected _identifyObjectByColor(colorId: number): CanvasDisplayObject | undefined {\r\n    // \treturn this._colorMap[colorId];\r\n    // }\r\n    _adjustBoundingBox(bbox) {\r\n        const margin = this._ghostLayer.margin;\r\n        return new DOMRect(-margin.left, -margin.top, bbox.width + margin.left + margin.right, bbox.height + margin.top + margin.bottom);\r\n    }\r\n    getEvent(originalEvent, adjustPoint = true) {\r\n        const bbox = this.view.getBoundingClientRect();\r\n        const x = originalEvent.clientX || 0;\r\n        const y = originalEvent.clientY || 0;\r\n        const widthScale = this._calculatedWidth / this._realWidth;\r\n        const heightScale = this._calculatedHeight / this._realHeight;\r\n        const originalPoint = {\r\n            x: x - bbox.left,\r\n            y: y - bbox.top,\r\n        };\r\n        const point = {\r\n            x: (x - (adjustPoint ? bbox.left : 0)) * widthScale,\r\n            y: (y - (adjustPoint ? bbox.top : 0)) * heightScale,\r\n        };\r\n        return new CanvasRendererEvent(originalEvent, originalPoint, point, this._adjustBoundingBox(bbox));\r\n    }\r\n    _getHitTarget(point, bbox, target) {\r\n        if (bbox.width === 0 || bbox.height === 0 || point.x < bbox.left || point.x > bbox.right || point.y < bbox.top || point.y > bbox.bottom) {\r\n            return;\r\n        }\r\n        if (!target || !this._layerDom.contains(target)) {\r\n            return;\r\n        }\r\n        const pixel = this._ghostLayer.getImageData(point, bbox);\r\n        if (pixel.data[0] === 0 && pixel.data[1] === 0 && pixel.data[2] === 0) {\r\n            return false;\r\n        }\r\n        const colorId = _util_Color__WEBPACK_IMPORTED_MODULE_7__.Color.fromRGB(pixel.data[0], pixel.data[1], pixel.data[2]).toCSS();\r\n        const hit = this._colorMap[colorId];\r\n        return hit;\r\n    }\r\n    getObjectAtPoint(point) {\r\n        const data = this._ghostLayer.getImageArray(point);\r\n        if (data[0] === 0 && data[1] === 0 && data[2] === 0) {\r\n            return undefined;\r\n        }\r\n        const colorId = _util_Color__WEBPACK_IMPORTED_MODULE_7__.Color.fromRGB(data[0], data[1], data[2]).toCSS();\r\n        const hit = this._colorMap[colorId];\r\n        return hit;\r\n    }\r\n    _withEvents(key, f) {\r\n        const events = this._events[key];\r\n        if (events !== undefined) {\r\n            events.dispatching = true;\r\n            try {\r\n                f(events);\r\n            }\r\n            finally {\r\n                events.dispatching = false;\r\n                if (events.cleanup) {\r\n                    events.cleanup = false;\r\n                    _util_Array__WEBPACK_IMPORTED_MODULE_2__.keepIf(events.callbacks, (callback) => {\r\n                        return !callback.disposed;\r\n                    });\r\n                    if (events.callbacks.length === 0) {\r\n                        events.disposer.dispose();\r\n                        delete this._events[key];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _dispatchEventAll(key, event) {\r\n        if (!this.interactionsEnabled) {\r\n            return;\r\n        }\r\n        this._withEvents(key, (events) => {\r\n            _util_Array__WEBPACK_IMPORTED_MODULE_2__.each(events.callbacks, (callback) => {\r\n                if (!callback.disposed) {\r\n                    callback.callback.call(callback.context, event);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    _dispatchEvent(key, target, event) {\r\n        if (!this.interactionsEnabled) {\r\n            return false;\r\n        }\r\n        let dispatched = false;\r\n        this._withEvents(key, (events) => {\r\n            _util_Array__WEBPACK_IMPORTED_MODULE_2__.each(events.callbacks, (callback) => {\r\n                if (!callback.disposed && callback.object === target) {\r\n                    callback.callback.call(callback.context, event);\r\n                    dispatched = true;\r\n                }\r\n            });\r\n        });\r\n        return dispatched;\r\n    }\r\n    _dispatchMousedown(originalEvent, originalTarget) {\r\n        const button = originalEvent.button;\r\n        if (button != 0 && button != 2 && button != 1 && button !== undefined) {\r\n            // Ignore non-primary mouse buttons\r\n            return;\r\n        }\r\n        const event = this.getEvent(originalEvent);\r\n        const target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\r\n        if (target) {\r\n            const id = event.id;\r\n            let dragged = false;\r\n            eachTargets(target, (obj) => {\r\n                const info = { id: id, value: obj };\r\n                this._mousedown.push(info);\r\n                if (!dragged && this._dispatchEvent(\"pointerdown\", obj, event)) {\r\n                    // Only dispatch the first element which matches\r\n                    dragged = true;\r\n                    const has = this._dragging.some((x) => {\r\n                        return x.value === obj && x.id === id;\r\n                    });\r\n                    if (!has) {\r\n                        this._dragging.push(info);\r\n                    }\r\n                }\r\n                return true;\r\n            });\r\n        }\r\n    }\r\n    _dispatchGlobalMousemove(originalEvent, originalTarget, native) {\r\n        const event = this.getEvent(originalEvent);\r\n        const target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\r\n        event.native = native;\r\n        if (target) {\r\n            this._hovering.forEach((obj) => {\r\n                if (!obj.contains(target)) {\r\n                    this._hovering.delete(obj);\r\n                    if (obj.cursorOverStyle) {\r\n                        _util_Utils__WEBPACK_IMPORTED_MODULE_1__.setStyle(document.body, \"cursor\", obj._replacedCursorStyle);\r\n                    }\r\n                    this._dispatchEvent(\"pointerout\", obj, event);\r\n                }\r\n            });\r\n            if (event.native) {\r\n                eachTargets(target, (obj) => {\r\n                    if (!this._hovering.has(obj)) {\r\n                        this._hovering.add(obj);\r\n                        if (obj.cursorOverStyle) {\r\n                            obj._replacedCursorStyle = _util_Utils__WEBPACK_IMPORTED_MODULE_1__.getStyle(document.body, \"cursor\");\r\n                            _util_Utils__WEBPACK_IMPORTED_MODULE_1__.setStyle(document.body, \"cursor\", obj.cursorOverStyle);\r\n                        }\r\n                        this._dispatchEvent(\"pointerover\", obj, event);\r\n                    }\r\n                    return true;\r\n                });\r\n            }\r\n            //} else if (target === false) {\r\n        }\r\n        else {\r\n            this._hovering.forEach((obj) => {\r\n                if (obj.cursorOverStyle) {\r\n                    _util_Utils__WEBPACK_IMPORTED_MODULE_1__.setStyle(document.body, \"cursor\", obj._replacedCursorStyle);\r\n                }\r\n                this._dispatchEvent(\"pointerout\", obj, event);\r\n            });\r\n            this._hovering.clear();\r\n        }\r\n        this._dispatchEventAll(\"globalpointermove\", event);\r\n    }\r\n    removeHovering(graphics) {\r\n        this._hovering.delete(graphics);\r\n        if (graphics.cursorOverStyle) {\r\n            _util_Utils__WEBPACK_IMPORTED_MODULE_1__.setStyle(document.body, \"cursor\", graphics._replacedCursorStyle);\r\n        }\r\n    }\r\n    _dispatchGlobalMouseup(originalEvent, native) {\r\n        const event = this.getEvent(originalEvent);\r\n        event.native = native;\r\n        //const target = this._getHitTarget(event.originalPoint);\r\n        this._dispatchEventAll(\"globalpointerup\", event);\r\n    }\r\n    _dispatchDragMove(originalEvent) {\r\n        if (this._dragging.length !== 0) {\r\n            const event = this.getEvent(originalEvent);\r\n            const id = event.id;\r\n            this._dragging.forEach((obj) => {\r\n                if (obj.id === id) {\r\n                    this._dispatchEvent(\"pointermove\", obj.value, event);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _dispatchDragEnd(originalEvent, originalTarget) {\r\n        const button = originalEvent.button;\r\n        let clickevent;\r\n        if (button == 0 || button === undefined) {\r\n            clickevent = \"click\";\r\n        }\r\n        else if (button == 2) {\r\n            clickevent = \"rightclick\";\r\n        }\r\n        else if (button == 1) {\r\n            clickevent = \"middleclick\";\r\n        }\r\n        else {\r\n            // Ignore non-primary mouse buttons\r\n            return;\r\n        }\r\n        const event = this.getEvent(originalEvent);\r\n        const id = event.id;\r\n        if (this._mousedown.length !== 0) {\r\n            const target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\r\n            if (target) {\r\n                this._mousedown.forEach((obj) => {\r\n                    if (obj.id === id && obj.value.contains(target)) {\r\n                        this._dispatchEvent(clickevent, obj.value, event);\r\n                    }\r\n                });\r\n            }\r\n            this._mousedown.length = 0;\r\n        }\r\n        if (this._dragging.length !== 0) {\r\n            this._dragging.forEach((obj) => {\r\n                if (obj.id === id) {\r\n                    this._dispatchEvent(\"pointerup\", obj.value, event);\r\n                }\r\n            });\r\n            this._dragging.length = 0;\r\n        }\r\n    }\r\n    _dispatchDoubleClick(originalEvent, originalTarget) {\r\n        const event = this.getEvent(originalEvent);\r\n        const target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\r\n        if (target) {\r\n            eachTargets(target, (obj) => {\r\n                if (this._dispatchEvent(\"dblclick\", obj, event)) {\r\n                    return false;\r\n                }\r\n                else {\r\n                    return true;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _dispatchWheel(originalEvent, originalTarget) {\r\n        const event = this.getEvent(originalEvent);\r\n        const target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\r\n        if (target) {\r\n            eachTargets(target, (obj) => {\r\n                if (this._dispatchEvent(\"wheel\", obj, event)) {\r\n                    return false;\r\n                }\r\n                else {\r\n                    return true;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _makeSharedEvent(key, f) {\r\n        if (this._listeners[key] === undefined) {\r\n            const listener = f();\r\n            this._listeners[key] = new _util_Disposer__WEBPACK_IMPORTED_MODULE_3__.CounterDisposer(() => {\r\n                delete this._listeners[key];\r\n                listener.dispose();\r\n            });\r\n        }\r\n        return this._listeners[key].increment();\r\n    }\r\n    _onPointerEvent(name, f) {\r\n        let native = false;\r\n        let timer = null;\r\n        function clear() {\r\n            timer = null;\r\n            native = false;\r\n        }\r\n        return new _util_Disposer__WEBPACK_IMPORTED_MODULE_3__.MultiDisposer([\r\n            new _util_Disposer__WEBPACK_IMPORTED_MODULE_3__.Disposer(() => {\r\n                if (timer !== null) {\r\n                    clearTimeout(timer);\r\n                }\r\n                clear();\r\n            }),\r\n            _util_Utils__WEBPACK_IMPORTED_MODULE_1__.addEventListener(this.view, _util_Utils__WEBPACK_IMPORTED_MODULE_1__.getRendererEvent(name), (_) => {\r\n                native = true;\r\n                if (timer !== null) {\r\n                    clearTimeout(timer);\r\n                }\r\n                timer = window.setTimeout(clear, 0);\r\n            }),\r\n            onPointerEvent(window, name, (ev, target) => {\r\n                if (timer !== null) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                f(ev, target, native);\r\n                native = false;\r\n            }),\r\n        ]);\r\n    }\r\n    // This ensures that only a single DOM event is added (e.g. only a single mousemove event listener)\r\n    _initEvent(key) {\r\n        switch (key) {\r\n            case \"globalpointermove\":\r\n            case \"pointerover\":\r\n            case \"pointerout\":\r\n                return this._makeSharedEvent(\"pointermove\", () => {\r\n                    const listener = (events, target, native) => {\r\n                        this._lastPointerMoveEvent = { events, target, native };\r\n                        _util_Array__WEBPACK_IMPORTED_MODULE_2__.each(events, (event) => {\r\n                            this._dispatchGlobalMousemove(event, target, native);\r\n                        });\r\n                    };\r\n                    return new _util_Disposer__WEBPACK_IMPORTED_MODULE_3__.MultiDisposer([\r\n                        this._onPointerEvent(\"pointerdown\", listener),\r\n                        this._onPointerEvent(\"pointermove\", listener),\r\n                    ]);\r\n                });\r\n            case \"globalpointerup\":\r\n                return this._makeSharedEvent(\"pointerup\", () => {\r\n                    const mouseup = this._onPointerEvent(\"pointerup\", (events, target, native) => {\r\n                        _util_Array__WEBPACK_IMPORTED_MODULE_2__.each(events, (event) => {\r\n                            this._dispatchGlobalMouseup(event, native);\r\n                        });\r\n                        this._lastPointerMoveEvent = { events, target, native };\r\n                    });\r\n                    const pointercancel = this._onPointerEvent(\"pointercancel\", (events, target, native) => {\r\n                        _util_Array__WEBPACK_IMPORTED_MODULE_2__.each(events, (event) => {\r\n                            this._dispatchGlobalMouseup(event, native);\r\n                        });\r\n                        this._lastPointerMoveEvent = { events, target, native };\r\n                    });\r\n                    return new _util_Disposer__WEBPACK_IMPORTED_MODULE_3__.Disposer(() => {\r\n                        mouseup.dispose();\r\n                        pointercancel.dispose();\r\n                    });\r\n                });\r\n            case \"click\":\r\n            case \"rightclick\":\r\n            case \"middleclick\":\r\n            case \"pointerdown\":\r\n            /*\r\n                return this._makeSharedEvent(\"pointerdown\", () => {\r\n                    return this._onPointerEvent(\"pointerdown\", (event, target, native) => {\r\n                        this._lastPointerMoveEvent = { event, target, native };\r\n                        this._dispatchMousedown(event)\r\n                    });\r\n                });\r\n            */\r\n            case \"pointermove\":\r\n            case \"pointerup\":\r\n                return this._makeSharedEvent(\"pointerdown\", () => {\r\n                    //const throttler = new Throttler();\r\n                    const mousedown = this._onPointerEvent(\"pointerdown\", (events, target) => {\r\n                        _util_Array__WEBPACK_IMPORTED_MODULE_2__.each(events, (ev) => {\r\n                            this._dispatchMousedown(ev, target);\r\n                        });\r\n                    });\r\n                    // TODO handle throttling properly for multitouch\r\n                    const mousemove = this._onPointerEvent(\"pointermove\", (ev) => {\r\n                        //throttler.throttle(() => {\r\n                        _util_Array__WEBPACK_IMPORTED_MODULE_2__.each(ev, (ev) => {\r\n                            this._dispatchDragMove(ev);\r\n                        });\r\n                        //});\r\n                    });\r\n                    const mouseup = this._onPointerEvent(\"pointerup\", (ev, target) => {\r\n                        _util_Array__WEBPACK_IMPORTED_MODULE_2__.each(ev, (ev) => {\r\n                            this._dispatchDragEnd(ev, target);\r\n                        });\r\n                    });\r\n                    const pointercancel = this._onPointerEvent(\"pointercancel\", (ev, target) => {\r\n                        _util_Array__WEBPACK_IMPORTED_MODULE_2__.each(ev, (ev) => {\r\n                            this._dispatchDragEnd(ev, target);\r\n                        });\r\n                    });\r\n                    return new _util_Disposer__WEBPACK_IMPORTED_MODULE_3__.Disposer(() => {\r\n                        mousedown.dispose();\r\n                        mousemove.dispose();\r\n                        mouseup.dispose();\r\n                        pointercancel.dispose();\r\n                    });\r\n                });\r\n            case \"dblclick\":\r\n                return this._makeSharedEvent(\"dblclick\", () => {\r\n                    return this._onPointerEvent(\"dblclick\", (ev, target) => {\r\n                        _util_Array__WEBPACK_IMPORTED_MODULE_2__.each(ev, (ev) => {\r\n                            this._dispatchDoubleClick(ev, target);\r\n                        });\r\n                    });\r\n                });\r\n            case \"wheel\":\r\n                return this._makeSharedEvent(\"wheel\", () => {\r\n                    return _util_Utils__WEBPACK_IMPORTED_MODULE_1__.addEventListener(this.view, _util_Utils__WEBPACK_IMPORTED_MODULE_1__.getRendererEvent(\"wheel\"), (event) => {\r\n                        this._dispatchWheel(event, _util_Utils__WEBPACK_IMPORTED_MODULE_1__.getEventTarget(event));\r\n                    }, { passive: false });\r\n                });\r\n        }\r\n    }\r\n    _addEvent(object, key, callback, context) {\r\n        let events = this._events[key];\r\n        if (events === undefined) {\r\n            events = this._events[key] = {\r\n                disposer: this._initEvent(key),\r\n                callbacks: [],\r\n                dispatching: false,\r\n                cleanup: false,\r\n            };\r\n        }\r\n        const listener = { object, context, callback, disposed: false };\r\n        events.callbacks.push(listener);\r\n        return new _util_Disposer__WEBPACK_IMPORTED_MODULE_3__.Disposer(() => {\r\n            listener.disposed = true;\r\n            if (events.dispatching) {\r\n                events.cleanup = true;\r\n            }\r\n            else {\r\n                _util_Array__WEBPACK_IMPORTED_MODULE_2__.removeFirst(events.callbacks, listener);\r\n                if (events.callbacks.length === 0) {\r\n                    events.disposer.dispose();\r\n                    delete this._events[key];\r\n                }\r\n            }\r\n        });\r\n    }\r\n    getCanvas(root, options) {\r\n        // Make sure everything is rendered\r\n        this.render(root);\r\n        if (!options) {\r\n            options = {};\r\n        }\r\n        let scale = this.resolution;\r\n        let canvasWidth = Math.floor(this._calculatedWidth * this.resolution);\r\n        let canvasHeight = Math.floor(this._calculatedHeight * this.resolution);\r\n        // Check if we need to scale\r\n        if (options.minWidth && (options.minWidth > canvasWidth)) {\r\n            let minScale = options.minWidth / canvasWidth;\r\n            if (minScale > scale) {\r\n                scale = minScale * this.resolution;\r\n            }\r\n        }\r\n        if (options.minHeight && (options.minHeight > canvasHeight)) {\r\n            let minScale = options.minHeight / canvasHeight;\r\n            if (minScale > scale) {\r\n                scale = minScale * this.resolution;\r\n            }\r\n        }\r\n        if (options.maxWidth && (options.maxWidth < canvasWidth)) {\r\n            let maxScale = options.maxWidth / canvasWidth;\r\n            if (maxScale < scale) {\r\n                scale = maxScale * this.resolution;\r\n            }\r\n        }\r\n        if (options.maxHeight && (options.maxHeight > canvasHeight)) {\r\n            let maxScale = options.maxHeight / canvasHeight;\r\n            if (maxScale < scale) {\r\n                scale = maxScale * this.resolution;\r\n            }\r\n        }\r\n        // Check if we need to compensate for pixel ratio\r\n        if (options.maintainPixelRatio) {\r\n            scale /= this.resolution;\r\n        }\r\n        // Init list canvases to remove from DOM after export\r\n        const canvases = [];\r\n        // Set up new canvas for export\r\n        let forceRender = false;\r\n        const canvas = document.createElement(\"canvas\");\r\n        if (scale != this.resolution) {\r\n            forceRender = true;\r\n            canvasWidth = canvasWidth * scale / this.resolution;\r\n            canvasHeight = canvasHeight * scale / this.resolution;\r\n        }\r\n        canvas.width = canvasWidth;\r\n        canvas.height = canvasHeight;\r\n        // Add to DOM so it inherits CSS\r\n        canvas.style.position = \"fixed\";\r\n        canvas.style.top = \"-10000px\";\r\n        this.view.appendChild(canvas);\r\n        canvases.push(canvas);\r\n        // Context\r\n        const context = canvas.getContext(\"2d\");\r\n        let width = 0;\r\n        let height = 0;\r\n        let needRerender = false;\r\n        _util_Array__WEBPACK_IMPORTED_MODULE_2__.each(this.layers, (layer) => {\r\n            if (layer && layer.visible) {\r\n                if (layer.tainted || forceRender) {\r\n                    needRerender = true;\r\n                    layer.exportableView = layer.view;\r\n                    layer.exportableContext = layer.context;\r\n                    layer.view = document.createElement(\"canvas\");\r\n                    // Add to DOM so it inherits CSS\r\n                    layer.view.style.position = \"fixed\";\r\n                    layer.view.style.top = \"-10000px\";\r\n                    this.view.appendChild(layer.view);\r\n                    canvases.push(layer.view);\r\n                    let extraX = 0;\r\n                    let extraY = 0;\r\n                    if (layer.margin) {\r\n                        extraX += layer.margin.left || 0 + layer.margin.right || 0;\r\n                        extraY += layer.margin.top || 0 + layer.margin.bottom || 0;\r\n                    }\r\n                    layer.view.width = canvasWidth + extraX;\r\n                    layer.view.height = canvasHeight + extraY;\r\n                    layer.context = layer.view.getContext(\"2d\");\r\n                    layer.dirty = true;\r\n                    layer.scale = scale;\r\n                }\r\n            }\r\n        });\r\n        if (needRerender) {\r\n            this._omitTainted = true;\r\n            this.render(root);\r\n            this._omitTainted = false;\r\n        }\r\n        _util_Array__WEBPACK_IMPORTED_MODULE_2__.each(this.layers, (layer) => {\r\n            if (layer && layer.visible) {\r\n                // Layer is fine. Just plop it into our target canvas\r\n                let x = 0;\r\n                let y = 0;\r\n                if (layer.margin) {\r\n                    x = -(layer.margin.left || 0) * this.resolution;\r\n                    y = -(layer.margin.top || 0) * this.resolution;\r\n                }\r\n                context.drawImage(layer.view, x, y);\r\n                // Restore layer original canvas\r\n                if (layer.exportableView) {\r\n                    layer.view = layer.exportableView;\r\n                    layer.exportableView = undefined;\r\n                }\r\n                if (layer.exportableContext) {\r\n                    layer.context = layer.exportableContext;\r\n                    layer.exportableContext = undefined;\r\n                }\r\n                if (width < layer.view.clientWidth) {\r\n                    width = layer.view.clientWidth;\r\n                }\r\n                if (height < layer.view.clientHeight) {\r\n                    height = layer.view.clientHeight;\r\n                }\r\n                layer.scale = undefined;\r\n            }\r\n        });\r\n        canvas.style.width = width + \"px\";\r\n        canvas.style.height = height + \"px\";\r\n        _util_Array__WEBPACK_IMPORTED_MODULE_2__.each(canvases, (canvas) => {\r\n            canvas.style.position = \"\";\r\n            canvas.style.top = \"\";\r\n            this.view.removeChild(canvas);\r\n        });\r\n        return canvas;\r\n    }\r\n}\r\nclass GhostLayer {\r\n    constructor() {\r\n        Object.defineProperty(this, \"view\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"context\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"margin\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {\r\n                left: 0,\r\n                right: 0,\r\n                top: 0,\r\n                bottom: 0,\r\n            }\r\n        });\r\n        Object.defineProperty(this, \"_resolution\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"imageArray\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.view = document.createElement(\"canvas\");\r\n        this.context = this.view.getContext(\"2d\", { alpha: false, willReadFrequently: true });\r\n        this.context.imageSmoothingEnabled = false;\r\n        this.view.style.position = \"absolute\";\r\n        this.view.style.top = \"0px\";\r\n        this.view.style.left = \"0px\";\r\n    }\r\n    resize(canvasWidth, canvasHeight, domWidth, domHeight, resolution) {\r\n        this._resolution = resolution;\r\n        canvasWidth += (this.margin.left + this.margin.right);\r\n        canvasHeight += (this.margin.top + this.margin.bottom);\r\n        // TODO this should take into account calculateSize\r\n        domWidth += (this.margin.left + this.margin.right);\r\n        domHeight += (this.margin.top + this.margin.bottom);\r\n        this.view.style.left = -this.margin.left + \"px\";\r\n        this.view.style.top = -this.margin.top + \"px\";\r\n        this._width = Math.floor(canvasWidth * resolution);\r\n        this._height = Math.floor(canvasHeight * resolution);\r\n        this.view.width = this._width;\r\n        this.view.style.width = domWidth + \"px\";\r\n        this.view.height = this._height;\r\n        this.view.style.height = domHeight + \"px\";\r\n    }\r\n    getImageData(point, bbox) {\r\n        return this.context.getImageData(\r\n        // TODO should this round ?\r\n        Math.round(((point.x - bbox.left) / bbox.width) * this._width), Math.round(((point.y - bbox.top) / bbox.height) * this._height), 1, 1);\r\n    }\r\n    getImageArray(point) {\r\n        if (!this.imageArray) {\r\n            this.imageArray = this.context.getImageData(0, 0, this._width, this._height).data;\r\n        }\r\n        const data = this.imageArray;\r\n        const x = Math.round(point.x * this._resolution);\r\n        const y = Math.round(point.y * this._resolution);\r\n        const i = (y * this._width + x) * 4;\r\n        return [data[i], data[i + 1], data[i + 2], data[i + 3]];\r\n    }\r\n    setMargin(layers) {\r\n        this.margin.left = 0;\r\n        this.margin.right = 0;\r\n        this.margin.top = 0;\r\n        this.margin.bottom = 0;\r\n        _util_Array__WEBPACK_IMPORTED_MODULE_2__.each(layers, (layer) => {\r\n            if (layer.margin) {\r\n                this.margin.left = Math.max(this.margin.left, layer.margin.left);\r\n                this.margin.right = Math.max(this.margin.right, layer.margin.right);\r\n                this.margin.top = Math.max(this.margin.top, layer.margin.top);\r\n                this.margin.bottom = Math.max(this.margin.bottom, layer.margin.bottom);\r\n            }\r\n        });\r\n    }\r\n    clear() {\r\n        this.context.save();\r\n        this.context.fillStyle = '#000';\r\n        this.context.fillRect(0, 0, this._width, this._height);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass CanvasLayer {\r\n    constructor(view, context) {\r\n        Object.defineProperty(this, \"view\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"context\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"tainted\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"margin\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"order\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"visible\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"scale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"dirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"exportableView\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"exportableContext\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        this.view = view;\r\n        this.context = context;\r\n    }\r\n    resize(canvasWidth, canvasHeight, domWidth, domHeight, resolution) {\r\n        // TODO should this take into account calculateSize ?\r\n        if (this.width != null) {\r\n            canvasWidth = this.width;\r\n            domWidth = this.width;\r\n        }\r\n        // TODO should this take into account calculateSize ?\r\n        if (this.height != null) {\r\n            canvasHeight = this.height;\r\n            domHeight = this.height;\r\n        }\r\n        if (this.margin) {\r\n            canvasWidth += (this.margin.left + this.margin.right);\r\n            canvasHeight += (this.margin.top + this.margin.bottom);\r\n            // TODO this should take into account calculateSize\r\n            domWidth += (this.margin.left + this.margin.right);\r\n            domHeight += (this.margin.top + this.margin.bottom);\r\n            this.view.style.left = -this.margin.left + \"px\";\r\n            this.view.style.top = -this.margin.top + \"px\";\r\n        }\r\n        else {\r\n            this.view.style.left = \"0px\";\r\n            this.view.style.top = \"0px\";\r\n        }\r\n        this._width = Math.floor(canvasWidth * resolution);\r\n        this._height = Math.floor(canvasHeight * resolution);\r\n        this.view.width = this._width;\r\n        this.view.style.width = domWidth + \"px\";\r\n        this.view.height = this._height;\r\n        this.view.style.height = domHeight + \"px\";\r\n    }\r\n    clear() {\r\n        this.context.save();\r\n        this.context.clearRect(0, 0, this._width, this._height);\r\n    }\r\n}\r\n//# sourceMappingURL=CanvasRenderer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/backend/CanvasRenderer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/backend/Renderer.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/core/render/backend/Renderer.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BlendMode: () => (/* binding */ BlendMode)\n/* harmony export */ });\n/**\r\n * From https://github.com/pixijs/pixi.js/blob/3dd0ff9a935f0bc13a09aefff9eb2872f02c51b9/packages/canvas/canvas-renderer/src/utils/mapCanvasBlendModesToPixi.ts#L13\r\n */\r\nvar BlendMode;\r\n(function (BlendMode) {\r\n    BlendMode[\"ADD\"] = \"lighter\";\r\n    BlendMode[\"COLOR\"] = \"color\";\r\n    BlendMode[\"COLOR_BURN\"] = \"color-burn\";\r\n    BlendMode[\"COLOR_DODGE\"] = \"color-dodge\";\r\n    BlendMode[\"DARKEN\"] = \"darken\";\r\n    BlendMode[\"DIFFERENCE\"] = \"difference\";\r\n    BlendMode[\"DST_OVER\"] = \"destination-over\";\r\n    BlendMode[\"EXCLUSION\"] = \"exclusion\";\r\n    BlendMode[\"HARD_LIGHT\"] = \"hard-light\";\r\n    BlendMode[\"HUE\"] = \"hue\";\r\n    BlendMode[\"LIGHTEN\"] = \"lighten\";\r\n    BlendMode[\"LUMINOSITY\"] = \"luminosity\";\r\n    BlendMode[\"MULTIPLY\"] = \"multiply\";\r\n    BlendMode[\"NORMAL\"] = \"source-over\";\r\n    BlendMode[\"OVERLAY\"] = \"overlay\";\r\n    BlendMode[\"SATURATION\"] = \"saturation\";\r\n    BlendMode[\"SCREEN\"] = \"screen\";\r\n    BlendMode[\"SOFT_LIGHT\"] = \"soft-light\";\r\n    BlendMode[\"SRC_ATOP\"] = \"source-atop\";\r\n    BlendMode[\"XOR\"] = \"xor\";\r\n})(BlendMode || (BlendMode = {}));\r\n//# sourceMappingURL=Renderer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNS8uaW50ZXJuYWwvY29yZS9yZW5kZXIvYmFja2VuZC9SZW5kZXJlci5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDhCQUE4QjtBQUMvQiIsInNvdXJjZXMiOlsiL2hvbWUvcnVubmVyL3dvcmtzcGFjZS9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNS8uaW50ZXJuYWwvY29yZS9yZW5kZXIvYmFja2VuZC9SZW5kZXJlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogRnJvbSBodHRwczovL2dpdGh1Yi5jb20vcGl4aWpzL3BpeGkuanMvYmxvYi8zZGQwZmY5YTkzNWYwYmMxM2EwOWFlZmZmOWViMjg3MmYwMmM1MWI5L3BhY2thZ2VzL2NhbnZhcy9jYW52YXMtcmVuZGVyZXIvc3JjL3V0aWxzL21hcENhbnZhc0JsZW5kTW9kZXNUb1BpeGkudHMjTDEzXHJcbiAqL1xyXG5leHBvcnQgdmFyIEJsZW5kTW9kZTtcclxuKGZ1bmN0aW9uIChCbGVuZE1vZGUpIHtcclxuICAgIEJsZW5kTW9kZVtcIkFERFwiXSA9IFwibGlnaHRlclwiO1xyXG4gICAgQmxlbmRNb2RlW1wiQ09MT1JcIl0gPSBcImNvbG9yXCI7XHJcbiAgICBCbGVuZE1vZGVbXCJDT0xPUl9CVVJOXCJdID0gXCJjb2xvci1idXJuXCI7XHJcbiAgICBCbGVuZE1vZGVbXCJDT0xPUl9ET0RHRVwiXSA9IFwiY29sb3ItZG9kZ2VcIjtcclxuICAgIEJsZW5kTW9kZVtcIkRBUktFTlwiXSA9IFwiZGFya2VuXCI7XHJcbiAgICBCbGVuZE1vZGVbXCJESUZGRVJFTkNFXCJdID0gXCJkaWZmZXJlbmNlXCI7XHJcbiAgICBCbGVuZE1vZGVbXCJEU1RfT1ZFUlwiXSA9IFwiZGVzdGluYXRpb24tb3ZlclwiO1xyXG4gICAgQmxlbmRNb2RlW1wiRVhDTFVTSU9OXCJdID0gXCJleGNsdXNpb25cIjtcclxuICAgIEJsZW5kTW9kZVtcIkhBUkRfTElHSFRcIl0gPSBcImhhcmQtbGlnaHRcIjtcclxuICAgIEJsZW5kTW9kZVtcIkhVRVwiXSA9IFwiaHVlXCI7XHJcbiAgICBCbGVuZE1vZGVbXCJMSUdIVEVOXCJdID0gXCJsaWdodGVuXCI7XHJcbiAgICBCbGVuZE1vZGVbXCJMVU1JTk9TSVRZXCJdID0gXCJsdW1pbm9zaXR5XCI7XHJcbiAgICBCbGVuZE1vZGVbXCJNVUxUSVBMWVwiXSA9IFwibXVsdGlwbHlcIjtcclxuICAgIEJsZW5kTW9kZVtcIk5PUk1BTFwiXSA9IFwic291cmNlLW92ZXJcIjtcclxuICAgIEJsZW5kTW9kZVtcIk9WRVJMQVlcIl0gPSBcIm92ZXJsYXlcIjtcclxuICAgIEJsZW5kTW9kZVtcIlNBVFVSQVRJT05cIl0gPSBcInNhdHVyYXRpb25cIjtcclxuICAgIEJsZW5kTW9kZVtcIlNDUkVFTlwiXSA9IFwic2NyZWVuXCI7XHJcbiAgICBCbGVuZE1vZGVbXCJTT0ZUX0xJR0hUXCJdID0gXCJzb2Z0LWxpZ2h0XCI7XHJcbiAgICBCbGVuZE1vZGVbXCJTUkNfQVRPUFwiXSA9IFwic291cmNlLWF0b3BcIjtcclxuICAgIEJsZW5kTW9kZVtcIlhPUlwiXSA9IFwieG9yXCI7XHJcbn0pKEJsZW5kTW9kZSB8fCAoQmxlbmRNb2RlID0ge30pKTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9UmVuZGVyZXIuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/backend/Renderer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/patterns/Pattern.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/core/render/patterns/Pattern.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Pattern: () => (/* binding */ Pattern)\n/* harmony export */ });\n/* harmony import */ var _util_Entity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../util/Entity */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Entity.js\");\n\r\n/**\r\n * Base class for patterns.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more info\r\n */\r\nclass Pattern extends _util_Entity__WEBPACK_IMPORTED_MODULE_0__.Entity {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_display\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeGraphics()\r\n        });\r\n        Object.defineProperty(this, \"_backgroundDisplay\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeGraphics()\r\n        });\r\n        Object.defineProperty(this, \"_clear\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_pattern\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        // Applying themes because pattern will not have parent\r\n        super._afterNewApplyThemes();\r\n    }\r\n    get pattern() {\r\n        return this._pattern;\r\n    }\r\n    _draw() { }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"repetition\") || this.isDirty(\"width\") || this.isDirty(\"height\") || this.isDirty(\"rotation\") || this.isDirty(\"strokeWidth\") || this.isDirty(\"strokeDasharray\") || this.isDirty(\"strokeDashoffset\") || this.isDirty(\"colorOpacity\") || this.isDirty(\"fillOpacity\")) {\r\n            this._clear = true;\r\n        }\r\n        this._checkDirtyFill();\r\n    }\r\n    _checkDirtyFill() {\r\n        if (this.isDirty(\"color\") || this.isDirty(\"fill\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            const repetition = this.get(\"repetition\", \"\");\r\n            const width = this.get(\"width\", 100);\r\n            const height = this.get(\"height\", 100);\r\n            const fill = this.get(\"fill\");\r\n            const fillOpacity = this.get(\"fillOpacity\", 1);\r\n            const backgroundDisplay = this._backgroundDisplay;\r\n            const display = this._display;\r\n            display.clear();\r\n            backgroundDisplay.clear();\r\n            if (fill && (fillOpacity > 0)) {\r\n                backgroundDisplay.beginFill(fill, fillOpacity);\r\n                backgroundDisplay.drawRect(0, 0, width, height);\r\n                backgroundDisplay.endFill();\r\n            }\r\n            display.angle = this.get(\"rotation\", 0);\r\n            //display.pivot = { x: width / 2, y: height / 2 };\r\n            this._draw();\r\n            this._pattern = this._root._renderer.createPattern(display, backgroundDisplay, repetition, width, height);\r\n        }\r\n        this._clear = false;\r\n    }\r\n}\r\nObject.defineProperty(Pattern, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Pattern\"\r\n});\r\nObject.defineProperty(Pattern, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: _util_Entity__WEBPACK_IMPORTED_MODULE_0__.Entity.classNames.concat([Pattern.className])\r\n});\r\n//# sourceMappingURL=Pattern.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNS8uaW50ZXJuYWwvY29yZS9yZW5kZXIvcGF0dGVybnMvUGF0dGVybi5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEyQztBQUMzQztBQUNBO0FBQ0E7QUFDQSxTQUFTLHlGQUF5RjtBQUNsRztBQUNPLHNCQUFzQixnREFBTTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0M7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsZ0RBQU07QUFDakIsQ0FBQztBQUNEIiwic291cmNlcyI6WyIvaG9tZS9ydW5uZXIvd29ya3NwYWNlL25vZGVfbW9kdWxlcy9AYW1jaGFydHMvYW1jaGFydHM1Ly5pbnRlcm5hbC9jb3JlL3JlbmRlci9wYXR0ZXJucy9QYXR0ZXJuLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVudGl0eSB9IGZyb20gXCIuLi8uLi91dGlsL0VudGl0eVwiO1xyXG4vKipcclxuICogQmFzZSBjbGFzcyBmb3IgcGF0dGVybnMuXHJcbiAqXHJcbiAqIEBzZWUge0BsaW5rIGh0dHBzOi8vd3d3LmFtY2hhcnRzLmNvbS9kb2NzL3Y1L2NvbmNlcHRzL2NvbG9ycy1ncmFkaWVudHMtYW5kLXBhdHRlcm5zL3BhdHRlcm5zL30gZm9yIG1vcmUgaW5mb1xyXG4gKi9cclxuZXhwb3J0IGNsYXNzIFBhdHRlcm4gZXh0ZW5kcyBFbnRpdHkge1xyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcclxuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJfZGlzcGxheVwiLCB7XHJcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcclxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXHJcbiAgICAgICAgICAgIHZhbHVlOiB0aGlzLl9yb290Ll9yZW5kZXJlci5tYWtlR3JhcGhpY3MoKVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcIl9iYWNrZ3JvdW5kRGlzcGxheVwiLCB7XHJcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcclxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXHJcbiAgICAgICAgICAgIHZhbHVlOiB0aGlzLl9yb290Ll9yZW5kZXJlci5tYWtlR3JhcGhpY3MoKVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcIl9jbGVhclwiLCB7XHJcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcclxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXHJcbiAgICAgICAgICAgIHZhbHVlOiBmYWxzZVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcIl9wYXR0ZXJuXCIsIHtcclxuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxyXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcclxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgX2FmdGVyTmV3KCkge1xyXG4gICAgICAgIC8vIEFwcGx5aW5nIHRoZW1lcyBiZWNhdXNlIHBhdHRlcm4gd2lsbCBub3QgaGF2ZSBwYXJlbnRcclxuICAgICAgICBzdXBlci5fYWZ0ZXJOZXdBcHBseVRoZW1lcygpO1xyXG4gICAgfVxyXG4gICAgZ2V0IHBhdHRlcm4oKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3BhdHRlcm47XHJcbiAgICB9XHJcbiAgICBfZHJhdygpIHsgfVxyXG4gICAgX2JlZm9yZUNoYW5nZWQoKSB7XHJcbiAgICAgICAgc3VwZXIuX2JlZm9yZUNoYW5nZWQoKTtcclxuICAgICAgICBpZiAodGhpcy5pc0RpcnR5KFwicmVwZXRpdGlvblwiKSB8fCB0aGlzLmlzRGlydHkoXCJ3aWR0aFwiKSB8fCB0aGlzLmlzRGlydHkoXCJoZWlnaHRcIikgfHwgdGhpcy5pc0RpcnR5KFwicm90YXRpb25cIikgfHwgdGhpcy5pc0RpcnR5KFwic3Ryb2tlV2lkdGhcIikgfHwgdGhpcy5pc0RpcnR5KFwic3Ryb2tlRGFzaGFycmF5XCIpIHx8IHRoaXMuaXNEaXJ0eShcInN0cm9rZURhc2hvZmZzZXRcIikgfHwgdGhpcy5pc0RpcnR5KFwiY29sb3JPcGFjaXR5XCIpIHx8IHRoaXMuaXNEaXJ0eShcImZpbGxPcGFjaXR5XCIpKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2NsZWFyID0gdHJ1ZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5fY2hlY2tEaXJ0eUZpbGwoKTtcclxuICAgIH1cclxuICAgIF9jaGVja0RpcnR5RmlsbCgpIHtcclxuICAgICAgICBpZiAodGhpcy5pc0RpcnR5KFwiY29sb3JcIikgfHwgdGhpcy5pc0RpcnR5KFwiZmlsbFwiKSkge1xyXG4gICAgICAgICAgICB0aGlzLl9jbGVhciA9IHRydWU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgX2NoYW5nZWQoKSB7XHJcbiAgICAgICAgc3VwZXIuX2NoYW5nZWQoKTtcclxuICAgICAgICBpZiAodGhpcy5fY2xlYXIpIHtcclxuICAgICAgICAgICAgY29uc3QgcmVwZXRpdGlvbiA9IHRoaXMuZ2V0KFwicmVwZXRpdGlvblwiLCBcIlwiKTtcclxuICAgICAgICAgICAgY29uc3Qgd2lkdGggPSB0aGlzLmdldChcIndpZHRoXCIsIDEwMCk7XHJcbiAgICAgICAgICAgIGNvbnN0IGhlaWdodCA9IHRoaXMuZ2V0KFwiaGVpZ2h0XCIsIDEwMCk7XHJcbiAgICAgICAgICAgIGNvbnN0IGZpbGwgPSB0aGlzLmdldChcImZpbGxcIik7XHJcbiAgICAgICAgICAgIGNvbnN0IGZpbGxPcGFjaXR5ID0gdGhpcy5nZXQoXCJmaWxsT3BhY2l0eVwiLCAxKTtcclxuICAgICAgICAgICAgY29uc3QgYmFja2dyb3VuZERpc3BsYXkgPSB0aGlzLl9iYWNrZ3JvdW5kRGlzcGxheTtcclxuICAgICAgICAgICAgY29uc3QgZGlzcGxheSA9IHRoaXMuX2Rpc3BsYXk7XHJcbiAgICAgICAgICAgIGRpc3BsYXkuY2xlYXIoKTtcclxuICAgICAgICAgICAgYmFja2dyb3VuZERpc3BsYXkuY2xlYXIoKTtcclxuICAgICAgICAgICAgaWYgKGZpbGwgJiYgKGZpbGxPcGFjaXR5ID4gMCkpIHtcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmREaXNwbGF5LmJlZ2luRmlsbChmaWxsLCBmaWxsT3BhY2l0eSk7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kRGlzcGxheS5kcmF3UmVjdCgwLCAwLCB3aWR0aCwgaGVpZ2h0KTtcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmREaXNwbGF5LmVuZEZpbGwoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBkaXNwbGF5LmFuZ2xlID0gdGhpcy5nZXQoXCJyb3RhdGlvblwiLCAwKTtcclxuICAgICAgICAgICAgLy9kaXNwbGF5LnBpdm90ID0geyB4OiB3aWR0aCAvIDIsIHk6IGhlaWdodCAvIDIgfTtcclxuICAgICAgICAgICAgdGhpcy5fZHJhdygpO1xyXG4gICAgICAgICAgICB0aGlzLl9wYXR0ZXJuID0gdGhpcy5fcm9vdC5fcmVuZGVyZXIuY3JlYXRlUGF0dGVybihkaXNwbGF5LCBiYWNrZ3JvdW5kRGlzcGxheSwgcmVwZXRpdGlvbiwgd2lkdGgsIGhlaWdodCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuX2NsZWFyID0gZmFsc2U7XHJcbiAgICB9XHJcbn1cclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KFBhdHRlcm4sIFwiY2xhc3NOYW1lXCIsIHtcclxuICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICBjb25maWd1cmFibGU6IHRydWUsXHJcbiAgICB3cml0YWJsZTogdHJ1ZSxcclxuICAgIHZhbHVlOiBcIlBhdHRlcm5cIlxyXG59KTtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KFBhdHRlcm4sIFwiY2xhc3NOYW1lc1wiLCB7XHJcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgY29uZmlndXJhYmxlOiB0cnVlLFxyXG4gICAgd3JpdGFibGU6IHRydWUsXHJcbiAgICB2YWx1ZTogRW50aXR5LmNsYXNzTmFtZXMuY29uY2F0KFtQYXR0ZXJuLmNsYXNzTmFtZV0pXHJcbn0pO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1QYXR0ZXJuLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/patterns/Pattern.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/patterns/PicturePattern.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/core/render/patterns/PicturePattern.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PicturePattern: () => (/* binding */ PicturePattern)\n/* harmony export */ });\n/* harmony import */ var _Pattern__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Pattern */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/patterns/Pattern.js\");\n\r\n/**\r\n * Picture pattern.\r\n *\r\n * @since 5.2.15\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more info\r\n */\r\nclass PicturePattern extends _Pattern__WEBPACK_IMPORTED_MODULE_0__.Pattern {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_image\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        this._clear = true;\r\n        if (this.isDirty(\"src\")) {\r\n            this._load();\r\n        }\r\n        const canvas = this.get(\"canvas\");\r\n        if (canvas) {\r\n            this.set(\"width\", canvas.width);\r\n            this.set(\"height\", canvas.height);\r\n        }\r\n    }\r\n    _draw() {\r\n        super._draw();\r\n        const colorOpacity = this.get(\"colorOpacity\");\r\n        if (colorOpacity !== undefined) {\r\n            this._display.alpha = Math.max(0, colorOpacity);\r\n        }\r\n        const image = this._image;\r\n        if (image) {\r\n            const patternWidth = this.get(\"width\", 100);\r\n            const patternHeight = this.get(\"height\", 100);\r\n            // Fit\r\n            const fit = this.get(\"fit\", \"image\");\r\n            let width = 0;\r\n            let height = 0;\r\n            if (fit == \"pattern\") {\r\n                width = patternWidth;\r\n                height = patternHeight;\r\n                this.markDirty();\r\n            }\r\n            else {\r\n                width = image.width;\r\n                height = image.height;\r\n                if (fit == \"image\") {\r\n                    this.set(\"width\", width);\r\n                    this.set(\"height\", height);\r\n                }\r\n            }\r\n            // Position\r\n            const centered = this.get(\"centered\", true);\r\n            let x = 0;\r\n            let y = 0;\r\n            if (centered) {\r\n                x = patternWidth / 2 - width / 2;\r\n                y = patternHeight / 2 - height / 2;\r\n            }\r\n            this._display.image(image, width, height, x, y);\r\n        }\r\n        const canvas = this.get(\"canvas\");\r\n        if (canvas) {\r\n            this._display.image(canvas, canvas.width, canvas.height, 0, 0);\r\n        }\r\n    }\r\n    _load() {\r\n        const src = this.get(\"src\");\r\n        if (src) {\r\n            const image = new Image();\r\n            //image.crossOrigin = \"Anonymous\";\r\n            image.src = src;\r\n            image.decode().then(() => {\r\n                this._image = image;\r\n                this._draw();\r\n                if (this.events.isEnabled(\"loaded\")) {\r\n                    this.events.dispatch(\"loaded\", { type: \"loaded\", target: this });\r\n                }\r\n            }).catch((_error) => {\r\n                // TODO: maybe raise error?\r\n            });\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(PicturePattern, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"PicturePattern\"\r\n});\r\nObject.defineProperty(PicturePattern, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: _Pattern__WEBPACK_IMPORTED_MODULE_0__.Pattern.classNames.concat([PicturePattern.className])\r\n});\r\n//# sourceMappingURL=PicturePattern.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNS8uaW50ZXJuYWwvY29yZS9yZW5kZXIvcGF0dGVybnMvUGljdHVyZVBhdHRlcm4uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBb0M7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMseUZBQXlGO0FBQ2xHO0FBQ08sNkJBQTZCLDZDQUFPO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxREFBcUQsOEJBQThCO0FBQ25GO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLDZDQUFPO0FBQ2xCLENBQUM7QUFDRCIsInNvdXJjZXMiOlsiL2hvbWUvcnVubmVyL3dvcmtzcGFjZS9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNS8uaW50ZXJuYWwvY29yZS9yZW5kZXIvcGF0dGVybnMvUGljdHVyZVBhdHRlcm4uanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGF0dGVybiB9IGZyb20gXCIuL1BhdHRlcm5cIjtcclxuLyoqXHJcbiAqIFBpY3R1cmUgcGF0dGVybi5cclxuICpcclxuICogQHNpbmNlIDUuMi4xNVxyXG4gKlxyXG4gKiBAc2VlIHtAbGluayBodHRwczovL3d3dy5hbWNoYXJ0cy5jb20vZG9jcy92NS9jb25jZXB0cy9jb2xvcnMtZ3JhZGllbnRzLWFuZC1wYXR0ZXJucy9wYXR0ZXJucy99IGZvciBtb3JlIGluZm9cclxuICovXHJcbmV4cG9ydCBjbGFzcyBQaWN0dXJlUGF0dGVybiBleHRlbmRzIFBhdHRlcm4ge1xyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcclxuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJfaW1hZ2VcIiwge1xyXG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXHJcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxyXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICBfYmVmb3JlQ2hhbmdlZCgpIHtcclxuICAgICAgICBzdXBlci5fYmVmb3JlQ2hhbmdlZCgpO1xyXG4gICAgICAgIHRoaXMuX2NsZWFyID0gdHJ1ZTtcclxuICAgICAgICBpZiAodGhpcy5pc0RpcnR5KFwic3JjXCIpKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2xvYWQoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgY29uc3QgY2FudmFzID0gdGhpcy5nZXQoXCJjYW52YXNcIik7XHJcbiAgICAgICAgaWYgKGNhbnZhcykge1xyXG4gICAgICAgICAgICB0aGlzLnNldChcIndpZHRoXCIsIGNhbnZhcy53aWR0aCk7XHJcbiAgICAgICAgICAgIHRoaXMuc2V0KFwiaGVpZ2h0XCIsIGNhbnZhcy5oZWlnaHQpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIF9kcmF3KCkge1xyXG4gICAgICAgIHN1cGVyLl9kcmF3KCk7XHJcbiAgICAgICAgY29uc3QgY29sb3JPcGFjaXR5ID0gdGhpcy5nZXQoXCJjb2xvck9wYWNpdHlcIik7XHJcbiAgICAgICAgaWYgKGNvbG9yT3BhY2l0eSAhPT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2Rpc3BsYXkuYWxwaGEgPSBNYXRoLm1heCgwLCBjb2xvck9wYWNpdHkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjb25zdCBpbWFnZSA9IHRoaXMuX2ltYWdlO1xyXG4gICAgICAgIGlmIChpbWFnZSkge1xyXG4gICAgICAgICAgICBjb25zdCBwYXR0ZXJuV2lkdGggPSB0aGlzLmdldChcIndpZHRoXCIsIDEwMCk7XHJcbiAgICAgICAgICAgIGNvbnN0IHBhdHRlcm5IZWlnaHQgPSB0aGlzLmdldChcImhlaWdodFwiLCAxMDApO1xyXG4gICAgICAgICAgICAvLyBGaXRcclxuICAgICAgICAgICAgY29uc3QgZml0ID0gdGhpcy5nZXQoXCJmaXRcIiwgXCJpbWFnZVwiKTtcclxuICAgICAgICAgICAgbGV0IHdpZHRoID0gMDtcclxuICAgICAgICAgICAgbGV0IGhlaWdodCA9IDA7XHJcbiAgICAgICAgICAgIGlmIChmaXQgPT0gXCJwYXR0ZXJuXCIpIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoID0gcGF0dGVybldpZHRoO1xyXG4gICAgICAgICAgICAgICAgaGVpZ2h0ID0gcGF0dGVybkhlaWdodDtcclxuICAgICAgICAgICAgICAgIHRoaXMubWFya0RpcnR5KCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aCA9IGltYWdlLndpZHRoO1xyXG4gICAgICAgICAgICAgICAgaGVpZ2h0ID0gaW1hZ2UuaGVpZ2h0O1xyXG4gICAgICAgICAgICAgICAgaWYgKGZpdCA9PSBcImltYWdlXCIpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnNldChcIndpZHRoXCIsIHdpZHRoKTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnNldChcImhlaWdodFwiLCBoZWlnaHQpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC8vIFBvc2l0aW9uXHJcbiAgICAgICAgICAgIGNvbnN0IGNlbnRlcmVkID0gdGhpcy5nZXQoXCJjZW50ZXJlZFwiLCB0cnVlKTtcclxuICAgICAgICAgICAgbGV0IHggPSAwO1xyXG4gICAgICAgICAgICBsZXQgeSA9IDA7XHJcbiAgICAgICAgICAgIGlmIChjZW50ZXJlZCkge1xyXG4gICAgICAgICAgICAgICAgeCA9IHBhdHRlcm5XaWR0aCAvIDIgLSB3aWR0aCAvIDI7XHJcbiAgICAgICAgICAgICAgICB5ID0gcGF0dGVybkhlaWdodCAvIDIgLSBoZWlnaHQgLyAyO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRoaXMuX2Rpc3BsYXkuaW1hZ2UoaW1hZ2UsIHdpZHRoLCBoZWlnaHQsIHgsIHkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjb25zdCBjYW52YXMgPSB0aGlzLmdldChcImNhbnZhc1wiKTtcclxuICAgICAgICBpZiAoY2FudmFzKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2Rpc3BsYXkuaW1hZ2UoY2FudmFzLCBjYW52YXMud2lkdGgsIGNhbnZhcy5oZWlnaHQsIDAsIDApO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIF9sb2FkKCkge1xyXG4gICAgICAgIGNvbnN0IHNyYyA9IHRoaXMuZ2V0KFwic3JjXCIpO1xyXG4gICAgICAgIGlmIChzcmMpIHtcclxuICAgICAgICAgICAgY29uc3QgaW1hZ2UgPSBuZXcgSW1hZ2UoKTtcclxuICAgICAgICAgICAgLy9pbWFnZS5jcm9zc09yaWdpbiA9IFwiQW5vbnltb3VzXCI7XHJcbiAgICAgICAgICAgIGltYWdlLnNyYyA9IHNyYztcclxuICAgICAgICAgICAgaW1hZ2UuZGVjb2RlKCkudGhlbigoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9pbWFnZSA9IGltYWdlO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fZHJhdygpO1xyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuZXZlbnRzLmlzRW5hYmxlZChcImxvYWRlZFwiKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZXZlbnRzLmRpc3BhdGNoKFwibG9hZGVkXCIsIHsgdHlwZTogXCJsb2FkZWRcIiwgdGFyZ2V0OiB0aGlzIH0pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KS5jYXRjaCgoX2Vycm9yKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAvLyBUT0RPOiBtYXliZSByYWlzZSBlcnJvcj9cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShQaWN0dXJlUGF0dGVybiwgXCJjbGFzc05hbWVcIiwge1xyXG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcclxuICAgIHdyaXRhYmxlOiB0cnVlLFxyXG4gICAgdmFsdWU6IFwiUGljdHVyZVBhdHRlcm5cIlxyXG59KTtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KFBpY3R1cmVQYXR0ZXJuLCBcImNsYXNzTmFtZXNcIiwge1xyXG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcclxuICAgIHdyaXRhYmxlOiB0cnVlLFxyXG4gICAgdmFsdWU6IFBhdHRlcm4uY2xhc3NOYW1lcy5jb25jYXQoW1BpY3R1cmVQYXR0ZXJuLmNsYXNzTmFtZV0pXHJcbn0pO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1QaWN0dXJlUGF0dGVybi5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/patterns/PicturePattern.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Animation.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/core/util/Animation.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AnimationState: () => (/* binding */ AnimationState),\n/* harmony export */   AnimationTime: () => (/* binding */ AnimationTime),\n/* harmony export */   colorInterpolate: () => (/* binding */ colorInterpolate),\n/* harmony export */   defaultInterpolate: () => (/* binding */ defaultInterpolate),\n/* harmony export */   getInterpolate: () => (/* binding */ getInterpolate),\n/* harmony export */   normalize: () => (/* binding */ normalize),\n/* harmony export */   percentInterpolate: () => (/* binding */ percentInterpolate),\n/* harmony export */   range: () => (/* binding */ range),\n/* harmony export */   waitForAnimations: () => (/* binding */ waitForAnimations)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var _Percent__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Percent */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Percent.js\");\n/* harmony import */ var _Color__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Color */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Color.js\");\n/* harmony import */ var _EventDispatcher__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./EventDispatcher */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/EventDispatcher.js\");\n/* harmony import */ var _Object__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Object */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Object.js\");\n\r\n\r\n\r\n\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction waitForAnimations(animations) {\r\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__awaiter)(this, void 0, void 0, function* () {\r\n        if (animations !== undefined) {\r\n            const promises = [];\r\n            _Object__WEBPACK_IMPORTED_MODULE_1__.each(animations, (_, animation) => {\r\n                promises.push(animation.waitForStop());\r\n            });\r\n            yield Promise.all(promises);\r\n        }\r\n    });\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction normalize(value, min, max) {\r\n    if (min === max) {\r\n        return 0;\r\n    }\r\n    else {\r\n        return Math.min(Math.max((value - min) * (1 / (max - min)), 0), 1);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction range(diff, from, to) {\r\n    return from + (diff * (to - from));\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction defaultInterpolate(diff, from, to) {\r\n    if (diff >= 1) {\r\n        return to;\r\n    }\r\n    else {\r\n        return from;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction percentInterpolate(diff, from, to) {\r\n    return new _Percent__WEBPACK_IMPORTED_MODULE_2__.Percent(range(diff, from.percent, to.percent));\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction colorInterpolate(diff, from, to) {\r\n    return _Color__WEBPACK_IMPORTED_MODULE_3__.Color.interpolate(diff, from, to);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction getInterpolate(from, to) {\r\n    if (typeof from === \"number\" && typeof to === \"number\") {\r\n        return range;\r\n    }\r\n    if (from instanceof _Percent__WEBPACK_IMPORTED_MODULE_2__.Percent && to instanceof _Percent__WEBPACK_IMPORTED_MODULE_2__.Percent) {\r\n        return percentInterpolate;\r\n    }\r\n    if (from instanceof _Color__WEBPACK_IMPORTED_MODULE_3__.Color && to instanceof _Color__WEBPACK_IMPORTED_MODULE_3__.Color) {\r\n        return colorInterpolate;\r\n    }\r\n    return defaultInterpolate;\r\n}\r\nvar AnimationState;\r\n(function (AnimationState) {\r\n    AnimationState[AnimationState[\"Stopped\"] = 0] = \"Stopped\";\r\n    AnimationState[AnimationState[\"Playing\"] = 1] = \"Playing\";\r\n    AnimationState[AnimationState[\"Paused\"] = 2] = \"Paused\";\r\n})(AnimationState || (AnimationState = {}));\r\n/**\r\n * @ignore\r\n */\r\nclass AnimationTime {\r\n    constructor(entity, duration) {\r\n        Object.defineProperty(this, \"_entity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_duration\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_playingDuration\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"_startingTime\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"_current\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_from\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_to\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new _EventDispatcher__WEBPACK_IMPORTED_MODULE_4__.EventDispatcher()\r\n        });\r\n        Object.defineProperty(this, \"easing\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._entity = entity;\r\n        this._duration = duration;\r\n    }\r\n    _stopEvent() {\r\n        const type = \"stopped\";\r\n        if (this.events.isEnabled(type)) {\r\n            this.events.dispatch(type, { type: type, target: this });\r\n        }\r\n    }\r\n    _runAnimation(currentTime) {\r\n        if (this._playingDuration !== null) {\r\n            if (this._startingTime === null) {\r\n                this._startingTime = currentTime;\r\n                return AnimationState.Playing;\r\n            }\r\n            else {\r\n                const diff = (currentTime - this._startingTime) / this._playingDuration;\r\n                if (diff >= 1) {\r\n                    this._playingDuration = null;\r\n                    this._startingTime = null;\r\n                    this._from = this._to;\r\n                    this._current = this._to;\r\n                    this._entity.markDirty();\r\n                    this._stopEvent();\r\n                    const type = \"ended\";\r\n                    if (this.events.isEnabled(type)) {\r\n                        this.events.dispatch(type, { type: type, target: this });\r\n                    }\r\n                    return AnimationState.Stopped;\r\n                }\r\n                else {\r\n                    this._current = range(diff, this._from, this._to);\r\n                    this._entity.markDirty();\r\n                    const type = \"progress\";\r\n                    if (this.events.isEnabled(type)) {\r\n                        this.events.dispatch(type, { type: type, target: this, progress: diff });\r\n                    }\r\n                    return AnimationState.Playing;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return AnimationState.Stopped;\r\n        }\r\n    }\r\n    _play() {\r\n        this._from = this._current;\r\n        if (this._playingDuration === null) {\r\n            this._entity._root._addAnimation(this);\r\n            const type = \"started\";\r\n            if (this.events.isEnabled(type)) {\r\n                this.events.dispatch(type, { type: type, target: this });\r\n            }\r\n        }\r\n        else {\r\n            this._startingTime = null;\r\n        }\r\n        this._playingDuration = Math.abs(this._to - this._from) * this._duration;\r\n    }\r\n    get duration() {\r\n        return this._duration;\r\n    }\r\n    set duration(value) {\r\n        if (this._duration !== value) {\r\n            this._duration = value;\r\n            if (value === 0) {\r\n                this.jumpTo(this._to);\r\n            }\r\n            else if (this._current !== this._to) {\r\n                this._play();\r\n            }\r\n        }\r\n    }\r\n    get current() {\r\n        if (this.easing) {\r\n            return this.easing(this._current);\r\n        }\r\n        else {\r\n            return this._current;\r\n        }\r\n    }\r\n    stop() {\r\n        this.jumpTo(this._current);\r\n    }\r\n    jumpTo(value) {\r\n        if (this._current !== value) {\r\n            this._entity.markDirty();\r\n        }\r\n        if (this._playingDuration !== null) {\r\n            this._stopEvent();\r\n        }\r\n        this._playingDuration = null;\r\n        this._startingTime = null;\r\n        this._current = value;\r\n        this._from = value;\r\n        this._to = value;\r\n    }\r\n    tweenTo(value) {\r\n        if (this._current === value || this._duration === 0) {\r\n            this.jumpTo(value);\r\n        }\r\n        else {\r\n            if (this._to !== value) {\r\n                this._to = value;\r\n                this._play();\r\n            }\r\n        }\r\n    }\r\n}\r\n/*export class AnimationValue extends AnimationTime {\r\n    public _min: number;\r\n    public _max: number;\r\n\r\n    constructor(entity: Entity, duration: number, min: number, max: number) {\r\n        super(entity, duration);\r\n        this._min = min;\r\n        this._max = max;\r\n    }\r\n\r\n    public get min(): number {\r\n        return this._min;\r\n    }\r\n\r\n    public set min(value: number) {\r\n        if (this._min !== value) {\r\n            this._min = value;\r\n            this._entity.markDirty();\r\n        }\r\n    }\r\n\r\n    public get max(): number {\r\n        return this._max;\r\n    }\r\n\r\n    public set max(value: number) {\r\n        if (this._max !== value) {\r\n            this._max = value;\r\n            this._entity.markDirty();\r\n        }\r\n    }\r\n\r\n    public currentValue(): number {\r\n        return range(super.currentTime(), this._min, this._max);\r\n    }\r\n\r\n    public jumpToValue(value: number) {\r\n        super.jumpToTime(normalize(value, this._min, this._max));\r\n    }\r\n\r\n    public tweenToValue(value: number) {\r\n        super.tweenToTime(normalize(value, this._min, this._max));\r\n    }\r\n}\r\n*/\r\n//# sourceMappingURL=Animation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Animation.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Array.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/core/util/Array.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   add: () => (/* binding */ add),\n/* harmony export */   any: () => (/* binding */ any),\n/* harmony export */   copy: () => (/* binding */ copy),\n/* harmony export */   each: () => (/* binding */ each),\n/* harmony export */   eachContinue: () => (/* binding */ eachContinue),\n/* harmony export */   eachReverse: () => (/* binding */ eachReverse),\n/* harmony export */   find: () => (/* binding */ find),\n/* harmony export */   findIndex: () => (/* binding */ findIndex),\n/* harmony export */   findIndexReverse: () => (/* binding */ findIndexReverse),\n/* harmony export */   findMap: () => (/* binding */ findMap),\n/* harmony export */   findReverse: () => (/* binding */ findReverse),\n/* harmony export */   first: () => (/* binding */ first),\n/* harmony export */   getFirstSortedIndex: () => (/* binding */ getFirstSortedIndex),\n/* harmony export */   getSortedIndex: () => (/* binding */ getSortedIndex),\n/* harmony export */   has: () => (/* binding */ has),\n/* harmony export */   indexOf: () => (/* binding */ indexOf),\n/* harmony export */   insert: () => (/* binding */ insert),\n/* harmony export */   insertIndex: () => (/* binding */ insertIndex),\n/* harmony export */   keepIf: () => (/* binding */ keepIf),\n/* harmony export */   last: () => (/* binding */ last),\n/* harmony export */   map: () => (/* binding */ map),\n/* harmony export */   move: () => (/* binding */ move),\n/* harmony export */   pushAll: () => (/* binding */ pushAll),\n/* harmony export */   pushOne: () => (/* binding */ pushOne),\n/* harmony export */   remove: () => (/* binding */ remove),\n/* harmony export */   removeFirst: () => (/* binding */ removeFirst),\n/* harmony export */   removeIndex: () => (/* binding */ removeIndex),\n/* harmony export */   replace: () => (/* binding */ replace),\n/* harmony export */   setIndex: () => (/* binding */ setIndex),\n/* harmony export */   shiftLeft: () => (/* binding */ shiftLeft),\n/* harmony export */   shuffle: () => (/* binding */ shuffle),\n/* harmony export */   slice: () => (/* binding */ slice),\n/* harmony export */   toArray: () => (/* binding */ toArray)\n/* harmony export */ });\n/* harmony import */ var _Type__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Type */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Type.js\");\n\r\n/**\r\n * ============================================================================\r\n * UTILITY FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Searches `array` for `value`.\r\n *\r\n * Returns -1 if not found.\r\n *\r\n * @param array  Source array\r\n * @param value  Value to search\r\n * @returns Index\r\n */\r\nfunction indexOf(array, value) {\r\n    const length = array.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        // TODO handle NaN\r\n        if (array[i] === value) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * Calls `test` for each element in `array`.\r\n *\r\n * If `test` returns `true` then it immediately returns `true`.\r\n *\r\n * If `test` returns `false` for all of the elements in `array` then it returns `false`.\r\n *\r\n * @param array  Source array\r\n * @param test   Function which is called on each element\r\n * @returns Whether `test` returned true or not\r\n */\r\nfunction any(array, test) {\r\n    const length = array.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        if (test(array[i])) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Calls `fn` function for every member of array and returns a new array out\r\n * of all outputs.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n * @returns New array\r\n */\r\nfunction map(array, fn) {\r\n    const length = array.length;\r\n    const output = new Array(length);\r\n    for (let i = 0; i < length; ++i) {\r\n        output[i] = fn(array[i], i);\r\n    }\r\n    return output;\r\n}\r\n/**\r\n * Iterates through all items in array and calls `fn` function for each of\r\n * them.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n */\r\nfunction each(array, fn) {\r\n    const length = array.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        fn(array[i], i);\r\n    }\r\n}\r\n/**\r\n * Iterates through all items in array in reverse order and calls `fn` function for each of\r\n * them.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n */\r\nfunction eachReverse(array, fn) {\r\n    let i = array.length;\r\n    while (i > 0) {\r\n        --i;\r\n        fn(array[i], i);\r\n    }\r\n}\r\n/**\r\n * Iterates through all items in array and calls `fn` function for each of\r\n * them.\r\n *\r\n * If `fn` call evaluates to `false`, further iteration is cancelled.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n */\r\nfunction eachContinue(array, fn) {\r\n    const length = array.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        if (!fn(array[i], i)) {\r\n            break;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Shifts an item at `index` towards beginning of the array.\r\n *\r\n * @param array  Source array\r\n * @param index  Target element index\r\n */\r\nfunction shiftLeft(array, index) {\r\n    const length = array.length;\r\n    for (let i = index; i < length; ++i) {\r\n        array[i - index] = array[i];\r\n    }\r\n    array.length = length - index;\r\n}\r\n/**\r\n * Returns the last item of the array.\r\n *\r\n * @param array  Source array\r\n * @returns Last item\r\n */\r\nfunction last(array) {\r\n    const length = array.length;\r\n    return length ? array[length - 1] : undefined;\r\n}\r\n/**\r\n * Returns the first item of the array.\r\n *\r\n * @param array  Source array\r\n * @returns Last item\r\n */\r\nfunction first(array) {\r\n    return array[0];\r\n}\r\n/**\r\n * Inserts `element` into `array` at `index`.\r\n *\r\n * Caps `index` to be between `0` and `array.length`\r\n *\r\n * @param array    Source array\r\n * @param element  Item to insert\r\n * @param array    Index to insert item at\r\n */\r\nfunction insert(array, element, index) {\r\n    //if (array) {\r\n    index = Math.max(0, Math.min(index, array.length));\r\n    array.splice(index, 0, element);\r\n    //}\r\n}\r\n/**\r\n * Removes all copies of `element` from `array` (if they exist) and then\r\n * inserts `element` at `index`.\r\n *\r\n * @param array    Source array\r\n * @param element  Item\r\n * @param array    Index to move item to\r\n */\r\nfunction setIndex(array, element, index) {\r\n    remove(array, element);\r\n    insert(array, element, index);\r\n}\r\n/**\r\n * Pushes all of the elements from `input` into `array`.\r\n *\r\n * @param array  Output array\r\n * @param input  Input array\r\n */\r\nfunction pushAll(array, input) {\r\n    const length = input.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        array.push(input[i]);\r\n    }\r\n}\r\n/**\r\n * Removes `element` from `array`.\r\n *\r\n * If there are multiple copies of `element`, they are all removed.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to remove\r\n */\r\nfunction remove(array, element) {\r\n    let found = false;\r\n    let index = 0;\r\n    for (;;) {\r\n        index = array.indexOf(element, index);\r\n        if (index === -1) {\r\n            return found;\r\n        }\r\n        else {\r\n            found = true;\r\n            array.splice(index, 1);\r\n        }\r\n    }\r\n}\r\nfunction removeFirst(array, element) {\r\n    let index = array.indexOf(element);\r\n    if (index !== -1) {\r\n        array.splice(index, 1);\r\n        return true;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Adds an `element` to `array`.\r\n *\r\n * If array already contains and item like this, it is removed before adding\r\n * it again.\r\n *\r\n * Optionally `toIndex` can be specified to add element at specific index.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to add\r\n * @param array    Index to move item to\r\n */\r\nfunction move(array, element, toIndex) {\r\n    // @todo this implementation must be the same as the List.moveValue method\r\n    // @todo don't do anything if the desired index is the same as the current index\r\n    let index = indexOf(array, element);\r\n    // @todo remove all old values rather than only the first ?\r\n    if (index !== -1) {\r\n        removeIndex(array, index);\r\n    }\r\n    if (toIndex == null) {\r\n        array.push(element);\r\n    }\r\n    else {\r\n        insertIndex(array, toIndex, element);\r\n    }\r\n}\r\n/**\r\n * Inserts `element` into `array` at `index`.\r\n *\r\n * If `index` is not provided, it will insert `element` at the end of `array`.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to add\r\n * @param array    Index to add item at\r\n */\r\nfunction add(array, element, index) {\r\n    // Append to the end if index is not set\r\n    if (!_Type__WEBPACK_IMPORTED_MODULE_0__.isNumber(index)) {\r\n        array.push(element);\r\n    }\r\n    // Add to the beginning of array if index is 0\r\n    else if (index === 0) {\r\n        array.unshift(element);\r\n    }\r\n    // Add to indicated place if index is set\r\n    else {\r\n        array.splice(index, 0, element);\r\n    }\r\n}\r\n/**\r\n * Pushes `element` into `array` if it doesn't already exist.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to add\r\n */\r\nfunction pushOne(array, element) {\r\n    if (array.indexOf(element) === -1) {\r\n        array.push(element);\r\n    }\r\n}\r\n/**\r\n * Removes `element` from `array` (if it exists) and then inserts `element` at\r\n * `index`.\r\n *\r\n * If `index` is not provided, it will insert `element` at the end of `array`.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to remove\r\n * @param array    Index to move item to\r\n */\r\nfunction replace(array, element, index) {\r\n    // check if exists\r\n    let ind = array.indexOf(element);\r\n    // remove if exists\r\n    if (ind !== -1) {\r\n        array.splice(ind, 1);\r\n    }\r\n    // add to end if index is not set\r\n    if (!_Type__WEBPACK_IMPORTED_MODULE_0__.isNumber(index)) {\r\n        array.push(element);\r\n    }\r\n    // add to indicated place if index is set\r\n    else {\r\n        array.splice(index, 0, element);\r\n    }\r\n}\r\n/**\r\n * Wraps `input` in an array, if it isn't already an array.\r\n *\r\n * @param input  Source value\r\n * @return An array\r\n */\r\nfunction toArray(input) {\r\n    if (Array.isArray(input)) {\r\n        return input;\r\n    }\r\n    else {\r\n        return [input];\r\n    }\r\n}\r\n/**\r\n * Returns `true` if `element` exists in `array`.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to search for\r\n * @returns Item in array?\r\n */\r\nfunction has(array, element) {\r\n    return indexOf(array, element) !== -1;\r\n}\r\n/**\r\n * Returns a shallow copy of `array`.\r\n *\r\n * @param array  Source array\r\n * @returns Copy of the array\r\n */\r\nfunction copy(array) {\r\n    const length = array.length;\r\n    // It's faster to create the array with a pre-defined length\r\n    const output = new Array(length);\r\n    for (let i = 0; i < length; ++i) {\r\n        // Because the array has a pre-defined length, we have to assign rather than push\r\n        // This is also faster than pushing\r\n        output[i] = array[i];\r\n    }\r\n    return output;\r\n}\r\n/**\r\n * Returns a copy of `array` which contains all the elements between `start`\r\n * and `end`. (including `start` and excluding `end`)\r\n *\r\n * If `end` is not provided, it defaults to `array.length`.\r\n *\r\n * @param array  Source array\r\n * @param start  Start index\r\n * @param end    End index\r\n * @returns Part of the array\r\n */\r\nfunction slice(array, start, end = array.length) {\r\n    const output = new Array(end - start);\r\n    for (let i = start; i < end; ++i) {\r\n        output[i - start] = array[i];\r\n    }\r\n    return output;\r\n}\r\n/**\r\n * Inserts a value into array at specific index.\r\n *\r\n * @param array  Source array\r\n * @param index  Index\r\n * @param value  Value to insert\r\n */\r\nfunction insertIndex(array, index, value) {\r\n    array.splice(index, 0, value);\r\n}\r\n/**\r\n * Removes a value from array at specific index.\r\n *\r\n * @param array  Source array\r\n * @param index  Index\r\n */\r\nfunction removeIndex(array, index) {\r\n    array.splice(index, 1);\r\n}\r\n/**\r\n * Searches the array using custom function and returns index of the item if\r\n * found.\r\n *\r\n * Will call `matches` function on all items of the array. If return value\r\n * evaluates to `true`, index is returned.\r\n *\r\n * Otherwise returns -1.\r\n *\r\n * @param array    Source array\r\n * @param matches  Search function\r\n * @returns Index of the item if found\r\n */\r\nfunction findIndex(array, matches) {\r\n    const length = array.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        if (matches(array[i], i)) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * This is the same as `findIndex` except it searches from right to left.\r\n *\r\n * @param array    Source array\r\n * @param matches  Search function\r\n * @returns Index of the item if found\r\n */\r\nfunction findIndexReverse(array, matches) {\r\n    let i = array.length;\r\n    while (i > 0) {\r\n        --i;\r\n        if (matches(array[i], i)) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * Searches the array using custom function and returns item if found.\r\n *\r\n * Will call `matches` function on all items of the array. If return value\r\n * evaluates to `true`, index is returned.\r\n *\r\n * Otherwise returns `undefined`.\r\n *\r\n * @param array    Source array\r\n * @param matches  Search function\r\n * @returns Item if found\r\n */\r\nfunction find(array, matches) {\r\n    const index = findIndex(array, matches);\r\n    if (index !== -1) {\r\n        return array[index];\r\n    }\r\n}\r\n/**\r\n * This is the same as `find` except it searches from right to left.\r\n *\r\n * @param array    Source array\r\n * @param matches  Search function\r\n * @returns Item if found\r\n */\r\nfunction findReverse(array, matches) {\r\n    const index = findIndexReverse(array, matches);\r\n    if (index !== -1) {\r\n        return array[index];\r\n    }\r\n}\r\n/**\r\n * Searches the array using custom function and returns item if found.\r\n *\r\n * Will call `matches` function on all items of the array. If value\r\n * is not `undefined`, it returns it.\r\n *\r\n * Otherwise returns `undefined`.\r\n *\r\n * @param array    Source array\r\n * @param matches  Search function\r\n * @returns Item if found\r\n */\r\nfunction findMap(array, matches) {\r\n    const length = array.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        const value = matches(array[i], i);\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Iterates through all items in array and calls `fn` function for each of\r\n * them.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n */\r\nfunction shuffle(array) {\r\n    // https://stackoverflow.com/a/2450976/449477\r\n    let currentIndex = array.length, temporaryValue, randomIndex;\r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n        // Pick a remaining element...\r\n        randomIndex = Math.floor(Math.random() * currentIndex);\r\n        currentIndex -= 1;\r\n        // And swap it with the current element.\r\n        temporaryValue = array[currentIndex];\r\n        array[currentIndex] = array[randomIndex];\r\n        array[randomIndex] = temporaryValue;\r\n    }\r\n}\r\n/**\r\n * Orders an array using specific `ordering` function and returns right-most index of\r\n * the `value`.\r\n *\r\n * @ignore Exclude from docs\r\n * @param array     Source array\r\n * @param ordering  An ordering function\r\n * @returns Result of the search\r\n */\r\nfunction getSortedIndex(array, ordering) {\r\n    let start = 0;\r\n    let end = array.length;\r\n    let found = false;\r\n    while (start < end) {\r\n        // TODO is this faster/slower than using Math.floor ?\r\n        const pivot = (start + end) >> 1;\r\n        const order = ordering(array[pivot]);\r\n        // less\r\n        if (order < 0) {\r\n            start = pivot + 1;\r\n            // equal\r\n        }\r\n        else if (order === 0) {\r\n            found = true;\r\n            start = pivot + 1;\r\n            // more\r\n        }\r\n        else {\r\n            end = pivot;\r\n        }\r\n    }\r\n    return {\r\n        found: found,\r\n        index: (found ? start - 1 : start)\r\n    };\r\n}\r\n/**\r\n * Orders an array using specific `ordering` function and returns left-most index of\r\n * the `value`.\r\n *\r\n * @ignore Exclude from docs\r\n * @param array     Source array\r\n * @param ordering  An ordering function\r\n * @returns Result of the search\r\n */\r\nfunction getFirstSortedIndex(array, ordering) {\r\n    let start = 0;\r\n    let end = array.length;\r\n    let found = false;\r\n    while (start < end) {\r\n        // TODO is this faster/slower than using Math.floor ?\r\n        const pivot = (start + end) >> 1;\r\n        const order = ordering(array[pivot]);\r\n        // less\r\n        if (order < 0) {\r\n            start = pivot + 1;\r\n            // equal\r\n        }\r\n        else if (order === 0) {\r\n            found = true;\r\n            end = pivot;\r\n            // more\r\n        }\r\n        else {\r\n            end = pivot;\r\n        }\r\n    }\r\n    return {\r\n        found: found,\r\n        index: start\r\n    };\r\n}\r\nfunction keepIf(array, keep) {\r\n    let i = array.length;\r\n    while (i > 0) {\r\n        --i;\r\n        if (!keep(array[i])) {\r\n            array.splice(i, 1);\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=Array.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Array.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Children.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/core/util/Children.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Children: () => (/* binding */ Children)\n/* harmony export */ });\n/* harmony import */ var _List__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./List */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/List.js\");\n/* harmony import */ var _Array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Array */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Array.js\");\n\r\n\r\n/**\r\n * A version of [[List]] to hold children of the [[Container]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/} for more info\r\n */\r\nclass Children extends _List__WEBPACK_IMPORTED_MODULE_0__.List {\r\n    constructor(container) {\r\n        super();\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_container\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._container = container;\r\n        this._events = this.events.onAll((change) => {\r\n            if (change.type === \"clear\") {\r\n                _Array__WEBPACK_IMPORTED_MODULE_1__.each(change.oldValues, (x) => {\r\n                    this._onRemoved(x);\r\n                });\r\n            }\r\n            else if (change.type === \"push\") {\r\n                this._onInserted(change.newValue);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                this._onRemoved(change.oldValue);\r\n                this._onInserted(change.newValue, change.index);\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                this._onInserted(change.newValue, change.index);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                this._onRemoved(change.oldValue);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                this._onRemoved(change.value);\r\n                this._onInserted(change.value, change.newIndex);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IListEvent type\");\r\n            }\r\n        });\r\n    }\r\n    _onInserted(child, index) {\r\n        child._setParent(this._container, true);\r\n        const childrenDisplay = this._container._childrenDisplay;\r\n        if (index === undefined) {\r\n            childrenDisplay.addChild(child._display);\r\n        }\r\n        else {\r\n            childrenDisplay.addChildAt(child._display, index);\r\n        }\r\n    }\r\n    _onRemoved(child) {\r\n        this._container._childrenDisplay.removeChild(child._display);\r\n        this._container.markDirtyBounds();\r\n        this._container.markDirty();\r\n    }\r\n    /**\r\n     * Returns `true` if obejct is disposed.\r\n     */\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    /**\r\n     * Permanently dispose this object.\r\n     */\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            this._events.dispose();\r\n            _Array__WEBPACK_IMPORTED_MODULE_1__.each(this.values, (child) => {\r\n                child.dispose();\r\n            });\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=Children.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNS8uaW50ZXJuYWwvY29yZS91dGlsL0NoaWxkcmVuLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE4QjtBQUNJO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBLFNBQVMsNkVBQTZFO0FBQ3RGO0FBQ08sdUJBQXVCLHVDQUFJO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0Isd0NBQVc7QUFDM0I7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLHdDQUFXO0FBQ3ZCO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvaG9tZS9ydW5uZXIvd29ya3NwYWNlL25vZGVfbW9kdWxlcy9AYW1jaGFydHMvYW1jaGFydHM1Ly5pbnRlcm5hbC9jb3JlL3V0aWwvQ2hpbGRyZW4uanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTGlzdCB9IGZyb20gXCIuL0xpc3RcIjtcclxuaW1wb3J0ICogYXMgJGFycmF5IGZyb20gXCIuL0FycmF5XCI7XHJcbi8qKlxyXG4gKiBBIHZlcnNpb24gb2YgW1tMaXN0XV0gdG8gaG9sZCBjaGlsZHJlbiBvZiB0aGUgW1tDb250YWluZXJdXS5cclxuICpcclxuICogQHNlZSB7QGxpbmsgaHR0cHM6Ly93d3cuYW1jaGFydHMuY29tL2RvY3MvdjUvY29uY2VwdHMvY29tbW9uLWVsZW1lbnRzL2NvbnRhaW5lcnMvfSBmb3IgbW9yZSBpbmZvXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgQ2hpbGRyZW4gZXh0ZW5kcyBMaXN0IHtcclxuICAgIGNvbnN0cnVjdG9yKGNvbnRhaW5lcikge1xyXG4gICAgICAgIHN1cGVyKCk7XHJcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiX2Rpc3Bvc2VkXCIsIHtcclxuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxyXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcclxuICAgICAgICAgICAgdmFsdWU6IGZhbHNlXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiX2NvbnRhaW5lclwiLCB7XHJcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcclxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXHJcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcclxuICAgICAgICB9KTtcclxuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJfZXZlbnRzXCIsIHtcclxuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxyXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcclxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMuX2NvbnRhaW5lciA9IGNvbnRhaW5lcjtcclxuICAgICAgICB0aGlzLl9ldmVudHMgPSB0aGlzLmV2ZW50cy5vbkFsbCgoY2hhbmdlKSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChjaGFuZ2UudHlwZSA9PT0gXCJjbGVhclwiKSB7XHJcbiAgICAgICAgICAgICAgICAkYXJyYXkuZWFjaChjaGFuZ2Uub2xkVmFsdWVzLCAoeCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX29uUmVtb3ZlZCh4KTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2UgaWYgKGNoYW5nZS50eXBlID09PSBcInB1c2hcIikge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fb25JbnNlcnRlZChjaGFuZ2UubmV3VmFsdWUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2UgaWYgKGNoYW5nZS50eXBlID09PSBcInNldEluZGV4XCIpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX29uUmVtb3ZlZChjaGFuZ2Uub2xkVmFsdWUpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fb25JbnNlcnRlZChjaGFuZ2UubmV3VmFsdWUsIGNoYW5nZS5pbmRleCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSBpZiAoY2hhbmdlLnR5cGUgPT09IFwiaW5zZXJ0SW5kZXhcIikge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fb25JbnNlcnRlZChjaGFuZ2UubmV3VmFsdWUsIGNoYW5nZS5pbmRleCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSBpZiAoY2hhbmdlLnR5cGUgPT09IFwicmVtb3ZlSW5kZXhcIikge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fb25SZW1vdmVkKGNoYW5nZS5vbGRWYWx1ZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSBpZiAoY2hhbmdlLnR5cGUgPT09IFwibW92ZUluZGV4XCIpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX29uUmVtb3ZlZChjaGFuZ2UudmFsdWUpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fb25JbnNlcnRlZChjaGFuZ2UudmFsdWUsIGNoYW5nZS5uZXdJbmRleCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJVbmtub3duIElMaXN0RXZlbnQgdHlwZVwiKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgX29uSW5zZXJ0ZWQoY2hpbGQsIGluZGV4KSB7XHJcbiAgICAgICAgY2hpbGQuX3NldFBhcmVudCh0aGlzLl9jb250YWluZXIsIHRydWUpO1xyXG4gICAgICAgIGNvbnN0IGNoaWxkcmVuRGlzcGxheSA9IHRoaXMuX2NvbnRhaW5lci5fY2hpbGRyZW5EaXNwbGF5O1xyXG4gICAgICAgIGlmIChpbmRleCA9PT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICAgIGNoaWxkcmVuRGlzcGxheS5hZGRDaGlsZChjaGlsZC5fZGlzcGxheSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBjaGlsZHJlbkRpc3BsYXkuYWRkQ2hpbGRBdChjaGlsZC5fZGlzcGxheSwgaW5kZXgpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIF9vblJlbW92ZWQoY2hpbGQpIHtcclxuICAgICAgICB0aGlzLl9jb250YWluZXIuX2NoaWxkcmVuRGlzcGxheS5yZW1vdmVDaGlsZChjaGlsZC5fZGlzcGxheSk7XHJcbiAgICAgICAgdGhpcy5fY29udGFpbmVyLm1hcmtEaXJ0eUJvdW5kcygpO1xyXG4gICAgICAgIHRoaXMuX2NvbnRhaW5lci5tYXJrRGlydHkoKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJucyBgdHJ1ZWAgaWYgb2JlamN0IGlzIGRpc3Bvc2VkLlxyXG4gICAgICovXHJcbiAgICBpc0Rpc3Bvc2VkKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9kaXNwb3NlZDtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogUGVybWFuZW50bHkgZGlzcG9zZSB0aGlzIG9iamVjdC5cclxuICAgICAqL1xyXG4gICAgZGlzcG9zZSgpIHtcclxuICAgICAgICBpZiAoIXRoaXMuX2Rpc3Bvc2VkKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2Rpc3Bvc2VkID0gdHJ1ZTtcclxuICAgICAgICAgICAgdGhpcy5fZXZlbnRzLmRpc3Bvc2UoKTtcclxuICAgICAgICAgICAgJGFycmF5LmVhY2godGhpcy52YWx1ZXMsIChjaGlsZCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgY2hpbGQuZGlzcG9zZSgpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q2hpbGRyZW4uanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Children.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Color.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/core/util/Color.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Color: () => (/* binding */ Color),\n/* harmony export */   color: () => (/* binding */ color),\n/* harmony export */   rgba2hex: () => (/* binding */ rgba2hex)\n/* harmony export */ });\n/* harmony import */ var _Animation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Animation */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Animation.js\");\n/* harmony import */ var _Utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Utils */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Utils.js\");\n/* harmony import */ var _Type__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Type */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Type.js\");\n\r\n\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction string2hex(string) {\r\n    //string = cssColorNames[string.toLowerCase()] || string;\r\n    if (string[0] === \"#\") {\r\n        string = string.substr(1);\r\n    }\r\n    if (string.length == 3) {\r\n        string = string[0].repeat(2) + string[1].repeat(2) + string[2].repeat(2);\r\n    }\r\n    return parseInt(string, 16);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction rgba2hex(color) {\r\n    color = color.replace(/[ ]/g, \"\");\r\n    // Init\r\n    let matches = color.match(/^rgb\\(([0-9]*),([0-9]*),([0-9]*)\\)/i);\r\n    // Try rgb() format\r\n    if (matches) {\r\n        matches.push(\"1\");\r\n    }\r\n    else {\r\n        matches = color.match(/^rgba\\(([0-9]*),([0-9]*),([0-9]*),([.0-9]*)\\)/i);\r\n        if (!matches) {\r\n            return 0x000000;\r\n        }\r\n    }\r\n    let hex = \"\";\r\n    for (let i = 1; i <= 3; i++) {\r\n        let val = parseInt(matches[i]).toString(16);\r\n        if (val.length == 1) {\r\n            val = \"0\" + val;\r\n        }\r\n        hex += val;\r\n    }\r\n    return string2hex(hex);\r\n}\r\n/**\r\n * Returns a new [[Color]] object base on input.\r\n *\r\n * Accepts parameters in CSS hex or rgb/rtba strings, or hex numbers.\r\n *\r\n * * `\"#f00\"`\r\n * * `\"#ff0000\"`\r\n * * `\"rgb(255, 0, 0)\"`\r\n * * `\"rgba(255, 0, 0, 1)\"`\r\n * * `0xff0000`\r\n *\r\n * @param   input  Input color\r\n * @return         Color\r\n */\r\nfunction color(input) {\r\n    return Color.fromAny(input);\r\n}\r\n/**\r\n * Wherever color needs to be specified in amCharts 5, `Color` object needs to\r\n * be used.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/} for more info\r\n * @important\r\n */\r\nclass Color {\r\n    constructor(hex) {\r\n        Object.defineProperty(this, \"_hex\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._hex = hex | 0;\r\n    }\r\n    /**\r\n     * Color numeric value.\r\n     */\r\n    get hex() {\r\n        return this._hex;\r\n    }\r\n    /**\r\n     * Value of color's R channel.\r\n     * @return R value\r\n     */\r\n    get r() {\r\n        return this._hex >>> 16;\r\n    }\r\n    /**\r\n     * Value of color's G channel.\r\n     * @return G value\r\n     */\r\n    get g() {\r\n        return (this._hex >> 8) & 0xFF;\r\n    }\r\n    /**\r\n     * Value of color's B channel.\r\n     * @return B value\r\n     */\r\n    get b() {\r\n        return this._hex & 0xFF;\r\n    }\r\n    /**\r\n     * Returns color CSS representation in form of `rgba(r, g, b, a)` string.\r\n     *\r\n     * @param   alpha  Opacity\r\n     * @return         CSS string\r\n     */\r\n    toCSS(alpha = 1) {\r\n        return \"rgba(\" + this.r + \", \" + this.g + \", \" + this.b + \", \" + alpha + \")\";\r\n    }\r\n    /**\r\n     * Returns color CSS representation in form of `#rgb` string.\r\n     *\r\n     * @return         CSS string\r\n     */\r\n    toCSSHex() {\r\n        return \"#\" + _Utils__WEBPACK_IMPORTED_MODULE_0__.padString(this.r.toString(16), 2) + _Utils__WEBPACK_IMPORTED_MODULE_0__.padString(this.g.toString(16), 2) + _Utils__WEBPACK_IMPORTED_MODULE_0__.padString(this.b.toString(16), 2);\r\n    }\r\n    /**\r\n     * Returns color's HSL info.\r\n     * @param   alpha Opacity\r\n     * @return        HSL info\r\n     */\r\n    toHSL(alpha = 1) {\r\n        return _Utils__WEBPACK_IMPORTED_MODULE_0__.rgbToHsl({\r\n            r: this.r,\r\n            g: this.g,\r\n            b: this.b,\r\n            a: alpha\r\n        });\r\n    }\r\n    /**\r\n     * Converts HSL values into a new [[Color]] object.\r\n     *\r\n     * @param   h H value\r\n     * @param   s S value\r\n     * @param   l L value\r\n     * @return    Color object\r\n     */\r\n    static fromHSL(h, s, l) {\r\n        const rgb = _Utils__WEBPACK_IMPORTED_MODULE_0__.hslToRgb({\r\n            h: h,\r\n            s: s,\r\n            l: l\r\n        });\r\n        return this.fromRGB(rgb.r, rgb.g, rgb.b);\r\n    }\r\n    toString() {\r\n        return this.toCSSHex();\r\n    }\r\n    /**\r\n     * Converts hex number into a new [[Color]] object.\r\n     *\r\n     * ```TypeScript\r\n     * Color.fromHex(0xff0000) // red\r\n     * ```\r\n     * ```JavaScript\r\n     * Color.fromHex(0xff0000) // red\r\n     * ```\r\n     *\r\n     * @param   hex  Hex color\r\n     * @return       Color\r\n     */\r\n    static fromHex(hex) {\r\n        return new Color(hex);\r\n    }\r\n    /**\r\n     * Converts RGB values to a new [[Color]] object.\r\n     *\r\n     * @param   r  R value\r\n     * @param   g  G value\r\n     * @param   b  B value\r\n     * @return     Color\r\n     */\r\n    static fromRGB(r, g, b) {\r\n        return new Color((b | 0) + (g << 8) + (r << 16));\r\n    }\r\n    /**\r\n     * Converts RGB string to a new [[Color]] object.\r\n     *\r\n     * ```TypeScript\r\n     * Color.fromString(\"#ff0000\") // red\r\n     * ```\r\n     * ```JavaScript\r\n     * Color.fromString(\"#ff0000\") // red\r\n     * ```\r\n     *\r\n     * @param   s  RGB string\r\n     * @return     Color\r\n     */\r\n    static fromString(s) {\r\n        return new Color(string2hex(s));\r\n    }\r\n    /**\r\n     * Converts CSS rgba() syntax to a new [[Color]] object.\r\n     *\r\n     * ```TypeScript\r\n     * Color.fromCSS(\"rgba(255, 0, 0, 1)\") // red\r\n     * ```\r\n     * ```JavaScript\r\n     * Color.fromCSS(\"rgba(255, 0, 0, 1)\") // red\r\n     * ```\r\n     *\r\n     * @param  {string} s [description]\r\n     * @return {Color}    [description]\r\n     */\r\n    static fromCSS(s) {\r\n        return new Color(rgba2hex(s));\r\n    }\r\n    /**\r\n     * Convert to color from virtually anything.\r\n     *\r\n     * Will throw an exception if unable to resolve the color.\r\n     *\r\n     * @param   s  Source\r\n     * @return     Color\r\n     */\r\n    static fromAny(s) {\r\n        if (_Type__WEBPACK_IMPORTED_MODULE_1__.isString(s)) {\r\n            if (s[0] == \"#\") {\r\n                return Color.fromString(s);\r\n            }\r\n            else if (s.substr(0, 3) == \"rgb\") {\r\n                return Color.fromCSS(s);\r\n            }\r\n        }\r\n        else if (_Type__WEBPACK_IMPORTED_MODULE_1__.isNumber(s)) {\r\n            return Color.fromHex(s);\r\n        }\r\n        else if (s instanceof Color) {\r\n            return Color.fromHex(s.hex);\r\n        }\r\n        throw new Error(\"Unknown color syntax: \" + s);\r\n    }\r\n    /**\r\n     * Returns a new [[Color]] object based on either `lightAlternative` or\r\n     * `darkAlternative` depending on which one is more contrasting with\r\n     * the `color`.\r\n     *\r\n     * @param   color             Reference color\r\n     * @param   lightAlternative  Light color\r\n     * @param   darkAlternative   Dark color\r\n     * @return                    Alternative color\r\n     */\r\n    static alternative(color, lightAlternative, darkAlternative) {\r\n        const rgb = _Utils__WEBPACK_IMPORTED_MODULE_0__.alternativeColor({ r: color.r, g: color.g, b: color.b }, lightAlternative ? { r: lightAlternative.r, g: lightAlternative.g, b: lightAlternative.b } : undefined, darkAlternative ? { r: darkAlternative.r, g: darkAlternative.g, b: darkAlternative.b } : undefined);\r\n        return this.fromRGB(rgb.r, rgb.g, rgb.b);\r\n    }\r\n    /**\r\n     * Returns an intermediate Color between two reference colors depending on\r\n     * the progress (`diff`) between the two.\r\n     *\r\n     * @param   diff  Progress\r\n     * @param   from  Source color\r\n     * @param   to    Target color\r\n     * @param   mode  Interpolation mode\r\n     * @return        Color\r\n     */\r\n    static interpolate(diff, from, to, mode = \"rgb\") {\r\n        if (mode == \"hsl\") {\r\n            const fromHSL = from.toHSL();\r\n            const toHSL = to.toHSL();\r\n            return Color.fromHSL((0,_Animation__WEBPACK_IMPORTED_MODULE_2__.range)(diff, fromHSL.h, toHSL.h), (0,_Animation__WEBPACK_IMPORTED_MODULE_2__.range)(diff, fromHSL.s, toHSL.s), (0,_Animation__WEBPACK_IMPORTED_MODULE_2__.range)(diff, fromHSL.l, toHSL.l));\r\n        }\r\n        else {\r\n            return Color.fromRGB((0,_Animation__WEBPACK_IMPORTED_MODULE_2__.range)(diff, from.r, to.r), (0,_Animation__WEBPACK_IMPORTED_MODULE_2__.range)(diff, from.g, to.g), (0,_Animation__WEBPACK_IMPORTED_MODULE_2__.range)(diff, from.b, to.b));\r\n        }\r\n    }\r\n    /**\r\n     * Returns a new [[Color]] lightened by `percent` value.\r\n     *\r\n     * Use negative value to darken the color.\r\n     *\r\n     * @param   color    Source color\r\n     * @param   percent  Percent\r\n     * @return           New color\r\n     */\r\n    static lighten(color, percent) {\r\n        const rgb = _Utils__WEBPACK_IMPORTED_MODULE_0__.lighten({ r: color.r, g: color.g, b: color.b }, percent);\r\n        return Color.fromRGB(rgb.r, rgb.g, rgb.b);\r\n    }\r\n    /**\r\n     * Returns a new [[Color]] brightened by `percent` value.\r\n     *\r\n     * Use negative value to dim the color.\r\n     *\r\n     * @param   color    Source color\r\n     * @param   percent  Percent\r\n     * @return           New color\r\n     */\r\n    static brighten(color, percent) {\r\n        const rgb = _Utils__WEBPACK_IMPORTED_MODULE_0__.brighten({ r: color.r, g: color.g, b: color.b }, percent);\r\n        return Color.fromRGB(rgb.r, rgb.g, rgb.b);\r\n    }\r\n    /**\r\n     * Returns a new [[Color]] saturated by `percent` value.\r\n     *\r\n     * Value range is between `0` (fully desaturated), to `1` (full color).\r\n     *\r\n     * @param   color    Source color\r\n     * @param   percent  Percent\r\n     * @return           New color\r\n     */\r\n    static saturate(color, percent) {\r\n        const rgb = _Utils__WEBPACK_IMPORTED_MODULE_0__.saturate({ r: color.r, g: color.g, b: color.b }, percent);\r\n        return Color.fromRGB(rgb.r, rgb.g, rgb.b);\r\n    }\r\n}\r\n//# sourceMappingURL=Color.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Color.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Data.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/core/util/Data.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JsonData: () => (/* binding */ JsonData),\n/* harmony export */   ListData: () => (/* binding */ ListData)\n/* harmony export */ });\n/* harmony import */ var _List__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./List */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/List.js\");\n\r\n/**\r\n * A [[List]] that holds components data.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/data/} for more info\r\n */\r\nclass ListData extends _List__WEBPACK_IMPORTED_MODULE_0__.List {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * An optional processor for data.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/data/#Pre_processing_data} for more info\r\n         */\r\n        Object.defineProperty(this, \"processor\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    incrementRef() { }\r\n    /**\r\n     * @ignore\r\n     */\r\n    decrementRef() { }\r\n    _onPush(newValue) {\r\n        if (this.processor) {\r\n            this.processor.processRow(newValue);\r\n        }\r\n        super._onPush(newValue);\r\n    }\r\n    _onInsertIndex(index, newValue) {\r\n        if (this.processor) {\r\n            this.processor.processRow(newValue);\r\n        }\r\n        super._onInsertIndex(index, newValue);\r\n    }\r\n    _onSetIndex(index, oldValue, newValue) {\r\n        if (this.processor) {\r\n            this.processor.processRow(newValue);\r\n        }\r\n        super._onSetIndex(index, oldValue, newValue);\r\n    }\r\n}\r\n/**\r\n * @deprecated\r\n * @todo remove\r\n */\r\nclass JsonData {\r\n    constructor(value) {\r\n        Object.defineProperty(this, \"processor\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_value\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._value = value;\r\n    }\r\n    incrementRef() { }\r\n    decrementRef() { }\r\n}\r\n//# sourceMappingURL=Data.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNS8uaW50ZXJuYWwvY29yZS91dGlsL0RhdGEuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQThCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBLFNBQVMsdURBQXVEO0FBQ2hFO0FBQ08sdUJBQXVCLHVDQUFJO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsMkVBQTJFO0FBQzVGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3Jrc3BhY2Uvbm9kZV9tb2R1bGVzL0BhbWNoYXJ0cy9hbWNoYXJ0czUvLmludGVybmFsL2NvcmUvdXRpbC9EYXRhLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IExpc3QgfSBmcm9tIFwiLi9MaXN0XCI7XHJcbi8qKlxyXG4gKiBBIFtbTGlzdF1dIHRoYXQgaG9sZHMgY29tcG9uZW50cyBkYXRhLlxyXG4gKlxyXG4gKiBAc2VlIHtAbGluayBodHRwczovL3d3dy5hbWNoYXJ0cy5jb20vZG9jcy92NS9jb25jZXB0cy9kYXRhL30gZm9yIG1vcmUgaW5mb1xyXG4gKi9cclxuZXhwb3J0IGNsYXNzIExpc3REYXRhIGV4dGVuZHMgTGlzdCB7XHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEFuIG9wdGlvbmFsIHByb2Nlc3NvciBmb3IgZGF0YS5cclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIEBzZWUge0BsaW5rIGh0dHBzOi8vd3d3LmFtY2hhcnRzLmNvbS9kb2NzL3Y1L2NvbmNlcHRzL2RhdGEvI1ByZV9wcm9jZXNzaW5nX2RhdGF9IGZvciBtb3JlIGluZm9cclxuICAgICAgICAgKi9cclxuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJwcm9jZXNzb3JcIiwge1xyXG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXHJcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxyXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIEBpZ25vcmVcclxuICAgICAqL1xyXG4gICAgaW5jcmVtZW50UmVmKCkgeyB9XHJcbiAgICAvKipcclxuICAgICAqIEBpZ25vcmVcclxuICAgICAqL1xyXG4gICAgZGVjcmVtZW50UmVmKCkgeyB9XHJcbiAgICBfb25QdXNoKG5ld1ZhbHVlKSB7XHJcbiAgICAgICAgaWYgKHRoaXMucHJvY2Vzc29yKSB7XHJcbiAgICAgICAgICAgIHRoaXMucHJvY2Vzc29yLnByb2Nlc3NSb3cobmV3VmFsdWUpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBzdXBlci5fb25QdXNoKG5ld1ZhbHVlKTtcclxuICAgIH1cclxuICAgIF9vbkluc2VydEluZGV4KGluZGV4LCBuZXdWYWx1ZSkge1xyXG4gICAgICAgIGlmICh0aGlzLnByb2Nlc3Nvcikge1xyXG4gICAgICAgICAgICB0aGlzLnByb2Nlc3Nvci5wcm9jZXNzUm93KG5ld1ZhbHVlKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgc3VwZXIuX29uSW5zZXJ0SW5kZXgoaW5kZXgsIG5ld1ZhbHVlKTtcclxuICAgIH1cclxuICAgIF9vblNldEluZGV4KGluZGV4LCBvbGRWYWx1ZSwgbmV3VmFsdWUpIHtcclxuICAgICAgICBpZiAodGhpcy5wcm9jZXNzb3IpIHtcclxuICAgICAgICAgICAgdGhpcy5wcm9jZXNzb3IucHJvY2Vzc1JvdyhuZXdWYWx1ZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHN1cGVyLl9vblNldEluZGV4KGluZGV4LCBvbGRWYWx1ZSwgbmV3VmFsdWUpO1xyXG4gICAgfVxyXG59XHJcbi8qKlxyXG4gKiBAZGVwcmVjYXRlZFxyXG4gKiBAdG9kbyByZW1vdmVcclxuICovXHJcbmV4cG9ydCBjbGFzcyBKc29uRGF0YSB7XHJcbiAgICBjb25zdHJ1Y3Rvcih2YWx1ZSkge1xyXG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcInByb2Nlc3NvclwiLCB7XHJcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcclxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXHJcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcclxuICAgICAgICB9KTtcclxuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJfdmFsdWVcIiwge1xyXG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXHJcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxyXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5fdmFsdWUgPSB2YWx1ZTtcclxuICAgIH1cclxuICAgIGluY3JlbWVudFJlZigpIHsgfVxyXG4gICAgZGVjcmVtZW50UmVmKCkgeyB9XHJcbn1cclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RGF0YS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Data.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/DateFormatter.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/core/util/DateFormatter.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DateFormatter: () => (/* binding */ DateFormatter)\n/* harmony export */ });\n/* harmony import */ var _Entity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Entity */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Entity.js\");\n/* harmony import */ var _TextFormatter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./TextFormatter */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/TextFormatter.js\");\n/* harmony import */ var _Timezone__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Timezone */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Timezone.js\");\n/* harmony import */ var _Type__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Type */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Type.js\");\n/* harmony import */ var _Utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Utils */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Utils.js\");\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Date formatter class.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\r\n * @important\r\n */\r\nclass DateFormatter extends _Entity__WEBPACK_IMPORTED_MODULE_0__.Entity {\r\n    _setDefaults() {\r\n        // Defaults\r\n        this._setDefault(\"capitalize\", true);\r\n        this._setDefault(\"dateFormat\", \"yyyy-MM-dd\");\r\n        super._setDefaults();\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n    }\r\n    /**\r\n     * Formats a source `Date` object into string format\r\n     * @param   source          inpout date\r\n     * @param   format          Output format\r\n     * @param   ignoreTimezone  Ignore timezone?\r\n     * @return                  Formatted date\r\n     */\r\n    format(source, format, ignoreTimezone = false) {\r\n        // Locale?\r\n        // TODO\r\n        // No format passed in or it's empty\r\n        if (typeof format === \"undefined\" || format === \"\") {\r\n            format = this.get(\"dateFormat\", \"yyyy-MM-dd\");\r\n        }\r\n        // Init return value\r\n        let formatted;\r\n        // Cast?\r\n        // TODO: decide if we need to cast\r\n        let date = source;\r\n        // Is it a built-in format or Intl.DateTimeFormat\r\n        if (_Type__WEBPACK_IMPORTED_MODULE_1__.isObject(format)) {\r\n            try {\r\n                const locales = this.get(\"intlLocales\");\r\n                if (locales) {\r\n                    return new Intl.DateTimeFormat(locales, format).format(date);\r\n                }\r\n                else {\r\n                    return new Intl.DateTimeFormat(undefined, format).format(date);\r\n                }\r\n            }\r\n            catch (e) {\r\n                return \"Invalid\";\r\n            }\r\n        }\r\n        // get format info (it will also deal with parser caching)\r\n        let info = this.parseFormat(format);\r\n        // Should we apply custom time zone?\r\n        const timezone = this._root.timezone;\r\n        let originalDate = date;\r\n        if (timezone && !this._root.utc && !ignoreTimezone) {\r\n            date = timezone.convertLocal(date);\r\n        }\r\n        // Check if it's a valid date\r\n        if (!_Type__WEBPACK_IMPORTED_MODULE_1__.isNumber(date.getTime())) {\r\n            // TODO translation\r\n            //return this._t(\"Invalid date\");\r\n            return \"Invalid date\";\r\n        }\r\n        // Apply format\r\n        formatted = this.applyFormat(date, info, ignoreTimezone, originalDate);\r\n        // Capitalize\r\n        if (this.get(\"capitalize\")) {\r\n            formatted = formatted.replace(/^.{1}/, formatted.substr(0, 1).toUpperCase());\r\n        }\r\n        // We're done\r\n        return formatted;\r\n    }\r\n    /**\r\n     * Applies format to Date.\r\n     *\r\n     * @param date      Date object\r\n     * @param info      Parsed format information\r\n     * @return Formatted date string\r\n     */\r\n    applyFormat(date, info, ignoreTimezone = false, originalDate) {\r\n        // Init return value\r\n        let res = info.template;\r\n        // Get values\r\n        let fullYear, month, weekday, day, hours, minutes, seconds, milliseconds, timestamp = date.getTime();\r\n        if (this._root.utc && !ignoreTimezone) {\r\n            fullYear = date.getUTCFullYear();\r\n            month = date.getUTCMonth();\r\n            weekday = date.getUTCDay();\r\n            day = date.getUTCDate();\r\n            hours = date.getUTCHours();\r\n            minutes = date.getUTCMinutes();\r\n            seconds = date.getUTCSeconds();\r\n            milliseconds = date.getUTCMilliseconds();\r\n        }\r\n        else {\r\n            fullYear = date.getFullYear();\r\n            month = date.getMonth();\r\n            weekday = date.getDay();\r\n            day = date.getDate();\r\n            hours = date.getHours();\r\n            minutes = date.getMinutes();\r\n            seconds = date.getSeconds();\r\n            milliseconds = date.getMilliseconds();\r\n        }\r\n        // Go through each part and format/replace it in template\r\n        for (let i = 0, len = info.parts.length; i < len; i++) {\r\n            let value = \"\";\r\n            switch (info.parts[i]) {\r\n                case \"G\":\r\n                    value = this._t(fullYear < 0\r\n                        ? \"_era_bc\"\r\n                        : \"_era_ad\");\r\n                    break;\r\n                case \"yyyy\":\r\n                    value = Math.abs(fullYear).toString();\r\n                    if (fullYear < 0) {\r\n                        value += this._t(\"_era_bc\");\r\n                    }\r\n                    break;\r\n                case \"yyy\":\r\n                case \"yy\":\r\n                case \"y\":\r\n                    value = Math.abs(fullYear).toString().substr(-info.parts[i].length);\r\n                    if (fullYear < 0) {\r\n                        value += this._t(\"_era_bc\");\r\n                    }\r\n                    break;\r\n                case \"YYYY\":\r\n                case \"YYY\":\r\n                case \"YY\":\r\n                case \"Y\":\r\n                    let year = _Utils__WEBPACK_IMPORTED_MODULE_2__.getWeekYear(date, this._root.utc);\r\n                    if (info.parts[i] == \"YYYY\") {\r\n                        value = Math.abs(year).toString();\r\n                    }\r\n                    else {\r\n                        value = Math.abs(year).toString().substr(-info.parts[i].length);\r\n                    }\r\n                    if (year < 0) {\r\n                        value += this._t(\"_era_bc\");\r\n                    }\r\n                    break;\r\n                case \"u\":\r\n                    // @todo\r\n                    break;\r\n                case \"q\":\r\n                    value = \"\" + Math.ceil((date.getMonth() + 1) / 3);\r\n                    break;\r\n                case \"MMMMM\":\r\n                    value = this._t(this._getMonth(month)).substr(0, 1);\r\n                    break;\r\n                case \"MMMM\":\r\n                    value = this._t(this._getMonth(month));\r\n                    break;\r\n                case \"MMM\":\r\n                    value = this._t(this._getShortMonth(month));\r\n                    break;\r\n                case \"MM\":\r\n                    value = _Utils__WEBPACK_IMPORTED_MODULE_2__.padString(month + 1, 2, \"0\");\r\n                    break;\r\n                case \"M\":\r\n                    value = (month + 1).toString();\r\n                    break;\r\n                case \"ww\":\r\n                    value = _Utils__WEBPACK_IMPORTED_MODULE_2__.padString(_Utils__WEBPACK_IMPORTED_MODULE_2__.getWeek(date, this._root.utc), 2, \"0\");\r\n                    break;\r\n                case \"w\":\r\n                    value = _Utils__WEBPACK_IMPORTED_MODULE_2__.getWeek(date, this._root.utc).toString();\r\n                    break;\r\n                case \"W\":\r\n                    value = _Utils__WEBPACK_IMPORTED_MODULE_2__.getMonthWeek(date, this._root.utc).toString();\r\n                    break;\r\n                case \"dd\":\r\n                    value = _Utils__WEBPACK_IMPORTED_MODULE_2__.padString(day, 2, \"0\");\r\n                    break;\r\n                case \"d\":\r\n                    value = day.toString();\r\n                    break;\r\n                case \"DD\":\r\n                case \"DDD\":\r\n                    value = _Utils__WEBPACK_IMPORTED_MODULE_2__.padString(_Utils__WEBPACK_IMPORTED_MODULE_2__.getYearDay(date, this._root.utc).toString(), info.parts[i].length, \"0\");\r\n                    break;\r\n                case \"D\":\r\n                    value = _Utils__WEBPACK_IMPORTED_MODULE_2__.getYearDay(date, this._root.utc).toString();\r\n                    break;\r\n                case \"F\":\r\n                    // @todo\r\n                    break;\r\n                case \"g\":\r\n                    // @todo\r\n                    break;\r\n                case \"t\":\r\n                    value = this._root.language.translateFunc(\"_dateOrd\").call(this, day);\r\n                    break;\r\n                case \"E\":\r\n                    value = (weekday || 7).toString();\r\n                    break;\r\n                case \"EE\":\r\n                    value = _Utils__WEBPACK_IMPORTED_MODULE_2__.padString((weekday || 7).toString(), 2, \"0\");\r\n                    break;\r\n                case \"EEE\":\r\n                case \"eee\":\r\n                    value = this._t(this._getShortWeekday(weekday));\r\n                    break;\r\n                case \"EEEE\":\r\n                case \"eeee\":\r\n                    value = this._t(this._getWeekday(weekday));\r\n                    break;\r\n                case \"EEEEE\":\r\n                case \"eeeee\":\r\n                    value = this._t(this._getShortWeekday(weekday)).substr(0, 1);\r\n                    break;\r\n                case \"e\":\r\n                case \"ee\":\r\n                    value = (weekday - (this._root.locale.firstDayOfWeek || 1) + 1).toString();\r\n                    if (info.parts[i] == \"ee\") {\r\n                        value = _Utils__WEBPACK_IMPORTED_MODULE_2__.padString(value, 2, \"0\");\r\n                    }\r\n                    break;\r\n                case \"a\":\r\n                    if (hours >= 12) {\r\n                        value = this._t(\"PM\");\r\n                    }\r\n                    else {\r\n                        value = this._t(\"AM\");\r\n                    }\r\n                    break;\r\n                case \"aa\":\r\n                    if (hours >= 12) {\r\n                        value = this._t(\"P.M.\");\r\n                    }\r\n                    else {\r\n                        value = this._t(\"A.M.\");\r\n                    }\r\n                    break;\r\n                case \"aaa\":\r\n                    if (hours >= 12) {\r\n                        value = this._t(\"P\");\r\n                    }\r\n                    else {\r\n                        value = this._t(\"A\");\r\n                    }\r\n                    break;\r\n                case \"h\":\r\n                    value = _Utils__WEBPACK_IMPORTED_MODULE_2__.get12Hours(hours).toString();\r\n                    break;\r\n                case \"hh\":\r\n                    value = _Utils__WEBPACK_IMPORTED_MODULE_2__.padString(_Utils__WEBPACK_IMPORTED_MODULE_2__.get12Hours(hours), 2, \"0\");\r\n                    break;\r\n                case \"H\":\r\n                    value = hours.toString();\r\n                    break;\r\n                case \"HH\":\r\n                    value = _Utils__WEBPACK_IMPORTED_MODULE_2__.padString(hours, 2, \"0\");\r\n                    break;\r\n                case \"K\":\r\n                    value = _Utils__WEBPACK_IMPORTED_MODULE_2__.get12Hours(hours, 0).toString();\r\n                    break;\r\n                case \"KK\":\r\n                    value = _Utils__WEBPACK_IMPORTED_MODULE_2__.padString(_Utils__WEBPACK_IMPORTED_MODULE_2__.get12Hours(hours, 0), 2, \"0\");\r\n                    break;\r\n                case \"k\":\r\n                    value = (hours + 1).toString();\r\n                    break;\r\n                case \"kk\":\r\n                    value = _Utils__WEBPACK_IMPORTED_MODULE_2__.padString(hours + 1, 2, \"0\");\r\n                    break;\r\n                case \"m\":\r\n                    value = minutes.toString();\r\n                    break;\r\n                case \"mm\":\r\n                    value = _Utils__WEBPACK_IMPORTED_MODULE_2__.padString(minutes, 2, \"0\");\r\n                    break;\r\n                case \"s\":\r\n                    value = seconds.toString();\r\n                    break;\r\n                case \"ss\":\r\n                    value = _Utils__WEBPACK_IMPORTED_MODULE_2__.padString(seconds, 2, \"0\");\r\n                    break;\r\n                case \"S\":\r\n                case \"SS\":\r\n                case \"SSS\":\r\n                    value = Math.round((milliseconds / 1000) * Math.pow(10, info.parts[i].length)).toString();\r\n                    break;\r\n                case \"x\":\r\n                    value = timestamp.toString();\r\n                    break;\r\n                case \"n\":\r\n                case \"nn\":\r\n                case \"nnn\":\r\n                    value = _Utils__WEBPACK_IMPORTED_MODULE_2__.padString(milliseconds, info.parts[i].length, \"0\");\r\n                    break;\r\n                case \"z\":\r\n                    value = _Utils__WEBPACK_IMPORTED_MODULE_2__.getTimeZone(originalDate || date, false, false, this._root.utc, this._root.timezone ? this._root.timezone.name : undefined).replace(/[+-]+[0-9]+$/, \"\");\r\n                    break;\r\n                case \"zz\":\r\n                    value = _Utils__WEBPACK_IMPORTED_MODULE_2__.getTimeZone(originalDate || date, true, false, this._root.utc, this._root.timezone ? this._root.timezone.name : undefined);\r\n                    break;\r\n                case \"zzz\":\r\n                    value = _Utils__WEBPACK_IMPORTED_MODULE_2__.getTimeZone(originalDate || date, false, true, this._root.utc, this._root.timezone ? this._root.timezone.name : undefined).replace(/[+-]+[0-9]+$/, \"\");\r\n                    break;\r\n                case \"zzzz\":\r\n                    value = _Utils__WEBPACK_IMPORTED_MODULE_2__.getTimeZone(originalDate || date, true, true, this._root.utc, this._root.timezone ? this._root.timezone.name : undefined);\r\n                    break;\r\n                case \"Z\":\r\n                case \"ZZ\":\r\n                    let timezone = this._root.utc ? \"UTC\" : this._root.timezone;\r\n                    if (timezone instanceof _Timezone__WEBPACK_IMPORTED_MODULE_3__.Timezone) {\r\n                        timezone = timezone.name;\r\n                    }\r\n                    const offset = timezone ? _Utils__WEBPACK_IMPORTED_MODULE_2__.getTimezoneOffset(timezone, originalDate || date) : date.getTimezoneOffset();\r\n                    let tz = Math.abs(offset) / 60;\r\n                    let tzh = Math.floor(tz);\r\n                    let tzm = tz * 60 - tzh * 60;\r\n                    if (this._root.utc) {\r\n                        tzh = 0;\r\n                        tzm = 0;\r\n                    }\r\n                    if (info.parts[i] == \"Z\") {\r\n                        value = \"GMT\";\r\n                        value += offset > 0 ? \"-\" : \"+\";\r\n                        value += _Utils__WEBPACK_IMPORTED_MODULE_2__.padString(tzh, 2) + \":\" + _Utils__WEBPACK_IMPORTED_MODULE_2__.padString(tzm, 2);\r\n                    }\r\n                    else {\r\n                        value = offset > 0 ? \"-\" : \"+\";\r\n                        value += _Utils__WEBPACK_IMPORTED_MODULE_2__.padString(tzh, 2) + _Utils__WEBPACK_IMPORTED_MODULE_2__.padString(tzm, 2);\r\n                    }\r\n                    break;\r\n                case \"i\":\r\n                    value = date.toISOString();\r\n                    break;\r\n                case \"I\":\r\n                    value = date.toUTCString();\r\n                    break;\r\n            }\r\n            res = res.replace(_Type__WEBPACK_IMPORTED_MODULE_1__.PLACEHOLDER, value);\r\n        }\r\n        return res;\r\n    }\r\n    /**\r\n     * Parses format into structured infromation.\r\n     *\r\n     * @param format Format template\r\n     */\r\n    parseFormat(format) {\r\n        // Check cache\r\n        // TODO: implement caching of the parsed format\r\n        // Init format parse info holder\r\n        let info = {\r\n            \"template\": \"\",\r\n            \"parts\": []\r\n        };\r\n        // Let TextFormatter split into chunks\r\n        let chunks = _TextFormatter__WEBPACK_IMPORTED_MODULE_4__.TextFormatter.chunk(format, true);\r\n        for (let i = 0; i < chunks.length; i++) {\r\n            let chunk = chunks[i];\r\n            if (chunk.type === \"value\") {\r\n                // Just \"Date\"?\r\n                if (chunk.text.match(/^date$/i)) {\r\n                    let dateFormat = this.get(\"dateFormat\", \"yyyy-MM-dd\");\r\n                    if (!_Type__WEBPACK_IMPORTED_MODULE_1__.isString(dateFormat)) {\r\n                        dateFormat = \"yyyy-MM-dd\";\r\n                    }\r\n                    chunk.text = dateFormat;\r\n                }\r\n                // Find all possible parts\r\n                let matches = chunk.text.match(/G|yyyy|yyy|yy|y|YYYY|YYY|YY|Y|u|q|MMMMM|MMMM|MMM|MM|M|ww|w|W|dd|d|DDD|DD|D|F|g|EEEEE|EEEE|EEE|EE|E|eeeee|eeee|eee|ee|e|aaa|aa|a|hh|h|HH|H|KK|K|kk|k|mm|m|ss|s|SSS|SS|S|A|zzzz|zzz|zz|z|ZZ|Z|t|x|nnn|nn|n|i|I/g);\r\n                // Found?\r\n                if (matches) {\r\n                    // Populate template\r\n                    for (let x = 0; x < matches.length; x++) {\r\n                        info.parts.push(matches[x]);\r\n                        chunk.text = chunk.text.replace(matches[x], _Type__WEBPACK_IMPORTED_MODULE_1__.PLACEHOLDER);\r\n                    }\r\n                }\r\n            }\r\n            // Apply to template\r\n            info.template += chunk.text;\r\n        }\r\n        // Save cache\r\n        // TODO\r\n        return info;\r\n    }\r\n    _months() {\r\n        return [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n    }\r\n    _getMonth(index) {\r\n        return this._months()[index];\r\n    }\r\n    _shortMonths() {\r\n        return [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May(short)\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n    }\r\n    _getShortMonth(index) {\r\n        return this._shortMonths()[index];\r\n    }\r\n    _weekdays() {\r\n        return [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n    }\r\n    _getWeekday(index) {\r\n        return this._weekdays()[index];\r\n    }\r\n    _shortWeekdays() {\r\n        return [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n    }\r\n    _getShortWeekday(index) {\r\n        return this._shortWeekdays()[index];\r\n    }\r\n    parse(source, format, utc) {\r\n        // If UTC is not supplied, use Root setting\r\n        if (typeof utc === \"undefined\") {\r\n            utc = this._root.utc;\r\n        }\r\n        // Is it already a Date\r\n        if (source instanceof Date) {\r\n            return source;\r\n        }\r\n        // Is it a numeric timestamp\r\n        if (_Type__WEBPACK_IMPORTED_MODULE_1__.isNumber(source)) {\r\n            return new Date(source);\r\n        }\r\n        // Are we parsing a timestamp?\r\n        if (format == \"x\") {\r\n            return new Date(parseInt(source));\r\n        }\r\n        // No? Let's check if it's string, and try converting to it if nec\r\n        if (!_Type__WEBPACK_IMPORTED_MODULE_1__.isString(source)) {\r\n            source = source.toString();\r\n        }\r\n        // Init return value\r\n        let res;\r\n        // Init RegEx for parsing\r\n        let reg = \"\";\r\n        // Clean format\r\n        format = _Utils__WEBPACK_IMPORTED_MODULE_2__.cleanFormat(format);\r\n        // Clip format to length of the source string\r\n        format = format.substr(0, source.length);\r\n        // Parse format\r\n        let info = this.parseFormat(format);\r\n        // Init parsed items holder\r\n        let parsedIndexes = {\r\n            \"year\": -1,\r\n            \"year3\": -1,\r\n            \"year2\": -1,\r\n            \"year1\": -1,\r\n            \"month\": -1,\r\n            \"monthShort\": -1,\r\n            \"monthLong\": -1,\r\n            \"weekdayShort\": -1,\r\n            \"weekdayLong\": -1,\r\n            \"day\": -1,\r\n            \"yearDay\": -1,\r\n            \"week\": -1,\r\n            \"hourBase0\": -1,\r\n            \"hour12Base0\": -1,\r\n            \"hourBase1\": -1,\r\n            \"hour12Base1\": -1,\r\n            \"minute\": -1,\r\n            \"second\": -1,\r\n            \"millisecond\": -1,\r\n            \"millisecondDigits\": -1,\r\n            \"am\": -1,\r\n            \"zone\": -1,\r\n            \"timestamp\": -1,\r\n            \"iso\": -1\r\n        };\r\n        // Init values\r\n        let resValues = {\r\n            \"year\": 1970,\r\n            \"month\": 0,\r\n            \"day\": 1,\r\n            \"hour\": 0,\r\n            \"minute\": 0,\r\n            \"second\": 0,\r\n            \"millisecond\": 0,\r\n            \"timestamp\": null,\r\n            \"offset\": 0,\r\n            \"utc\": utc\r\n        };\r\n        // Index adjuster\r\n        let indexAdjust = 0;\r\n        let index = 0;\r\n        // Iterate through all of the parts\r\n        for (let i = 0; i < info.parts.length; i++) {\r\n            // Set current match index\r\n            index = i + indexAdjust + 1;\r\n            switch (info.parts[i]) {\r\n                case \"yyyy\":\r\n                case \"YYYY\":\r\n                    reg += \"([0-9]{4})\";\r\n                    parsedIndexes.year = index;\r\n                    break;\r\n                case \"yyy\":\r\n                case \"YYY\":\r\n                    reg += \"([0-9]{3})\";\r\n                    parsedIndexes.year3 = index;\r\n                    break;\r\n                case \"yy\":\r\n                case \"YY\":\r\n                    reg += \"([0-9]{2})\";\r\n                    parsedIndexes.year2 = index;\r\n                    break;\r\n                case \"y\":\r\n                case \"Y\":\r\n                    reg += \"([0-9]{1})\";\r\n                    parsedIndexes.year1 = index;\r\n                    break;\r\n                case \"MMMM\":\r\n                    reg += \"(\" + this.getStringList(this._months()).join(\"|\") + \")\";\r\n                    parsedIndexes.monthLong = index;\r\n                    break;\r\n                case \"MMM\":\r\n                    reg += \"(\" + this.getStringList(this._shortMonths()).join(\"|\") + \")\";\r\n                    parsedIndexes.monthShort = index;\r\n                    break;\r\n                case \"MM\":\r\n                case \"M\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.month = index;\r\n                    break;\r\n                case \"ww\":\r\n                case \"w\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.week = index;\r\n                    break;\r\n                case \"dd\":\r\n                case \"d\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.day = index;\r\n                    break;\r\n                case \"DDD\":\r\n                case \"DD\":\r\n                case \"D\":\r\n                    reg += \"([0-9]{3}|[0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.yearDay = index;\r\n                    break;\r\n                case \"dddd\":\r\n                    reg += \"(\" + this.getStringList(this._weekdays()).join(\"|\") + \")\";\r\n                    parsedIndexes.weekdayLong = index;\r\n                    break;\r\n                case \"ddd\":\r\n                    reg += \"(\" + this.getStringList(this._shortWeekdays()).join(\"|\") + \")\";\r\n                    parsedIndexes.weekdayShort = index;\r\n                    break;\r\n                case \"aaa\":\r\n                case \"aa\":\r\n                case \"a\":\r\n                    // TODO: fix (escape regex)\r\n                    reg += \"(\" + this.getStringList([\"AM\", \"PM\", \"A\\.M\\.\", \"P\\.M\\.\", \"A\", \"P\"]).join(\"|\") + \")\";\r\n                    parsedIndexes.am = index;\r\n                    break;\r\n                case \"hh\":\r\n                case \"h\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.hour12Base1 = index;\r\n                    break;\r\n                case \"HH\":\r\n                case \"H\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.hourBase0 = index;\r\n                    break;\r\n                case \"KK\":\r\n                case \"K\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.hour12Base0 = index;\r\n                    break;\r\n                case \"kk\":\r\n                case \"k\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.hourBase1 = index;\r\n                    break;\r\n                case \"mm\":\r\n                case \"m\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.minute = index;\r\n                    break;\r\n                case \"ss\":\r\n                case \"s\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.second = index;\r\n                    break;\r\n                case \"SSS\":\r\n                case \"SS\":\r\n                case \"S\":\r\n                    reg += \"([0-9]{3}|[0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.millisecond = index;\r\n                    parsedIndexes.millisecondDigits = info.parts[i].length;\r\n                    break;\r\n                case \"nnn\":\r\n                case \"nn\":\r\n                case \"n\":\r\n                    reg += \"([0-9]{3}|[0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.millisecond = index;\r\n                    break;\r\n                case \"x\":\r\n                    reg += \"([0-9]{1,})\";\r\n                    parsedIndexes.timestamp = index;\r\n                    break;\r\n                case \"Z\":\r\n                    reg += \"GMT([-+]+[0-9]{2}:[0-9]{2})\";\r\n                    parsedIndexes.zone = index;\r\n                    break;\r\n                case \"ZZ\":\r\n                    reg += \"([\\\\-+]+[0-9]{2}[0-9]{2})\";\r\n                    parsedIndexes.zone = index;\r\n                    break;\r\n                case \"i\":\r\n                    reg += \"([0-9]{4})-?([0-9]{2})-?([0-9]{2})T?([0-9]{2}):?([0-9]{2}):?([0-9]{2})\\\\.?([0-9]{0,3})([zZ]|[+\\\\-][0-9]{2}:?[0-9]{2}|$)\";\r\n                    parsedIndexes.iso = index;\r\n                    indexAdjust += 7;\r\n                    break;\r\n                case \"G\":\r\n                case \"YYYY\":\r\n                case \"YYY\":\r\n                case \"YY\":\r\n                case \"Y\":\r\n                case \"MMMMM\":\r\n                case \"W\":\r\n                case \"EEEEE\":\r\n                case \"EEEE\":\r\n                case \"EEE\":\r\n                case \"EE\":\r\n                case \"E\":\r\n                case \"eeeee\":\r\n                case \"eeee\":\r\n                case \"eee\":\r\n                case \"ee\":\r\n                case \"e\":\r\n                case \"zzzz\":\r\n                case \"zzz\":\r\n                case \"zz\":\r\n                case \"z\":\r\n                case \"t\":\r\n                    // Ignore\r\n                    indexAdjust--;\r\n                    break;\r\n            }\r\n            reg += \"[^0-9]*\";\r\n        }\r\n        // Try matching\r\n        let regex = new RegExp(reg);\r\n        let matches = source.match(regex);\r\n        if (matches) {\r\n            // Populate the date object\r\n            // Full year\r\n            if (parsedIndexes.year > -1) {\r\n                resValues.year = parseInt(matches[parsedIndexes.year]);\r\n            }\r\n            // 3-digit year\r\n            if (parsedIndexes.year3 > -1) {\r\n                let val = parseInt(matches[parsedIndexes.year3]);\r\n                val += 1000;\r\n                resValues.year = val;\r\n            }\r\n            // 2-digit year\r\n            if (parsedIndexes.year2 > -1) {\r\n                let val = parseInt(matches[parsedIndexes.year2]);\r\n                if (val > 50) {\r\n                    val += 1000;\r\n                }\r\n                else {\r\n                    val += 2000;\r\n                }\r\n                resValues.year = val;\r\n            }\r\n            // 1-digit year\r\n            if (parsedIndexes.year1 > -1) {\r\n                let val = parseInt(matches[parsedIndexes.year1]);\r\n                val = Math.floor((new Date().getFullYear()) / 10) * 10 + val;\r\n                resValues.year = val;\r\n            }\r\n            // Full month\r\n            if (parsedIndexes.monthLong > -1) {\r\n                resValues.month = this.resolveMonth(matches[parsedIndexes.monthLong]);\r\n            }\r\n            // Short month\r\n            if (parsedIndexes.monthShort > -1) {\r\n                resValues.month = this.resolveShortMonth(matches[parsedIndexes.monthShort]);\r\n            }\r\n            // Numeric month\r\n            if (parsedIndexes.month > -1) {\r\n                resValues.month = parseInt(matches[parsedIndexes.month]) - 1;\r\n            }\r\n            // Weekday\r\n            // @todo\r\n            // Week\r\n            if ((parsedIndexes.week > -1) && (parsedIndexes.day === -1)) {\r\n                // We parse weeks ONLY if day is not explicitly set\r\n                // TODO: this needs work\r\n                // (but maybe later - I can hardly imagine anyone passing their dates in weeks)\r\n                resValues.month = 0;\r\n                resValues.day = _Utils__WEBPACK_IMPORTED_MODULE_2__.getDayFromWeek(parseInt(matches[parsedIndexes.week]), resValues.year, 1, utc);\r\n            }\r\n            // Day\r\n            if (parsedIndexes.day > -1) {\r\n                resValues.day = parseInt(matches[parsedIndexes.day]);\r\n            }\r\n            // Year day\r\n            if (parsedIndexes.yearDay > -1) {\r\n                resValues.month = 0;\r\n                resValues.day = parseInt(matches[parsedIndexes.yearDay]);\r\n            }\r\n            // 24 Hour (0-23)\r\n            if (parsedIndexes.hourBase0 > -1) {\r\n                resValues.hour = parseInt(matches[parsedIndexes.hourBase0]);\r\n            }\r\n            // 24 Hour (1-24)\r\n            if (parsedIndexes.hourBase1 > -1) {\r\n                resValues.hour = parseInt(matches[parsedIndexes.hourBase1]) - 1;\r\n            }\r\n            // 12 Hour (0-11)\r\n            if (parsedIndexes.hour12Base0 > -1) {\r\n                let val = parseInt(matches[parsedIndexes.hour12Base0]);\r\n                if (val == 11) {\r\n                    val = 0;\r\n                }\r\n                if ((parsedIndexes.am > -1) && !this.isAm(matches[parsedIndexes.am])) {\r\n                    val += 12;\r\n                }\r\n                resValues.hour = val;\r\n            }\r\n            // 12 Hour (1-12)\r\n            if (parsedIndexes.hour12Base1 > -1) {\r\n                let val = parseInt(matches[parsedIndexes.hour12Base1]);\r\n                if (val == 12) {\r\n                    val = 0;\r\n                }\r\n                if ((parsedIndexes.am > -1) && !this.isAm(matches[parsedIndexes.am])) {\r\n                    val += 12;\r\n                }\r\n                resValues.hour = val;\r\n            }\r\n            // Minute\r\n            if (parsedIndexes.minute > -1) {\r\n                resValues.minute = parseInt(matches[parsedIndexes.minute]);\r\n            }\r\n            // Second\r\n            if (parsedIndexes.second > -1) {\r\n                resValues.second = parseInt(matches[parsedIndexes.second]);\r\n            }\r\n            // Millisecond\r\n            if (parsedIndexes.millisecond > -1) {\r\n                let val = parseInt(matches[parsedIndexes.millisecond]);\r\n                if (parsedIndexes.millisecondDigits == 2) {\r\n                    val *= 10;\r\n                }\r\n                else if (parsedIndexes.millisecondDigits == 1) {\r\n                    val *= 100;\r\n                }\r\n                resValues.millisecond = val;\r\n            }\r\n            // Timestamp\r\n            if (parsedIndexes.timestamp > -1) {\r\n                resValues.timestamp = parseInt(matches[parsedIndexes.timestamp]);\r\n                const ts = new Date(resValues.timestamp);\r\n                resValues.year = ts.getUTCFullYear();\r\n                resValues.month = ts.getUTCMonth();\r\n                resValues.day = ts.getUTCDate();\r\n                resValues.hour = ts.getUTCHours();\r\n                resValues.minute = ts.getUTCMinutes();\r\n                resValues.second = ts.getUTCSeconds();\r\n                resValues.millisecond = ts.getUTCMilliseconds();\r\n            }\r\n            // Adjust time zone\r\n            if (parsedIndexes.zone > -1) {\r\n                resValues.offset = this.resolveTimezoneOffset(new Date(resValues.year, resValues.month, resValues.day), matches[parsedIndexes.zone]);\r\n            }\r\n            // ISO\r\n            if (parsedIndexes.iso > -1) {\r\n                resValues.year = _Type__WEBPACK_IMPORTED_MODULE_1__.toNumber(matches[parsedIndexes.iso + 0]);\r\n                resValues.month = _Type__WEBPACK_IMPORTED_MODULE_1__.toNumber(matches[parsedIndexes.iso + 1]) - 1;\r\n                resValues.day = _Type__WEBPACK_IMPORTED_MODULE_1__.toNumber(matches[parsedIndexes.iso + 2]);\r\n                resValues.hour = _Type__WEBPACK_IMPORTED_MODULE_1__.toNumber(matches[parsedIndexes.iso + 3]);\r\n                resValues.minute = _Type__WEBPACK_IMPORTED_MODULE_1__.toNumber(matches[parsedIndexes.iso + 4]);\r\n                resValues.second = _Type__WEBPACK_IMPORTED_MODULE_1__.toNumber(matches[parsedIndexes.iso + 5]);\r\n                resValues.millisecond = _Type__WEBPACK_IMPORTED_MODULE_1__.toNumber(matches[parsedIndexes.iso + 6]);\r\n                if (matches[parsedIndexes.iso + 7] == \"Z\" || matches[parsedIndexes.iso + 7] == \"z\") {\r\n                    resValues.utc = true;\r\n                }\r\n                else if (matches[parsedIndexes.iso + 7] != \"\") {\r\n                    resValues.offset = this.resolveTimezoneOffset(new Date(resValues.year, resValues.month, resValues.day), matches[parsedIndexes.iso + 7]);\r\n                }\r\n            }\r\n            // Create Date object\r\n            if (resValues.utc) {\r\n                res = new Date(Date.UTC(resValues.year, resValues.month, resValues.day, resValues.hour, resValues.minute, resValues.second, resValues.millisecond));\r\n            }\r\n            else {\r\n                res = new Date(resValues.year, resValues.month, resValues.day, resValues.hour, resValues.minute + resValues.offset, resValues.second, resValues.millisecond);\r\n            }\r\n        }\r\n        else {\r\n            // Didn't match anything\r\n            // Let's try dropping it into Date constructor and hope for the best\r\n            res = new Date(source);\r\n        }\r\n        return res;\r\n    }\r\n    resolveTimezoneOffset(date, zone) {\r\n        let value = zone.match(/([+\\-]?)([0-9]{2}):?([0-9]{2})/);\r\n        if (value) {\r\n            let match = zone.match(/([+\\-]?)([0-9]{2}):?([0-9]{2})/);\r\n            let dir = match[1];\r\n            let hour = match[2];\r\n            let minute = match[3];\r\n            let offset = parseInt(hour) * 60 + parseInt(minute);\r\n            // Adjust offset\r\n            // Making it negative does not seem to make sense, but it's right\r\n            // because of how JavaScript calculates GMT offsets\r\n            if (dir == \"+\") {\r\n                offset *= -1;\r\n            }\r\n            // Check the difference in offset\r\n            let originalOffset = (date || new Date()).getTimezoneOffset();\r\n            let diff = offset - originalOffset;\r\n            return diff;\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * Resolves month name (i.e. \"December\") into a month number (11).\r\n     *\r\n     * @param value  Month name\r\n     * @return Month number\r\n     */\r\n    resolveMonth(value) {\r\n        // Let's try English first\r\n        let month = this._months().indexOf(value);\r\n        if (month > -1) {\r\n            return month;\r\n        }\r\n        // Try the translation\r\n        if (!this._root.language.isDefault()) {\r\n            month = this._root.language.translateAll(this._months()).indexOf(value);\r\n            if (month > -1) {\r\n                return month;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * Resolves short month name (i.e. \"Dec\") into a month number.\r\n     *\r\n     * @param value  Short month name\r\n     * @return Month number\r\n     */\r\n    resolveShortMonth(value) {\r\n        // Let's try English first\r\n        let month = this._shortMonths().indexOf(value);\r\n        if (month > -1) {\r\n            return month;\r\n        }\r\n        // Maybe long month (workaround for May)\r\n        month = this._months().indexOf(value);\r\n        if (month > -1) {\r\n            return month;\r\n        }\r\n        // Try the translation\r\n        if (this._root.language && !this._root.language.isDefault()) {\r\n            month = this._root.language.translateAll(this._shortMonths()).indexOf(value);\r\n            if (month > -1) {\r\n                return month;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * Checks if passed in string represents AM/PM notation in many of its\r\n     * versions.\r\n     *\r\n     * @param value  Source string\r\n     * @return Is it AM/PM?\r\n     */\r\n    isAm(value) {\r\n        let list = this.getStringList([\"AM\", \"A.M.\", \"A\"]);\r\n        return list.indexOf(value.toUpperCase()) > -1;\r\n    }\r\n    /**\r\n     * Translates list of strings.\r\n     *\r\n     * @param list  Source strings\r\n     * @return Translated strings\r\n     */\r\n    getStringList(list) {\r\n        let res = [];\r\n        for (let i = 0; i < list.length; i++) {\r\n            // translate?\r\n            if (this._root.language) {\r\n                res.push(_Utils__WEBPACK_IMPORTED_MODULE_2__.escapeForRgex(this._t(list[i])));\r\n            }\r\n            else {\r\n                res.push(_Utils__WEBPACK_IMPORTED_MODULE_2__.escapeForRgex(list[i]));\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n}\r\n//# sourceMappingURL=DateFormatter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/DateFormatter.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Disposer.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/core/util/Disposer.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ArrayDisposer: () => (/* binding */ ArrayDisposer),\n/* harmony export */   CounterDisposer: () => (/* binding */ CounterDisposer),\n/* harmony export */   Disposer: () => (/* binding */ Disposer),\n/* harmony export */   DisposerClass: () => (/* binding */ DisposerClass),\n/* harmony export */   MultiDisposer: () => (/* binding */ MultiDisposer),\n/* harmony export */   MutableValueDisposer: () => (/* binding */ MutableValueDisposer)\n/* harmony export */ });\n/* harmony import */ var _Array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Array */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Array.js\");\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A base class for disposable objects.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nclass DisposerClass {\r\n    /**\r\n     * Constructor.\r\n     */\r\n    constructor() {\r\n        /**\r\n         * Is object disposed?\r\n         */\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._disposed = false;\r\n    }\r\n    /**\r\n     * Checks if object is disposed.\r\n     *\r\n     * @return Disposed?\r\n     */\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    /**\r\n     * Disposes the object.\r\n     */\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            this._dispose();\r\n        }\r\n    }\r\n}\r\n/**\r\n * A class for creating an IDisposer.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nclass Disposer {\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param dispose  Function that disposes object\r\n     */\r\n    constructor(dispose) {\r\n        /**\r\n         * Is object disposed?\r\n         */\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Method that disposes the object.\r\n         */\r\n        Object.defineProperty(this, \"_dispose\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._disposed = false;\r\n        this._dispose = dispose;\r\n    }\r\n    /**\r\n     * Checks if object is disposed.\r\n     *\r\n     * @return Disposed?\r\n     */\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    /**\r\n     * Disposes the object.\r\n     */\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            this._dispose();\r\n        }\r\n    }\r\n}\r\n/**\r\n * This can be extended by other classes to add a `_disposers` property.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nclass ArrayDisposer extends DisposerClass {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_disposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n    _dispose() {\r\n        _Array__WEBPACK_IMPORTED_MODULE_0__.each(this._disposers, (x) => {\r\n            x.dispose();\r\n        });\r\n    }\r\n}\r\n/**\r\n * A collection of related disposers that can be disposed in one go.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nclass MultiDisposer extends DisposerClass {\r\n    constructor(disposers) {\r\n        super();\r\n        Object.defineProperty(this, \"_disposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._disposers = disposers;\r\n    }\r\n    _dispose() {\r\n        _Array__WEBPACK_IMPORTED_MODULE_0__.each(this._disposers, (x) => {\r\n            x.dispose();\r\n        });\r\n    }\r\n    get disposers() {\r\n        return this._disposers;\r\n    }\r\n}\r\n/**\r\n * A special kind of Disposer that has attached value set.\r\n *\r\n * If a new value is set using `set()` method, the old disposer value is\r\n * disposed.\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nclass MutableValueDisposer extends DisposerClass {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * Current disposer.\r\n         */\r\n        Object.defineProperty(this, \"_disposer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Current value.\r\n         */\r\n        Object.defineProperty(this, \"_value\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _dispose() {\r\n        if (this._disposer != null) {\r\n            this._disposer.dispose();\r\n            this._disposer = undefined;\r\n        }\r\n    }\r\n    /**\r\n     * Returns current value.\r\n     *\r\n     * @return Value\r\n     */\r\n    get() {\r\n        return this._value;\r\n    }\r\n    /**\r\n     * Sets value and disposes previous disposer if it was set.\r\n     *\r\n     * @param value     New value\r\n     * @param disposer  Disposer\r\n     */\r\n    set(value, disposer) {\r\n        if (this._disposer != null) {\r\n            this._disposer.dispose();\r\n        }\r\n        this._disposer = disposer;\r\n        this._value = value;\r\n    }\r\n    /**\r\n     * Resets the disposer value.\r\n     */\r\n    reset() {\r\n        this.set(undefined, undefined);\r\n    }\r\n}\r\n/**\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nclass CounterDisposer extends Disposer {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * [_counter description]\r\n         *\r\n         * @todo Description\r\n         */\r\n        Object.defineProperty(this, \"_counter\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n    }\r\n    /**\r\n     * [increment description]\r\n     *\r\n     * @todo Description\r\n     */\r\n    increment() {\r\n        // TODO throw an error if it is disposed\r\n        ++this._counter;\r\n        // TODO make this more efficient\r\n        return new Disposer(() => {\r\n            --this._counter;\r\n            if (this._counter === 0) {\r\n                this.dispose();\r\n            }\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=Disposer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Disposer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/DurationFormatter.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/core/util/DurationFormatter.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DurationFormatter: () => (/* binding */ DurationFormatter)\n/* harmony export */ });\n/* harmony import */ var _Entity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Entity */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Entity.js\");\n/* harmony import */ var _TextFormatter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./TextFormatter */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/TextFormatter.js\");\n/* harmony import */ var _Object__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Object */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Object.js\");\n/* harmony import */ var _Utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Utils */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Utils.js\");\n/* harmony import */ var _Type__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Type */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Type.js\");\n\r\n\r\n\r\n\r\n\r\n/**\r\n * A class used to format numberic values as time duration.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-durations/} for more info\r\n */\r\nclass DurationFormatter extends _Entity__WEBPACK_IMPORTED_MODULE_0__.Entity {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * Collection of aliases for units.\r\n         */\r\n        Object.defineProperty(this, \"_unitAliases\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {\r\n                \"Y\": \"y\",\r\n                \"D\": \"d\",\r\n                \"H\": \"h\",\r\n                \"K\": \"h\",\r\n                \"k\": \"h\",\r\n                \"n\": \"S\"\r\n            }\r\n        });\r\n    }\r\n    _setDefaults() {\r\n        const dmillisecond = \"_duration_millisecond\";\r\n        const dsecond = \"_duration_second\";\r\n        const dminute = \"_duration_minute\";\r\n        const dhour = \"_duration_hour\";\r\n        const dday = \"_duration_day\";\r\n        const dweek = \"_duration_week\";\r\n        const dmonth = \"_duration_month\";\r\n        const dyear = \"_duration_year\";\r\n        const asecond = \"_second\";\r\n        const aminute = \"_minute\";\r\n        const ahour = \"_hour\";\r\n        const aday = \"_day\";\r\n        const aweek = \"_week\";\r\n        const amonth = \"_week\";\r\n        const ayear = \"_year\";\r\n        // Defaults\r\n        this._setDefault(\"negativeBase\", 0);\r\n        this._setDefault(\"baseUnit\", \"second\");\r\n        this._setDefault(\"durationFormats\", {\r\n            \"millisecond\": {\r\n                \"millisecond\": this._t(dmillisecond),\r\n                \"second\": this._t((dmillisecond + asecond)),\r\n                \"minute\": this._t((dmillisecond + aminute)),\r\n                \"hour\": this._t((dmillisecond + ahour)),\r\n                \"day\": this._t((dmillisecond + aday)),\r\n                \"week\": this._t((dmillisecond + aweek)),\r\n                \"month\": this._t((dmillisecond + amonth)),\r\n                \"year\": this._t((dmillisecond + ayear))\r\n            },\r\n            \"second\": {\r\n                \"second\": this._t((dsecond)),\r\n                \"minute\": this._t((dsecond + aminute)),\r\n                \"hour\": this._t((dsecond + ahour)),\r\n                \"day\": this._t((dsecond + aday)),\r\n                \"week\": this._t((dsecond + aweek)),\r\n                \"month\": this._t((dsecond + amonth)),\r\n                \"year\": this._t((dsecond + ayear))\r\n            },\r\n            \"minute\": {\r\n                \"minute\": this._t((dminute)),\r\n                \"hour\": this._t((dminute + ahour)),\r\n                \"day\": this._t((dminute + aday)),\r\n                \"week\": this._t((dminute + aweek)),\r\n                \"month\": this._t((dminute + amonth)),\r\n                \"year\": this._t((dminute + ayear))\r\n            },\r\n            \"hour\": {\r\n                \"hour\": this._t((dhour)),\r\n                \"day\": this._t((dhour + aday)),\r\n                \"week\": this._t((dhour + aweek)),\r\n                \"month\": this._t((dhour + amonth)),\r\n                \"year\": this._t((dhour + ayear))\r\n            },\r\n            \"day\": {\r\n                \"day\": this._t((dday)),\r\n                \"week\": this._t((dday + aweek)),\r\n                \"month\": this._t((dday + amonth)),\r\n                \"year\": this._t((dday + ayear))\r\n            },\r\n            \"week\": {\r\n                \"week\": this._t((dweek)),\r\n                \"month\": this._t((dweek + amonth)),\r\n                \"year\": this._t((dweek + ayear))\r\n            },\r\n            \"month\": {\r\n                \"month\": this._t((dmonth)),\r\n                \"year\": this._t((dmonth + ayear))\r\n            },\r\n            \"year\": {\r\n                \"year\": this._t(dyear)\r\n            }\r\n        });\r\n        super._setDefaults();\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n    }\r\n    /**\r\n     * Formats the number as duration.\r\n     *\r\n     * For example `1000` (base unit seconds) would be converted to `16:40` as in\r\n     * 16 minutes and 40 seconds.\r\n     *\r\n     * @param value   Value to format\r\n     * @param format  Format to apply\r\n     * @param base    Override base unit\r\n     * @return Formatted number\r\n     */\r\n    format(value, format, base) {\r\n        // no base unit?\r\n        let baseUnit = base || this.get(\"baseUnit\");\r\n        // no format passed in or empty\r\n        if (typeof format === \"undefined\" || format === \"\") {\r\n            if (this.get(\"durationFormat\") != null) {\r\n                format = this.get(\"durationFormat\");\r\n            }\r\n            else {\r\n                format = this.getFormat(_Type__WEBPACK_IMPORTED_MODULE_1__.toNumber(value), undefined, baseUnit);\r\n            }\r\n        }\r\n        // Clean format\r\n        format = _Utils__WEBPACK_IMPORTED_MODULE_2__.cleanFormat(format);\r\n        // get format info (it will also deal with parser caching)\r\n        let info = this.parseFormat(format, baseUnit);\r\n        // cast to number just in case\r\n        // TODO: maybe use better casting\r\n        let source = Number(value);\r\n        // format and replace the number\r\n        let details;\r\n        if (source > this.get(\"negativeBase\")) {\r\n            details = info.positive;\r\n        }\r\n        else if (source < this.get(\"negativeBase\")) {\r\n            details = info.negative;\r\n        }\r\n        else {\r\n            details = info.zero;\r\n        }\r\n        // Format\r\n        let formatted = this.applyFormat(source, details);\r\n        // Apply color?\r\n        if (details.color !== \"\") {\r\n            formatted = \"[\" + details.color + \"]\" + formatted + \"[/]\";\r\n        }\r\n        return formatted;\r\n    }\r\n    /**\r\n     * Parses supplied format into structured object which can be used to format\r\n     * the number.\r\n     *\r\n     * @param format  Format string, i.e. \"#,###.00\"\r\n     * @param base    Override base unit\r\n     * @return Parsed information\r\n     */\r\n    parseFormat(format, base) {\r\n        // Check cache\r\n        // TODO\r\n        // let cached = this.getCache(format);\r\n        // if (cached != null) {\r\n        // \treturn cached;\r\n        // }\r\n        // no base unit?\r\n        let baseUnit = base || this.get(\"baseUnit\");\r\n        // Initialize duration parsing info\r\n        let info = {\r\n            \"positive\": {\r\n                \"color\": \"\",\r\n                \"template\": \"\",\r\n                \"parts\": [],\r\n                \"source\": \"\",\r\n                \"baseUnit\": baseUnit,\r\n                \"parsed\": false,\r\n                \"absolute\": false\r\n            },\r\n            \"negative\": {\r\n                \"color\": \"\",\r\n                \"template\": \"\",\r\n                \"parts\": [],\r\n                \"source\": \"\",\r\n                \"baseUnit\": baseUnit,\r\n                \"parsed\": false,\r\n                \"absolute\": false\r\n            },\r\n            \"zero\": {\r\n                \"color\": \"\",\r\n                \"template\": \"\",\r\n                \"parts\": [],\r\n                \"source\": \"\",\r\n                \"baseUnit\": baseUnit,\r\n                \"parsed\": false,\r\n                \"absolute\": false\r\n            }\r\n        };\r\n        // Escape double vertical bars (that mean display one vertical bar)\r\n        format = format.replace(\"||\", _Type__WEBPACK_IMPORTED_MODULE_1__.PLACEHOLDER2);\r\n        // Split it up and deal with different formats\r\n        let parts = format.split(\"|\");\r\n        info.positive.source = parts[0];\r\n        if (typeof parts[2] === \"undefined\") {\r\n            info.zero = info.positive;\r\n        }\r\n        else {\r\n            info.zero.source = parts[2];\r\n        }\r\n        if (typeof parts[1] === \"undefined\") {\r\n            info.negative = info.positive;\r\n        }\r\n        else {\r\n            info.negative.source = parts[1];\r\n        }\r\n        // Parse each\r\n        _Object__WEBPACK_IMPORTED_MODULE_3__.each(info, (_part, item) => {\r\n            // Already parsed\r\n            if (item.parsed) {\r\n                return;\r\n            }\r\n            // Check cached\r\n            // TODO\r\n            // if (typeof this.getCache(item.source) !== \"undefined\") {\r\n            // \tinfo[part] = this.getCache(item.source);\r\n            // \treturn;\r\n            // }\r\n            // Begin parsing\r\n            let partFormat = item.source;\r\n            // Check for [] directives\r\n            let dirs = [];\r\n            dirs = item.source.match(/^\\[([^\\]]*)\\]/);\r\n            if (dirs && dirs.length && dirs[0] !== \"\") {\r\n                partFormat = item.source.substr(dirs[0].length);\r\n                item.color = dirs[1];\r\n            }\r\n            // Let TextFormatter split into chunks\r\n            let chunks = _TextFormatter__WEBPACK_IMPORTED_MODULE_4__.TextFormatter.chunk(partFormat, true);\r\n            for (let i = 0; i < chunks.length; i++) {\r\n                let chunk = chunks[i];\r\n                // replace back double vertical bar\r\n                chunk.text = chunk.text.replace(_Type__WEBPACK_IMPORTED_MODULE_1__.PLACEHOLDER2, \"|\");\r\n                if (chunk.type === \"value\") {\r\n                    // Just \"Duration\"?\r\n                    // if (chunk.text.toLowerCase() === \"duration\") {\r\n                    // \tchunk.text = durationFormat;\r\n                    // }\r\n                    // Check for \"a\" (absolute) modifier\r\n                    if (chunk.text.match(/[yYMdDwhHKkmsSn]+a/)) {\r\n                        item.absolute = true;\r\n                        chunk.text = chunk.text.replace(/([yYMdDwhHKkmsSn]+)a/, \"$1\");\r\n                    }\r\n                    // Find all possible parts\r\n                    let matches = chunk.text.match(/y+|Y+|M+|d+|D+|w+|h+|H+|K+|k+|m+|s+|S+|n+/g);\r\n                    if (matches) {\r\n                        // Populate template\r\n                        for (let x = 0; x < matches.length; x++) {\r\n                            // Is it an alias?\r\n                            if (matches[x] == null) {\r\n                                matches[x] = this._unitAliases[matches[x]];\r\n                            }\r\n                            item.parts.push(matches[x]);\r\n                            chunk.text = chunk.text.replace(matches[x], _Type__WEBPACK_IMPORTED_MODULE_1__.PLACEHOLDER);\r\n                        }\r\n                    }\r\n                }\r\n                // Apply to template\r\n                item.template += chunk.text;\r\n            }\r\n            // Apply style formatting\r\n            //item.template = TextFormatter.format(item.template, this.outputFormat);\r\n            // Save cache\r\n            // TODO\r\n            //this.setCache(item.source, item);\r\n            // Mark this as parsed\r\n            item.parsed = true;\r\n        });\r\n        // Save cache (the whole thing)\r\n        // TODO\r\n        //this.setCache(format, info);\r\n        return info;\r\n    }\r\n    /**\r\n     * Applies parsed format to a numeric value.\r\n     *\r\n     * @param value    Value\r\n     * @param details  Parsed format as returned by {parseFormat}\r\n     * @return Formatted duration\r\n     */\r\n    applyFormat(value, details) {\r\n        // Use absolute values\r\n        let negative = !details.absolute && (value < this.get(\"negativeBase\"));\r\n        value = Math.abs(value);\r\n        // Recalculate to milliseconds\r\n        let tstamp = this.toTimeStamp(value, details.baseUnit);\r\n        // Init return value\r\n        let res = details.template;\r\n        const values = {\r\n            millisecond: 0,\r\n            second: 0,\r\n            minute: 0,\r\n            hour: 0,\r\n            day: 0,\r\n            week: 0,\r\n            month: 0,\r\n            year: 0\r\n        };\r\n        // Iterate through duration parts\r\n        for (let i = 0, len = details.parts.length; i < len; i++) {\r\n            // Gather the part\r\n            let part = details.parts[i];\r\n            let unit = this._toTimeUnit(part.substr(0, 1));\r\n            // Calculate current unit value\r\n            let ints;\r\n            const unitValue = this._getUnitValue(unit);\r\n            if (i < (len - 1)) {\r\n                ints = Math.floor(tstamp / unitValue);\r\n            }\r\n            else {\r\n                ints = Math.round(tstamp / unitValue);\r\n            }\r\n            values[unit] += ints;\r\n            // Reduce timestamp\r\n            tstamp -= ints * unitValue;\r\n        }\r\n        // Check if we have full unit that we need to bump up to higher unit\r\n        _Object__WEBPACK_IMPORTED_MODULE_3__.each(values, (unit, value) => {\r\n            if (unit == \"millisecond\" && value == 1000) {\r\n                values[\"second\"]++;\r\n                values[\"millisecond\"] = 0;\r\n            }\r\n            else if (unit == \"second\" && value == 60) {\r\n                values[\"minute\"]++;\r\n                values[\"second\"] = 0;\r\n            }\r\n            else if (unit == \"minute\" && value == 60) {\r\n                values[\"hour\"]++;\r\n                values[\"minute\"] = 0;\r\n            }\r\n            else if (unit == \"hour\" && value == 24) {\r\n                values[\"day\"]++;\r\n                values[\"hour\"] = 0;\r\n            }\r\n            else if (unit == \"day\" && value == 7) {\r\n                values[\"week\"]++;\r\n                values[\"day\"] = 0;\r\n            }\r\n            else if (unit == \"day\" && value == 30) {\r\n                values[\"month\"]++;\r\n                values[\"day\"] = 0;\r\n            }\r\n            else if (unit == \"month\" && value == 12) {\r\n                values[\"year\"]++;\r\n                values[\"month\"] = 0;\r\n            }\r\n            // if (val > 0) {\r\n            // \tres = res.replace($type.PLACEHOLDER, $utils.padString(val, 2, \"0\"));\r\n            // }\r\n            // else {\r\n            // \tres = res.replace($type.PLACEHOLDER, \"\");\r\n            // }\r\n        });\r\n        // Iterate again\r\n        for (let i = 0, len = details.parts.length; i < len; i++) {\r\n            // Gather the part\r\n            let part = details.parts[i];\r\n            let unit = this._toTimeUnit(part.substr(0, 1));\r\n            let digits = part.length;\r\n            // Calculate current unit value\r\n            res = res.replace(_Type__WEBPACK_IMPORTED_MODULE_1__.PLACEHOLDER, _Utils__WEBPACK_IMPORTED_MODULE_2__.padString(values[unit], digits, \"0\"));\r\n        }\r\n        // Reapply negative sign\r\n        if (negative) {\r\n            res = \"-\" + res;\r\n        }\r\n        return res;\r\n    }\r\n    /**\r\n     * Converts numeric value to timestamp in milliseconds.\r\n     *\r\n     * @param value     A source value\r\n     * @param baseUnit  Base unit the source value is in: \"q\", \"s\", \"i\", \"h\", \"d\", \"w\", \"m\", \"y\"\r\n     * @return Value representation as a timestamp in milliseconds\r\n     */\r\n    toTimeStamp(value, baseUnit) {\r\n        return value * this._getUnitValue(baseUnit);\r\n    }\r\n    _toTimeUnit(code) {\r\n        switch (code) {\r\n            case \"S\":\r\n                return \"millisecond\";\r\n            case \"s\":\r\n                return \"second\";\r\n            case \"m\":\r\n                return \"minute\";\r\n            case \"h\":\r\n                return \"hour\";\r\n            case \"d\":\r\n                return \"day\";\r\n            case \"w\":\r\n                return \"week\";\r\n            case \"M\":\r\n                return \"month\";\r\n            case \"y\":\r\n                return \"year\";\r\n        }\r\n        ;\r\n    }\r\n    /**\r\n     * Returns appropriate default format for the value.\r\n     *\r\n     * If `maxValue` is sepcified, it will use that value to determine the time\r\n     * unit for the format.\r\n     *\r\n     * For example if your `baseUnit` is `\"second\"` and you pass in `10`, you\r\n     * will get `\"10\"`.\r\n     *\r\n     * However, you might want it to be formatted in the context of bigger scale,\r\n     * say 10 minutes (600 seconds). If you pass in `600` as `maxValue`, all\r\n     * values, including small ones will use format with minutes, e.g.:\r\n     * `00:10`, `00:50`, `12: 30`, etc.\r\n     *\r\n     * @param value     Value to format\r\n     * @param maxValue  Maximum value to be used to determine format\r\n     * @param baseUnit  Base unit of the value\r\n     * @return Format\r\n     */\r\n    getFormat(value, maxValue, baseUnit) {\r\n        // Is format override set?\r\n        if (this.get(\"durationFormat\") != null) {\r\n            return this.get(\"durationFormat\");\r\n        }\r\n        // Get base unit\r\n        if (!baseUnit) {\r\n            baseUnit = this.get(\"baseUnit\");\r\n        }\r\n        if (maxValue != null && value != maxValue) {\r\n            value = Math.abs(value);\r\n            maxValue = Math.abs(maxValue);\r\n            let maxUnit = this.getValueUnit(Math.max(value, maxValue), baseUnit);\r\n            return this.get(\"durationFormats\")[baseUnit][maxUnit];\r\n        }\r\n        else {\r\n            let unit = this.getValueUnit(value, baseUnit);\r\n            return this.get(\"durationFormats\")[baseUnit][unit];\r\n        }\r\n    }\r\n    /**\r\n     * Returns value's closest denominator time unit, e.g 100 seconds is\r\n     * `\"minute\"`, while 59 seconds would still be `second`.\r\n     *\r\n     * @param value     Source duration value\r\n     * @param baseUnit  Base unit\r\n     * @return Denominator\r\n     */\r\n    getValueUnit(value, baseUnit) {\r\n        // Get base unit\r\n        if (!baseUnit) {\r\n            baseUnit = this.get(\"baseUnit\");\r\n        }\r\n        // Convert to milliseconds\r\n        let currentUnit;\r\n        let ms = this.getMilliseconds(value, baseUnit);\r\n        _Object__WEBPACK_IMPORTED_MODULE_3__.eachContinue(this._getUnitValues(), (key, val) => {\r\n            if (key == baseUnit || currentUnit) {\r\n                let num = ms / val;\r\n                if (num <= 1) {\r\n                    if (!currentUnit) {\r\n                        currentUnit = key;\r\n                    }\r\n                    return false;\r\n                }\r\n                currentUnit = key;\r\n            }\r\n            return true;\r\n        });\r\n        return currentUnit;\r\n    }\r\n    /**\r\n     * Converts value to milliseconds according to `baseUnit`.\r\n     *\r\n     * @param value     Source duration value\r\n     * @param baseUnit  Base unit\r\n     * @return Value in milliseconds\r\n     */\r\n    getMilliseconds(value, baseUnit) {\r\n        // Get base unit\r\n        if (!baseUnit) {\r\n            baseUnit = this.get(\"baseUnit\");\r\n        }\r\n        return value * this._getUnitValue(baseUnit);\r\n    }\r\n    _getUnitValue(timeUnit) {\r\n        return this._getUnitValues()[timeUnit];\r\n    }\r\n    _getUnitValues() {\r\n        return {\r\n            \"millisecond\": 1,\r\n            \"second\": 1000,\r\n            \"minute\": 60000,\r\n            \"hour\": 3600000,\r\n            \"day\": 86400000,\r\n            \"week\": 604800000,\r\n            \"month\": 2592000000,\r\n            \"year\": 31536000000,\r\n        };\r\n    }\r\n}\r\n//# sourceMappingURL=DurationFormatter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/DurationFormatter.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Ease.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/core/util/Ease.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bounce: () => (/* binding */ bounce),\n/* harmony export */   circle: () => (/* binding */ circle),\n/* harmony export */   cubic: () => (/* binding */ cubic),\n/* harmony export */   elastic: () => (/* binding */ elastic),\n/* harmony export */   exp: () => (/* binding */ exp),\n/* harmony export */   inOut: () => (/* binding */ inOut),\n/* harmony export */   linear: () => (/* binding */ linear),\n/* harmony export */   out: () => (/* binding */ out),\n/* harmony export */   pow: () => (/* binding */ pow),\n/* harmony export */   quad: () => (/* binding */ quad),\n/* harmony export */   sine: () => (/* binding */ sine),\n/* harmony export */   yoyo: () => (/* binding */ yoyo)\n/* harmony export */ });\n/* harmony import */ var _Math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Math */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Math.js\");\n/**\r\n * A collection of easing functions\r\n *\r\n * Parts of this collection are taken from D3.js library (https://d3js.org/)\r\n */\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * The functions below are from D3.js library (https://d3js.org/)\r\n *\r\n * ----------------------------------------------------------------------------\r\n * Copyright 2017 Mike Bostock\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *\tthis list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *\tthis list of conditions and the following disclaimer in the documentation\r\n *\tand/or other materials provided with the distribution.\r\n *\r\n * 3. Neither the name of the copyright holder nor the names of its\r\n *\tcontributors may be used to endorse or promote products derived from this\r\n *\tsoftware without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n * ----------------------------------------------------------------------------\r\n * @hidden\r\n */\r\n/**\r\n */\r\nfunction linear(t) {\r\n    return t;\r\n}\r\nfunction quad(t) {\r\n    return t * t;\r\n}\r\nfunction cubic(t) {\r\n    return t * t * t;\r\n}\r\nfunction pow(t, e) {\r\n    return Math.pow(t, e);\r\n}\r\nfunction exp(t) {\r\n    return Math.pow(2, 10 * t - 10);\r\n}\r\nfunction sine(t) {\r\n    return 1 - Math.cos(t * _Math__WEBPACK_IMPORTED_MODULE_0__.HALFPI);\r\n}\r\nfunction circle(t) {\r\n    return 1 - Math.sqrt(1 - t * t);\r\n}\r\n/**\r\n * ============================================================================\r\n * TRANSFORMERS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n */\r\nfunction yoyo(ease) {\r\n    return function (t) {\r\n        if (t < 0.5) {\r\n            return ease(t * 2.0);\r\n        }\r\n        else {\r\n            return ease((1.0 - t) * 2.0);\r\n        }\r\n    };\r\n}\r\nfunction out(ease) {\r\n    return function (t) {\r\n        return 1.0 - ease(1.0 - t);\r\n    };\r\n}\r\nfunction inOut(ease) {\r\n    return function (t) {\r\n        if (t <= 0.5) {\r\n            return ease(t * 2.0) / 2.0;\r\n        }\r\n        else {\r\n            return 1.0 - (ease((1.0 - t) * 2.0) / 2.0);\r\n        }\r\n    };\r\n}\r\n/**\r\n * ============================================================================\r\n * BOUNCE\r\n * ============================================================================\r\n * @hidden\r\n */\r\nlet b1 = 4 / 11, b2 = 6 / 11, b3 = 8 / 11, b4 = 3 / 4, b5 = 9 / 11, b6 = 10 / 11, b7 = 15 / 16, b8 = 21 / 22, b9 = 63 / 64, b0 = 1 / b1 / b1;\r\nfunction bounce(t) {\r\n    return 1 - bounceOut(1 - t);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction bounceOut(t) {\r\n    t = t;\r\n    if (t < b1) {\r\n        return b0 * t * t;\r\n    }\r\n    else if (t < b3) {\r\n        return b0 * (t -= b2) * t + b4;\r\n    }\r\n    else if (t < b6) {\r\n        return b0 * (t -= b5) * t + b7;\r\n    }\r\n    else {\r\n        return b0 * (t -= b8) * t + b9;\r\n    }\r\n}\r\n/**\r\n * ============================================================================\r\n * ELASTIC\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * @ignore\r\n */\r\nlet tau = 2 * Math.PI;\r\n/**\r\n * @ignore\r\n */\r\nlet amplitude = 1;\r\n/**\r\n * @ignore\r\n */\r\nlet period = 0.3 / tau;\r\n/**\r\n * @ignore\r\n */\r\nlet s = Math.asin(1 / amplitude) * period;\r\nfunction elastic(t) {\r\n    let v = t;\r\n    return amplitude * Math.pow(2, 10 * --v) * Math.sin((s - v) / period);\r\n}\r\n//# sourceMappingURL=Ease.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Ease.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Entity.js":
/*!************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/core/util/Entity.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Adapters: () => (/* binding */ Adapters),\n/* harmony export */   Animation: () => (/* binding */ Animation),\n/* harmony export */   Entity: () => (/* binding */ Entity),\n/* harmony export */   Settings: () => (/* binding */ Settings)\n/* harmony export */ });\n/* harmony import */ var _Disposer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Disposer */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Disposer.js\");\n/* harmony import */ var _EventDispatcher__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./EventDispatcher */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/EventDispatcher.js\");\n/* harmony import */ var _Animation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Animation */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Animation.js\");\n/* harmony import */ var _States__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./States */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/States.js\");\n/* harmony import */ var _Registry__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../Registry */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/Registry.js\");\n/* harmony import */ var _Object__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Object */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Object.js\");\n/* harmony import */ var _Ease__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Ease */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Ease.js\");\n/* harmony import */ var _Array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Array */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Array.js\");\n/* harmony import */ var _Order__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Order */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Order.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Allows to dynamically modify setting value of its target element.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/adapters/} for more info\r\n */\r\nclass Adapters {\r\n    constructor(entity) {\r\n        Object.defineProperty(this, \"_entity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_callbacks\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_disabled\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        this._entity = entity;\r\n    }\r\n    /**\r\n     * Add a function (`callback`) that will modify value for setting `key`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/adapters/} for more info\r\n     */\r\n    add(key, callback) {\r\n        let callbacks = this._callbacks[key];\r\n        if (callbacks === undefined) {\r\n            callbacks = this._callbacks[key] = [];\r\n        }\r\n        callbacks.push(callback);\r\n        this._entity._markDirtyKey(key);\r\n        return new _Disposer__WEBPACK_IMPORTED_MODULE_0__.Disposer(() => {\r\n            if (_Array__WEBPACK_IMPORTED_MODULE_1__.removeFirst(callbacks, callback)) {\r\n                this._entity._markDirtyKey(key);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Removes all adapters for the specific key.\r\n     *\r\n     * @since 5.1.0\r\n     */\r\n    remove(key) {\r\n        const callbacks = this._callbacks[key];\r\n        if (callbacks !== undefined) {\r\n            delete this._callbacks[key];\r\n            if (callbacks.length !== 0) {\r\n                this._entity._markDirtyKey(key);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Enables (previously disabled) adapters for specific key.\r\n     *\r\n     * @since 5.1.0\r\n     */\r\n    enable(key) {\r\n        if (this._disabled[key]) {\r\n            delete this._disabled[key];\r\n            this._entity._markDirtyKey(key);\r\n        }\r\n    }\r\n    /**\r\n     * Disables all adapters for specific key.\r\n     *\r\n     * @since 5.1.0\r\n     */\r\n    disable(key) {\r\n        if (!this._disabled[key]) {\r\n            this._disabled[key] = true;\r\n            this._entity._markDirtyKey(key);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    fold(key, value) {\r\n        if (!this._disabled[key]) {\r\n            const callbacks = this._callbacks[key];\r\n            if (callbacks !== undefined) {\r\n                for (let i = 0, len = callbacks.length; i < len; ++i) {\r\n                    value = callbacks[i](value, this._entity, key);\r\n                }\r\n            }\r\n        }\r\n        return value;\r\n    }\r\n}\r\n/**\r\n * Animation object.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/} for more info\r\n */\r\nclass Animation {\r\n    constructor(animation, from, to, duration, easing, loops, startingTime) {\r\n        Object.defineProperty(this, \"_animation\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_from\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_to\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_duration\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_easing\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_loops\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_interpolate\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_oldTime\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_time\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_stopped\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_playing\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new _EventDispatcher__WEBPACK_IMPORTED_MODULE_2__.EventDispatcher()\r\n        });\r\n        this._animation = animation;\r\n        this._from = from;\r\n        this._to = to;\r\n        this._duration = duration;\r\n        this._easing = easing;\r\n        this._loops = loops;\r\n        this._interpolate = (0,_Animation__WEBPACK_IMPORTED_MODULE_3__.getInterpolate)(from, to);\r\n        this._oldTime = startingTime;\r\n    }\r\n    get to() {\r\n        return this._to;\r\n    }\r\n    get from() {\r\n        return this._from;\r\n    }\r\n    get playing() {\r\n        return this._playing;\r\n    }\r\n    get stopped() {\r\n        return this._stopped;\r\n    }\r\n    stop() {\r\n        if (!this._stopped) {\r\n            this._stopped = true;\r\n            this._playing = false;\r\n            if (this.events.isEnabled(\"stopped\")) {\r\n                this.events.dispatch(\"stopped\", {\r\n                    type: \"stopped\",\r\n                    target: this,\r\n                });\r\n            }\r\n        }\r\n    }\r\n    pause() {\r\n        this._playing = false;\r\n        this._oldTime = null;\r\n    }\r\n    play() {\r\n        if (!this._stopped && !this._playing) {\r\n            this._playing = true;\r\n            this._animation._startAnimation();\r\n        }\r\n    }\r\n    get percentage() {\r\n        return this._time / this._duration;\r\n    }\r\n    waitForStop() {\r\n        return new Promise((resolve, _reject) => {\r\n            if (this._stopped) {\r\n                resolve();\r\n            }\r\n            else {\r\n                const listener = () => {\r\n                    stopped.dispose();\r\n                    resolve();\r\n                };\r\n                const stopped = this.events.on(\"stopped\", listener);\r\n            }\r\n        });\r\n    }\r\n    _checkEnded() {\r\n        if (this._loops > 1) {\r\n            --this._loops;\r\n            return false;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n    _run(currentTime) {\r\n        if (this._oldTime !== null) {\r\n            this._time += currentTime - this._oldTime;\r\n            if (this._time > this._duration) {\r\n                this._time = this._duration;\r\n            }\r\n        }\r\n        this._oldTime = currentTime;\r\n    }\r\n    _reset(currentTime) {\r\n        this._oldTime = currentTime;\r\n        this._time = 0;\r\n    }\r\n    _value(diff) {\r\n        return this._interpolate(this._easing(diff), this._from, this._to);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nlet counter = 0;\r\n/**\r\n * Base class for [[Entity]] objects that support Settings.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n */\r\nclass Settings {\r\n    constructor(settings) {\r\n        /**\r\n         * Unique ID.\r\n         */\r\n        Object.defineProperty(this, \"uid\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: ++counter\r\n        });\r\n        Object.defineProperty(this, \"_settings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_privateSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_settingEvents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_privateSettingEvents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_prevSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_prevPrivateSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_animatingSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_animatingPrivateSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        // TODO move this into Entity\r\n        Object.defineProperty(this, \"_userProperties\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        /**\r\n         * If this is set to `false` then disposing does nothing, it's a no-op.\r\n         */\r\n        Object.defineProperty(this, \"enableDispose\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        this._settings = settings;\r\n    }\r\n    _checkDirty() {\r\n        _Object__WEBPACK_IMPORTED_MODULE_4__.keys(this._settings).forEach((key) => {\r\n            this._userProperties[key] = true;\r\n            this._markDirtyKey(key);\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    resetUserSettings() {\r\n        this._userProperties = {};\r\n    }\r\n    _runAnimation(currentTime) {\r\n        let state = _Animation__WEBPACK_IMPORTED_MODULE_3__.AnimationState.Stopped;\r\n        if (!this.isDisposed()) {\r\n            let playing = false;\r\n            let paused = false;\r\n            _Object__WEBPACK_IMPORTED_MODULE_4__.each(this._animatingSettings, (key, animation) => {\r\n                if (animation.stopped) {\r\n                    this._stopAnimation(key);\r\n                }\r\n                else if (animation.playing) {\r\n                    animation._run(currentTime);\r\n                    const diff = animation.percentage;\r\n                    if (diff >= 1) {\r\n                        if (animation._checkEnded()) {\r\n                            this.set(key, animation._value(1));\r\n                        }\r\n                        else {\r\n                            playing = true;\r\n                            animation._reset(currentTime);\r\n                            this._set(key, animation._value(1));\r\n                        }\r\n                    }\r\n                    else {\r\n                        playing = true;\r\n                        this._set(key, animation._value(diff));\r\n                    }\r\n                }\r\n                else {\r\n                    paused = true;\r\n                }\r\n            });\r\n            _Object__WEBPACK_IMPORTED_MODULE_4__.each(this._animatingPrivateSettings, (key, animation) => {\r\n                if (animation.stopped) {\r\n                    this._stopAnimationPrivate(key);\r\n                }\r\n                else if (animation.playing) {\r\n                    animation._run(currentTime);\r\n                    const diff = animation.percentage;\r\n                    if (diff >= 1) {\r\n                        if (animation._checkEnded()) {\r\n                            this.setPrivate(key, animation._value(1));\r\n                        }\r\n                        else {\r\n                            playing = true;\r\n                            animation._reset(currentTime);\r\n                            this._setPrivate(key, animation._value(1));\r\n                        }\r\n                    }\r\n                    else {\r\n                        playing = true;\r\n                        this._setPrivate(key, animation._value(diff));\r\n                    }\r\n                }\r\n                else {\r\n                    paused = true;\r\n                }\r\n            });\r\n            if (playing) {\r\n                state = _Animation__WEBPACK_IMPORTED_MODULE_3__.AnimationState.Playing;\r\n            }\r\n            else if (paused) {\r\n                state = _Animation__WEBPACK_IMPORTED_MODULE_3__.AnimationState.Paused;\r\n            }\r\n        }\r\n        return state;\r\n    }\r\n    _markDirtyKey(_key) {\r\n        this.markDirty();\r\n    }\r\n    _markDirtyPrivateKey(_key) {\r\n        this.markDirty();\r\n    }\r\n    /**\r\n     * Sets a callback function to invoke when specific key of settings changes\r\n     * or is set.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\r\n     * @param   key       Settings key\r\n     * @param   callback  Callback\r\n     * @return            Disposer for event\r\n     */\r\n    on(key, callback) {\r\n        let events = this._settingEvents[key];\r\n        if (events === undefined) {\r\n            events = this._settingEvents[key] = [];\r\n        }\r\n        events.push(callback);\r\n        return new _Disposer__WEBPACK_IMPORTED_MODULE_0__.Disposer(() => {\r\n            _Array__WEBPACK_IMPORTED_MODULE_1__.removeFirst(events, callback);\r\n            if (events.length === 0) {\r\n                delete this._settingEvents[key];\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Removes a callback for when value of a setting changes.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\r\n     * @param   key       Private settings key\r\n     * @param   callback  Callback\r\n     * @since 5.9.2\r\n     */\r\n    off(key, callback) {\r\n        let events = this._settingEvents[key];\r\n        if (events !== undefined && callback !== undefined) {\r\n            _Array__WEBPACK_IMPORTED_MODULE_1__.removeFirst(events, callback);\r\n        }\r\n        else {\r\n            delete this._settingEvents[key];\r\n        }\r\n    }\r\n    /**\r\n     * Sets a callback function to invoke when specific key of private settings\r\n     * changes or is set.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\r\n     * @param   key       Private settings key\r\n     * @param   callback  Callback\r\n     * @return            Disposer for event\r\n     */\r\n    onPrivate(key, callback) {\r\n        let events = this._privateSettingEvents[key];\r\n        if (events === undefined) {\r\n            events = this._privateSettingEvents[key] = [];\r\n        }\r\n        events.push(callback);\r\n        return new _Disposer__WEBPACK_IMPORTED_MODULE_0__.Disposer(() => {\r\n            _Array__WEBPACK_IMPORTED_MODULE_1__.removeFirst(events, callback);\r\n            if (events.length === 0) {\r\n                delete this._privateSettingEvents[key];\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Removes a callback for when value of a private setting changes.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\r\n     * @param   key       Private settings key\r\n     * @param   callback  Callback\r\n     * @since 5.9.2\r\n     */\r\n    offPrivate(key, callback) {\r\n        let events = this._privateSettingEvents[key];\r\n        if (events !== undefined && callback !== undefined) {\r\n            _Array__WEBPACK_IMPORTED_MODULE_1__.removeFirst(events, callback);\r\n        }\r\n        else {\r\n            delete this._privateSettingEvents[key];\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getRaw(key, fallback) {\r\n        const value = this._settings[key];\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    /**\r\n     * Returns `true` if the setting exists.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key        Settings key\r\n     * @return  {boolean}  Key exists\r\n     */\r\n    has(key) {\r\n        return key in this._settings;\r\n    }\r\n    get(key, fallback) {\r\n        return this.getRaw(key, fallback);\r\n    }\r\n    _sendKeyEvent(key, value) {\r\n        const events = this._settingEvents[key];\r\n        if (events !== undefined) {\r\n            _Array__WEBPACK_IMPORTED_MODULE_1__.each(events, (callback) => {\r\n                callback(value, this, key);\r\n            });\r\n        }\r\n    }\r\n    _sendPrivateKeyEvent(key, value) {\r\n        const events = this._privateSettingEvents[key];\r\n        if (events !== undefined) {\r\n            _Array__WEBPACK_IMPORTED_MODULE_1__.each(events, (callback) => {\r\n                callback(value, this, key);\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _setRaw(key, old, value) {\r\n        this._prevSettings[key] = old;\r\n        this._sendKeyEvent(key, value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setRaw(key, value) {\r\n        const old = this._settings[key];\r\n        this._settings[key] = value;\r\n        if (old !== value) {\r\n            this._setRaw(key, old, value);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _set(key, value) {\r\n        const old = this._settings[key];\r\n        this._settings[key] = value;\r\n        if (old !== value) {\r\n            this._setRaw(key, old, value);\r\n            this._markDirtyKey(key);\r\n        }\r\n    }\r\n    _stopAnimation(key) {\r\n        const animation = this._animatingSettings[key];\r\n        if (animation) {\r\n            delete this._animatingSettings[key];\r\n            animation.stop();\r\n        }\r\n    }\r\n    /**\r\n     * Sets a setting `value` for the specified `key`, and returns the same `value`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     * @param   value     Setting value\r\n     * @return            Setting value\r\n     */\r\n    set(key, value) {\r\n        this._set(key, value);\r\n        this._stopAnimation(key);\r\n        return value;\r\n    }\r\n    /**\r\n     * Removes a setting value for the specified `key`;\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     */\r\n    remove(key) {\r\n        if (key in this._settings) {\r\n            this._prevSettings[key] = this._settings[key];\r\n            delete this._settings[key];\r\n            this._sendKeyEvent(key, undefined);\r\n            this._markDirtyKey(key);\r\n        }\r\n        this._stopAnimation(key);\r\n    }\r\n    /**\r\n     * Removes all keys;\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     */\r\n    removeAll() {\r\n        _Array__WEBPACK_IMPORTED_MODULE_1__.each(_Object__WEBPACK_IMPORTED_MODULE_4__.keys(this._settings), (key) => {\r\n            this.remove(key);\r\n        });\r\n    }\r\n    /**\r\n     * Returns a value of a private setting.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/#Private_settings} for more info\r\n     */\r\n    getPrivate(key, fallback) {\r\n        const value = this._privateSettings[key];\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _setPrivateRaw(key, old, value) {\r\n        this._prevPrivateSettings[key] = old;\r\n        this._sendPrivateKeyEvent(key, value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setPrivateRaw(key, value) {\r\n        const old = this._privateSettings[key];\r\n        this._privateSettings[key] = value;\r\n        if (old !== value) {\r\n            this._setPrivateRaw(key, old, value);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _setPrivate(key, value) {\r\n        const old = this._privateSettings[key];\r\n        this._privateSettings[key] = value;\r\n        if (old !== value) {\r\n            this._setPrivateRaw(key, old, value);\r\n            this._markDirtyPrivateKey(key);\r\n        }\r\n    }\r\n    _stopAnimationPrivate(key) {\r\n        const animation = this._animatingPrivateSettings[key];\r\n        if (animation) {\r\n            animation.stop();\r\n            delete this._animatingPrivateSettings[key];\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setPrivate(key, value) {\r\n        this._setPrivate(key, value);\r\n        this._stopAnimationPrivate(key);\r\n        return value;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    removePrivate(key) {\r\n        if (key in this._privateSettings) {\r\n            this._prevPrivateSettings[key] = this._privateSettings[key];\r\n            delete this._privateSettings[key];\r\n            this._markDirtyPrivateKey(key);\r\n        }\r\n        this._stopAnimationPrivate(key);\r\n    }\r\n    /**\r\n     * Sets multiple settings at once.\r\n     *\r\n     * `settings` must be an object with key: value pairs.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param settings Settings\r\n     */\r\n    setAll(settings) {\r\n        _Object__WEBPACK_IMPORTED_MODULE_4__.each(settings, (key, value) => {\r\n            this.set(key, value);\r\n        });\r\n    }\r\n    /**\r\n     * Animates setting values from current/start values to new ones.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Animating_settings} for more info\r\n     * @param   options  Animation options\r\n     * @return           Animation object\r\n     */\r\n    animate(options) {\r\n        const key = options.key;\r\n        const to = options.to;\r\n        const duration = options.duration || 0;\r\n        const loops = options.loops || 1;\r\n        const from = (options.from === undefined ? this.get(key) : options.from);\r\n        const easing = (options.easing === undefined ? _Ease__WEBPACK_IMPORTED_MODULE_5__.linear : options.easing);\r\n        if (duration === 0) {\r\n            this.set(key, to);\r\n        }\r\n        else {\r\n            if (from === undefined || from === to) {\r\n                this.set(key, to);\r\n            }\r\n            else {\r\n                this.set(key, from);\r\n                const animation = this._animatingSettings[key] = new Animation(this, from, to, duration, easing, loops, this._animationTime());\r\n                this._startAnimation();\r\n                return animation;\r\n            }\r\n        }\r\n        const animation = new Animation(this, from, to, duration, easing, loops, null);\r\n        animation.stop();\r\n        return animation;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    animatePrivate(options) {\r\n        const key = options.key;\r\n        const to = options.to;\r\n        const duration = options.duration || 0;\r\n        const loops = options.loops || 1;\r\n        const from = (options.from === undefined ? this.getPrivate(key) : options.from);\r\n        const easing = (options.easing === undefined ? _Ease__WEBPACK_IMPORTED_MODULE_5__.linear : options.easing);\r\n        if (duration === 0) {\r\n            this.setPrivate(key, to);\r\n        }\r\n        else {\r\n            if (from === undefined || from === to) {\r\n                this.setPrivate(key, to);\r\n            }\r\n            else {\r\n                this.setPrivate(key, from);\r\n                const animation = this._animatingPrivateSettings[key] = new Animation(this, from, to, duration, easing, loops, this._animationTime());\r\n                this._startAnimation();\r\n                return animation;\r\n            }\r\n        }\r\n        const animation = new Animation(this, from, to, duration, easing, loops, null);\r\n        animation.stop();\r\n        return animation;\r\n    }\r\n    _dispose() { }\r\n    /**\r\n     * Returns `true` if this element is disposed.\r\n     *\r\n     * @return Disposed\r\n     */\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    /**\r\n     * Disposes this object.\r\n     */\r\n    dispose() {\r\n        if (this.enableDispose && !this._disposed) {\r\n            this._disposed = true;\r\n            this._dispose();\r\n        }\r\n    }\r\n}\r\n/**\r\n * Base class.\r\n *\r\n * @important\r\n */\r\nclass Entity extends Settings {\r\n    /**\r\n     * IMPORTANT! Do not instantiate this class via `new Class()` syntax.\r\n     *\r\n     * Use static method `Class.new()` instead.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n     * @ignore\r\n     */\r\n    constructor(root, settings, isReal, templates = []) {\r\n        super(settings);\r\n        Object.defineProperty(this, \"_root\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_user_id\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        }); // for testing purposes\r\n        Object.defineProperty(this, \"states\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new _States__WEBPACK_IMPORTED_MODULE_6__.States(this)\r\n        });\r\n        Object.defineProperty(this, \"adapters\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Adapters(this)\r\n        });\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._createEvents()\r\n        });\r\n        Object.defineProperty(this, \"_userPrivateProperties\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dirtyPrivate\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_template\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // Templates for the themes\r\n        Object.defineProperty(this, \"_templates\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        // Internal templates which can be overridden by the user's templates\r\n        Object.defineProperty(this, \"_internalTemplates\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // Default themes which can be overridden by the user's themes\r\n        Object.defineProperty(this, \"_defaultThemes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        // Disposers for all of the templates\r\n        Object.defineProperty(this, \"_templateDisposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_disposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        // Whether the template setup function should be run\r\n        Object.defineProperty(this, \"_runSetup\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"_disposerProperties\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        if (!isReal) {\r\n            throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\r\n        }\r\n        this._root = root;\r\n        this._internalTemplates = templates;\r\n        if (settings.id) {\r\n            this._registerId(settings.id);\r\n        }\r\n    }\r\n    /**\r\n     * Use this method to create an instance of this class.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n     * @param   root      Root element\r\n     * @param   settings  Settings\r\n     * @param   template  Template\r\n     * @return            Instantiated object\r\n     */\r\n    static new(root, settings, template) {\r\n        const x = (new this(root, settings, true));\r\n        x._template = template;\r\n        x._afterNew();\r\n        return x;\r\n    }\r\n    static _new(root, settings, templates = []) {\r\n        const x = (new this(root, settings, true, templates));\r\n        x._afterNew();\r\n        return x;\r\n    }\r\n    _afterNew() {\r\n        this._checkDirty();\r\n        let shouldApply = false;\r\n        const template = this._template;\r\n        if (template) {\r\n            shouldApply = true;\r\n            template._setObjectTemplate(this);\r\n        }\r\n        _Array__WEBPACK_IMPORTED_MODULE_1__.each(this._internalTemplates, (template) => {\r\n            shouldApply = true;\r\n            template._setObjectTemplate(this);\r\n        });\r\n        if (shouldApply) {\r\n            this._applyTemplates(false);\r\n        }\r\n        this.states.create(\"default\", {});\r\n        this._setDefaults();\r\n    }\r\n    // This is the same as _afterNew, except it also applies the themes.\r\n    // This should only be used for classes which don't have a parent (because they extend from Entity and not Sprite).\r\n    _afterNewApplyThemes() {\r\n        this._checkDirty();\r\n        const template = this._template;\r\n        if (template) {\r\n            template._setObjectTemplate(this);\r\n        }\r\n        _Array__WEBPACK_IMPORTED_MODULE_1__.each(this._internalTemplates, (template) => {\r\n            template._setObjectTemplate(this);\r\n        });\r\n        this.states.create(\"default\", {});\r\n        this._setDefaults();\r\n        this._applyThemes();\r\n    }\r\n    _createEvents() {\r\n        return new _EventDispatcher__WEBPACK_IMPORTED_MODULE_2__.EventDispatcher();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    get classNames() {\r\n        return this.constructor.classNames;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    get className() {\r\n        return this.constructor.className;\r\n    }\r\n    _setDefaults() {\r\n    }\r\n    _setDefaultFn(key, f) {\r\n        const value = this.get(key);\r\n        if (value) {\r\n            return value;\r\n        }\r\n        else {\r\n            const value = f();\r\n            this.set(key, value);\r\n            return value;\r\n        }\r\n    }\r\n    _setDefault(key, value) {\r\n        if (!this.has(key)) {\r\n            super.set(key, value);\r\n        }\r\n    }\r\n    _setRawDefault(key, value) {\r\n        if (!this.has(key)) {\r\n            super.setRaw(key, value);\r\n        }\r\n    }\r\n    _clearDirty() {\r\n        _Object__WEBPACK_IMPORTED_MODULE_4__.keys(this._dirty).forEach((key) => {\r\n            this._dirty[key] = false;\r\n        });\r\n        _Object__WEBPACK_IMPORTED_MODULE_4__.keys(this._dirtyPrivate).forEach((key) => {\r\n            this._dirtyPrivate[key] = false;\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    isDirty(key) {\r\n        return !!this._dirty[key];\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    isPrivateDirty(key) {\r\n        return !!this._dirtyPrivate[key];\r\n    }\r\n    _markDirtyKey(key) {\r\n        this._dirty[key] = true;\r\n        super._markDirtyKey(key);\r\n    }\r\n    _markDirtyPrivateKey(key) {\r\n        this._dirtyPrivate[key] = true;\r\n        super._markDirtyKey(key);\r\n    }\r\n    /**\r\n     * Checks if element is of certain class (or inherits one).\r\n     *\r\n     * @param   type  Class name to check\r\n     * @return {boolean} Is of class?\r\n     */\r\n    isType(type) {\r\n        return this.classNames.indexOf(type) !== -1;\r\n    }\r\n    _pushPropertyDisposer(key, disposer) {\r\n        let disposers = this._disposerProperties[key];\r\n        if (disposers === undefined) {\r\n            disposers = this._disposerProperties[key] = [];\r\n        }\r\n        disposers.push(disposer);\r\n        return disposer;\r\n    }\r\n    _disposeProperty(key) {\r\n        const disposers = this._disposerProperties[key];\r\n        if (disposers !== undefined) {\r\n            _Array__WEBPACK_IMPORTED_MODULE_1__.each(disposers, (disposer) => {\r\n                disposer.dispose();\r\n            });\r\n            delete this._disposerProperties[key];\r\n        }\r\n    }\r\n    /**\r\n     * @todo needs description\r\n     * @param  value  Template\r\n     */\r\n    set template(value) {\r\n        const template = this._template;\r\n        if (template !== value) {\r\n            this._template = value;\r\n            if (template) {\r\n                template._removeObjectTemplate(this);\r\n            }\r\n            if (value) {\r\n                value._setObjectTemplate(this);\r\n            }\r\n            this._applyTemplates();\r\n        }\r\n    }\r\n    get template() {\r\n        return this._template;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirty() {\r\n        this._root._addDirtyEntity(this);\r\n    }\r\n    _startAnimation() {\r\n        this._root._addAnimation(this);\r\n    }\r\n    _animationTime() {\r\n        return this._root.animationTime;\r\n    }\r\n    _applyState(_name) { }\r\n    _applyStateAnimated(_name, _duration) { }\r\n    get(key, fallback) {\r\n        const value = this.adapters.fold(key, this._settings[key]);\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    isUserSetting(key) {\r\n        return this._userProperties[key] || false;\r\n    }\r\n    /**\r\n     * Sets a setting `value` for the specified `key`, and returns the same `value`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     * @param   value     Setting value\r\n     * @return            Setting value\r\n     */\r\n    set(key, value) {\r\n        this._userProperties[key] = true;\r\n        return super.set(key, value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setRaw(key, value) {\r\n        this._userProperties[key] = true;\r\n        super.setRaw(key, value);\r\n    }\r\n    /**\r\n     * Sets a setting `value` for the specified `key` only if the value for this key was not set previously using set method, and returns the same `value`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     * @param   value     Setting value\r\n     * @return            Setting value\r\n     */\r\n    _setSoft(key, value) {\r\n        if (!this._userProperties[key]) {\r\n            return super.set(key, value);\r\n        }\r\n        return value;\r\n    }\r\n    /**\r\n     * Removes a setting value for the specified `key`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     */\r\n    remove(key) {\r\n        delete this._userProperties[key];\r\n        this._removeTemplateProperty(key);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setPrivate(key, value) {\r\n        this._userPrivateProperties[key] = true;\r\n        return super.setPrivate(key, value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setPrivateRaw(key, value) {\r\n        this._userPrivateProperties[key] = true;\r\n        super.setPrivateRaw(key, value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    removePrivate(key) {\r\n        delete this._userPrivateProperties[key];\r\n        this._removeTemplatePrivateProperty(key);\r\n    }\r\n    _setTemplateProperty(template, key, value) {\r\n        if (!this._userProperties[key]) {\r\n            const match = this._findTemplateByKey(key);\r\n            if (template === match) {\r\n                super.set(key, value);\r\n            }\r\n        }\r\n    }\r\n    _setTemplatePrivateProperty(template, key, value) {\r\n        if (!this._userPrivateProperties[key]) {\r\n            const match = this._findTemplateByPrivateKey(key);\r\n            if (template === match) {\r\n                super.setPrivate(key, value);\r\n            }\r\n        }\r\n    }\r\n    _removeTemplateProperty(key) {\r\n        if (!this._userProperties[key]) {\r\n            const match = this._findTemplateByKey(key);\r\n            if (match) {\r\n                // TODO don't stop the animation if the property didn't change\r\n                super.set(key, match._settings[key]);\r\n            }\r\n            else {\r\n                super.remove(key);\r\n            }\r\n        }\r\n    }\r\n    _removeTemplatePrivateProperty(key) {\r\n        if (!this._userPrivateProperties[key]) {\r\n            const match = this._findTemplateByPrivateKey(key);\r\n            if (match) {\r\n                // TODO don't stop the animation if the property didn't change\r\n                super.setPrivate(key, match._privateSettings[key]);\r\n            }\r\n            else {\r\n                super.removePrivate(key);\r\n            }\r\n        }\r\n    }\r\n    _walkParents(f) {\r\n        f(this._root._rootContainer);\r\n        f(this);\r\n    }\r\n    // TODO faster version of this method which is specialized to just 1 key\r\n    _applyStateByKey(name) {\r\n        const other = this.states.create(name, {});\r\n        const seen = {};\r\n        this._eachTemplate((template) => {\r\n            const state = template.states.lookup(name);\r\n            if (state) {\r\n                state._apply(other, seen);\r\n            }\r\n        });\r\n        _Object__WEBPACK_IMPORTED_MODULE_4__.each(other._settings, (key) => {\r\n            if (!seen[key] && !other._userSettings[key]) {\r\n                other.remove(key);\r\n            }\r\n        });\r\n    }\r\n    _applyTemplate(template, state) {\r\n        this._templateDisposers.push(template._apply(this, state));\r\n        _Object__WEBPACK_IMPORTED_MODULE_4__.each(template._settings, (key, value) => {\r\n            if (!state.settings[key] && !this._userProperties[key]) {\r\n                state.settings[key] = true;\r\n                super.set(key, value);\r\n            }\r\n        });\r\n        _Object__WEBPACK_IMPORTED_MODULE_4__.each(template._privateSettings, (key, value) => {\r\n            if (!state.privateSettings[key] && !this._userPrivateProperties[key]) {\r\n                state.privateSettings[key] = true;\r\n                super.setPrivate(key, value);\r\n            }\r\n        });\r\n        if (this._runSetup && template.setup) {\r\n            this._runSetup = false;\r\n            template.setup(this);\r\n        }\r\n    }\r\n    /**\r\n     * Calls the closure with each template and returns the first template which is true\r\n     */\r\n    _findStaticTemplate(f) {\r\n        if (this._template) {\r\n            if (f(this._template)) {\r\n                return this._template;\r\n            }\r\n        }\r\n    }\r\n    _eachTemplate(f) {\r\n        this._findStaticTemplate((template) => {\r\n            f(template);\r\n            return false;\r\n        });\r\n        // _internalTemplates is sorted with most specific to the right\r\n        _Array__WEBPACK_IMPORTED_MODULE_1__.eachReverse(this._internalTemplates, f);\r\n        // _templates is sorted with most specific to the left\r\n        _Array__WEBPACK_IMPORTED_MODULE_1__.each(this._templates, f);\r\n    }\r\n    _applyTemplates(remove = true) {\r\n        if (remove) {\r\n            this._disposeTemplates();\r\n        }\r\n        const state = {\r\n            settings: {},\r\n            privateSettings: {},\r\n            states: {},\r\n        };\r\n        this._eachTemplate((template) => {\r\n            this._applyTemplate(template, state);\r\n        });\r\n        if (remove) {\r\n            _Object__WEBPACK_IMPORTED_MODULE_4__.each(this._settings, (key) => {\r\n                if (!this._userProperties[key] && !state.settings[key]) {\r\n                    super.remove(key);\r\n                }\r\n            });\r\n            _Object__WEBPACK_IMPORTED_MODULE_4__.each(this._privateSettings, (key) => {\r\n                if (!this._userPrivateProperties[key] && !state.privateSettings[key]) {\r\n                    super.removePrivate(key);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _findTemplate(f) {\r\n        const value = this._findStaticTemplate(f);\r\n        if (value === undefined) {\r\n            // _internalTemplates is sorted with most specific to the right\r\n            const value = _Array__WEBPACK_IMPORTED_MODULE_1__.findReverse(this._internalTemplates, f);\r\n            if (value === undefined) {\r\n                // _templates is sorted with most specific to the left\r\n                return _Array__WEBPACK_IMPORTED_MODULE_1__.find(this._templates, f);\r\n            }\r\n            else {\r\n                return value;\r\n            }\r\n        }\r\n        else {\r\n            return value;\r\n        }\r\n    }\r\n    _findTemplateByKey(key) {\r\n        return this._findTemplate((template) => {\r\n            return key in template._settings;\r\n        });\r\n    }\r\n    _findTemplateByPrivateKey(key) {\r\n        return this._findTemplate((template) => {\r\n            return key in template._privateSettings;\r\n        });\r\n    }\r\n    _disposeTemplates() {\r\n        _Array__WEBPACK_IMPORTED_MODULE_1__.each(this._templateDisposers, (disposer) => {\r\n            disposer.dispose();\r\n        });\r\n        this._templateDisposers.length = 0;\r\n    }\r\n    _removeTemplates() {\r\n        _Array__WEBPACK_IMPORTED_MODULE_1__.each(this._templates, (template) => {\r\n            template._removeObjectTemplate(this);\r\n        });\r\n        this._templates.length = 0;\r\n    }\r\n    _applyThemes(force = false) {\r\n        let isConnected = false;\r\n        const defaults = [];\r\n        let themes = [];\r\n        const themeTags = new Set();\r\n        const tags = this.get(\"themeTagsSelf\");\r\n        if (tags) {\r\n            _Array__WEBPACK_IMPORTED_MODULE_1__.each(tags, (tag) => {\r\n                themeTags.add(tag);\r\n            });\r\n        }\r\n        this._walkParents((entity) => {\r\n            if (entity === this._root._rootContainer) {\r\n                isConnected = true;\r\n            }\r\n            if (entity._defaultThemes.length > 0) {\r\n                defaults.push(entity._defaultThemes);\r\n            }\r\n            const theme = entity.get(\"themes\");\r\n            if (theme) {\r\n                themes.push(theme);\r\n            }\r\n            const tags = entity.get(\"themeTags\");\r\n            if (tags) {\r\n                _Array__WEBPACK_IMPORTED_MODULE_1__.each(tags, (tag) => {\r\n                    themeTags.add(tag);\r\n                });\r\n            }\r\n        });\r\n        themes = defaults.concat(themes);\r\n        this._removeTemplates();\r\n        if (isConnected || force) {\r\n            _Array__WEBPACK_IMPORTED_MODULE_1__.eachReverse(this.classNames, (name) => {\r\n                const allRules = [];\r\n                _Array__WEBPACK_IMPORTED_MODULE_1__.each(themes, (themes) => {\r\n                    _Array__WEBPACK_IMPORTED_MODULE_1__.each(themes, (theme) => {\r\n                        const rules = theme._lookupRules(name);\r\n                        if (rules) {\r\n                            _Array__WEBPACK_IMPORTED_MODULE_1__.eachReverse(rules, (rule) => {\r\n                                const matches = rule.tags.every((tag) => {\r\n                                    return themeTags.has(tag);\r\n                                });\r\n                                if (matches) {\r\n                                    const result = _Array__WEBPACK_IMPORTED_MODULE_1__.getFirstSortedIndex(allRules, (x) => {\r\n                                        const order = _Order__WEBPACK_IMPORTED_MODULE_7__.compare(rule.tags.length, x.tags.length);\r\n                                        if (order === 0) {\r\n                                            return _Order__WEBPACK_IMPORTED_MODULE_7__.compareArray(rule.tags, x.tags, _Order__WEBPACK_IMPORTED_MODULE_7__.compare);\r\n                                        }\r\n                                        else {\r\n                                            return order;\r\n                                        }\r\n                                    });\r\n                                    allRules.splice(result.index, 0, rule);\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                });\r\n                _Array__WEBPACK_IMPORTED_MODULE_1__.each(allRules, (rule) => {\r\n                    this._templates.push(rule.template);\r\n                    rule.template._setObjectTemplate(this);\r\n                });\r\n            });\r\n        }\r\n        this._applyTemplates();\r\n        if (isConnected || force) {\r\n            // This causes it to only run the setup function the first time that the themes are applied\r\n            this._runSetup = false;\r\n        }\r\n        return isConnected || force;\r\n    }\r\n    _changed() { }\r\n    _beforeChanged() {\r\n        if (this.isDirty(\"id\")) {\r\n            const id = this.get(\"id\");\r\n            if (id) {\r\n                this._registerId(id);\r\n            }\r\n            const prevId = this._prevSettings.id;\r\n            if (prevId) {\r\n                delete this._root.entitiesById[prevId];\r\n                delete _Registry__WEBPACK_IMPORTED_MODULE_8__.registry.entitiesById[prevId];\r\n            }\r\n        }\r\n    }\r\n    _registerId(id) {\r\n        if (this._root.entitiesById[id] && this._root.entitiesById[id] !== this) {\r\n            throw new Error(\"An entity with id \\\"\" + id + \"\\\" already exists.\");\r\n        }\r\n        this._root.entitiesById[id] = this;\r\n        _Registry__WEBPACK_IMPORTED_MODULE_8__.registry.entitiesById[id] = this;\r\n    }\r\n    _afterChanged() { }\r\n    /**\r\n     * @ignore\r\n     */\r\n    addDisposer(disposer) {\r\n        this._disposers.push(disposer);\r\n        return disposer;\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        const template = this._template;\r\n        if (template) {\r\n            template._removeObjectTemplate(this);\r\n        }\r\n        _Array__WEBPACK_IMPORTED_MODULE_1__.each(this._internalTemplates, (template) => {\r\n            template._removeObjectTemplate(this);\r\n        });\r\n        this._removeTemplates();\r\n        this._disposeTemplates();\r\n        this.events.dispose();\r\n        this._disposers.forEach((x) => {\r\n            x.dispose();\r\n        });\r\n        _Object__WEBPACK_IMPORTED_MODULE_4__.each(this._disposerProperties, (_, disposers) => {\r\n            _Array__WEBPACK_IMPORTED_MODULE_1__.each(disposers, (disposer) => {\r\n                disposer.dispose();\r\n            });\r\n        });\r\n        const id = this.get(\"id\");\r\n        if (id) {\r\n            delete this._root.entitiesById[id];\r\n            delete _Registry__WEBPACK_IMPORTED_MODULE_8__.registry.entitiesById[id];\r\n        }\r\n    }\r\n    /**\r\n     * Creates and returns a \"disposable\" timeout.\r\n     *\r\n     * @param   fn     Callback\r\n     * @param   delay  Delay in milliseconds\r\n     * @return         Timeout disposer\r\n     */\r\n    setTimeout(fn, delay) {\r\n        const id = setTimeout(() => {\r\n            this.removeDispose(disposer);\r\n            fn();\r\n        }, delay);\r\n        const disposer = new _Disposer__WEBPACK_IMPORTED_MODULE_0__.Disposer(() => {\r\n            clearTimeout(id);\r\n        });\r\n        this._disposers.push(disposer);\r\n        return disposer;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    removeDispose(target) {\r\n        if (!this.isDisposed()) {\r\n            let index = _Array__WEBPACK_IMPORTED_MODULE_1__.indexOf(this._disposers, target);\r\n            if (index > -1) {\r\n                this._disposers.splice(index, 1);\r\n            }\r\n        }\r\n        target.dispose();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    hasTag(tag) {\r\n        return _Array__WEBPACK_IMPORTED_MODULE_1__.indexOf(this.get(\"themeTags\", []), tag) !== -1;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    addTag(tag) {\r\n        if (!this.hasTag(tag)) {\r\n            const tags = this.get(\"themeTags\", []);\r\n            tags.push(tag);\r\n            this.set(\"themeTags\", tags);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    removeTag(tag) {\r\n        if (this.hasTag(tag)) {\r\n            const tags = this.get(\"themeTags\", []);\r\n            _Array__WEBPACK_IMPORTED_MODULE_1__.remove(tags, tag);\r\n            this.set(\"themeTags\", tags);\r\n        }\r\n    }\r\n    _t(text, locale, ...rest) {\r\n        return this._root.language.translate(text, locale, ...rest);\r\n    }\r\n    /**\r\n     * An instance of [[Root]] object.\r\n     *\r\n     * @readonly\r\n     * @since 5.0.6\r\n     * @return Root object\r\n     */\r\n    get root() {\r\n        return this._root;\r\n    }\r\n}\r\nObject.defineProperty(Entity, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Entity\"\r\n});\r\nObject.defineProperty(Entity, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: [\"Entity\"]\r\n});\r\n//# sourceMappingURL=Entity.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Entity.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/EventDispatcher.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/core/util/EventDispatcher.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EventDispatcher: () => (/* binding */ EventDispatcher),\n/* harmony export */   TargetedEventDispatcher: () => (/* binding */ TargetedEventDispatcher)\n/* harmony export */ });\n/* harmony import */ var _Disposer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Disposer */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Disposer.js\");\n/* harmony import */ var _Array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Array */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Array.js\");\n/* harmony import */ var _Type__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Type */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Type.js\");\n/**\r\n * Event Dispatcher module is used for registering listeners and dispatching\r\n * events across amCharts system.\r\n */\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n/**\r\n * Universal Event Dispatcher.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/events/} for more info\r\n */\r\nclass EventDispatcher {\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor() {\r\n        Object.defineProperty(this, \"_listeners\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_killed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_disabled\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_iterating\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_enabled\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._listeners = [];\r\n        this._killed = [];\r\n        this._disabled = {};\r\n        this._iterating = 0;\r\n        this._enabled = true;\r\n        this._disposed = false;\r\n    }\r\n    /**\r\n     * Returns if this object has been already disposed.\r\n     *\r\n     * @return Disposed?\r\n     */\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    /**\r\n     * Dispose (destroy) this object.\r\n     */\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            const a = this._listeners;\r\n            this._iterating = 1;\r\n            this._listeners = null;\r\n            this._disabled = null;\r\n            try {\r\n                _Array__WEBPACK_IMPORTED_MODULE_0__.each(a, (x) => {\r\n                    x.disposer.dispose();\r\n                });\r\n            }\r\n            finally {\r\n                this._killed = null;\r\n                this._iterating = null;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Checks if this particular event dispatcher has any listeners set.\r\n     *\r\n     * @return Has listeners?\r\n     */\r\n    hasListeners() {\r\n        return this._listeners.length !== 0;\r\n    }\r\n    /**\r\n     * Checks if this particular event dispatcher has any particular listeners set.\r\n     *\r\n     * @return Has particular event listeners?\r\n     */\r\n    hasListenersByType(type) {\r\n        return _Array__WEBPACK_IMPORTED_MODULE_0__.any(this._listeners, (x) => (x.type === null || x.type === type) && !x.killed);\r\n    }\r\n    /**\r\n     * Enable dispatching of events if they were previously disabled by\r\n     * `disable()`.\r\n     */\r\n    enable() {\r\n        this._enabled = true;\r\n    }\r\n    /**\r\n     * Disable dispatching of events until re-enabled by `enable()`.\r\n     */\r\n    disable() {\r\n        this._enabled = false;\r\n    }\r\n    /**\r\n     * Enable dispatching particular event, if it was disabled before by\r\n     * `disableType()`.\r\n     *\r\n     * @param type Event type\r\n     */\r\n    enableType(type) {\r\n        delete this._disabled[type];\r\n    }\r\n    /**\r\n     * Disable dispatching of events for a certain event type.\r\n     *\r\n     * Optionally, can set how many dispatches to skip before automatically\r\n     * re-enabling the dispatching.\r\n     *\r\n     * @param type    Event type\r\n     * @param amount  Number of event dispatches to skip\r\n     */\r\n    disableType(type, amount = Infinity) {\r\n        this._disabled[type] = amount;\r\n    }\r\n    /**\r\n     * Removes listener from dispatcher.\r\n     *\r\n     * Will throw an exception if such listener does not exists.\r\n     *\r\n     * @param listener Listener to remove\r\n     */\r\n    _removeListener(listener) {\r\n        if (this._iterating === 0) {\r\n            const index = this._listeners.indexOf(listener);\r\n            if (index === -1) {\r\n                throw new Error(\"Invalid state: could not remove listener\");\r\n            }\r\n            this._listeners.splice(index, 1);\r\n        }\r\n        else {\r\n            this._killed.push(listener);\r\n        }\r\n    }\r\n    /**\r\n     * Removes existing listener by certain parameters.\r\n     *\r\n     * @param once         Listener's once setting\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     */\r\n    _removeExistingListener(once, type, callback, context) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        this._eachListener((info) => {\r\n            if (info.once === once && // TODO is this correct ?\r\n                info.type === type &&\r\n                (callback === undefined || info.callback === callback) &&\r\n                info.context === context) {\r\n                info.disposer.dispose();\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Checks if dispatching for particular event type is enabled.\r\n     *\r\n     * @param type  Event type\r\n     * @return Enabled?\r\n     */\r\n    isEnabled(type) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        // TODO is this check correct ?\r\n        return this._enabled && this._listeners.length > 0 && this.hasListenersByType(type) && this._disabled[type] === undefined;\r\n    }\r\n    /**\r\n     * Removes all listeners of a particular event type\r\n     *\r\n     * @param type  Listener's type\r\n     */\r\n    removeType(type) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        this._eachListener((info) => {\r\n            if (info.type === type) {\r\n                info.disposer.dispose();\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Checks if there's already a listener with specific parameters.\r\n     *\r\n     * @param type      Listener's type\r\n     * @param callback  Callback function\r\n     * @param context   Callback context\r\n     * @return Has listener?\r\n     */\r\n    has(type, callback, context) {\r\n        const index = _Array__WEBPACK_IMPORTED_MODULE_0__.findIndex(this._listeners, (info) => {\r\n            return info.once !== true && // Ignoring \"once\" listeners\r\n                info.type === type &&\r\n                (callback === undefined || info.callback === callback) &&\r\n                info.context === context;\r\n        });\r\n        return index !== -1;\r\n    }\r\n    /**\r\n     * Checks whether event of the particular type should be dispatched.\r\n     *\r\n     * @param type  Event type\r\n     * @return Dispatch?\r\n     */\r\n    _shouldDispatch(type) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        const count = this._disabled[type];\r\n        if (!_Type__WEBPACK_IMPORTED_MODULE_1__.isNumber(count)) {\r\n            return this._enabled;\r\n        }\r\n        else {\r\n            if (count <= 1) {\r\n                delete this._disabled[type];\r\n            }\r\n            else {\r\n                --this._disabled[type];\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * [_eachListener description]\r\n     *\r\n     * All of this extra code is needed when a listener is removed while iterating\r\n     *\r\n     * @todo Description\r\n     * @param fn [description]\r\n     */\r\n    _eachListener(fn) {\r\n        ++this._iterating;\r\n        try {\r\n            _Array__WEBPACK_IMPORTED_MODULE_0__.each(this._listeners, fn);\r\n        }\r\n        finally {\r\n            --this._iterating;\r\n            // TODO should this be inside or outside the finally ?\r\n            if (this._iterating === 0 && this._killed.length !== 0) {\r\n                // Remove killed listeners\r\n                _Array__WEBPACK_IMPORTED_MODULE_0__.each(this._killed, (killed) => {\r\n                    this._removeListener(killed);\r\n                });\r\n                this._killed.length = 0;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Dispatches an event immediately without waiting for next cycle.\r\n     *\r\n     * @param type   Event type\r\n     * @param event  Event object\r\n     * @todo automatically add in type and target properties if they are missing\r\n     */\r\n    dispatch(type, event) {\r\n        if (this._shouldDispatch(type)) {\r\n            // TODO check if it's faster to use an object of listeners rather than a single big array\r\n            // TODO if the function throws, maybe it should keep going ?\r\n            this._eachListener((listener) => {\r\n                if (!listener.killed && (listener.type === null || listener.type === type)) {\r\n                    listener.dispatch(type, event);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Shelves the event to be dispatched within next update cycle.\r\n     *\r\n     * @param type   Event type\r\n     * @param event  Event object\r\n     * @todo automatically add in type and target properties if they are missing\r\n     */\r\n    /*public dispatchLater<Key extends keyof T>(type: Key, event: T[Key]): void {\r\n        if (this._shouldDispatch(type)) {\r\n            this._eachListener((listener) => {\r\n                // TODO check if it's faster to use an object of listeners rather than a single big array\r\n                if (!listener.killed && (listener.type === null || listener.type === type)) {\r\n                    // TODO if the function throws, maybe it should keep going ?\r\n                    // TODO dispatch during the update cycle, rather than using whenIdle\r\n                    $async.whenIdle(() => {\r\n                        if (!listener.killed) {\r\n                            listener.dispatch(type, event);\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }*/\r\n    /**\r\n     * Creates, catalogs and returns an [[EventListener]].\r\n     *\r\n     * Event listener can be disposed.\r\n     *\r\n     * @param once         Listener's once setting\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n     * @param dispatch\r\n     * @returns An event listener\r\n     */\r\n    _on(once, type, callback, context, shouldClone, dispatch) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        this._removeExistingListener(once, type, callback, context);\r\n        const info = {\r\n            type: type,\r\n            callback: callback,\r\n            context: context,\r\n            shouldClone: shouldClone,\r\n            dispatch: dispatch,\r\n            killed: false,\r\n            once: once,\r\n            disposer: new _Disposer__WEBPACK_IMPORTED_MODULE_2__.Disposer(() => {\r\n                info.killed = true;\r\n                this._removeListener(info);\r\n            })\r\n        };\r\n        this._listeners.push(info);\r\n        return info;\r\n    }\r\n    /**\r\n     * Creates an event listener to be invoked on **any** event.\r\n     *\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n     * @returns A disposable event listener\r\n     */\r\n    onAll(callback, context, shouldClone = true) {\r\n        return this._on(false, null, callback, context, shouldClone, (_type, event) => callback.call(context, event)).disposer;\r\n    }\r\n    /**\r\n     * Creates an event listener to be invoked on a specific event type.\r\n     *\r\n     * ```TypeScript\r\n     * button.events.once(\"click\", (ev) => {\r\n     *   console.log(\"Button clicked\");\r\n     * }, this);\r\n     * ```\r\n     * ```JavaScript\r\n     * button.events.once(\"click\", (ev) => {\r\n     *   console.log(\"Button clicked\");\r\n     * }, this);\r\n     * ```\r\n     *\r\n     * The above will invoke our custom event handler whenever series we put\r\n     * event on is hidden.\r\n     *\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n     * @returns A disposable event listener\r\n     */\r\n    on(type, callback, context, shouldClone = true) {\r\n        return this._on(false, type, callback, context, shouldClone, (_type, event) => callback.call(context, event)).disposer;\r\n    }\r\n    /**\r\n     * Creates an event listener to be invoked on a specific event type once.\r\n     *\r\n     * Once the event listener is invoked, it is automatically disposed.\r\n     *\r\n     * ```TypeScript\r\n     * button.events.once(\"click\", (ev) => {\r\n     *   console.log(\"Button clicked\");\r\n     * }, this);\r\n     * ```\r\n     * ```JavaScript\r\n     * button.events.once(\"click\", (ev) => {\r\n     *   console.log(\"Button clicked\");\r\n     * }, this);\r\n     * ```\r\n     *\r\n     * The above will invoke our custom event handler the first time series we\r\n     * put event on is hidden.\r\n     *\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n     * @returns A disposable event listener\r\n     */\r\n    once(type, callback, context, shouldClone = true) {\r\n        const x = this._on(true, type, callback, context, shouldClone, (_type, event) => {\r\n            x.disposer.dispose();\r\n            callback.call(context, event);\r\n        });\r\n        // TODO maybe this should return a different Disposer ?\r\n        return x.disposer;\r\n    }\r\n    /**\r\n     * Removes the event listener with specific parameters.\r\n     *\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     */\r\n    off(type, callback, context) {\r\n        this._removeExistingListener(false, type, callback, context);\r\n    }\r\n    /**\r\n     * Copies all dispatcher parameters, including listeners, from another event\r\n     * dispatcher.\r\n     *\r\n     * @param source Source event dispatcher\r\n     * @ignore\r\n     */\r\n    copyFrom(source) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        if (source === this) {\r\n            throw new Error(\"Cannot copyFrom the same TargetedEventDispatcher\");\r\n        }\r\n        const disposers = [];\r\n        _Array__WEBPACK_IMPORTED_MODULE_0__.each(source._listeners, (x) => {\r\n            // TODO is this correct ?\r\n            if (!x.killed && x.shouldClone) {\r\n                if (x.type === null) {\r\n                    disposers.push(this.onAll(x.callback, x.context));\r\n                }\r\n                else if (x.once) {\r\n                    disposers.push(this.once(x.type, x.callback, x.context));\r\n                }\r\n                else {\r\n                    disposers.push(this.on(x.type, x.callback, x.context));\r\n                }\r\n            }\r\n        });\r\n        return new _Disposer__WEBPACK_IMPORTED_MODULE_2__.MultiDisposer(disposers);\r\n    }\r\n}\r\n/**\r\n * A version of the [[EventDispatcher]] that dispatches events for a specific\r\n * target object.\r\n *\r\n * @ignore\r\n */\r\nclass TargetedEventDispatcher extends EventDispatcher {\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param target Event dispatcher target\r\n     */\r\n    constructor(target) {\r\n        super();\r\n        /**\r\n         * A target object which is originating events using this dispatcher.\r\n         */\r\n        Object.defineProperty(this, \"target\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.target = target;\r\n    }\r\n    /**\r\n     * Copies all dispatcher parameters, including listeners, from another event\r\n     * dispatcher.\r\n     *\r\n     * @param source Source event dispatcher\r\n     * @ignore\r\n     */\r\n    copyFrom(source) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        if (source === this) {\r\n            throw new Error(\"Cannot copyFrom the same TargetedEventDispatcher\");\r\n        }\r\n        const disposers = [];\r\n        _Array__WEBPACK_IMPORTED_MODULE_0__.each(source._listeners, (x) => {\r\n            // TODO very hacky\r\n            if (x.context === source.target) {\r\n                return;\r\n            }\r\n            // TODO is this correct ?\r\n            if (!x.killed && x.shouldClone) {\r\n                if (x.type === null) {\r\n                    disposers.push(this.onAll(x.callback, x.context));\r\n                }\r\n                else if (x.once) {\r\n                    disposers.push(this.once(x.type, x.callback, x.context));\r\n                }\r\n                else {\r\n                    disposers.push(this.on(x.type, x.callback, x.context));\r\n                }\r\n            }\r\n        });\r\n        return new _Disposer__WEBPACK_IMPORTED_MODULE_2__.MultiDisposer(disposers);\r\n    }\r\n}\r\n//# sourceMappingURL=EventDispatcher.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/EventDispatcher.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/InterfaceColors.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/core/util/InterfaceColors.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InterfaceColors: () => (/* binding */ InterfaceColors)\n/* harmony export */ });\n/* harmony import */ var _Entity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Entity */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Entity.js\");\n\r\n/**\r\n * Presets for common UI elements.\r\n */\r\nclass InterfaceColors extends _Entity__WEBPACK_IMPORTED_MODULE_0__.Entity {\r\n}\r\nObject.defineProperty(InterfaceColors, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"InterfaceColors\"\r\n});\r\nObject.defineProperty(InterfaceColors, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: _Entity__WEBPACK_IMPORTED_MODULE_0__.Entity.classNames.concat([InterfaceColors.className])\r\n});\r\n//# sourceMappingURL=InterfaceColors.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNS8uaW50ZXJuYWwvY29yZS91dGlsL0ludGVyZmFjZUNvbG9ycy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFrQztBQUNsQztBQUNBO0FBQ0E7QUFDTyw4QkFBOEIsMkNBQU07QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVywyQ0FBTTtBQUNqQixDQUFDO0FBQ0QiLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3Jrc3BhY2Uvbm9kZV9tb2R1bGVzL0BhbWNoYXJ0cy9hbWNoYXJ0czUvLmludGVybmFsL2NvcmUvdXRpbC9JbnRlcmZhY2VDb2xvcnMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRW50aXR5IH0gZnJvbSBcIi4vRW50aXR5XCI7XHJcbi8qKlxyXG4gKiBQcmVzZXRzIGZvciBjb21tb24gVUkgZWxlbWVudHMuXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgSW50ZXJmYWNlQ29sb3JzIGV4dGVuZHMgRW50aXR5IHtcclxufVxyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoSW50ZXJmYWNlQ29sb3JzLCBcImNsYXNzTmFtZVwiLCB7XHJcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgY29uZmlndXJhYmxlOiB0cnVlLFxyXG4gICAgd3JpdGFibGU6IHRydWUsXHJcbiAgICB2YWx1ZTogXCJJbnRlcmZhY2VDb2xvcnNcIlxyXG59KTtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KEludGVyZmFjZUNvbG9ycywgXCJjbGFzc05hbWVzXCIsIHtcclxuICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICBjb25maWd1cmFibGU6IHRydWUsXHJcbiAgICB3cml0YWJsZTogdHJ1ZSxcclxuICAgIHZhbHVlOiBFbnRpdHkuY2xhc3NOYW1lcy5jb25jYXQoW0ludGVyZmFjZUNvbG9ycy5jbGFzc05hbWVdKVxyXG59KTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9SW50ZXJmYWNlQ29sb3JzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/InterfaceColors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Language.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/core/util/Language.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Language: () => (/* binding */ Language)\n/* harmony export */ });\n/* harmony import */ var _Entity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Entity */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Entity.js\");\n/* harmony import */ var _Array__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Array */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Array.js\");\n/* harmony import */ var _Object__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Object */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Object.js\");\n/* harmony import */ var _locales_en__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../locales/en */ \"(ssr)/./node_modules/@amcharts/amcharts5/locales/en.js\");\n\r\n\r\n\r\n\r\n;\r\n/**\r\n * Add localization functionality.\r\n */\r\nclass Language extends _Entity__WEBPACK_IMPORTED_MODULE_0__.Entity {\r\n    _setDefaults() {\r\n        this.setPrivate(\"defaultLocale\", _locales_en__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\r\n        super._setDefaults();\r\n    }\r\n    /**\r\n     * Returns a prompt translation.\r\n     *\r\n     * @param   prompt   Prompt to translate\r\n     * @param   locale   Target locale\r\n     * @param   ...rest  Parameters\r\n     * @return           Translation\r\n     */\r\n    translate(prompt, locale, ...rest) {\r\n        // Get langauge\r\n        if (!locale) {\r\n            locale = this._root.locale || this.getPrivate(\"defaultLocale\");\r\n        }\r\n        // Init translation\r\n        let translation = prompt;\r\n        let value = locale[prompt];\r\n        // Try to look for the translation\r\n        if (value === null) {\r\n            translation = \"\";\r\n        }\r\n        else if (value != null) {\r\n            // It might be an empty string\r\n            if (value) {\r\n                translation = value;\r\n            }\r\n        }\r\n        else if (locale !== this.getPrivate(\"defaultLocale\")) {\r\n            // Try to look in default language\r\n            return this.translate(prompt, this.getPrivate(\"defaultLocale\"), ...rest);\r\n        }\r\n        // Replace %1, %2, etc params\r\n        if (rest.length) {\r\n            for (let len = rest.length, i = 0; i < len; ++i) {\r\n                translation = translation.split(\"%\" + (i + 1)).join(rest[i]);\r\n            }\r\n        }\r\n        // Return the translation\r\n        return translation;\r\n    }\r\n    /**\r\n     * Returns a prompt translation, including custom prompts.\r\n     *\r\n     * @param   prompt   Prompt to translate\r\n     * @param   locale   Target locale\r\n     * @param   ...rest  Parameters\r\n     * @return           Translation\r\n     */\r\n    translateAny(prompt, locale, ...rest) {\r\n        return this.translate(prompt, locale, ...rest);\r\n    }\r\n    /**\r\n     * Add a custom prompt to locale.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/locales/creating-translations/#Extending_locale_with_custom_prompts}\r\n     * @param  prompt       Source prompt\r\n     * @param  translation  Tanslation\r\n     * @param  locale       Target locale\r\n     */\r\n    setTranslationAny(prompt, translation, locale) {\r\n        const localeTarget = locale || this._root.locale;\r\n        localeTarget[prompt] = translation;\r\n    }\r\n    /**\r\n     * Add a batch of custom prompts.\r\n     *\r\n     * @since 5.3.3\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/locales/creating-translations/#Extending_locale_with_custom_prompts}\r\n     * @param  translations  Translations\r\n     * @param  locale        Target locale\r\n     */\r\n    setTranslationsAny(translations, locale) {\r\n        _Object__WEBPACK_IMPORTED_MODULE_2__.each(translations, (key, val) => {\r\n            this.setTranslationAny(key, val, locale);\r\n        });\r\n    }\r\n    translateEmpty(prompt, locale, ...rest) {\r\n        let translation = this.translate(prompt, locale, ...rest);\r\n        return translation == prompt ? \"\" : translation;\r\n    }\r\n    translateFunc(prompt, locale) {\r\n        if (this._root.locale[prompt]) {\r\n            return this._root.locale[prompt];\r\n        }\r\n        // Try to look in default language\r\n        if (locale !== this.getPrivate(\"defaultLocale\")) {\r\n            return this.translateFunc(prompt, this.getPrivate(\"defaultLocale\"));\r\n        }\r\n        // Fail - return empty function\r\n        return () => {\r\n            return \"\";\r\n        };\r\n    }\r\n    /**\r\n     * Translates a btach of prompts.\r\n     *\r\n     * @param  list    Array of prompts to translate\r\n     * @param  locale  Target locale\r\n     * @return         Array of translations\r\n     */\r\n    translateAll(list, locale) {\r\n        // Translate all items in the list\r\n        if (!this.isDefault()) {\r\n            return _Array__WEBPACK_IMPORTED_MODULE_3__.map(list, (x) => this.translate(x, locale));\r\n        }\r\n        else {\r\n            return list;\r\n        }\r\n    }\r\n    /**\r\n     * Returns `true` if the currently selected locale is a default locale.\r\n     *\r\n     * @return `true` if locale is default; `false` if it is not.\r\n     */\r\n    isDefault() {\r\n        return this.getPrivate(\"defaultLocale\") === this._root.locale;\r\n    }\r\n}\r\n//# sourceMappingURL=Language.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNS8uaW50ZXJuYWwvY29yZS91dGlsL0xhbmd1YWdlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQWtDO0FBQ0E7QUFDRTtBQUNDO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ08sdUJBQXVCLDJDQUFNO0FBQ3BDO0FBQ0EseUNBQXlDLG1EQUFFO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0NBQStDLFNBQVM7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHlDQUFZO0FBQ3BCO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLHVDQUFVO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0Q0FBNEM7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvaG9tZS9ydW5uZXIvd29ya3NwYWNlL25vZGVfbW9kdWxlcy9AYW1jaGFydHMvYW1jaGFydHM1Ly5pbnRlcm5hbC9jb3JlL3V0aWwvTGFuZ3VhZ2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRW50aXR5IH0gZnJvbSBcIi4vRW50aXR5XCI7XHJcbmltcG9ydCAqIGFzICRhcnJheSBmcm9tIFwiLi9BcnJheVwiO1xyXG5pbXBvcnQgKiBhcyAkb2JqZWN0IGZyb20gXCIuL09iamVjdFwiO1xyXG5pbXBvcnQgZW4gZnJvbSBcIi4uLy4uLy4uL2xvY2FsZXMvZW5cIjtcclxuO1xyXG4vKipcclxuICogQWRkIGxvY2FsaXphdGlvbiBmdW5jdGlvbmFsaXR5LlxyXG4gKi9cclxuZXhwb3J0IGNsYXNzIExhbmd1YWdlIGV4dGVuZHMgRW50aXR5IHtcclxuICAgIF9zZXREZWZhdWx0cygpIHtcclxuICAgICAgICB0aGlzLnNldFByaXZhdGUoXCJkZWZhdWx0TG9jYWxlXCIsIGVuKTtcclxuICAgICAgICBzdXBlci5fc2V0RGVmYXVsdHMoKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJucyBhIHByb21wdCB0cmFuc2xhdGlvbi5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gICBwcm9tcHQgICBQcm9tcHQgdG8gdHJhbnNsYXRlXHJcbiAgICAgKiBAcGFyYW0gICBsb2NhbGUgICBUYXJnZXQgbG9jYWxlXHJcbiAgICAgKiBAcGFyYW0gICAuLi5yZXN0ICBQYXJhbWV0ZXJzXHJcbiAgICAgKiBAcmV0dXJuICAgICAgICAgICBUcmFuc2xhdGlvblxyXG4gICAgICovXHJcbiAgICB0cmFuc2xhdGUocHJvbXB0LCBsb2NhbGUsIC4uLnJlc3QpIHtcclxuICAgICAgICAvLyBHZXQgbGFuZ2F1Z2VcclxuICAgICAgICBpZiAoIWxvY2FsZSkge1xyXG4gICAgICAgICAgICBsb2NhbGUgPSB0aGlzLl9yb290LmxvY2FsZSB8fCB0aGlzLmdldFByaXZhdGUoXCJkZWZhdWx0TG9jYWxlXCIpO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvLyBJbml0IHRyYW5zbGF0aW9uXHJcbiAgICAgICAgbGV0IHRyYW5zbGF0aW9uID0gcHJvbXB0O1xyXG4gICAgICAgIGxldCB2YWx1ZSA9IGxvY2FsZVtwcm9tcHRdO1xyXG4gICAgICAgIC8vIFRyeSB0byBsb29rIGZvciB0aGUgdHJhbnNsYXRpb25cclxuICAgICAgICBpZiAodmFsdWUgPT09IG51bGwpIHtcclxuICAgICAgICAgICAgdHJhbnNsYXRpb24gPSBcIlwiO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmICh2YWx1ZSAhPSBudWxsKSB7XHJcbiAgICAgICAgICAgIC8vIEl0IG1pZ2h0IGJlIGFuIGVtcHR5IHN0cmluZ1xyXG4gICAgICAgICAgICBpZiAodmFsdWUpIHtcclxuICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uID0gdmFsdWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAobG9jYWxlICE9PSB0aGlzLmdldFByaXZhdGUoXCJkZWZhdWx0TG9jYWxlXCIpKSB7XHJcbiAgICAgICAgICAgIC8vIFRyeSB0byBsb29rIGluIGRlZmF1bHQgbGFuZ3VhZ2VcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMudHJhbnNsYXRlKHByb21wdCwgdGhpcy5nZXRQcml2YXRlKFwiZGVmYXVsdExvY2FsZVwiKSwgLi4ucmVzdCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIFJlcGxhY2UgJTEsICUyLCBldGMgcGFyYW1zXHJcbiAgICAgICAgaWYgKHJlc3QubGVuZ3RoKSB7XHJcbiAgICAgICAgICAgIGZvciAobGV0IGxlbiA9IHJlc3QubGVuZ3RoLCBpID0gMDsgaSA8IGxlbjsgKytpKSB7XHJcbiAgICAgICAgICAgICAgICB0cmFuc2xhdGlvbiA9IHRyYW5zbGF0aW9uLnNwbGl0KFwiJVwiICsgKGkgKyAxKSkuam9pbihyZXN0W2ldKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICAvLyBSZXR1cm4gdGhlIHRyYW5zbGF0aW9uXHJcbiAgICAgICAgcmV0dXJuIHRyYW5zbGF0aW9uO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBSZXR1cm5zIGEgcHJvbXB0IHRyYW5zbGF0aW9uLCBpbmNsdWRpbmcgY3VzdG9tIHByb21wdHMuXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtICAgcHJvbXB0ICAgUHJvbXB0IHRvIHRyYW5zbGF0ZVxyXG4gICAgICogQHBhcmFtICAgbG9jYWxlICAgVGFyZ2V0IGxvY2FsZVxyXG4gICAgICogQHBhcmFtICAgLi4ucmVzdCAgUGFyYW1ldGVyc1xyXG4gICAgICogQHJldHVybiAgICAgICAgICAgVHJhbnNsYXRpb25cclxuICAgICAqL1xyXG4gICAgdHJhbnNsYXRlQW55KHByb21wdCwgbG9jYWxlLCAuLi5yZXN0KSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMudHJhbnNsYXRlKHByb21wdCwgbG9jYWxlLCAuLi5yZXN0KTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogQWRkIGEgY3VzdG9tIHByb21wdCB0byBsb2NhbGUuXHJcbiAgICAgKlxyXG4gICAgICogQHNlZSB7QGxpbmsgaHR0cHM6Ly93d3cuYW1jaGFydHMuY29tL2RvY3MvdjUvY29uY2VwdHMvbG9jYWxlcy9jcmVhdGluZy10cmFuc2xhdGlvbnMvI0V4dGVuZGluZ19sb2NhbGVfd2l0aF9jdXN0b21fcHJvbXB0c31cclxuICAgICAqIEBwYXJhbSAgcHJvbXB0ICAgICAgIFNvdXJjZSBwcm9tcHRcclxuICAgICAqIEBwYXJhbSAgdHJhbnNsYXRpb24gIFRhbnNsYXRpb25cclxuICAgICAqIEBwYXJhbSAgbG9jYWxlICAgICAgIFRhcmdldCBsb2NhbGVcclxuICAgICAqL1xyXG4gICAgc2V0VHJhbnNsYXRpb25BbnkocHJvbXB0LCB0cmFuc2xhdGlvbiwgbG9jYWxlKSB7XHJcbiAgICAgICAgY29uc3QgbG9jYWxlVGFyZ2V0ID0gbG9jYWxlIHx8IHRoaXMuX3Jvb3QubG9jYWxlO1xyXG4gICAgICAgIGxvY2FsZVRhcmdldFtwcm9tcHRdID0gdHJhbnNsYXRpb247XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIEFkZCBhIGJhdGNoIG9mIGN1c3RvbSBwcm9tcHRzLlxyXG4gICAgICpcclxuICAgICAqIEBzaW5jZSA1LjMuM1xyXG4gICAgICogQHNlZSB7QGxpbmsgaHR0cHM6Ly93d3cuYW1jaGFydHMuY29tL2RvY3MvdjUvY29uY2VwdHMvbG9jYWxlcy9jcmVhdGluZy10cmFuc2xhdGlvbnMvI0V4dGVuZGluZ19sb2NhbGVfd2l0aF9jdXN0b21fcHJvbXB0c31cclxuICAgICAqIEBwYXJhbSAgdHJhbnNsYXRpb25zICBUcmFuc2xhdGlvbnNcclxuICAgICAqIEBwYXJhbSAgbG9jYWxlICAgICAgICBUYXJnZXQgbG9jYWxlXHJcbiAgICAgKi9cclxuICAgIHNldFRyYW5zbGF0aW9uc0FueSh0cmFuc2xhdGlvbnMsIGxvY2FsZSkge1xyXG4gICAgICAgICRvYmplY3QuZWFjaCh0cmFuc2xhdGlvbnMsIChrZXksIHZhbCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLnNldFRyYW5zbGF0aW9uQW55KGtleSwgdmFsLCBsb2NhbGUpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgdHJhbnNsYXRlRW1wdHkocHJvbXB0LCBsb2NhbGUsIC4uLnJlc3QpIHtcclxuICAgICAgICBsZXQgdHJhbnNsYXRpb24gPSB0aGlzLnRyYW5zbGF0ZShwcm9tcHQsIGxvY2FsZSwgLi4ucmVzdCk7XHJcbiAgICAgICAgcmV0dXJuIHRyYW5zbGF0aW9uID09IHByb21wdCA/IFwiXCIgOiB0cmFuc2xhdGlvbjtcclxuICAgIH1cclxuICAgIHRyYW5zbGF0ZUZ1bmMocHJvbXB0LCBsb2NhbGUpIHtcclxuICAgICAgICBpZiAodGhpcy5fcm9vdC5sb2NhbGVbcHJvbXB0XSkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fcm9vdC5sb2NhbGVbcHJvbXB0XTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8gVHJ5IHRvIGxvb2sgaW4gZGVmYXVsdCBsYW5ndWFnZVxyXG4gICAgICAgIGlmIChsb2NhbGUgIT09IHRoaXMuZ2V0UHJpdmF0ZShcImRlZmF1bHRMb2NhbGVcIikpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMudHJhbnNsYXRlRnVuYyhwcm9tcHQsIHRoaXMuZ2V0UHJpdmF0ZShcImRlZmF1bHRMb2NhbGVcIikpO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvLyBGYWlsIC0gcmV0dXJuIGVtcHR5IGZ1bmN0aW9uXHJcbiAgICAgICAgcmV0dXJuICgpID0+IHtcclxuICAgICAgICAgICAgcmV0dXJuIFwiXCI7XHJcbiAgICAgICAgfTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogVHJhbnNsYXRlcyBhIGJ0YWNoIG9mIHByb21wdHMuXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtICBsaXN0ICAgIEFycmF5IG9mIHByb21wdHMgdG8gdHJhbnNsYXRlXHJcbiAgICAgKiBAcGFyYW0gIGxvY2FsZSAgVGFyZ2V0IGxvY2FsZVxyXG4gICAgICogQHJldHVybiAgICAgICAgIEFycmF5IG9mIHRyYW5zbGF0aW9uc1xyXG4gICAgICovXHJcbiAgICB0cmFuc2xhdGVBbGwobGlzdCwgbG9jYWxlKSB7XHJcbiAgICAgICAgLy8gVHJhbnNsYXRlIGFsbCBpdGVtcyBpbiB0aGUgbGlzdFxyXG4gICAgICAgIGlmICghdGhpcy5pc0RlZmF1bHQoKSkge1xyXG4gICAgICAgICAgICByZXR1cm4gJGFycmF5Lm1hcChsaXN0LCAoeCkgPT4gdGhpcy50cmFuc2xhdGUoeCwgbG9jYWxlKSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICByZXR1cm4gbGlzdDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFJldHVybnMgYHRydWVgIGlmIHRoZSBjdXJyZW50bHkgc2VsZWN0ZWQgbG9jYWxlIGlzIGEgZGVmYXVsdCBsb2NhbGUuXHJcbiAgICAgKlxyXG4gICAgICogQHJldHVybiBgdHJ1ZWAgaWYgbG9jYWxlIGlzIGRlZmF1bHQ7IGBmYWxzZWAgaWYgaXQgaXMgbm90LlxyXG4gICAgICovXHJcbiAgICBpc0RlZmF1bHQoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0UHJpdmF0ZShcImRlZmF1bHRMb2NhbGVcIikgPT09IHRoaXMuX3Jvb3QubG9jYWxlO1xyXG4gICAgfVxyXG59XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUxhbmd1YWdlLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Language.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/List.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/core/util/List.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   List: () => (/* binding */ List),\n/* harmony export */   ListAutoDispose: () => (/* binding */ ListAutoDispose),\n/* harmony export */   ListTemplate: () => (/* binding */ ListTemplate)\n/* harmony export */ });\n/* harmony import */ var _EventDispatcher__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EventDispatcher */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/EventDispatcher.js\");\n/* harmony import */ var _Array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Array */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Array.js\");\n\r\n\r\n/**\r\n * Checks if specific index fits into length.\r\n *\r\n * @param index  Index\r\n * @param len    Length\r\n * @ignore\r\n */\r\nfunction checkBounds(index, len) {\r\n    if (!(index >= 0 && index < len)) {\r\n        throw new Error(\"Index out of bounds: \" + index);\r\n    }\r\n}\r\n/**\r\n * A List class is used to hold a number of indexed items of the same type.\r\n */\r\nclass List {\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param initial  Inital list of values to add to list\r\n     */\r\n    constructor(initial = []) {\r\n        /**\r\n         * List values.\r\n         */\r\n        Object.defineProperty(this, \"_values\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new _EventDispatcher__WEBPACK_IMPORTED_MODULE_0__.EventDispatcher()\r\n        });\r\n        this._values = initial;\r\n    }\r\n    /**\r\n     * An array of values in the list.\r\n     *\r\n     * Do not use this property to add values. Rather use dedicated methods, like\r\n     * `push()`, `removeIndex()`, etc.\r\n     *\r\n     * @readonly\r\n     * @return List values\r\n     */\r\n    get values() {\r\n        return this._values;\r\n    }\r\n    /**\r\n     * Checks if list contains specific item reference.\r\n     *\r\n     * @param item  Item to search for\r\n     * @return `true` if found, `false` if not found\r\n     */\r\n    contains(value) {\r\n        return this._values.indexOf(value) !== -1;\r\n    }\r\n    /**\r\n     * Removes specific item from the list.\r\n     *\r\n     * @param item An item to remove\r\n     */\r\n    removeValue(value) {\r\n        let i = 0;\r\n        let length = this._values.length;\r\n        while (i < length) {\r\n            // TODO handle NaN\r\n            if (this._values[i] === value) {\r\n                this.removeIndex(i);\r\n                --length;\r\n            }\r\n            else {\r\n                ++i;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Searches the list for specific item and returns its index.\r\n     *\r\n     * @param item  An item to search for\r\n     * @return Index or -1 if not found\r\n     */\r\n    indexOf(value) {\r\n        return _Array__WEBPACK_IMPORTED_MODULE_1__.indexOf(this._values, value);\r\n    }\r\n    /**\r\n     * Number of items in list.\r\n     *\r\n     * @readonly\r\n     * @return Number of items\r\n     */\r\n    get length() {\r\n        return this._values.length;\r\n    }\r\n    /**\r\n     * Checks if there's a value at specific index.\r\n     *\r\n     * @param index  Index\r\n     * @return Value exists?\r\n     */\r\n    hasIndex(index) {\r\n        return index >= 0 && index < this._values.length;\r\n    }\r\n    /**\r\n     * Returns an item at specified index.\r\n     *\r\n     * @param index  Index\r\n     * @return List item\r\n     */\r\n    getIndex(index) {\r\n        return this._values[index];\r\n    }\r\n    _onPush(newValue) {\r\n        if (this.events.isEnabled(\"push\")) {\r\n            this.events.dispatch(\"push\", {\r\n                type: \"push\",\r\n                target: this,\r\n                newValue\r\n            });\r\n        }\r\n    }\r\n    _onInsertIndex(index, newValue) {\r\n        if (this.events.isEnabled(\"insertIndex\")) {\r\n            this.events.dispatch(\"insertIndex\", {\r\n                type: \"insertIndex\",\r\n                target: this,\r\n                index,\r\n                newValue\r\n            });\r\n        }\r\n    }\r\n    _onSetIndex(index, oldValue, newValue) {\r\n        if (this.events.isEnabled(\"setIndex\")) {\r\n            this.events.dispatch(\"setIndex\", {\r\n                type: \"setIndex\",\r\n                target: this,\r\n                index,\r\n                oldValue,\r\n                newValue\r\n            });\r\n        }\r\n    }\r\n    _onRemoveIndex(index, oldValue) {\r\n        if (this.events.isEnabled(\"removeIndex\")) {\r\n            this.events.dispatch(\"removeIndex\", {\r\n                type: \"removeIndex\",\r\n                target: this,\r\n                index,\r\n                oldValue\r\n            });\r\n        }\r\n    }\r\n    _onMoveIndex(oldIndex, newIndex, value) {\r\n        if (this.events.isEnabled(\"moveIndex\")) {\r\n            this.events.dispatch(\"moveIndex\", {\r\n                type: \"moveIndex\",\r\n                target: this,\r\n                oldIndex,\r\n                newIndex,\r\n                value,\r\n            });\r\n        }\r\n    }\r\n    _onClear(oldValues) {\r\n        if (this.events.isEnabled(\"clear\")) {\r\n            this.events.dispatch(\"clear\", {\r\n                type: \"clear\",\r\n                target: this,\r\n                oldValues\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Sets value at specific index.\r\n     *\r\n     * If there's already a value at the index, it is overwritten.\r\n     *\r\n     * @param index  Index\r\n     * @param value  New value\r\n     * @return New value\r\n     */\r\n    setIndex(index, value) {\r\n        checkBounds(index, this._values.length);\r\n        const oldValue = this._values[index];\r\n        // Do nothing if the old value and the new value are the same\r\n        if (oldValue !== value) {\r\n            this._values[index] = value;\r\n            this._onSetIndex(index, oldValue, value);\r\n        }\r\n        return oldValue;\r\n    }\r\n    /**\r\n     * Adds an item to the list at a specific index, which pushes all the other\r\n     * items further down the list.\r\n     *\r\n     * @param index Index\r\n     * @param item  An item to add\r\n     */\r\n    insertIndex(index, value) {\r\n        checkBounds(index, this._values.length + 1);\r\n        _Array__WEBPACK_IMPORTED_MODULE_1__.insertIndex(this._values, index, value);\r\n        this._onInsertIndex(index, value);\r\n        return value;\r\n    }\r\n    /**\r\n     * Swaps indexes of two items in the list.\r\n     *\r\n     * @param a  Item 1\r\n     * @param b  Item 2\r\n     */\r\n    swap(a, b) {\r\n        const len = this._values.length;\r\n        checkBounds(a, len);\r\n        checkBounds(b, len);\r\n        if (a !== b) {\r\n            const value_a = this._values[a];\r\n            const value_b = this._values[b];\r\n            this._values[a] = value_b;\r\n            this._onSetIndex(a, value_a, value_b);\r\n            this._values[b] = value_a;\r\n            this._onSetIndex(b, value_b, value_a);\r\n        }\r\n    }\r\n    /**\r\n     * Removes a value at specific index.\r\n     *\r\n     * @param index  Index of value to remove\r\n     * @return Removed value\r\n     */\r\n    removeIndex(index) {\r\n        checkBounds(index, this._values.length);\r\n        const oldValue = this._values[index];\r\n        _Array__WEBPACK_IMPORTED_MODULE_1__.removeIndex(this._values, index);\r\n        this._onRemoveIndex(index, oldValue);\r\n        return oldValue;\r\n    }\r\n    /**\r\n     * Moves an item to a specific index within the list.\r\n     *\r\n     * If the index is not specified it will move the item to the end of the\r\n     * list.\r\n     *\r\n     * @param value  Item to move\r\n     * @param index  Index to place item at\r\n     */\r\n    moveValue(value, toIndex) {\r\n        // TODO don't do anything if the desired index is the same as the current index\r\n        let index = this.indexOf(value);\r\n        // TODO remove all old values rather than only the first ?\r\n        if (index !== -1) {\r\n            _Array__WEBPACK_IMPORTED_MODULE_1__.removeIndex(this._values, index);\r\n            if (toIndex == null) {\r\n                const toIndex = this._values.length;\r\n                this._values.push(value);\r\n                this._onMoveIndex(index, toIndex, value);\r\n            }\r\n            else {\r\n                _Array__WEBPACK_IMPORTED_MODULE_1__.insertIndex(this._values, toIndex, value);\r\n                this._onMoveIndex(index, toIndex, value);\r\n            }\r\n        }\r\n        else if (toIndex == null) {\r\n            this._values.push(value);\r\n            this._onPush(value);\r\n        }\r\n        else {\r\n            _Array__WEBPACK_IMPORTED_MODULE_1__.insertIndex(this._values, toIndex, value);\r\n            this._onInsertIndex(toIndex, value);\r\n        }\r\n        return value;\r\n    }\r\n    /**\r\n     * Adds an item to the end of the list.\r\n     *\r\n     * @param item  An item to add\r\n     */\r\n    push(value) {\r\n        this._values.push(value);\r\n        this._onPush(value);\r\n        return value;\r\n    }\r\n    /**\r\n     * Adds an item as a first item in the list.\r\n     *\r\n     * @param item  An item to add\r\n     */\r\n    unshift(value) {\r\n        this.insertIndex(0, value);\r\n        return value;\r\n    }\r\n    /**\r\n     * Adds multiple items to the list.\r\n     *\r\n     * @param items  An Array of items to add\r\n     */\r\n    pushAll(values) {\r\n        _Array__WEBPACK_IMPORTED_MODULE_1__.each(values, (value) => {\r\n            this.push(value);\r\n        });\r\n    }\r\n    /**\r\n     * Copies and adds items from abother list.\r\n     *\r\n     * @param source  A list top copy items from\r\n     */\r\n    copyFrom(source) {\r\n        this.pushAll(source._values);\r\n    }\r\n    /**\r\n     * Returns the last item from the list, and removes it.\r\n     *\r\n     * @return Item\r\n     */\r\n    pop() {\r\n        let index = this._values.length - 1;\r\n        return index < 0 ? undefined : this.removeIndex(this._values.length - 1);\r\n    }\r\n    /**\r\n     * Returns the first item from the list, and removes it.\r\n     *\r\n     * @return Item\r\n     */\r\n    shift() {\r\n        return this._values.length ? this.removeIndex(0) : undefined;\r\n    }\r\n    /**\r\n     * Sets multiple items to the list.\r\n     *\r\n     * All current items are removed.\r\n     *\r\n     * @param newArray  New items\r\n     */\r\n    setAll(newArray) {\r\n        const old = this._values;\r\n        this._values = [];\r\n        this._onClear(old);\r\n        _Array__WEBPACK_IMPORTED_MODULE_1__.each(newArray, (value) => {\r\n            this._values.push(value);\r\n            this._onPush(value);\r\n        });\r\n    }\r\n    /**\r\n     * Removes all items from the list.\r\n     */\r\n    clear() {\r\n        this.setAll([]);\r\n    }\r\n    /**\r\n     * Returns an ES6 iterator for the list.\r\n     */\r\n    *[Symbol.iterator]() {\r\n        const length = this._values.length;\r\n        for (let i = 0; i < length; ++i) {\r\n            yield this._values[i];\r\n        }\r\n    }\r\n    /**\r\n     * Calls `f` for each element in the list.\r\n     *\r\n     * `f` should have at least one parameter defined which will get a current\r\n     * item, with optional second argument - index.\r\n     */\r\n    each(f) {\r\n        _Array__WEBPACK_IMPORTED_MODULE_1__.each(this._values, f);\r\n    }\r\n    /**\r\n     * Calls `f` for each element in the list, from right to left.\r\n     *\r\n     * `f` should have at least one parameter defined which will get a current\r\n     * item, with optional second argument - index.\r\n     */\r\n    eachReverse(f) {\r\n        _Array__WEBPACK_IMPORTED_MODULE_1__.eachReverse(this._values, f);\r\n    }\r\n}\r\n/**\r\n * A version of a [[List]] where the elements are disposed automatically when\r\n * removed from the list, unless `autoDispose` is set to `false`.\r\n */\r\nclass ListAutoDispose extends List {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * Automatically disposes elements that are removed from the list.\r\n         *\r\n         * @default true\r\n         */\r\n        Object.defineProperty(this, \"autoDispose\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _onSetIndex(index, oldValue, newValue) {\r\n        if (this.autoDispose) {\r\n            oldValue.dispose();\r\n        }\r\n        super._onSetIndex(index, oldValue, newValue);\r\n    }\r\n    _onRemoveIndex(index, oldValue) {\r\n        if (this.autoDispose) {\r\n            oldValue.dispose();\r\n        }\r\n        super._onRemoveIndex(index, oldValue);\r\n    }\r\n    _onClear(oldValues) {\r\n        if (this.autoDispose) {\r\n            _Array__WEBPACK_IMPORTED_MODULE_1__.each(oldValues, (x) => {\r\n                x.dispose();\r\n            });\r\n        }\r\n        super._onClear(oldValues);\r\n    }\r\n    _dispose() {\r\n        if (this.autoDispose) {\r\n            _Array__WEBPACK_IMPORTED_MODULE_1__.each(this._values, (x) => {\r\n                x.dispose();\r\n            });\r\n        }\r\n    }\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            this._dispose();\r\n        }\r\n    }\r\n}\r\n/**\r\n * A version of a [[List]] that is able to create new elements as well as\r\n * apply additional settings to newly created items.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/list-templates/} for more info\r\n */\r\nclass ListTemplate extends ListAutoDispose {\r\n    constructor(template, make) {\r\n        super();\r\n        Object.defineProperty(this, \"template\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"make\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.template = template;\r\n        this.make = make;\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        if (this.autoDispose) {\r\n            this.template.dispose();\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=List.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/List.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Math.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/core/util/Math.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEGREES: () => (/* binding */ DEGREES),\n/* harmony export */   HALFPI: () => (/* binding */ HALFPI),\n/* harmony export */   PI: () => (/* binding */ PI),\n/* harmony export */   RADIANS: () => (/* binding */ RADIANS),\n/* harmony export */   boundsOverlap: () => (/* binding */ boundsOverlap),\n/* harmony export */   ceil: () => (/* binding */ ceil),\n/* harmony export */   circlesOverlap: () => (/* binding */ circlesOverlap),\n/* harmony export */   closest: () => (/* binding */ closest),\n/* harmony export */   cos: () => (/* binding */ cos),\n/* harmony export */   fitAngleToRange: () => (/* binding */ fitAngleToRange),\n/* harmony export */   fitToRange: () => (/* binding */ fitToRange),\n/* harmony export */   getAngle: () => (/* binding */ getAngle),\n/* harmony export */   getArcBounds: () => (/* binding */ getArcBounds),\n/* harmony export */   getArcPoint: () => (/* binding */ getArcPoint),\n/* harmony export */   getCubicControlPointA: () => (/* binding */ getCubicControlPointA),\n/* harmony export */   getCubicControlPointB: () => (/* binding */ getCubicControlPointB),\n/* harmony export */   getPointOnLine: () => (/* binding */ getPointOnLine),\n/* harmony export */   getPointOnQuadraticCurve: () => (/* binding */ getPointOnQuadraticCurve),\n/* harmony export */   inBounds: () => (/* binding */ inBounds),\n/* harmony export */   mergeBounds: () => (/* binding */ mergeBounds),\n/* harmony export */   normalizeAngle: () => (/* binding */ normalizeAngle),\n/* harmony export */   round: () => (/* binding */ round),\n/* harmony export */   sin: () => (/* binding */ sin),\n/* harmony export */   spiralPoints: () => (/* binding */ spiralPoints),\n/* harmony export */   tan: () => (/* binding */ tan)\n/* harmony export */ });\n/* harmony import */ var _Type__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Type */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Type.js\");\n\r\n/**\r\n * ============================================================================\r\n * CONSTANTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nconst PI = Math.PI;\r\nconst HALFPI = PI / 2;\r\nconst RADIANS = PI / 180;\r\nconst DEGREES = 180 / PI;\r\n/**\r\n * Rounds the numeric value to whole number or specific precision of set.\r\n *\r\n * @param value      Value\r\n * @param precision  Precision (number of decimal points)\r\n * @param floor  In case value ends with 0.5 and precision is 0, we might need to floor the value instead of ceiling it.\r\n * @return Rounded value\r\n */\r\nfunction round(value, precision, floor) {\r\n    if (!(0,_Type__WEBPACK_IMPORTED_MODULE_0__.isNumber)(precision) || precision <= 0) {\r\n        let rounded = Math.round(value);\r\n        if (floor) {\r\n            if (rounded - value == 0.5) {\r\n                rounded--;\r\n            }\r\n        }\r\n        return rounded;\r\n    }\r\n    else {\r\n        let d = Math.pow(10, precision);\r\n        return Math.round(value * d) / d;\r\n    }\r\n}\r\n/**\r\n * Ceils the numeric value to whole number or specific precision of set.\r\n *\r\n * @param value      Value\r\n * @param precision  Precision (number of decimal points)\r\n * @return Rounded value\r\n */\r\nfunction ceil(value, precision) {\r\n    if (!(0,_Type__WEBPACK_IMPORTED_MODULE_0__.isNumber)(precision) || precision <= 0) {\r\n        return Math.ceil(value);\r\n    }\r\n    else {\r\n        let d = Math.pow(10, precision);\r\n        return Math.ceil(value * d) / d;\r\n    }\r\n}\r\n/**\r\n * [getCubicControlPointA description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param p0        [description]\r\n * @param p1        [description]\r\n * @param p2        [description]\r\n * @param p3        [description]\r\n * @param tensionX  [description]\r\n * @param tensionY  [description]\r\n * @return [description]\r\n */\r\nfunction getCubicControlPointA(p0, p1, p2, tensionX, tensionY) {\r\n    return { x: ((-p0.x + p1.x / tensionX + p2.x) * tensionX), y: ((-p0.y + p1.y / tensionY + p2.y) * tensionY) };\r\n}\r\n/**\r\n * [getCubicControlPointB description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param p0        [description]\r\n * @param p1        [description]\r\n * @param p2        [description]\r\n * @param p3        [description]\r\n * @param tensionX  [description]\r\n * @param tensionY  [description]\r\n * @return [description]\r\n */\r\nfunction getCubicControlPointB(p1, p2, p3, tensionX, tensionY) {\r\n    return { x: ((p1.x + p2.x / tensionX - p3.x) * tensionX), y: ((p1.y + p2.y / tensionY - p3.y) * tensionY) };\r\n}\r\nfunction fitToRange(value, min, max) {\r\n    return Math.min(Math.max(value, min), max);\r\n}\r\n/**\r\n * Returns sine of an angle specified in degrees.\r\n *\r\n * @param value  Value\r\n * @return Sine\r\n */\r\nfunction sin(angle) {\r\n    return Math.sin(RADIANS * angle);\r\n}\r\n/**\r\n * Returns tan of an angle specified in degrees.\r\n *\r\n * @param value  Value\r\n * @return Sine\r\n */\r\nfunction tan(angle) {\r\n    return Math.tan(RADIANS * angle);\r\n}\r\n/**\r\n * Returns cosine of an angle specified in degrees.\r\n *\r\n * @param value  Value\r\n * @return Cosine\r\n */\r\nfunction cos(angle) {\r\n    return Math.cos(RADIANS * angle);\r\n}\r\n// 0 to 360\r\nfunction normalizeAngle(value) {\r\n    value = value % 360;\r\n    if (value < 0) {\r\n        value += 360;\r\n    }\r\n    return value;\r\n}\r\n// TODO this doesn't work properly for skewing, and it's probably broken for rotation too\r\nfunction getArcBounds(cx, cy, startAngle, endAngle, radius) {\r\n    let minX = Number.MAX_VALUE;\r\n    let minY = Number.MAX_VALUE;\r\n    let maxX = -Number.MAX_VALUE;\r\n    let maxY = -Number.MAX_VALUE;\r\n    let bpoints = [];\r\n    bpoints.push(getArcPoint(radius, startAngle));\r\n    bpoints.push(getArcPoint(radius, endAngle));\r\n    let fromAngle = Math.min(Math.floor(startAngle / 90) * 90, Math.floor(endAngle / 90) * 90);\r\n    let toAngle = Math.max(Math.ceil(startAngle / 90) * 90, Math.ceil(endAngle / 90) * 90);\r\n    for (let angle = fromAngle; angle <= toAngle; angle += 90) {\r\n        if (angle >= startAngle && angle <= endAngle) {\r\n            bpoints.push(getArcPoint(radius, angle));\r\n        }\r\n    }\r\n    for (let i = 0; i < bpoints.length; i++) {\r\n        let pt = bpoints[i];\r\n        if (pt.x < minX) {\r\n            minX = pt.x;\r\n        }\r\n        if (pt.y < minY) {\r\n            minY = pt.y;\r\n        }\r\n        if (pt.x > maxX) {\r\n            maxX = pt.x;\r\n        }\r\n        if (pt.y > maxY) {\r\n            maxY = pt.y;\r\n        }\r\n    }\r\n    return ({ left: cx + minX, top: cy + minY, right: cx + maxX, bottom: cy + maxY });\r\n}\r\n/**\r\n * Returns point on arc\r\n *\r\n * @param center point\r\n * @param radius\r\n * @param arc\r\n * @return {boolean}\r\n */\r\nfunction getArcPoint(radius, arc) {\r\n    return ({ x: radius * cos(arc), y: radius * sin(arc) });\r\n}\r\nfunction mergeBounds(bounds) {\r\n    const len = bounds.length;\r\n    if (len > 0) {\r\n        let bound = bounds[0];\r\n        let left = bound.left;\r\n        let top = bound.top;\r\n        let right = bound.right;\r\n        let bottom = bound.bottom;\r\n        if (len > 1) {\r\n            for (let i = 1; i < len; i++) {\r\n                bound = bounds[i];\r\n                left = Math.min(bound.left, left);\r\n                right = Math.max(bound.right, right);\r\n                top = Math.min(bound.top, top);\r\n                bottom = Math.max(bound.bottom, bottom);\r\n            }\r\n        }\r\n        return { left, right, top, bottom };\r\n    }\r\n    return { left: 0, right: 0, top: 0, bottom: 0 };\r\n}\r\nfunction fitAngleToRange(value, startAngle, endAngle) {\r\n    if (startAngle > endAngle) {\r\n        let temp = startAngle;\r\n        startAngle = endAngle;\r\n        endAngle = temp;\r\n    }\r\n    value = normalizeAngle(value);\r\n    let count = (startAngle - normalizeAngle(startAngle)) / 360;\r\n    if (value < startAngle) {\r\n        value += 360 * (count + 1);\r\n    }\r\n    let maxEnd = startAngle + (endAngle - startAngle) / 2 + 180;\r\n    let maxStart = startAngle + (endAngle - startAngle) / 2 - 180;\r\n    if (value > endAngle) {\r\n        if (value - 360 > startAngle) {\r\n            value -= 360;\r\n        }\r\n        else {\r\n            if (value < maxEnd) {\r\n                value = endAngle;\r\n            }\r\n            else {\r\n                value = startAngle;\r\n            }\r\n        }\r\n    }\r\n    if (value < startAngle) {\r\n        if (value > maxStart) {\r\n            value = startAngle;\r\n        }\r\n        else {\r\n            value = endAngle;\r\n        }\r\n    }\r\n    return value;\r\n}\r\nfunction inBounds(point, bounds) {\r\n    if (point.x >= bounds.left && point.y >= bounds.top && point.x <= bounds.right && point.y <= bounds.bottom) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nfunction getAngle(point1, point2) {\r\n    if (!point2) {\r\n        point2 = { x: point1.x * 2, y: point1.y * 2 };\r\n    }\r\n    let diffX = point2.x - point1.x;\r\n    let diffY = point2.y - point1.y;\r\n    let angle = Math.atan2(diffY, diffX) * DEGREES;\r\n    if (angle < 0) {\r\n        angle += 360;\r\n    }\r\n    return normalizeAngle(angle);\r\n}\r\n/**\r\n * [getPointOnQuadraticCurve description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param pointA        [description]\r\n * @param pointB        [description]\r\n * @param controlPoint  [description]\r\n * @param position      [description]\r\n * @return [description]\r\n */\r\nfunction getPointOnQuadraticCurve(pointA, pointB, controlPoint, position) {\r\n    let x = (1 - position) * (1 - position) * pointA.x + 2 * (1 - position) * position * controlPoint.x + position * position * pointB.x;\r\n    let y = (1 - position) * (1 - position) * pointA.y + 2 * (1 - position) * position * controlPoint.y + position * position * pointB.y;\r\n    return { x: x, y: y };\r\n}\r\nfunction getPointOnLine(pointA, pointB, position) {\r\n    return { x: pointA.x + (pointB.x - pointA.x) * position, y: pointA.y + (pointB.y - pointA.y) * position };\r\n}\r\n/**\r\n * Returns the closest value from the array of values to the reference value.\r\n *\r\n * @param values  Array of values\r\n * @param value   Reference value\r\n * @return Closes value from the array\r\n */\r\nfunction closest(values, referenceValue) {\r\n    return values.reduce(function (prev, curr) {\r\n        return (Math.abs(curr - referenceValue) < Math.abs(prev - referenceValue) ? curr : prev);\r\n    });\r\n}\r\n/**\r\n * Returns true if bounds overlap\r\n * @param bounds1 IBounds\r\n * @param bounds2 IBounds\r\n * @returns boolean\r\n */\r\nfunction boundsOverlap(bounds1, bounds2) {\r\n    const horizontalOverlap = bounds1.left < bounds2.right && bounds1.right > bounds2.left;\r\n    const verticalOverlap = bounds1.top < bounds2.bottom && bounds1.bottom > bounds2.top;\r\n    return horizontalOverlap && verticalOverlap;\r\n}\r\n/**\r\n * Generates points of a spiral\r\n * @param cx\r\n * @param cy\r\n * @param radius\r\n * @param radiusY\r\n * @param innerRadius\r\n * @param step\r\n * @param radiusStep\r\n * @param startAngle\r\n * @param endAngle\r\n * @returns IPoint[]\r\n */\r\nfunction spiralPoints(cx, cy, radius, radiusY, innerRadius, step, radiusStep, startAngle, endAngle) {\r\n    let r = innerRadius + 0.01;\r\n    let angle = startAngle * RADIANS;\r\n    let points = [];\r\n    while (r < radius + radiusStep) {\r\n        let stepSize = step;\r\n        if (stepSize / 2 > r) {\r\n            stepSize = 2 * r;\r\n        }\r\n        angle += 2 * Math.asin(stepSize / 2 / r);\r\n        if (angle * DEGREES > endAngle + ((radius - innerRadius) / radiusStep) * 360) {\r\n            break;\r\n        }\r\n        let degrees = angle * DEGREES;\r\n        let point = { x: cx + r * Math.cos(angle), y: cy + r * radiusY / radius * Math.sin(angle) };\r\n        points.push(point);\r\n        r = innerRadius + degrees / 360 * radiusStep;\r\n    }\r\n    points.shift();\r\n    return points;\r\n}\r\n/**\r\n * Returns true if circles overlap\r\n * @param circle1\r\n * @param circle2\r\n * @returns boolean\r\n */\r\nfunction circlesOverlap(circle1, circle2) {\r\n    return Math.hypot(circle1.x - circle2.x, circle1.y - circle2.y) <= circle1.radius + circle2.radius;\r\n}\r\n//# sourceMappingURL=Math.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Math.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Matrix.js":
/*!************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/core/util/Matrix.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Matrix: () => (/* binding */ Matrix)\n/* harmony export */ });\n/**\r\n * Modified from Pixi:\r\n *\r\n * The MIT License\r\n *\r\n * Copyright (c) 2013-2017 Mathew Groves, Chad Engler\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n/**\r\n * @ignore\r\n */\r\nclass Matrix {\r\n    constructor(a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0) {\r\n        Object.defineProperty(this, \"a\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"b\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"c\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"d\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"tx\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"ty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.a = a;\r\n        this.b = b;\r\n        this.c = c;\r\n        this.d = d;\r\n        this.tx = tx;\r\n        this.ty = ty;\r\n    }\r\n    /**\r\n     * Sets the matrix based on all the available properties\r\n     */\r\n    setTransform(x, y, pivotX, pivotY, rotation, scale = 1) {\r\n        this.a = Math.cos(rotation) * scale;\r\n        this.b = Math.sin(rotation) * scale;\r\n        this.c = -Math.sin(rotation) * scale;\r\n        this.d = Math.cos(rotation) * scale;\r\n        this.tx = x - ((pivotX * this.a) + (pivotY * this.c));\r\n        this.ty = y - ((pivotX * this.b) + (pivotY * this.d));\r\n    }\r\n    /**\r\n     * Get a new position with the current transformation applied.\r\n     * Can be used to go from a child's coordinate space to the world coordinate space. (e.g. rendering)\r\n     */\r\n    apply(origin) {\r\n        return {\r\n            x: (this.a * origin.x) + (this.c * origin.y) + this.tx,\r\n            y: (this.b * origin.x) + (this.d * origin.y) + this.ty\r\n        };\r\n    }\r\n    /**\r\n     * Get a new position with the inverse of the current transformation applied.\r\n     * Can be used to go from the world coordinate space to a child's coordinate space. (e.g. input)\r\n     */\r\n    applyInverse(origin) {\r\n        const id = 1 / ((this.a * this.d) + (this.c * -this.b));\r\n        return {\r\n            x: (this.d * id * origin.x) + (-this.c * id * origin.y) + (((this.ty * this.c) - (this.tx * this.d)) * id),\r\n            y: (this.a * id * origin.y) + (-this.b * id * origin.x) + (((-this.ty * this.a) + (this.tx * this.b)) * id)\r\n        };\r\n    }\r\n    /**\r\n     * Appends the given Matrix to this Matrix.\r\n     */\r\n    append(matrix) {\r\n        const a1 = this.a;\r\n        const b1 = this.b;\r\n        const c1 = this.c;\r\n        const d1 = this.d;\r\n        this.a = (matrix.a * a1) + (matrix.b * c1);\r\n        this.b = (matrix.a * b1) + (matrix.b * d1);\r\n        this.c = (matrix.c * a1) + (matrix.d * c1);\r\n        this.d = (matrix.c * b1) + (matrix.d * d1);\r\n        this.tx = (matrix.tx * a1) + (matrix.ty * c1) + this.tx;\r\n        this.ty = (matrix.tx * b1) + (matrix.ty * d1) + this.ty;\r\n    }\r\n    /**\r\n     * Prepends the given Matrix to this Matrix.\r\n     */\r\n    prepend(matrix) {\r\n        const tx1 = this.tx;\r\n        if (matrix.a !== 1 || matrix.b !== 0 || matrix.c !== 0 || matrix.d !== 1) {\r\n            const a1 = this.a;\r\n            const c1 = this.c;\r\n            this.a = (a1 * matrix.a) + (this.b * matrix.c);\r\n            this.b = (a1 * matrix.b) + (this.b * matrix.d);\r\n            this.c = (c1 * matrix.a) + (this.d * matrix.c);\r\n            this.d = (c1 * matrix.b) + (this.d * matrix.d);\r\n        }\r\n        this.tx = (tx1 * matrix.a) + (this.ty * matrix.c) + matrix.tx;\r\n        this.ty = (tx1 * matrix.b) + (this.ty * matrix.d) + matrix.ty;\r\n    }\r\n    /**\r\n     * Copies the other matrix's properties into this matrix\r\n     */\r\n    copyFrom(matrix) {\r\n        this.a = matrix.a;\r\n        this.b = matrix.b;\r\n        this.c = matrix.c;\r\n        this.d = matrix.d;\r\n        this.tx = matrix.tx;\r\n        this.ty = matrix.ty;\r\n    }\r\n}\r\n//# sourceMappingURL=Matrix.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Matrix.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/NumberFormatter.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/core/util/NumberFormatter.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NumberFormatter: () => (/* binding */ NumberFormatter)\n/* harmony export */ });\n/* harmony import */ var _Entity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Entity */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Entity.js\");\n/* harmony import */ var _TextFormatter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./TextFormatter */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/TextFormatter.js\");\n/* harmony import */ var _Object__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Object */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Object.js\");\n/* harmony import */ var _Utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Utils */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Utils.js\");\n/* harmony import */ var _Type__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Type */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Type.js\");\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Number formatter\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/} for more info\r\n * @important\r\n */\r\nclass NumberFormatter extends _Entity__WEBPACK_IMPORTED_MODULE_0__.Entity {\r\n    _setDefaults() {\r\n        // Defaults\r\n        this._setDefault(\"negativeBase\", 0);\r\n        this._setDefault(\"numberFormat\", \"#,###.#####\");\r\n        this._setDefault(\"smallNumberThreshold\", 1.00);\r\n        const bns = \"_big_number_suffix_\";\r\n        const sns = \"_small_number_suffix_\";\r\n        const bs = \"_byte_suffix_\";\r\n        this._setDefault(\"bigNumberPrefixes\", [\r\n            { \"number\": 1e+3, \"suffix\": this._t(bns + \"3\") },\r\n            { \"number\": 1e+6, \"suffix\": this._t(bns + \"6\") },\r\n            { \"number\": 1e+9, \"suffix\": this._t(bns + \"9\") },\r\n            { \"number\": 1e+12, \"suffix\": this._t(bns + \"12\") },\r\n            { \"number\": 1e+15, \"suffix\": this._t(bns + \"15\") },\r\n            { \"number\": 1e+18, \"suffix\": this._t(bns + \"18\") },\r\n            { \"number\": 1e+21, \"suffix\": this._t(bns + \"21\") },\r\n            { \"number\": 1e+24, \"suffix\": this._t(bns + \"24\") }\r\n        ]);\r\n        this._setDefault(\"smallNumberPrefixes\", [\r\n            { \"number\": 1e-24, \"suffix\": this._t(sns + \"24\") },\r\n            { \"number\": 1e-21, \"suffix\": this._t(sns + \"21\") },\r\n            { \"number\": 1e-18, \"suffix\": this._t(sns + \"18\") },\r\n            { \"number\": 1e-15, \"suffix\": this._t(sns + \"15\") },\r\n            { \"number\": 1e-12, \"suffix\": this._t(sns + \"12\") },\r\n            { \"number\": 1e-9, \"suffix\": this._t(sns + \"9\") },\r\n            { \"number\": 1e-6, \"suffix\": this._t(sns + \"6\") },\r\n            { \"number\": 1e-3, \"suffix\": this._t(sns + \"3\") }\r\n        ]);\r\n        this._setDefault(\"bytePrefixes\", [\r\n            { \"number\": 1, suffix: this._t(bs + \"B\") },\r\n            { \"number\": 1024, suffix: this._t(bs + \"KB\") },\r\n            { \"number\": 1048576, suffix: this._t(bs + \"MB\") },\r\n            { \"number\": 1073741824, suffix: this._t(bs + \"GB\") },\r\n            { \"number\": 1099511627776, suffix: this._t(bs + \"TB\") },\r\n            { \"number\": 1125899906842624, suffix: this._t(bs + \"PB\") }\r\n        ]);\r\n        super._setDefaults();\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n    }\r\n    /**\r\n     * Formats the number according to specific format.\r\n     *\r\n     * @param value   Value to format\r\n     * @param format  Format to apply\r\n     * @return Formatted number\r\n     */\r\n    format(value, format, precision) {\r\n        // no format passed in or \"Number\"\r\n        if (format == null || (_Type__WEBPACK_IMPORTED_MODULE_1__.isString(format) && format.toLowerCase() === \"number\")) {\r\n            format = this.get(\"numberFormat\", \"\");\r\n        }\r\n        // Init return value\r\n        let formatted;\r\n        // Cast to number just in case\r\n        // TODO: maybe use better casting\r\n        let source = Number(value);\r\n        // Is it a built-in format or Intl.NumberFormatOptions\r\n        if (_Type__WEBPACK_IMPORTED_MODULE_1__.isObject(format)) {\r\n            try {\r\n                if (this.get(\"intlLocales\")) {\r\n                    return new Intl.NumberFormat(this.get(\"intlLocales\"), format).format(source);\r\n                }\r\n                else {\r\n                    return new Intl.NumberFormat(undefined, format).format(source);\r\n                }\r\n            }\r\n            catch (e) {\r\n                return \"Invalid\";\r\n            }\r\n        }\r\n        else {\r\n            // Clean format\r\n            format = _Utils__WEBPACK_IMPORTED_MODULE_2__.cleanFormat(format);\r\n            // Get format info (it will also deal with parser caching)\r\n            let info = this.parseFormat(format, this._root.language);\r\n            // format and replace the number\r\n            let details;\r\n            if (source > this.get(\"negativeBase\")) {\r\n                details = info.positive;\r\n            }\r\n            else if (source < this.get(\"negativeBase\")) {\r\n                details = info.negative;\r\n            }\r\n            else {\r\n                details = info.zero;\r\n            }\r\n            // Adjust precision\r\n            if (precision != null && !details.mod) {\r\n                details = _Object__WEBPACK_IMPORTED_MODULE_3__.copy(details);\r\n                details.decimals.active = source == 0 ? 0 : precision;\r\n            }\r\n            // Format\r\n            formatted = details.template.split(_Type__WEBPACK_IMPORTED_MODULE_1__.PLACEHOLDER).join(this.applyFormat(source, details));\r\n        }\r\n        if (this.get(\"forceLTR\") === true) {\r\n            formatted = \"‎\" + formatted;\r\n        }\r\n        return formatted;\r\n    }\r\n    /**\r\n     * Parses supplied format into structured object which can be used to format\r\n     * the number.\r\n     *\r\n     * @param format Format string, i.e. \"#,###.00\"\r\n     * @param language Language\r\n     * @ignore\r\n     */\r\n    parseFormat(format, language) {\r\n        // Check cache\r\n        // TODO\r\n        // let cached = this.getCache(format);\r\n        // if (cached != null) {\r\n        // \treturn cached;\r\n        // }\r\n        const thousandSeparator = language.translateEmpty(\"_thousandSeparator\");\r\n        const decimalSeparator = language.translateEmpty(\"_decimalSeparator\");\r\n        // init format parse info holder\r\n        let info = {\r\n            \"positive\": {\r\n                \"thousands\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"interval\": -1,\r\n                    \"separator\": thousandSeparator\r\n                },\r\n                \"decimals\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"separator\": decimalSeparator\r\n                },\r\n                \"template\": \"\",\r\n                \"source\": \"\",\r\n                \"parsed\": false\r\n            },\r\n            \"negative\": {\r\n                \"thousands\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"interval\": -1,\r\n                    \"separator\": thousandSeparator\r\n                },\r\n                \"decimals\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"separator\": decimalSeparator\r\n                },\r\n                \"template\": \"\",\r\n                \"source\": \"\",\r\n                \"parsed\": false\r\n            },\r\n            \"zero\": {\r\n                \"thousands\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"interval\": -1,\r\n                    \"separator\": thousandSeparator\r\n                },\r\n                \"decimals\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"separator\": decimalSeparator\r\n                },\r\n                \"template\": \"\",\r\n                \"source\": \"\",\r\n                \"parsed\": false\r\n            }\r\n        };\r\n        // Escape double vertical bars (that mean display one vertical bar)\r\n        format = format.replace(\"||\", _Type__WEBPACK_IMPORTED_MODULE_1__.PLACEHOLDER2);\r\n        // Split it up and deal with different formats\r\n        let parts = format.split(\"|\");\r\n        info.positive.source = parts[0];\r\n        if (typeof parts[2] === \"undefined\") {\r\n            info.zero = info.positive;\r\n        }\r\n        else {\r\n            info.zero.source = parts[2];\r\n        }\r\n        if (typeof parts[1] === \"undefined\") {\r\n            info.negative = info.positive;\r\n        }\r\n        else {\r\n            info.negative.source = parts[1];\r\n        }\r\n        // Parse each\r\n        _Object__WEBPACK_IMPORTED_MODULE_3__.each(info, (_part, item) => {\r\n            // Already parsed\r\n            if (item.parsed) {\r\n                return;\r\n            }\r\n            // Check cached\r\n            // TODO\r\n            // if (typeof this.getCache(item.source) !== \"undefined\") {\r\n            // \tinfo[part] = this.getCache(item.source);\r\n            // \treturn;\r\n            // }\r\n            // Begin parsing\r\n            let partFormat = item.source;\r\n            // Just \"Number\"?\r\n            if (partFormat.toLowerCase() === \"number\") {\r\n                partFormat = this.get(\"numberFormat\", \"#,###.#####\");\r\n            }\r\n            // Let TextFormatter split into chunks\r\n            let chunks = _TextFormatter__WEBPACK_IMPORTED_MODULE_4__.TextFormatter.chunk(partFormat, true);\r\n            for (let i = 0; i < chunks.length; i++) {\r\n                let chunk = chunks[i];\r\n                // replace back double vertical bar\r\n                chunk.text = chunk.text.replace(_Type__WEBPACK_IMPORTED_MODULE_1__.PLACEHOLDER2, \"|\");\r\n                if (chunk.type === \"value\") {\r\n                    // Parse format\r\n                    // Look for codes\r\n                    let matches = chunk.text.match(/[#0.,]+[ ]?[abespABESP%!]?[abespABESP‰!]?/);\r\n                    if (matches) {\r\n                        if (matches === null || matches[0] === \"\") {\r\n                            // no codes here - assume string\r\n                            // nothing to do here\r\n                            item.template += chunk.text;\r\n                        }\r\n                        else {\r\n                            // look for the format modifiers at the end\r\n                            let mods = matches[0].match(/[abespABESP%‰!]{2}|[abespABESP%‰]{1}$/);\r\n                            if (mods) {\r\n                                item.mod = mods[0].toLowerCase();\r\n                                item.modSpacing = matches[0].match(/[ ]{1}[abespABESP%‰!]{1}$/) ? true : false;\r\n                            }\r\n                            // break the format up\r\n                            let a = matches[0].split(\".\");\r\n                            // Deal with thousands\r\n                            if (a[0] === \"\") {\r\n                                // No directives for thousands\r\n                                // Leave default settings (no formatting)\r\n                            }\r\n                            else {\r\n                                // Counts\r\n                                item.thousands.active = (a[0].match(/0/g) || []).length;\r\n                                item.thousands.passive = (a[0].match(/\\#/g) || []).length + item.thousands.active;\r\n                                // Separator interval\r\n                                let b = a[0].split(\",\");\r\n                                if (b.length === 1) {\r\n                                    // No thousands separators\r\n                                    // Do nothing\r\n                                }\r\n                                else {\r\n                                    // Use length fo the last chunk as thousands length\r\n                                    item.thousands.interval = (b.pop() || \"\").length;\r\n                                    if (item.thousands.interval === 0) {\r\n                                        item.thousands.interval = -1;\r\n                                    }\r\n                                }\r\n                            }\r\n                            // Deal with decimals\r\n                            if (typeof (a[1]) === \"undefined\") {\r\n                                // No directives for decimals\r\n                                // Leave at defaults (no formatting)\r\n                            }\r\n                            else {\r\n                                // Counts\r\n                                item.decimals.active = (a[1].match(/0/g) || []).length;\r\n                                item.decimals.passive = (a[1].match(/\\#/g) || []).length + item.decimals.active;\r\n                            }\r\n                            // Add special code to template\r\n                            item.template += chunk.text.split(matches[0]).join(_Type__WEBPACK_IMPORTED_MODULE_1__.PLACEHOLDER);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    // Quoted string - take it as it is\r\n                    item.template += chunk.text;\r\n                }\r\n            }\r\n            // Apply style formatting\r\n            //item.template = getTextFormatter().format(item.template, this.outputFormat);\r\n            // Save cache\r\n            // TODO\r\n            //this.setCache(item.source, item);\r\n            // Mark this as parsed\r\n            item.parsed = true;\r\n        });\r\n        // Save cache (the whole thing)\r\n        // TODO\r\n        //this.setCache(format, info);\r\n        return info;\r\n    }\r\n    /**\r\n     * Applies parsed format to a numeric value.\r\n     *\r\n     * @param value    Value\r\n     * @param details  Parsed format as returned by parseFormat()\r\n     * @return Formatted number\r\n     * @ignore\r\n     */\r\n    applyFormat(value, details) {\r\n        // Use absolute values\r\n        let negative = value < 0;\r\n        value = Math.abs(value);\r\n        // Recalculate according to modifier\r\n        let prefix = \"\", suffix = \"\";\r\n        let mods = details.mod ? details.mod.split(\"\") : [];\r\n        if (mods.indexOf(\"b\") !== -1) {\r\n            let a = this.applyPrefix(value, this.get(\"bytePrefixes\"), mods.indexOf(\"!\") !== -1);\r\n            value = a[0];\r\n            prefix = a[1];\r\n            suffix = a[2];\r\n            if (details.modSpacing) {\r\n                suffix = \" \" + suffix;\r\n            }\r\n        }\r\n        else if (mods.indexOf(\"a\") !== -1) {\r\n            let a = this.applyPrefix(value, value < this.get(\"smallNumberThreshold\") ? this.get(\"smallNumberPrefixes\") : this.get(\"bigNumberPrefixes\"), mods.indexOf(\"!\") !== -1);\r\n            value = a[0];\r\n            prefix = a[1];\r\n            suffix = a[2];\r\n            if (details.modSpacing) {\r\n                suffix = \" \" + suffix;\r\n            }\r\n        }\r\n        else if (mods.indexOf(\"p\") !== -1) {\r\n            let ol = Math.min(value.toString().length + 2, 21);\r\n            //value *= 100;\r\n            value = parseFloat(value.toPrecision(ol));\r\n            prefix = this._root.language.translate(\"_percentPrefix\");\r\n            suffix = this._root.language.translate(\"_percentSuffix\");\r\n            if (prefix == \"\" && suffix == \"\") {\r\n                suffix = \"%\";\r\n            }\r\n        }\r\n        else if (mods.indexOf(\"%\") !== -1) {\r\n            let ol = Math.min(value.toString().length + 2, 21);\r\n            value *= 100;\r\n            value = parseFloat(value.toPrecision(ol));\r\n            suffix = \"%\";\r\n        }\r\n        else if (mods.indexOf(\"‰\") !== -1) {\r\n            let ol = Math.min(value.toString().length + 3, 21);\r\n            value *= 1000;\r\n            value = parseFloat(value.toPrecision(ol));\r\n            suffix = \"‰\";\r\n        }\r\n        // Round to passive\r\n        if (mods.indexOf(\"e\") !== -1) {\r\n            // convert the value to exponential\r\n            let exp;\r\n            if (details.decimals.passive >= 0) {\r\n                exp = value.toExponential(details.decimals.passive).split(\"e\");\r\n            }\r\n            else {\r\n                exp = value.toExponential().split(\"e\");\r\n            }\r\n            value = Number(exp[0]);\r\n            suffix = \"e\" + exp[1];\r\n            if (details.modSpacing) {\r\n                suffix = \" \" + suffix;\r\n            }\r\n        }\r\n        else if (details.decimals.passive === 0) {\r\n            value = Math.round(value);\r\n        }\r\n        else if (details.decimals.passive > 0) {\r\n            const decimals = _Utils__WEBPACK_IMPORTED_MODULE_2__.decimalPlaces(value);\r\n            if (decimals > 0) {\r\n                const d = Math.pow(10, details.decimals.passive);\r\n                value = Math.round(parseFloat((value * d).toFixed(decimals))) / d;\r\n            }\r\n        }\r\n        // Init return value\r\n        let res = \"\";\r\n        // Calc integer and decimal parts\r\n        let a = _Type__WEBPACK_IMPORTED_MODULE_1__.numberToString(value).split(\".\");\r\n        // Format integers\r\n        let ints = a[0];\r\n        // Pad integers to active length\r\n        if (ints.length < details.thousands.active) {\r\n            ints = Array(details.thousands.active - ints.length + 1).join(\"0\") + ints;\r\n        }\r\n        // Insert thousands separators\r\n        if (details.thousands.interval > 0) {\r\n            let ip = [];\r\n            let intsr = ints.split(\"\").reverse().join(\"\");\r\n            for (let i = 0, len = ints.length; i <= len; i += details.thousands.interval) {\r\n                let c = intsr.substr(i, details.thousands.interval).split(\"\").reverse().join(\"\");\r\n                if (c !== \"\") {\r\n                    ip.unshift(c);\r\n                }\r\n            }\r\n            ints = ip.join(details.thousands.separator);\r\n        }\r\n        // Add integers\r\n        res += ints;\r\n        // Add decimals\r\n        if (a.length === 1) {\r\n            a.push(\"\");\r\n        }\r\n        let decs = a[1];\r\n        // Fill zeros?\r\n        if (decs.length < details.decimals.active) {\r\n            decs += Array(details.decimals.active - decs.length + 1).join(\"0\");\r\n        }\r\n        if (decs !== \"\") {\r\n            res += details.decimals.separator + decs;\r\n        }\r\n        // Can't have empty return value\r\n        if (res === \"\") {\r\n            res = \"0\";\r\n        }\r\n        // Add minus sign back\r\n        if (value !== 0 && negative && (mods.indexOf(\"s\") === -1)) {\r\n            res = \"-\" + res;\r\n        }\r\n        // Add suffixes/prefixes\r\n        if (prefix) {\r\n            res = prefix + res;\r\n        }\r\n        if (suffix) {\r\n            res += suffix;\r\n        }\r\n        return res;\r\n    }\r\n    applyPrefix(value, prefixes, force = false) {\r\n        let newvalue = value;\r\n        let prefix = \"\";\r\n        let suffix = \"\";\r\n        let applied = false;\r\n        let k = 1;\r\n        for (let i = 0, len = prefixes.length; i < len; i++) {\r\n            if (prefixes[i].number <= value) {\r\n                if (prefixes[i].number === 0) {\r\n                    newvalue = 0;\r\n                }\r\n                else {\r\n                    newvalue = value / prefixes[i].number;\r\n                    k = prefixes[i].number;\r\n                }\r\n                prefix = prefixes[i].prefix;\r\n                suffix = prefixes[i].suffix;\r\n                applied = true;\r\n            }\r\n        }\r\n        if (!applied && force && prefixes.length && value != 0) {\r\n            // Prefix was not applied. Use the first prefix.\r\n            newvalue = value / prefixes[0].number;\r\n            prefix = prefixes[0].prefix;\r\n            suffix = prefixes[0].suffix;\r\n            applied = true;\r\n        }\r\n        if (applied) {\r\n            newvalue = parseFloat(newvalue.toPrecision(Math.min(k.toString().length + Math.floor(newvalue).toString().replace(/[^0-9]*/g, \"\").length, 21)));\r\n        }\r\n        return [newvalue, prefix, suffix];\r\n    }\r\n    /**\r\n     * Replaces brackets with temporary placeholders.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Input text\r\n     * @return Escaped text\r\n     */\r\n    escape(text) {\r\n        return text.replace(\"||\", _Type__WEBPACK_IMPORTED_MODULE_1__.PLACEHOLDER2);\r\n    }\r\n    /**\r\n     * Replaces placeholders back to brackets.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Escaped text\r\n     * @return Unescaped text\r\n     */\r\n    unescape(text) {\r\n        return text.replace(_Type__WEBPACK_IMPORTED_MODULE_1__.PLACEHOLDER2, \"|\");\r\n    }\r\n}\r\n//# sourceMappingURL=NumberFormatter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/NumberFormatter.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Object.js":
/*!************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/core/util/Object.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   copy: () => (/* binding */ copy),\n/* harmony export */   each: () => (/* binding */ each),\n/* harmony export */   eachContinue: () => (/* binding */ eachContinue),\n/* harmony export */   eachOrdered: () => (/* binding */ eachOrdered),\n/* harmony export */   hasKey: () => (/* binding */ hasKey),\n/* harmony export */   keys: () => (/* binding */ keys),\n/* harmony export */   keysOrdered: () => (/* binding */ keysOrdered),\n/* harmony export */   softCopyProperties: () => (/* binding */ softCopyProperties)\n/* harmony export */ });\n/* harmony import */ var _Array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Array */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Array.js\");\n\r\nfunction keys(object) {\r\n    return Object.keys(object);\r\n}\r\n/**\r\n * Returns an array of object's property names ordered using specific ordering\r\n * function.\r\n *\r\n * @param object  Source object\r\n * @param order   Ordering function\r\n * @returns Object property names\r\n */\r\nfunction keysOrdered(object, order) {\r\n    return keys(object).sort(order);\r\n}\r\nfunction copy(object) {\r\n    return Object.assign({}, object);\r\n}\r\nfunction each(object, f) {\r\n    keys(object).forEach((key) => {\r\n        f(key, object[key]);\r\n    });\r\n}\r\n/**\r\n * Iterates through all properties of the object calling `fn` for each of them.\r\n *\r\n * If return value of the function evaluates to `false` further iteration is\r\n * cancelled.\r\n *\r\n * @param object  Source object\r\n * @param fn      Callback function\r\n */\r\nfunction eachContinue(object, fn) {\r\n    for (let key in object) {\r\n        if (hasKey(object, key)) {\r\n            if (!fn(key, object[key])) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * Orders object properties using custom `ord` function and iterates through\r\n * them calling `fn` for each of them.\r\n *\r\n * @param object  Source object\r\n * @param fn      Callback function\r\n * @param order   Ordering function\r\n */\r\nfunction eachOrdered(object, fn, ord) {\r\n    _Array__WEBPACK_IMPORTED_MODULE_0__.each(keysOrdered(object, ord), (key) => {\r\n        fn(key, object[key]);\r\n    });\r\n}\r\n/**\r\n * Checks if `object` has a specific `key`.\r\n *\r\n * @param object  Source object\r\n * @param key     Property name\r\n * @returns Has key?\r\n */\r\nfunction hasKey(object, key) {\r\n    return {}.hasOwnProperty.call(object, key);\r\n}\r\n/**\r\n * Copies all properties of one object to the other, omitting undefined, but only if property in target object doesn't have a value set.\r\n *\r\n * @param fromObject  Source object\r\n * @param toObject    Target object\r\n * @return Updated target object\r\n * @todo Maybe consolidate with utils.copy?\r\n */\r\nfunction softCopyProperties(source, target) {\r\n    each(source, (key, value) => {\r\n        // only if value is set\r\n        //if ($type.hasValue(value) && !($type.hasValue((<any>target)[key]))) {\r\n        if (value != null && target[key] == null) {\r\n            target[key] = value;\r\n        }\r\n    });\r\n    return target;\r\n}\r\n//# sourceMappingURL=Object.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNS8uaW50ZXJuYWwvY29yZS91dGlsL09iamVjdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBa0M7QUFDM0I7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNPO0FBQ1AsMkJBQTJCO0FBQzNCO0FBQ087QUFDUDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsSUFBSSx3Q0FBVztBQUNmO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3Jrc3BhY2Uvbm9kZV9tb2R1bGVzL0BhbWNoYXJ0cy9hbWNoYXJ0czUvLmludGVybmFsL2NvcmUvdXRpbC9PYmplY3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgJGFycmF5IGZyb20gXCIuL0FycmF5XCI7XHJcbmV4cG9ydCBmdW5jdGlvbiBrZXlzKG9iamVjdCkge1xyXG4gICAgcmV0dXJuIE9iamVjdC5rZXlzKG9iamVjdCk7XHJcbn1cclxuLyoqXHJcbiAqIFJldHVybnMgYW4gYXJyYXkgb2Ygb2JqZWN0J3MgcHJvcGVydHkgbmFtZXMgb3JkZXJlZCB1c2luZyBzcGVjaWZpYyBvcmRlcmluZ1xyXG4gKiBmdW5jdGlvbi5cclxuICpcclxuICogQHBhcmFtIG9iamVjdCAgU291cmNlIG9iamVjdFxyXG4gKiBAcGFyYW0gb3JkZXIgICBPcmRlcmluZyBmdW5jdGlvblxyXG4gKiBAcmV0dXJucyBPYmplY3QgcHJvcGVydHkgbmFtZXNcclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBrZXlzT3JkZXJlZChvYmplY3QsIG9yZGVyKSB7XHJcbiAgICByZXR1cm4ga2V5cyhvYmplY3QpLnNvcnQob3JkZXIpO1xyXG59XHJcbmV4cG9ydCBmdW5jdGlvbiBjb3B5KG9iamVjdCkge1xyXG4gICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe30sIG9iamVjdCk7XHJcbn1cclxuZXhwb3J0IGZ1bmN0aW9uIGVhY2gob2JqZWN0LCBmKSB7XHJcbiAgICBrZXlzKG9iamVjdCkuZm9yRWFjaCgoa2V5KSA9PiB7XHJcbiAgICAgICAgZihrZXksIG9iamVjdFtrZXldKTtcclxuICAgIH0pO1xyXG59XHJcbi8qKlxyXG4gKiBJdGVyYXRlcyB0aHJvdWdoIGFsbCBwcm9wZXJ0aWVzIG9mIHRoZSBvYmplY3QgY2FsbGluZyBgZm5gIGZvciBlYWNoIG9mIHRoZW0uXHJcbiAqXHJcbiAqIElmIHJldHVybiB2YWx1ZSBvZiB0aGUgZnVuY3Rpb24gZXZhbHVhdGVzIHRvIGBmYWxzZWAgZnVydGhlciBpdGVyYXRpb24gaXNcclxuICogY2FuY2VsbGVkLlxyXG4gKlxyXG4gKiBAcGFyYW0gb2JqZWN0ICBTb3VyY2Ugb2JqZWN0XHJcbiAqIEBwYXJhbSBmbiAgICAgIENhbGxiYWNrIGZ1bmN0aW9uXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gZWFjaENvbnRpbnVlKG9iamVjdCwgZm4pIHtcclxuICAgIGZvciAobGV0IGtleSBpbiBvYmplY3QpIHtcclxuICAgICAgICBpZiAoaGFzS2V5KG9iamVjdCwga2V5KSkge1xyXG4gICAgICAgICAgICBpZiAoIWZuKGtleSwgb2JqZWN0W2tleV0pKSB7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG4vKipcclxuICogT3JkZXJzIG9iamVjdCBwcm9wZXJ0aWVzIHVzaW5nIGN1c3RvbSBgb3JkYCBmdW5jdGlvbiBhbmQgaXRlcmF0ZXMgdGhyb3VnaFxyXG4gKiB0aGVtIGNhbGxpbmcgYGZuYCBmb3IgZWFjaCBvZiB0aGVtLlxyXG4gKlxyXG4gKiBAcGFyYW0gb2JqZWN0ICBTb3VyY2Ugb2JqZWN0XHJcbiAqIEBwYXJhbSBmbiAgICAgIENhbGxiYWNrIGZ1bmN0aW9uXHJcbiAqIEBwYXJhbSBvcmRlciAgIE9yZGVyaW5nIGZ1bmN0aW9uXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gZWFjaE9yZGVyZWQob2JqZWN0LCBmbiwgb3JkKSB7XHJcbiAgICAkYXJyYXkuZWFjaChrZXlzT3JkZXJlZChvYmplY3QsIG9yZCksIChrZXkpID0+IHtcclxuICAgICAgICBmbihrZXksIG9iamVjdFtrZXldKTtcclxuICAgIH0pO1xyXG59XHJcbi8qKlxyXG4gKiBDaGVja3MgaWYgYG9iamVjdGAgaGFzIGEgc3BlY2lmaWMgYGtleWAuXHJcbiAqXHJcbiAqIEBwYXJhbSBvYmplY3QgIFNvdXJjZSBvYmplY3RcclxuICogQHBhcmFtIGtleSAgICAgUHJvcGVydHkgbmFtZVxyXG4gKiBAcmV0dXJucyBIYXMga2V5P1xyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGhhc0tleShvYmplY3QsIGtleSkge1xyXG4gICAgcmV0dXJuIHt9Lmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBrZXkpO1xyXG59XHJcbi8qKlxyXG4gKiBDb3BpZXMgYWxsIHByb3BlcnRpZXMgb2Ygb25lIG9iamVjdCB0byB0aGUgb3RoZXIsIG9taXR0aW5nIHVuZGVmaW5lZCwgYnV0IG9ubHkgaWYgcHJvcGVydHkgaW4gdGFyZ2V0IG9iamVjdCBkb2Vzbid0IGhhdmUgYSB2YWx1ZSBzZXQuXHJcbiAqXHJcbiAqIEBwYXJhbSBmcm9tT2JqZWN0ICBTb3VyY2Ugb2JqZWN0XHJcbiAqIEBwYXJhbSB0b09iamVjdCAgICBUYXJnZXQgb2JqZWN0XHJcbiAqIEByZXR1cm4gVXBkYXRlZCB0YXJnZXQgb2JqZWN0XHJcbiAqIEB0b2RvIE1heWJlIGNvbnNvbGlkYXRlIHdpdGggdXRpbHMuY29weT9cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBzb2Z0Q29weVByb3BlcnRpZXMoc291cmNlLCB0YXJnZXQpIHtcclxuICAgIGVhY2goc291cmNlLCAoa2V5LCB2YWx1ZSkgPT4ge1xyXG4gICAgICAgIC8vIG9ubHkgaWYgdmFsdWUgaXMgc2V0XHJcbiAgICAgICAgLy9pZiAoJHR5cGUuaGFzVmFsdWUodmFsdWUpICYmICEoJHR5cGUuaGFzVmFsdWUoKDxhbnk+dGFyZ2V0KVtrZXldKSkpIHtcclxuICAgICAgICBpZiAodmFsdWUgIT0gbnVsbCAmJiB0YXJnZXRba2V5XSA9PSBudWxsKSB7XHJcbiAgICAgICAgICAgIHRhcmdldFtrZXldID0gdmFsdWU7XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcbiAgICByZXR1cm4gdGFyZ2V0O1xyXG59XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPU9iamVjdC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Object.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Order.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/core/util/Order.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   compare: () => (/* binding */ compare),\n/* harmony export */   compareArray: () => (/* binding */ compareArray),\n/* harmony export */   compareNumber: () => (/* binding */ compareNumber),\n/* harmony export */   reverse: () => (/* binding */ reverse)\n/* harmony export */ });\n/**\r\n * @ignore\r\n */\r\nfunction compare(left, right) {\r\n    if (left === right) {\r\n        return 0;\r\n    }\r\n    else if (left < right) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction compareArray(left, right, f) {\r\n    const leftLength = left.length;\r\n    const rightLength = right.length;\r\n    const length = Math.min(leftLength, rightLength);\r\n    for (let i = 0; i < length; ++i) {\r\n        const order = f(left[i], right[i]);\r\n        if (order !== 0) {\r\n            return order;\r\n        }\r\n    }\r\n    return compare(leftLength, rightLength);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction reverse(order) {\r\n    if (order < 0) {\r\n        return 1;\r\n    }\r\n    else if (order > 0) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 0;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction compareNumber(a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a < b) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n//# sourceMappingURL=Order.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNS8uaW50ZXJuYWwvY29yZS91dGlsL09yZGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsWUFBWTtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3Jrc3BhY2Uvbm9kZV9tb2R1bGVzL0BhbWNoYXJ0cy9hbWNoYXJ0czUvLmludGVybmFsL2NvcmUvdXRpbC9PcmRlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQGlnbm9yZVxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGNvbXBhcmUobGVmdCwgcmlnaHQpIHtcclxuICAgIGlmIChsZWZ0ID09PSByaWdodCkge1xyXG4gICAgICAgIHJldHVybiAwO1xyXG4gICAgfVxyXG4gICAgZWxzZSBpZiAobGVmdCA8IHJpZ2h0KSB7XHJcbiAgICAgICAgcmV0dXJuIC0xO1xyXG4gICAgfVxyXG4gICAgZWxzZSB7XHJcbiAgICAgICAgcmV0dXJuIDE7XHJcbiAgICB9XHJcbn1cclxuLyoqXHJcbiAqIEBpZ25vcmVcclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBjb21wYXJlQXJyYXkobGVmdCwgcmlnaHQsIGYpIHtcclxuICAgIGNvbnN0IGxlZnRMZW5ndGggPSBsZWZ0Lmxlbmd0aDtcclxuICAgIGNvbnN0IHJpZ2h0TGVuZ3RoID0gcmlnaHQubGVuZ3RoO1xyXG4gICAgY29uc3QgbGVuZ3RoID0gTWF0aC5taW4obGVmdExlbmd0aCwgcmlnaHRMZW5ndGgpO1xyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsZW5ndGg7ICsraSkge1xyXG4gICAgICAgIGNvbnN0IG9yZGVyID0gZihsZWZ0W2ldLCByaWdodFtpXSk7XHJcbiAgICAgICAgaWYgKG9yZGVyICE9PSAwKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBvcmRlcjtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4gY29tcGFyZShsZWZ0TGVuZ3RoLCByaWdodExlbmd0aCk7XHJcbn1cclxuLyoqXHJcbiAqIEBpZ25vcmVcclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiByZXZlcnNlKG9yZGVyKSB7XHJcbiAgICBpZiAob3JkZXIgPCAwKSB7XHJcbiAgICAgICAgcmV0dXJuIDE7XHJcbiAgICB9XHJcbiAgICBlbHNlIGlmIChvcmRlciA+IDApIHtcclxuICAgICAgICByZXR1cm4gLTE7XHJcbiAgICB9XHJcbiAgICBlbHNlIHtcclxuICAgICAgICByZXR1cm4gMDtcclxuICAgIH1cclxufVxyXG4vKipcclxuICogQGlnbm9yZVxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGNvbXBhcmVOdW1iZXIoYSwgYikge1xyXG4gICAgaWYgKGEgPT09IGIpIHtcclxuICAgICAgICByZXR1cm4gMDtcclxuICAgIH1cclxuICAgIGVsc2UgaWYgKGEgPCBiKSB7XHJcbiAgICAgICAgcmV0dXJuIC0xO1xyXG4gICAgfVxyXG4gICAgZWxzZSB7XHJcbiAgICAgICAgcmV0dXJuIDE7XHJcbiAgICB9XHJcbn1cclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9T3JkZXIuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Order.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Percent.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/core/util/Percent.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Percent: () => (/* binding */ Percent),\n/* harmony export */   isPercent: () => (/* binding */ isPercent),\n/* harmony export */   p0: () => (/* binding */ p0),\n/* harmony export */   p100: () => (/* binding */ p100),\n/* harmony export */   p50: () => (/* binding */ p50),\n/* harmony export */   percent: () => (/* binding */ percent)\n/* harmony export */ });\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Represents a relative value (percent).\r\n *\r\n * The Percent object, can be instantiated using two ways:\r\n *\r\n * * Via `new Percent(X)`.\r\n * * Via `am5.percent(X)`.\r\n *\r\n * You can also use shortcut functions for `0%`, `50%`, and `100%`:\r\n * * `am5.p0`\r\n * * `am5.p50`\r\n * * `am5.p100`\r\n */\r\nclass Percent {\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param percent  Percent value\r\n     */\r\n    constructor(percent) {\r\n        /**\r\n         * Value in percent.\r\n         */\r\n        Object.defineProperty(this, \"_value\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._value = percent;\r\n    }\r\n    /**\r\n     * Relative value.\r\n     *\r\n     * E.g. 100% is 1, 50% is 0.5, etc.\r\n     *\r\n     * This is useful to apply transformations to other values. E.g.:\r\n     *\r\n     * ```TypeScript\r\n     * let value = 256;\r\n     * let percent = new am5.p50;\r\n     * console.log(value * percent.value); // outputs 128\r\n     * ```\r\n     * ```JavaScript\r\n     * var value = 256;\r\n     * var percent = new am5.p50;\r\n     * console.log(value * percent.value); // outputs 128\r\n     * ```\r\n     *\r\n     * Alternatively, you can use `am5.percent()` helper function:\r\n     *\r\n     * ```TypeScript\r\n     * let value = 256;\r\n     * let percent = am5.p50;\r\n     * console.log(value * percent.value); // outputs 128\r\n     * ```\r\n     * ```JavaScript\r\n     * var value = 256;\r\n     * var percent = am5.p50;\r\n     * console.log(value * percent.value); // outputs 128\r\n     * ```\r\n     *\r\n     * @readonly\r\n     * @return Relative value\r\n     */\r\n    get value() {\r\n        return this._value / 100;\r\n    }\r\n    /**\r\n     * Value in percent.\r\n     *\r\n     * @readonly\r\n     * @return Percent\r\n     */\r\n    get percent() {\r\n        return this._value;\r\n    }\r\n    toString() {\r\n        return \"\" + this._value + \"%\";\r\n    }\r\n    interpolate(min, max) {\r\n        return min + (this.value * (max - min));\r\n    }\r\n    static normalize(percent, min, max) {\r\n        if (percent instanceof Percent) {\r\n            return percent;\r\n        }\r\n        else {\r\n            if (min === max) {\r\n                return new Percent(0);\r\n            }\r\n            else {\r\n                return new Percent(Math.min(Math.max((percent - min) * (1 / (max - min)), 0), 1) * 100);\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * Converts numeric percent value to a proper [[Percent]] object.\r\n *\r\n * ```TypeScript\r\n * pieSeries.set(\"radius\", am5.percent(80));\r\n * ```\r\n * ```JavaScript\r\n * pieSeries.set(\"radius\", am5.percent(80));\r\n * ```\r\n *\r\n * @param value  Percent\r\n * @return Percent object\r\n */\r\nfunction percent(value) {\r\n    return new Percent(value);\r\n}\r\n/**\r\n * A shortcut function to `am5.percent(0)`.\r\n */\r\nconst p0 = percent(0);\r\n/**\r\n * A shortcut function to `am5.percent(100)`.\r\n */\r\nconst p100 = percent(100);\r\n/**\r\n * A shortcut function to `am5.percent(50)`.\r\n */\r\nconst p50 = percent(50);\r\n/**\r\n * Checks if value is a [[Percent]] object.\r\n *\r\n * @ignore Exclude from docs\r\n * @param value  Input value\r\n * @return Is percent?\r\n */\r\nfunction isPercent(value) {\r\n    return value instanceof Percent;\r\n}\r\n//# sourceMappingURL=Percent.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNS8uaW50ZXJuYWwvY29yZS91dGlsL1BlcmNlbnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvaG9tZS9ydW5uZXIvd29ya3NwYWNlL25vZGVfbW9kdWxlcy9AYW1jaGFydHMvYW1jaGFydHM1Ly5pbnRlcm5hbC9jb3JlL3V0aWwvUGVyY2VudC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gKiBNQUlOIENMQVNTXHJcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICogQGhpZGRlblxyXG4gKi9cclxuLyoqXHJcbiAqIFJlcHJlc2VudHMgYSByZWxhdGl2ZSB2YWx1ZSAocGVyY2VudCkuXHJcbiAqXHJcbiAqIFRoZSBQZXJjZW50IG9iamVjdCwgY2FuIGJlIGluc3RhbnRpYXRlZCB1c2luZyB0d28gd2F5czpcclxuICpcclxuICogKiBWaWEgYG5ldyBQZXJjZW50KFgpYC5cclxuICogKiBWaWEgYGFtNS5wZXJjZW50KFgpYC5cclxuICpcclxuICogWW91IGNhbiBhbHNvIHVzZSBzaG9ydGN1dCBmdW5jdGlvbnMgZm9yIGAwJWAsIGA1MCVgLCBhbmQgYDEwMCVgOlxyXG4gKiAqIGBhbTUucDBgXHJcbiAqICogYGFtNS5wNTBgXHJcbiAqICogYGFtNS5wMTAwYFxyXG4gKi9cclxuZXhwb3J0IGNsYXNzIFBlcmNlbnQge1xyXG4gICAgLyoqXHJcbiAgICAgKiBDb25zdHJ1Y3Rvci5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gcGVyY2VudCAgUGVyY2VudCB2YWx1ZVxyXG4gICAgICovXHJcbiAgICBjb25zdHJ1Y3RvcihwZXJjZW50KSB7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogVmFsdWUgaW4gcGVyY2VudC5cclxuICAgICAgICAgKi9cclxuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJfdmFsdWVcIiwge1xyXG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXHJcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxyXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5fdmFsdWUgPSBwZXJjZW50O1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBSZWxhdGl2ZSB2YWx1ZS5cclxuICAgICAqXHJcbiAgICAgKiBFLmcuIDEwMCUgaXMgMSwgNTAlIGlzIDAuNSwgZXRjLlxyXG4gICAgICpcclxuICAgICAqIFRoaXMgaXMgdXNlZnVsIHRvIGFwcGx5IHRyYW5zZm9ybWF0aW9ucyB0byBvdGhlciB2YWx1ZXMuIEUuZy46XHJcbiAgICAgKlxyXG4gICAgICogYGBgVHlwZVNjcmlwdFxyXG4gICAgICogbGV0IHZhbHVlID0gMjU2O1xyXG4gICAgICogbGV0IHBlcmNlbnQgPSBuZXcgYW01LnA1MDtcclxuICAgICAqIGNvbnNvbGUubG9nKHZhbHVlICogcGVyY2VudC52YWx1ZSk7IC8vIG91dHB1dHMgMTI4XHJcbiAgICAgKiBgYGBcclxuICAgICAqIGBgYEphdmFTY3JpcHRcclxuICAgICAqIHZhciB2YWx1ZSA9IDI1NjtcclxuICAgICAqIHZhciBwZXJjZW50ID0gbmV3IGFtNS5wNTA7XHJcbiAgICAgKiBjb25zb2xlLmxvZyh2YWx1ZSAqIHBlcmNlbnQudmFsdWUpOyAvLyBvdXRwdXRzIDEyOFxyXG4gICAgICogYGBgXHJcbiAgICAgKlxyXG4gICAgICogQWx0ZXJuYXRpdmVseSwgeW91IGNhbiB1c2UgYGFtNS5wZXJjZW50KClgIGhlbHBlciBmdW5jdGlvbjpcclxuICAgICAqXHJcbiAgICAgKiBgYGBUeXBlU2NyaXB0XHJcbiAgICAgKiBsZXQgdmFsdWUgPSAyNTY7XHJcbiAgICAgKiBsZXQgcGVyY2VudCA9IGFtNS5wNTA7XHJcbiAgICAgKiBjb25zb2xlLmxvZyh2YWx1ZSAqIHBlcmNlbnQudmFsdWUpOyAvLyBvdXRwdXRzIDEyOFxyXG4gICAgICogYGBgXHJcbiAgICAgKiBgYGBKYXZhU2NyaXB0XHJcbiAgICAgKiB2YXIgdmFsdWUgPSAyNTY7XHJcbiAgICAgKiB2YXIgcGVyY2VudCA9IGFtNS5wNTA7XHJcbiAgICAgKiBjb25zb2xlLmxvZyh2YWx1ZSAqIHBlcmNlbnQudmFsdWUpOyAvLyBvdXRwdXRzIDEyOFxyXG4gICAgICogYGBgXHJcbiAgICAgKlxyXG4gICAgICogQHJlYWRvbmx5XHJcbiAgICAgKiBAcmV0dXJuIFJlbGF0aXZlIHZhbHVlXHJcbiAgICAgKi9cclxuICAgIGdldCB2YWx1ZSgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fdmFsdWUgLyAxMDA7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFZhbHVlIGluIHBlcmNlbnQuXHJcbiAgICAgKlxyXG4gICAgICogQHJlYWRvbmx5XHJcbiAgICAgKiBAcmV0dXJuIFBlcmNlbnRcclxuICAgICAqL1xyXG4gICAgZ2V0IHBlcmNlbnQoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3ZhbHVlO1xyXG4gICAgfVxyXG4gICAgdG9TdHJpbmcoKSB7XHJcbiAgICAgICAgcmV0dXJuIFwiXCIgKyB0aGlzLl92YWx1ZSArIFwiJVwiO1xyXG4gICAgfVxyXG4gICAgaW50ZXJwb2xhdGUobWluLCBtYXgpIHtcclxuICAgICAgICByZXR1cm4gbWluICsgKHRoaXMudmFsdWUgKiAobWF4IC0gbWluKSk7XHJcbiAgICB9XHJcbiAgICBzdGF0aWMgbm9ybWFsaXplKHBlcmNlbnQsIG1pbiwgbWF4KSB7XHJcbiAgICAgICAgaWYgKHBlcmNlbnQgaW5zdGFuY2VvZiBQZXJjZW50KSB7XHJcbiAgICAgICAgICAgIHJldHVybiBwZXJjZW50O1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgaWYgKG1pbiA9PT0gbWF4KSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFBlcmNlbnQoMCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFBlcmNlbnQoTWF0aC5taW4oTWF0aC5tYXgoKHBlcmNlbnQgLSBtaW4pICogKDEgLyAobWF4IC0gbWluKSksIDApLCAxKSAqIDEwMCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuLyoqXHJcbiAqIENvbnZlcnRzIG51bWVyaWMgcGVyY2VudCB2YWx1ZSB0byBhIHByb3BlciBbW1BlcmNlbnRdXSBvYmplY3QuXHJcbiAqXHJcbiAqIGBgYFR5cGVTY3JpcHRcclxuICogcGllU2VyaWVzLnNldChcInJhZGl1c1wiLCBhbTUucGVyY2VudCg4MCkpO1xyXG4gKiBgYGBcclxuICogYGBgSmF2YVNjcmlwdFxyXG4gKiBwaWVTZXJpZXMuc2V0KFwicmFkaXVzXCIsIGFtNS5wZXJjZW50KDgwKSk7XHJcbiAqIGBgYFxyXG4gKlxyXG4gKiBAcGFyYW0gdmFsdWUgIFBlcmNlbnRcclxuICogQHJldHVybiBQZXJjZW50IG9iamVjdFxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIHBlcmNlbnQodmFsdWUpIHtcclxuICAgIHJldHVybiBuZXcgUGVyY2VudCh2YWx1ZSk7XHJcbn1cclxuLyoqXHJcbiAqIEEgc2hvcnRjdXQgZnVuY3Rpb24gdG8gYGFtNS5wZXJjZW50KDApYC5cclxuICovXHJcbmV4cG9ydCBjb25zdCBwMCA9IHBlcmNlbnQoMCk7XHJcbi8qKlxyXG4gKiBBIHNob3J0Y3V0IGZ1bmN0aW9uIHRvIGBhbTUucGVyY2VudCgxMDApYC5cclxuICovXHJcbmV4cG9ydCBjb25zdCBwMTAwID0gcGVyY2VudCgxMDApO1xyXG4vKipcclxuICogQSBzaG9ydGN1dCBmdW5jdGlvbiB0byBgYW01LnBlcmNlbnQoNTApYC5cclxuICovXHJcbmV4cG9ydCBjb25zdCBwNTAgPSBwZXJjZW50KDUwKTtcclxuLyoqXHJcbiAqIENoZWNrcyBpZiB2YWx1ZSBpcyBhIFtbUGVyY2VudF1dIG9iamVjdC5cclxuICpcclxuICogQGlnbm9yZSBFeGNsdWRlIGZyb20gZG9jc1xyXG4gKiBAcGFyYW0gdmFsdWUgIElucHV0IHZhbHVlXHJcbiAqIEByZXR1cm4gSXMgcGVyY2VudD9cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBpc1BlcmNlbnQodmFsdWUpIHtcclxuICAgIHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFBlcmNlbnQ7XHJcbn1cclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9UGVyY2VudC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Percent.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/PopulateString.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/core/util/PopulateString.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getTagValueFromObject: () => (/* binding */ getTagValueFromObject),\n/* harmony export */   populateString: () => (/* binding */ populateString)\n/* harmony export */ });\n/* harmony import */ var _Type__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Type */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Type.js\");\n/* harmony import */ var _Utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Utils */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Utils.js\");\n/* harmony import */ var _render_Sprite__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../render/Sprite */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/Sprite.js\");\n/* harmony import */ var _TextFormatter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./TextFormatter */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/TextFormatter.js\");\n/** @ignore */ /** */\r\n\r\n\r\n\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction populateString(target, string) {\r\n    if (string != null) {\r\n        string = \"\" + string;\r\n        string = _TextFormatter__WEBPACK_IMPORTED_MODULE_0__.TextFormatter.escape(string);\r\n        let tags = string.match(/\\{([^}]+)\\}/g);\r\n        let i;\r\n        if (tags) {\r\n            for (i = 0; i < tags.length; i++) {\r\n                let tag = tags[i].replace(/\\{([^}]+)\\}/, \"$1\");\r\n                let value = getTagValue(target, tag, \"\");\r\n                if (value == null) {\r\n                    value = \"\";\r\n                }\r\n                string = string.split(tags[i]).join(value);\r\n            }\r\n        }\r\n        string = _TextFormatter__WEBPACK_IMPORTED_MODULE_0__.TextFormatter.unescape(string);\r\n    }\r\n    else {\r\n        string = \"\";\r\n    }\r\n    // TODO: apply adapter?\r\n    return string;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction getTagValue(target, tagName, format) {\r\n    let value;\r\n    const dataItem = target.dataItem;\r\n    // Parse parts\r\n    let parts = [];\r\n    let reg = /(format[a-zA-Z]*)\\((.*)\\)|([^.]+)/g;\r\n    let matches;\r\n    while (true) {\r\n        matches = reg.exec(tagName);\r\n        if (matches === null) {\r\n            break;\r\n        }\r\n        if (matches[3]) {\r\n            // Simple property\r\n            parts.push({\r\n                prop: matches[3]\r\n            });\r\n            // Check if maybe we should force a formatter on this value\r\n            const dateFields = target.getDateFormatter().get(\"dateFields\", []);\r\n            const numericFields = target.getNumberFormatter().get(\"numericFields\", []);\r\n            const durationFields = target.getDurationFormatter().get(\"durationFields\", []);\r\n            if (dateFields.indexOf(matches[3]) !== -1) {\r\n                parts.push({\r\n                    method: \"formatDate\",\r\n                    params: []\r\n                });\r\n            }\r\n            else if (numericFields.indexOf(matches[3]) !== -1) {\r\n                parts.push({\r\n                    method: \"formatNumber\",\r\n                    params: []\r\n                });\r\n            }\r\n            else if (durationFields.indexOf(matches[3]) !== -1) {\r\n                parts.push({\r\n                    method: \"formatDuration\",\r\n                    params: []\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            // Method\r\n            // Parse parameters\r\n            let params = [];\r\n            if (_Utils__WEBPACK_IMPORTED_MODULE_1__.trim(matches[2]) != \"\") {\r\n                let reg2 = /'([^']*)'|\"([^\"]*)\"|([0-9\\-]+)/g;\r\n                let matches2;\r\n                while (true) {\r\n                    matches2 = reg2.exec(matches[2]);\r\n                    if (matches2 === null) {\r\n                        break;\r\n                    }\r\n                    params.push(matches2[1] || matches2[2] || matches2[3]);\r\n                }\r\n            }\r\n            parts.push({\r\n                method: matches[1],\r\n                params: params\r\n            });\r\n        }\r\n    }\r\n    // Check if we can retrieve the value from data item\r\n    if (dataItem) {\r\n        // Check values\r\n        value = getTagValueFromObject(target, parts, dataItem._settings);\r\n        // Check properties\r\n        if (value == null || _Type__WEBPACK_IMPORTED_MODULE_2__.isObject(value)) { // isObject helps to solve problem with date axis, as for example dateX will get dateX from values object and won't get to the dateX date.\r\n            value = getTagValueFromObject(target, parts, dataItem);\r\n        }\r\n        // Check data context\r\n        let dataContext = dataItem.dataContext;\r\n        if (value == null && dataContext) {\r\n            value = getTagValueFromObject(target, parts, dataContext);\r\n            // Maybe it's a literal dot-separated name of the key in dataContext?\r\n            if (value == null) {\r\n                value = getTagValueFromObject(target, [{\r\n                        prop: tagName\r\n                    }], dataContext);\r\n            }\r\n            // scond data context level sometimes exist (tree map)\r\n            if (value == null && dataContext.dataContext) {\r\n                value = getTagValueFromObject(target, parts, dataContext.dataContext);\r\n            }\r\n        }\r\n        // Check component's data item\r\n        if (value == null && dataItem.component && dataItem.component.dataItem !== dataItem) {\r\n            value = getTagValue(dataItem.component, tagName, format);\r\n        }\r\n    }\r\n    // Check sprite's properties\r\n    if (value == null) {\r\n        value = getTagValueFromObject(target, parts, target);\r\n    }\r\n    // Finally, check the parent\r\n    if (value == null && target.parent) {\r\n        value = getTagValue(target.parent, tagName, format);\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction getCustomDataValue(target, prop) {\r\n    const customData = target.getPrivate(\"customData\");\r\n    if (_Type__WEBPACK_IMPORTED_MODULE_2__.isObject(customData)) {\r\n        return customData[prop];\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction getTagValueFromObject(target, parts, object, format) {\r\n    let current = object;\r\n    let formatApplied = false;\r\n    for (let i = 0, len = parts.length; i < len; i++) {\r\n        let part = parts[i];\r\n        if (part.prop) {\r\n            // Regular property\r\n            if (current instanceof _render_Sprite__WEBPACK_IMPORTED_MODULE_3__.Sprite) {\r\n                let tmp = current.get(part.prop);\r\n                if (tmp == null)\r\n                    tmp = current.getPrivate(part.prop);\r\n                if (tmp == null)\r\n                    tmp = getCustomDataValue(current, part.prop);\r\n                if (tmp == null)\r\n                    tmp = current[part.prop];\r\n                current = tmp;\r\n            }\r\n            else if (current.get) {\r\n                let tmp = current.get(part.prop);\r\n                if (tmp == null)\r\n                    tmp = current[part.prop];\r\n                current = tmp;\r\n            }\r\n            else {\r\n                current = current[part.prop];\r\n            }\r\n            if (current == null) {\r\n                // Not set, return undefined\r\n                return;\r\n            }\r\n        }\r\n        else {\r\n            // Method\r\n            switch (part.method) {\r\n                case \"formatNumber\":\r\n                    let numberValue = _Type__WEBPACK_IMPORTED_MODULE_2__.toNumber(current);\r\n                    if (numberValue != null) {\r\n                        current = target.getNumberFormatter().format(numberValue, format || part.params[0] || undefined);\r\n                        formatApplied = true;\r\n                    }\r\n                    break;\r\n                case \"formatDate\":\r\n                    let dateValue = _Type__WEBPACK_IMPORTED_MODULE_2__.toDate(current);\r\n                    if (!_Type__WEBPACK_IMPORTED_MODULE_2__.isDate(dateValue) || _Type__WEBPACK_IMPORTED_MODULE_2__.isNaN(dateValue.getTime())) {\r\n                        // Was not able to get date out of value, quitting and letting\r\n                        // calling method try another value\r\n                        return;\r\n                    }\r\n                    if (dateValue != null) {\r\n                        current = target.getDateFormatter().format(dateValue, format || part.params[0] || undefined);\r\n                        formatApplied = true;\r\n                    }\r\n                    break;\r\n                case \"formatDuration\":\r\n                    let durationValue = _Type__WEBPACK_IMPORTED_MODULE_2__.toNumber(current);\r\n                    if (durationValue != null) {\r\n                        current = target.getDurationFormatter().format(durationValue, format || part.params[0] || undefined, part.params[1] || undefined);\r\n                        formatApplied = true;\r\n                    }\r\n                    break;\r\n                case \"urlEncode\":\r\n                case \"encodeURIComponent\":\r\n                    current = encodeURIComponent(current);\r\n                    break;\r\n                default:\r\n                    if (current[part.method]) {\r\n                        current[part.method].apply(object, part.params);\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    // Apply default format if it wasn't applied explicitly\r\n    if (!formatApplied) {\r\n        let formatParts = [{\r\n                method: \"\",\r\n                params: format\r\n            }];\r\n        if (format == null) {\r\n            // Format is not set\r\n            // Determine from the type of the value\r\n            if (_Type__WEBPACK_IMPORTED_MODULE_2__.isNumber(current)) {\r\n                formatParts[0].method = \"formatNumber\";\r\n                formatParts[0].params = \"\";\r\n            }\r\n            else if (_Type__WEBPACK_IMPORTED_MODULE_2__.isDate(current)) {\r\n                formatParts[0].method = \"formatDate\";\r\n                formatParts[0].params = \"\";\r\n            }\r\n        }\r\n        else {\r\n            // Format set\r\n            // Try to determine formatter based on the format\r\n            let formatterType = _Utils__WEBPACK_IMPORTED_MODULE_1__.getFormat(format);\r\n            // format\r\n            if (formatterType === \"number\") {\r\n                formatParts[0].method = \"formatNumber\";\r\n            }\r\n            else if (formatterType === \"date\") {\r\n                formatParts[0].method = \"formatDate\";\r\n            }\r\n            else if (formatterType === \"duration\") {\r\n                formatParts[0].method = \"formatDuration\";\r\n            }\r\n        }\r\n        // Apply format\r\n        if (formatParts[0].method) {\r\n            current = getTagValueFromObject(target, formatParts, current);\r\n        }\r\n    }\r\n    return current;\r\n}\r\n//# sourceMappingURL=PopulateString.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNS8uaW50ZXJuYWwvY29yZS91dGlsL1BvcHVsYXRlU3RyaW5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBO0FBQ2dDO0FBQ0U7QUFDUTtBQUNNO0FBQ2hEO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLGlCQUFpQix5REFBYTtBQUM5QixtQ0FBbUMsSUFBSSxLQUFLO0FBQzVDO0FBQ0E7QUFDQSx3QkFBd0IsaUJBQWlCO0FBQ3pDLDZDQUE2QyxJQUFJLEtBQUs7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIseURBQWE7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0Isd0NBQVc7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsMkNBQWMsV0FBVztBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSwyQ0FBYztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSx3Q0FBd0MsU0FBUztBQUNqRDtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsa0RBQU07QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLDJDQUFjO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQyx5Q0FBWTtBQUNoRCx5QkFBeUIseUNBQVksZUFBZSx3Q0FBVztBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdDQUF3QywyQ0FBYztBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsMkNBQWM7QUFDOUI7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLHlDQUFZO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLDZDQUFnQjtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL2hvbWUvcnVubmVyL3dvcmtzcGFjZS9ub2RlX21vZHVsZXMvQGFtY2hhcnRzL2FtY2hhcnRzNS8uaW50ZXJuYWwvY29yZS91dGlsL1BvcHVsYXRlU3RyaW5nLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKiBAaWdub3JlICovIC8qKiAqL1xyXG5pbXBvcnQgKiBhcyAkdHlwZSBmcm9tIFwiLi9UeXBlXCI7XHJcbmltcG9ydCAqIGFzICR1dGlscyBmcm9tIFwiLi9VdGlsc1wiO1xyXG5pbXBvcnQgeyBTcHJpdGUgfSBmcm9tIFwiLi4vcmVuZGVyL1Nwcml0ZVwiO1xyXG5pbXBvcnQgeyBUZXh0Rm9ybWF0dGVyIH0gZnJvbSBcIi4vVGV4dEZvcm1hdHRlclwiO1xyXG4vKipcclxuICogQGlnbm9yZVxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIHBvcHVsYXRlU3RyaW5nKHRhcmdldCwgc3RyaW5nKSB7XHJcbiAgICBpZiAoc3RyaW5nICE9IG51bGwpIHtcclxuICAgICAgICBzdHJpbmcgPSBcIlwiICsgc3RyaW5nO1xyXG4gICAgICAgIHN0cmluZyA9IFRleHRGb3JtYXR0ZXIuZXNjYXBlKHN0cmluZyk7XHJcbiAgICAgICAgbGV0IHRhZ3MgPSBzdHJpbmcubWF0Y2goL1xceyhbXn1dKylcXH0vZyk7XHJcbiAgICAgICAgbGV0IGk7XHJcbiAgICAgICAgaWYgKHRhZ3MpIHtcclxuICAgICAgICAgICAgZm9yIChpID0gMDsgaSA8IHRhZ3MubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgICAgIGxldCB0YWcgPSB0YWdzW2ldLnJlcGxhY2UoL1xceyhbXn1dKylcXH0vLCBcIiQxXCIpO1xyXG4gICAgICAgICAgICAgICAgbGV0IHZhbHVlID0gZ2V0VGFnVmFsdWUodGFyZ2V0LCB0YWcsIFwiXCIpO1xyXG4gICAgICAgICAgICAgICAgaWYgKHZhbHVlID09IG51bGwpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YWx1ZSA9IFwiXCI7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBzdHJpbmcgPSBzdHJpbmcuc3BsaXQodGFnc1tpXSkuam9pbih2YWx1ZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgc3RyaW5nID0gVGV4dEZvcm1hdHRlci51bmVzY2FwZShzdHJpbmcpO1xyXG4gICAgfVxyXG4gICAgZWxzZSB7XHJcbiAgICAgICAgc3RyaW5nID0gXCJcIjtcclxuICAgIH1cclxuICAgIC8vIFRPRE86IGFwcGx5IGFkYXB0ZXI/XHJcbiAgICByZXR1cm4gc3RyaW5nO1xyXG59XHJcbi8qKlxyXG4gKiBAaWdub3JlXHJcbiAqL1xyXG5mdW5jdGlvbiBnZXRUYWdWYWx1ZSh0YXJnZXQsIHRhZ05hbWUsIGZvcm1hdCkge1xyXG4gICAgbGV0IHZhbHVlO1xyXG4gICAgY29uc3QgZGF0YUl0ZW0gPSB0YXJnZXQuZGF0YUl0ZW07XHJcbiAgICAvLyBQYXJzZSBwYXJ0c1xyXG4gICAgbGV0IHBhcnRzID0gW107XHJcbiAgICBsZXQgcmVnID0gLyhmb3JtYXRbYS16QS1aXSopXFwoKC4qKVxcKXwoW14uXSspL2c7XHJcbiAgICBsZXQgbWF0Y2hlcztcclxuICAgIHdoaWxlICh0cnVlKSB7XHJcbiAgICAgICAgbWF0Y2hlcyA9IHJlZy5leGVjKHRhZ05hbWUpO1xyXG4gICAgICAgIGlmIChtYXRjaGVzID09PSBudWxsKSB7XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAobWF0Y2hlc1szXSkge1xyXG4gICAgICAgICAgICAvLyBTaW1wbGUgcHJvcGVydHlcclxuICAgICAgICAgICAgcGFydHMucHVzaCh7XHJcbiAgICAgICAgICAgICAgICBwcm9wOiBtYXRjaGVzWzNdXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAvLyBDaGVjayBpZiBtYXliZSB3ZSBzaG91bGQgZm9yY2UgYSBmb3JtYXR0ZXIgb24gdGhpcyB2YWx1ZVxyXG4gICAgICAgICAgICBjb25zdCBkYXRlRmllbGRzID0gdGFyZ2V0LmdldERhdGVGb3JtYXR0ZXIoKS5nZXQoXCJkYXRlRmllbGRzXCIsIFtdKTtcclxuICAgICAgICAgICAgY29uc3QgbnVtZXJpY0ZpZWxkcyA9IHRhcmdldC5nZXROdW1iZXJGb3JtYXR0ZXIoKS5nZXQoXCJudW1lcmljRmllbGRzXCIsIFtdKTtcclxuICAgICAgICAgICAgY29uc3QgZHVyYXRpb25GaWVsZHMgPSB0YXJnZXQuZ2V0RHVyYXRpb25Gb3JtYXR0ZXIoKS5nZXQoXCJkdXJhdGlvbkZpZWxkc1wiLCBbXSk7XHJcbiAgICAgICAgICAgIGlmIChkYXRlRmllbGRzLmluZGV4T2YobWF0Y2hlc1szXSkgIT09IC0xKSB7XHJcbiAgICAgICAgICAgICAgICBwYXJ0cy5wdXNoKHtcclxuICAgICAgICAgICAgICAgICAgICBtZXRob2Q6IFwiZm9ybWF0RGF0ZVwiLFxyXG4gICAgICAgICAgICAgICAgICAgIHBhcmFtczogW11cclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2UgaWYgKG51bWVyaWNGaWVsZHMuaW5kZXhPZihtYXRjaGVzWzNdKSAhPT0gLTEpIHtcclxuICAgICAgICAgICAgICAgIHBhcnRzLnB1c2goe1xyXG4gICAgICAgICAgICAgICAgICAgIG1ldGhvZDogXCJmb3JtYXROdW1iZXJcIixcclxuICAgICAgICAgICAgICAgICAgICBwYXJhbXM6IFtdXHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIGlmIChkdXJhdGlvbkZpZWxkcy5pbmRleE9mKG1hdGNoZXNbM10pICE9PSAtMSkge1xyXG4gICAgICAgICAgICAgICAgcGFydHMucHVzaCh7XHJcbiAgICAgICAgICAgICAgICAgICAgbWV0aG9kOiBcImZvcm1hdER1cmF0aW9uXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgcGFyYW1zOiBbXVxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIC8vIE1ldGhvZFxyXG4gICAgICAgICAgICAvLyBQYXJzZSBwYXJhbWV0ZXJzXHJcbiAgICAgICAgICAgIGxldCBwYXJhbXMgPSBbXTtcclxuICAgICAgICAgICAgaWYgKCR1dGlscy50cmltKG1hdGNoZXNbMl0pICE9IFwiXCIpIHtcclxuICAgICAgICAgICAgICAgIGxldCByZWcyID0gLycoW14nXSopJ3xcIihbXlwiXSopXCJ8KFswLTlcXC1dKykvZztcclxuICAgICAgICAgICAgICAgIGxldCBtYXRjaGVzMjtcclxuICAgICAgICAgICAgICAgIHdoaWxlICh0cnVlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbWF0Y2hlczIgPSByZWcyLmV4ZWMobWF0Y2hlc1syXSk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKG1hdGNoZXMyID09PSBudWxsKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBwYXJhbXMucHVzaChtYXRjaGVzMlsxXSB8fCBtYXRjaGVzMlsyXSB8fCBtYXRjaGVzMlszXSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcGFydHMucHVzaCh7XHJcbiAgICAgICAgICAgICAgICBtZXRob2Q6IG1hdGNoZXNbMV0sXHJcbiAgICAgICAgICAgICAgICBwYXJhbXM6IHBhcmFtc1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAvLyBDaGVjayBpZiB3ZSBjYW4gcmV0cmlldmUgdGhlIHZhbHVlIGZyb20gZGF0YSBpdGVtXHJcbiAgICBpZiAoZGF0YUl0ZW0pIHtcclxuICAgICAgICAvLyBDaGVjayB2YWx1ZXNcclxuICAgICAgICB2YWx1ZSA9IGdldFRhZ1ZhbHVlRnJvbU9iamVjdCh0YXJnZXQsIHBhcnRzLCBkYXRhSXRlbS5fc2V0dGluZ3MpO1xyXG4gICAgICAgIC8vIENoZWNrIHByb3BlcnRpZXNcclxuICAgICAgICBpZiAodmFsdWUgPT0gbnVsbCB8fCAkdHlwZS5pc09iamVjdCh2YWx1ZSkpIHsgLy8gaXNPYmplY3QgaGVscHMgdG8gc29sdmUgcHJvYmxlbSB3aXRoIGRhdGUgYXhpcywgYXMgZm9yIGV4YW1wbGUgZGF0ZVggd2lsbCBnZXQgZGF0ZVggZnJvbSB2YWx1ZXMgb2JqZWN0IGFuZCB3b24ndCBnZXQgdG8gdGhlIGRhdGVYIGRhdGUuXHJcbiAgICAgICAgICAgIHZhbHVlID0gZ2V0VGFnVmFsdWVGcm9tT2JqZWN0KHRhcmdldCwgcGFydHMsIGRhdGFJdGVtKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8gQ2hlY2sgZGF0YSBjb250ZXh0XHJcbiAgICAgICAgbGV0IGRhdGFDb250ZXh0ID0gZGF0YUl0ZW0uZGF0YUNvbnRleHQ7XHJcbiAgICAgICAgaWYgKHZhbHVlID09IG51bGwgJiYgZGF0YUNvbnRleHQpIHtcclxuICAgICAgICAgICAgdmFsdWUgPSBnZXRUYWdWYWx1ZUZyb21PYmplY3QodGFyZ2V0LCBwYXJ0cywgZGF0YUNvbnRleHQpO1xyXG4gICAgICAgICAgICAvLyBNYXliZSBpdCdzIGEgbGl0ZXJhbCBkb3Qtc2VwYXJhdGVkIG5hbWUgb2YgdGhlIGtleSBpbiBkYXRhQ29udGV4dD9cclxuICAgICAgICAgICAgaWYgKHZhbHVlID09IG51bGwpIHtcclxuICAgICAgICAgICAgICAgIHZhbHVlID0gZ2V0VGFnVmFsdWVGcm9tT2JqZWN0KHRhcmdldCwgW3tcclxuICAgICAgICAgICAgICAgICAgICAgICAgcHJvcDogdGFnTmFtZVxyXG4gICAgICAgICAgICAgICAgICAgIH1dLCBkYXRhQ29udGV4dCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLy8gc2NvbmQgZGF0YSBjb250ZXh0IGxldmVsIHNvbWV0aW1lcyBleGlzdCAodHJlZSBtYXApXHJcbiAgICAgICAgICAgIGlmICh2YWx1ZSA9PSBudWxsICYmIGRhdGFDb250ZXh0LmRhdGFDb250ZXh0KSB7XHJcbiAgICAgICAgICAgICAgICB2YWx1ZSA9IGdldFRhZ1ZhbHVlRnJvbU9iamVjdCh0YXJnZXQsIHBhcnRzLCBkYXRhQ29udGV4dC5kYXRhQ29udGV4dCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgLy8gQ2hlY2sgY29tcG9uZW50J3MgZGF0YSBpdGVtXHJcbiAgICAgICAgaWYgKHZhbHVlID09IG51bGwgJiYgZGF0YUl0ZW0uY29tcG9uZW50ICYmIGRhdGFJdGVtLmNvbXBvbmVudC5kYXRhSXRlbSAhPT0gZGF0YUl0ZW0pIHtcclxuICAgICAgICAgICAgdmFsdWUgPSBnZXRUYWdWYWx1ZShkYXRhSXRlbS5jb21wb25lbnQsIHRhZ05hbWUsIGZvcm1hdCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLy8gQ2hlY2sgc3ByaXRlJ3MgcHJvcGVydGllc1xyXG4gICAgaWYgKHZhbHVlID09IG51bGwpIHtcclxuICAgICAgICB2YWx1ZSA9IGdldFRhZ1ZhbHVlRnJvbU9iamVjdCh0YXJnZXQsIHBhcnRzLCB0YXJnZXQpO1xyXG4gICAgfVxyXG4gICAgLy8gRmluYWxseSwgY2hlY2sgdGhlIHBhcmVudFxyXG4gICAgaWYgKHZhbHVlID09IG51bGwgJiYgdGFyZ2V0LnBhcmVudCkge1xyXG4gICAgICAgIHZhbHVlID0gZ2V0VGFnVmFsdWUodGFyZ2V0LnBhcmVudCwgdGFnTmFtZSwgZm9ybWF0KTtcclxuICAgIH1cclxuICAgIHJldHVybiB2YWx1ZTtcclxufVxyXG4vKipcclxuICogQGlnbm9yZVxyXG4gKi9cclxuZnVuY3Rpb24gZ2V0Q3VzdG9tRGF0YVZhbHVlKHRhcmdldCwgcHJvcCkge1xyXG4gICAgY29uc3QgY3VzdG9tRGF0YSA9IHRhcmdldC5nZXRQcml2YXRlKFwiY3VzdG9tRGF0YVwiKTtcclxuICAgIGlmICgkdHlwZS5pc09iamVjdChjdXN0b21EYXRhKSkge1xyXG4gICAgICAgIHJldHVybiBjdXN0b21EYXRhW3Byb3BdO1xyXG4gICAgfVxyXG59XHJcbi8qKlxyXG4gKiBAaWdub3JlXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gZ2V0VGFnVmFsdWVGcm9tT2JqZWN0KHRhcmdldCwgcGFydHMsIG9iamVjdCwgZm9ybWF0KSB7XHJcbiAgICBsZXQgY3VycmVudCA9IG9iamVjdDtcclxuICAgIGxldCBmb3JtYXRBcHBsaWVkID0gZmFsc2U7XHJcbiAgICBmb3IgKGxldCBpID0gMCwgbGVuID0gcGFydHMubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcclxuICAgICAgICBsZXQgcGFydCA9IHBhcnRzW2ldO1xyXG4gICAgICAgIGlmIChwYXJ0LnByb3ApIHtcclxuICAgICAgICAgICAgLy8gUmVndWxhciBwcm9wZXJ0eVxyXG4gICAgICAgICAgICBpZiAoY3VycmVudCBpbnN0YW5jZW9mIFNwcml0ZSkge1xyXG4gICAgICAgICAgICAgICAgbGV0IHRtcCA9IGN1cnJlbnQuZ2V0KHBhcnQucHJvcCk7XHJcbiAgICAgICAgICAgICAgICBpZiAodG1wID09IG51bGwpXHJcbiAgICAgICAgICAgICAgICAgICAgdG1wID0gY3VycmVudC5nZXRQcml2YXRlKHBhcnQucHJvcCk7XHJcbiAgICAgICAgICAgICAgICBpZiAodG1wID09IG51bGwpXHJcbiAgICAgICAgICAgICAgICAgICAgdG1wID0gZ2V0Q3VzdG9tRGF0YVZhbHVlKGN1cnJlbnQsIHBhcnQucHJvcCk7XHJcbiAgICAgICAgICAgICAgICBpZiAodG1wID09IG51bGwpXHJcbiAgICAgICAgICAgICAgICAgICAgdG1wID0gY3VycmVudFtwYXJ0LnByb3BdO1xyXG4gICAgICAgICAgICAgICAgY3VycmVudCA9IHRtcDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIGlmIChjdXJyZW50LmdldCkge1xyXG4gICAgICAgICAgICAgICAgbGV0IHRtcCA9IGN1cnJlbnQuZ2V0KHBhcnQucHJvcCk7XHJcbiAgICAgICAgICAgICAgICBpZiAodG1wID09IG51bGwpXHJcbiAgICAgICAgICAgICAgICAgICAgdG1wID0gY3VycmVudFtwYXJ0LnByb3BdO1xyXG4gICAgICAgICAgICAgICAgY3VycmVudCA9IHRtcDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGN1cnJlbnQgPSBjdXJyZW50W3BhcnQucHJvcF07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKGN1cnJlbnQgPT0gbnVsbCkge1xyXG4gICAgICAgICAgICAgICAgLy8gTm90IHNldCwgcmV0dXJuIHVuZGVmaW5lZFxyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAvLyBNZXRob2RcclxuICAgICAgICAgICAgc3dpdGNoIChwYXJ0Lm1ldGhvZCkge1xyXG4gICAgICAgICAgICAgICAgY2FzZSBcImZvcm1hdE51bWJlclwiOlxyXG4gICAgICAgICAgICAgICAgICAgIGxldCBudW1iZXJWYWx1ZSA9ICR0eXBlLnRvTnVtYmVyKGN1cnJlbnQpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChudW1iZXJWYWx1ZSAhPSBudWxsKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnQgPSB0YXJnZXQuZ2V0TnVtYmVyRm9ybWF0dGVyKCkuZm9ybWF0KG51bWJlclZhbHVlLCBmb3JtYXQgfHwgcGFydC5wYXJhbXNbMF0gfHwgdW5kZWZpbmVkKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZm9ybWF0QXBwbGllZCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgY2FzZSBcImZvcm1hdERhdGVcIjpcclxuICAgICAgICAgICAgICAgICAgICBsZXQgZGF0ZVZhbHVlID0gJHR5cGUudG9EYXRlKGN1cnJlbnQpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICghJHR5cGUuaXNEYXRlKGRhdGVWYWx1ZSkgfHwgJHR5cGUuaXNOYU4oZGF0ZVZhbHVlLmdldFRpbWUoKSkpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gV2FzIG5vdCBhYmxlIHRvIGdldCBkYXRlIG91dCBvZiB2YWx1ZSwgcXVpdHRpbmcgYW5kIGxldHRpbmdcclxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gY2FsbGluZyBtZXRob2QgdHJ5IGFub3RoZXIgdmFsdWVcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBpZiAoZGF0ZVZhbHVlICE9IG51bGwpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudCA9IHRhcmdldC5nZXREYXRlRm9ybWF0dGVyKCkuZm9ybWF0KGRhdGVWYWx1ZSwgZm9ybWF0IHx8IHBhcnQucGFyYW1zWzBdIHx8IHVuZGVmaW5lZCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvcm1hdEFwcGxpZWQgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIGNhc2UgXCJmb3JtYXREdXJhdGlvblwiOlxyXG4gICAgICAgICAgICAgICAgICAgIGxldCBkdXJhdGlvblZhbHVlID0gJHR5cGUudG9OdW1iZXIoY3VycmVudCk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGR1cmF0aW9uVmFsdWUgIT0gbnVsbCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50ID0gdGFyZ2V0LmdldER1cmF0aW9uRm9ybWF0dGVyKCkuZm9ybWF0KGR1cmF0aW9uVmFsdWUsIGZvcm1hdCB8fCBwYXJ0LnBhcmFtc1swXSB8fCB1bmRlZmluZWQsIHBhcnQucGFyYW1zWzFdIHx8IHVuZGVmaW5lZCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvcm1hdEFwcGxpZWQgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIGNhc2UgXCJ1cmxFbmNvZGVcIjpcclxuICAgICAgICAgICAgICAgIGNhc2UgXCJlbmNvZGVVUklDb21wb25lbnRcIjpcclxuICAgICAgICAgICAgICAgICAgICBjdXJyZW50ID0gZW5jb2RlVVJJQ29tcG9uZW50KGN1cnJlbnQpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgICAgICBpZiAoY3VycmVudFtwYXJ0Lm1ldGhvZF0pIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudFtwYXJ0Lm1ldGhvZF0uYXBwbHkob2JqZWN0LCBwYXJ0LnBhcmFtcyk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLy8gQXBwbHkgZGVmYXVsdCBmb3JtYXQgaWYgaXQgd2Fzbid0IGFwcGxpZWQgZXhwbGljaXRseVxyXG4gICAgaWYgKCFmb3JtYXRBcHBsaWVkKSB7XHJcbiAgICAgICAgbGV0IGZvcm1hdFBhcnRzID0gW3tcclxuICAgICAgICAgICAgICAgIG1ldGhvZDogXCJcIixcclxuICAgICAgICAgICAgICAgIHBhcmFtczogZm9ybWF0XHJcbiAgICAgICAgICAgIH1dO1xyXG4gICAgICAgIGlmIChmb3JtYXQgPT0gbnVsbCkge1xyXG4gICAgICAgICAgICAvLyBGb3JtYXQgaXMgbm90IHNldFxyXG4gICAgICAgICAgICAvLyBEZXRlcm1pbmUgZnJvbSB0aGUgdHlwZSBvZiB0aGUgdmFsdWVcclxuICAgICAgICAgICAgaWYgKCR0eXBlLmlzTnVtYmVyKGN1cnJlbnQpKSB7XHJcbiAgICAgICAgICAgICAgICBmb3JtYXRQYXJ0c1swXS5tZXRob2QgPSBcImZvcm1hdE51bWJlclwiO1xyXG4gICAgICAgICAgICAgICAgZm9ybWF0UGFydHNbMF0ucGFyYW1zID0gXCJcIjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIGlmICgkdHlwZS5pc0RhdGUoY3VycmVudCkpIHtcclxuICAgICAgICAgICAgICAgIGZvcm1hdFBhcnRzWzBdLm1ldGhvZCA9IFwiZm9ybWF0RGF0ZVwiO1xyXG4gICAgICAgICAgICAgICAgZm9ybWF0UGFydHNbMF0ucGFyYW1zID0gXCJcIjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgLy8gRm9ybWF0IHNldFxyXG4gICAgICAgICAgICAvLyBUcnkgdG8gZGV0ZXJtaW5lIGZvcm1hdHRlciBiYXNlZCBvbiB0aGUgZm9ybWF0XHJcbiAgICAgICAgICAgIGxldCBmb3JtYXR0ZXJUeXBlID0gJHV0aWxzLmdldEZvcm1hdChmb3JtYXQpO1xyXG4gICAgICAgICAgICAvLyBmb3JtYXRcclxuICAgICAgICAgICAgaWYgKGZvcm1hdHRlclR5cGUgPT09IFwibnVtYmVyXCIpIHtcclxuICAgICAgICAgICAgICAgIGZvcm1hdFBhcnRzWzBdLm1ldGhvZCA9IFwiZm9ybWF0TnVtYmVyXCI7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSBpZiAoZm9ybWF0dGVyVHlwZSA9PT0gXCJkYXRlXCIpIHtcclxuICAgICAgICAgICAgICAgIGZvcm1hdFBhcnRzWzBdLm1ldGhvZCA9IFwiZm9ybWF0RGF0ZVwiO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2UgaWYgKGZvcm1hdHRlclR5cGUgPT09IFwiZHVyYXRpb25cIikge1xyXG4gICAgICAgICAgICAgICAgZm9ybWF0UGFydHNbMF0ubWV0aG9kID0gXCJmb3JtYXREdXJhdGlvblwiO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIEFwcGx5IGZvcm1hdFxyXG4gICAgICAgIGlmIChmb3JtYXRQYXJ0c1swXS5tZXRob2QpIHtcclxuICAgICAgICAgICAgY3VycmVudCA9IGdldFRhZ1ZhbHVlRnJvbU9iamVjdCh0YXJnZXQsIGZvcm1hdFBhcnRzLCBjdXJyZW50KTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4gY3VycmVudDtcclxufVxyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1Qb3B1bGF0ZVN0cmluZy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/PopulateString.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/ResizeSensor.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/core/util/ResizeSensor.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ResizeSensor: () => (/* binding */ ResizeSensor)\n/* harmony export */ });\n/* harmony import */ var _Array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Array */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Array.js\");\n/* harmony import */ var _Utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Utils */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Utils.js\");\n/** @ignore */ /** */\r\n\r\n\r\n/**\r\n * @ignore\r\n */\r\nclass Native {\r\n    constructor() {\r\n        Object.defineProperty(this, \"_observer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_targets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        this._observer = new ResizeObserver((entries) => {\r\n            _Array__WEBPACK_IMPORTED_MODULE_0__.each(entries, (entry) => {\r\n                _Array__WEBPACK_IMPORTED_MODULE_0__.each(this._targets, (x) => {\r\n                    if (x.target === entry.target) {\r\n                        x.callback();\r\n                    }\r\n                });\r\n            });\r\n        });\r\n    }\r\n    addTarget(target, callback) {\r\n        this._observer.observe(target, { box: \"border-box\" });\r\n        this._targets.push({ target, callback });\r\n    }\r\n    removeTarget(target) {\r\n        this._observer.unobserve(target);\r\n        _Array__WEBPACK_IMPORTED_MODULE_0__.keepIf(this._targets, (x) => {\r\n            return x.target !== target;\r\n        });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass Raf {\r\n    constructor() {\r\n        Object.defineProperty(this, \"_timer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"_targets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n    addTarget(target, callback) {\r\n        if (this._timer === null) {\r\n            let lastTime = null;\r\n            const loop = () => {\r\n                const currentTime = Date.now();\r\n                if (lastTime === null || currentTime > (lastTime + Raf.delay)) {\r\n                    lastTime = currentTime;\r\n                    _Array__WEBPACK_IMPORTED_MODULE_0__.each(this._targets, (x) => {\r\n                        let newSize = x.target.getBoundingClientRect();\r\n                        if (newSize.width !== x.size.width || newSize.height !== x.size.height) {\r\n                            x.size = newSize;\r\n                            x.callback();\r\n                        }\r\n                    });\r\n                }\r\n                if (this._targets.length === 0) {\r\n                    this._timer = null;\r\n                }\r\n                else {\r\n                    this._timer = requestAnimationFrame(loop);\r\n                }\r\n            };\r\n            this._timer = requestAnimationFrame(loop);\r\n        }\r\n        // We start off with fake bounds so that sensor always kicks in\r\n        let size = { width: 0, height: 0, left: 0, right: 0, top: 0, bottom: 0, x: 0, y: 0 };\r\n        this._targets.push({ target, callback, size });\r\n    }\r\n    removeTarget(target) {\r\n        _Array__WEBPACK_IMPORTED_MODULE_0__.keepIf(this._targets, (x) => {\r\n            return x.target !== target;\r\n        });\r\n        if (this._targets.length === 0) {\r\n            if (this._timer !== null) {\r\n                cancelAnimationFrame(this._timer);\r\n                this._timer = null;\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Raf, \"delay\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: 200\r\n});\r\n/**\r\n * @ignore\r\n */\r\nlet observer = null;\r\n/**\r\n * @ignore\r\n */\r\nfunction makeSensor() {\r\n    if (observer === null) {\r\n        if (typeof ResizeObserver !== \"undefined\") {\r\n            observer = new Native();\r\n        }\r\n        else {\r\n            observer = new Raf();\r\n        }\r\n    }\r\n    return observer;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass ResizeSensor {\r\n    constructor(element, callback) {\r\n        Object.defineProperty(this, \"_sensor\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_element\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_listener\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        this._sensor = makeSensor();\r\n        this._element = element;\r\n        // This is needed because we need to know when the window is zoomed\r\n        this._listener = _Utils__WEBPACK_IMPORTED_MODULE_1__.onZoom(callback);\r\n        this._sensor.addTarget(element, callback);\r\n    }\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            this._sensor.removeTarget(this._element);\r\n            this._listener.dispose();\r\n        }\r\n    }\r\n    get sensor() {\r\n        return this._sensor;\r\n    }\r\n}\r\n//# sourceMappingURL=ResizeSensor.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/ResizeSensor.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/States.js":
/*!************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/core/util/States.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   State: () => (/* binding */ State),\n/* harmony export */   States: () => (/* binding */ States)\n/* harmony export */ });\n/* harmony import */ var _Object__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Object */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Object.js\");\n/* harmony import */ var _Ease__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Ease */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Ease.js\");\n\r\n\r\n/**\r\n * An object representing a collection of setting values to apply as required.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/states/} for more info\r\n */\r\nclass State {\r\n    constructor(entity, settings) {\r\n        Object.defineProperty(this, \"_entity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_settings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_userSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        this._entity = entity;\r\n        this._settings = settings;\r\n        _Object__WEBPACK_IMPORTED_MODULE_0__.each(settings, (key) => {\r\n            this._userSettings[key] = true;\r\n        });\r\n    }\r\n    get(key, fallback) {\r\n        const value = this._settings[key];\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setRaw(key, value) {\r\n        this._settings[key] = value;\r\n    }\r\n    /**\r\n     * Sets a setting `value` for the specified `key` to be set when the state\r\n     * is applied.\r\n     *\r\n     * @param   key       Setting key\r\n     * @param   value     Setting value\r\n     * @return            Setting value\r\n     */\r\n    set(key, value) {\r\n        this._userSettings[key] = true;\r\n        this.setRaw(key, value);\r\n    }\r\n    /**\r\n     * Removes a setting value for the specified `key`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     */\r\n    remove(key) {\r\n        delete this._userSettings[key];\r\n        delete this._settings[key];\r\n    }\r\n    /**\r\n     * Sets multiple settings at once.\r\n     *\r\n     * `settings` must be an object with key: value pairs.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param settings Settings\r\n     */\r\n    setAll(settings) {\r\n        _Object__WEBPACK_IMPORTED_MODULE_0__.keys(settings).forEach((key) => {\r\n            this.set(key, settings[key]);\r\n        });\r\n    }\r\n    _eachSetting(f) {\r\n        _Object__WEBPACK_IMPORTED_MODULE_0__.each(this._settings, f);\r\n    }\r\n    /**\r\n     * Applies the state to the target element.\r\n     *\r\n     * All setting values are set immediately.\r\n     */\r\n    apply() {\r\n        const seen = {};\r\n        seen[\"stateAnimationEasing\"] = true;\r\n        seen[\"stateAnimationDuration\"] = true;\r\n        const defaultState = this._entity.states.lookup(\"default\");\r\n        this._eachSetting((key, value) => {\r\n            if (!seen[key]) {\r\n                seen[key] = true;\r\n                // save values to default state\r\n                if (this !== defaultState) {\r\n                    if (!(key in defaultState._settings)) {\r\n                        defaultState._settings[key] = this._entity.get(key);\r\n                    }\r\n                }\r\n                this._entity.set(key, value);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Applies the state to the target element.\r\n     *\r\n     * Returns an object representing all [[Animation]] objects created for\r\n     * each setting key transition.\r\n     *\r\n     * @return           Animations\r\n     */\r\n    applyAnimate(duration) {\r\n        if (duration == null) {\r\n            duration = this._settings.stateAnimationDuration;\r\n        }\r\n        if (duration == null) {\r\n            duration = this.get(\"stateAnimationDuration\", this._entity.get(\"stateAnimationDuration\", 0));\r\n        }\r\n        let easing = this._settings.stateAnimationEasing;\r\n        if (easing == null) {\r\n            easing = this.get(\"stateAnimationEasing\", this._entity.get(\"stateAnimationEasing\", _Ease__WEBPACK_IMPORTED_MODULE_1__.cubic));\r\n        }\r\n        const defaultState = this._entity.states.lookup(\"default\");\r\n        const seen = {};\r\n        seen[\"stateAnimationEasing\"] = true;\r\n        seen[\"stateAnimationDuration\"] = true;\r\n        const animations = {};\r\n        this._eachSetting((key, value) => {\r\n            if (!seen[key]) {\r\n                seen[key] = true;\r\n                // save values to default state\r\n                if (this != defaultState) {\r\n                    if (!(key in defaultState._settings)) {\r\n                        defaultState._settings[key] = this._entity.get(key);\r\n                    }\r\n                }\r\n                const animation = this._entity.animate({\r\n                    key: key,\r\n                    to: value,\r\n                    duration: duration,\r\n                    easing: easing\r\n                });\r\n                if (animation) {\r\n                    animations[key] = animation;\r\n                }\r\n            }\r\n        });\r\n        return animations;\r\n    }\r\n}\r\n/**\r\n * Collection of [[State]] objects for an element.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/states/} for more info\r\n */\r\nclass States {\r\n    constructor(entity) {\r\n        Object.defineProperty(this, \"_states\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_entity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._entity = entity;\r\n    }\r\n    /**\r\n     * Checks if a state by `name` exists. Returns it there is one.\r\n     *\r\n     * @param  name  State name\r\n     * @return       State\r\n     */\r\n    lookup(name) {\r\n        return this._states[name];\r\n    }\r\n    /**\r\n     * Sets supplied `settings` on a state by the `name`.\r\n     *\r\n     * If such state does not yet exists, it is created.\r\n     *\r\n     * @param   name      State name\r\n     * @param   settings  Settings\r\n     * @return            New State\r\n     */\r\n    create(name, settings) {\r\n        const state = this._states[name];\r\n        if (state) {\r\n            state.setAll(settings);\r\n            return state;\r\n        }\r\n        else {\r\n            const state = new State(this._entity, settings);\r\n            this._states[name] = state;\r\n            return state;\r\n        }\r\n    }\r\n    /**\r\n     * Removes the state called `name`.\r\n     *\r\n     * @param   name      State name\r\n     */\r\n    remove(name) {\r\n        delete this._states[name];\r\n    }\r\n    /**\r\n     * Applies a named state to the target element.\r\n     *\r\n     * @param  newState  State name\r\n     */\r\n    apply(newState) {\r\n        const state = this._states[newState];\r\n        if (state) {\r\n            state.apply();\r\n        }\r\n        this._entity._applyState(newState);\r\n    }\r\n    /**\r\n     * Applies a named state to the element.\r\n     *\r\n     * Returns an object representing all [[Animation]] objects created for\r\n     * each setting key transition.\r\n     *\r\n     * @param   newState  State name\r\n     * @return            Animations\r\n     */\r\n    applyAnimate(newState, duration) {\r\n        let animations;\r\n        const state = this._states[newState];\r\n        if (state) {\r\n            animations = state.applyAnimate(duration);\r\n        }\r\n        this._entity._applyStateAnimated(newState, duration);\r\n        return animations;\r\n    }\r\n}\r\n//# sourceMappingURL=States.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/States.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Template.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/core/util/Template.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Template: () => (/* binding */ Template),\n/* harmony export */   TemplateAdapters: () => (/* binding */ TemplateAdapters),\n/* harmony export */   TemplateState: () => (/* binding */ TemplateState),\n/* harmony export */   TemplateStates: () => (/* binding */ TemplateStates)\n/* harmony export */ });\n/* harmony import */ var _EventDispatcher__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./EventDispatcher */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/EventDispatcher.js\");\n/* harmony import */ var _Disposer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Disposer */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Disposer.js\");\n/* harmony import */ var _Array__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Array */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Array.js\");\n/* harmony import */ var _Object__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Object */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Object.js\");\n/* harmony import */ var _Type__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Type */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Type.js\");\n\r\n\r\n\r\n\r\n\r\nfunction disposeSettings(settings) {\r\n    _Object__WEBPACK_IMPORTED_MODULE_0__.each(settings, (_key, value) => {\r\n        if (_Type__WEBPACK_IMPORTED_MODULE_1__.isObject(value) && typeof value.dispose === \"function\") {\r\n            value.enableDispose = true;\r\n            value.dispose();\r\n        }\r\n    });\r\n}\r\nclass TemplateState {\r\n    constructor(name, template, settings) {\r\n        Object.defineProperty(this, \"_settings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_name\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_template\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._name = name;\r\n        this._template = template;\r\n        this._settings = settings;\r\n    }\r\n    _dispose() {\r\n        disposeSettings(this._settings);\r\n    }\r\n    get(key, fallback) {\r\n        const value = this._settings[key];\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    set(key, value) {\r\n        this._settings[key] = value;\r\n        // TODO maybe only do this if the value changed ?\r\n        this._template._stateChanged(this._name);\r\n    }\r\n    remove(key) {\r\n        delete this._settings[key];\r\n        // TODO maybe only do this if the value changed ?\r\n        this._template._stateChanged(this._name);\r\n    }\r\n    setAll(settings) {\r\n        _Object__WEBPACK_IMPORTED_MODULE_0__.keys(settings).forEach((key) => {\r\n            this._settings[key] = settings[key];\r\n        });\r\n        this._template._stateChanged(this._name);\r\n    }\r\n    _apply(other, seen) {\r\n        _Object__WEBPACK_IMPORTED_MODULE_0__.each(this._settings, (key, value) => {\r\n            if (!seen[key] && !other._userSettings[key]) {\r\n                seen[key] = true;\r\n                other.setRaw(key, value);\r\n            }\r\n        });\r\n    }\r\n}\r\nclass TemplateStates {\r\n    constructor(template) {\r\n        Object.defineProperty(this, \"_template\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_states\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        this._template = template;\r\n    }\r\n    _dispose() {\r\n        _Object__WEBPACK_IMPORTED_MODULE_0__.each(this._states, (_key, state) => {\r\n            state._dispose();\r\n        });\r\n    }\r\n    lookup(name) {\r\n        return this._states[name];\r\n    }\r\n    create(name, settings) {\r\n        const state = this._states[name];\r\n        if (state) {\r\n            state.setAll(settings);\r\n            return state;\r\n        }\r\n        else {\r\n            const state = new TemplateState(name, this._template, settings);\r\n            this._states[name] = state;\r\n            this._template._stateChanged(name);\r\n            return state;\r\n        }\r\n    }\r\n    remove(name) {\r\n        delete this._states[name];\r\n        this._template._stateChanged(name);\r\n    }\r\n    _apply(entity, state) {\r\n        _Object__WEBPACK_IMPORTED_MODULE_0__.each(this._states, (key, value) => {\r\n            let seen = state.states[key];\r\n            if (seen == null) {\r\n                seen = state.states[key] = {};\r\n            }\r\n            const other = entity.states.create(key, {});\r\n            value._apply(other, seen);\r\n        });\r\n    }\r\n}\r\nclass TemplateAdapters {\r\n    constructor() {\r\n        Object.defineProperty(this, \"_callbacks\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n    }\r\n    add(key, callback) {\r\n        let callbacks = this._callbacks[key];\r\n        if (callbacks === undefined) {\r\n            callbacks = this._callbacks[key] = [];\r\n        }\r\n        callbacks.push(callback);\r\n        return new _Disposer__WEBPACK_IMPORTED_MODULE_2__.Disposer(() => {\r\n            _Array__WEBPACK_IMPORTED_MODULE_3__.removeFirst(callbacks, callback);\r\n            if (callbacks.length === 0) {\r\n                delete this._callbacks[key];\r\n            }\r\n        });\r\n    }\r\n    remove(key) {\r\n        const callbacks = this._callbacks[key];\r\n        if (callbacks !== undefined) {\r\n            delete this._callbacks[key];\r\n        }\r\n    }\r\n    _apply(entity) {\r\n        const disposers = [];\r\n        _Object__WEBPACK_IMPORTED_MODULE_0__.each(this._callbacks, (key, callbacks) => {\r\n            _Array__WEBPACK_IMPORTED_MODULE_3__.each(callbacks, (callback) => {\r\n                disposers.push(entity.adapters.add(key, callback));\r\n            });\r\n        });\r\n        return new _Disposer__WEBPACK_IMPORTED_MODULE_2__.MultiDisposer(disposers);\r\n    }\r\n}\r\n// TODO maybe extend from Properties ?\r\nclass Template {\r\n    constructor(settings, isReal) {\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_settings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_privateSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        // TODO code duplication with Properties\r\n        Object.defineProperty(this, \"_settingEvents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_privateSettingEvents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_entities\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"states\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new TemplateStates(this)\r\n        });\r\n        Object.defineProperty(this, \"adapters\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new TemplateAdapters()\r\n        });\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new _EventDispatcher__WEBPACK_IMPORTED_MODULE_4__.EventDispatcher()\r\n        });\r\n        Object.defineProperty(this, \"setup\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        if (!isReal) {\r\n            throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\r\n        }\r\n        this._settings = settings;\r\n    }\r\n    /**\r\n     * Use this method to create an instance of this class.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n     * @param   root      Root element\r\n     * @param   settings  Settings\r\n     * @param   template  Template\r\n     * @return            Instantiated object\r\n     */\r\n    static new(settings) {\r\n        return new Template(settings, true);\r\n    }\r\n    _dispose() {\r\n        disposeSettings(this._settings);\r\n        disposeSettings(this._privateSettings);\r\n    }\r\n    /**\r\n     * Returns `true` if this element is disposed.\r\n     *\r\n     * @return Disposed\r\n     */\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    /**\r\n     * Disposes this object.\r\n     */\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            this._dispose();\r\n        }\r\n    }\r\n    _checkDisposed() {\r\n        if (this._disposed) {\r\n            throw new Error(\"Template is disposed\");\r\n        }\r\n    }\r\n    /**\r\n     * Array of all entities using this template.\r\n     */\r\n    get entities() {\r\n        return this._entities;\r\n    }\r\n    get(key, fallback) {\r\n        this._checkDisposed();\r\n        const value = this._settings[key];\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    setRaw(key, value) {\r\n        this._checkDisposed();\r\n        this._settings[key] = value;\r\n    }\r\n    set(key, value) {\r\n        this._checkDisposed();\r\n        if (this._settings[key] !== value) {\r\n            this.setRaw(key, value);\r\n            this._entities.forEach((entity) => {\r\n                entity._setTemplateProperty(this, key, value);\r\n            });\r\n        }\r\n    }\r\n    remove(key) {\r\n        this._checkDisposed();\r\n        if (key in this._settings) {\r\n            delete this._settings[key];\r\n            this._entities.forEach((entity) => {\r\n                entity._removeTemplateProperty(key);\r\n            });\r\n        }\r\n    }\r\n    removeAll() {\r\n        this._checkDisposed();\r\n        _Object__WEBPACK_IMPORTED_MODULE_0__.each(this._settings, (key, _value) => {\r\n            this.remove(key);\r\n        });\r\n    }\r\n    getPrivate(key, fallback) {\r\n        this._checkDisposed();\r\n        const value = this._privateSettings[key];\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    setPrivateRaw(key, value) {\r\n        this._checkDisposed();\r\n        this._privateSettings[key] = value;\r\n        return value;\r\n    }\r\n    setPrivate(key, value) {\r\n        this._checkDisposed();\r\n        if (this._privateSettings[key] !== value) {\r\n            this.setPrivateRaw(key, value);\r\n            this._entities.forEach((entity) => {\r\n                entity._setTemplatePrivateProperty(this, key, value);\r\n            });\r\n        }\r\n        return value;\r\n    }\r\n    removePrivate(key) {\r\n        this._checkDisposed();\r\n        if (key in this._privateSettings) {\r\n            delete this._privateSettings[key];\r\n            this._entities.forEach((entity) => {\r\n                entity._removeTemplatePrivateProperty(key);\r\n            });\r\n        }\r\n    }\r\n    setAll(value) {\r\n        this._checkDisposed();\r\n        _Object__WEBPACK_IMPORTED_MODULE_0__.each(value, (key, value) => {\r\n            this.set(key, value);\r\n        });\r\n    }\r\n    // TODO code duplication with Properties\r\n    on(key, callback) {\r\n        this._checkDisposed();\r\n        let events = this._settingEvents[key];\r\n        if (events === undefined) {\r\n            events = this._settingEvents[key] = [];\r\n        }\r\n        events.push(callback);\r\n        return new _Disposer__WEBPACK_IMPORTED_MODULE_2__.Disposer(() => {\r\n            _Array__WEBPACK_IMPORTED_MODULE_3__.removeFirst(events, callback);\r\n            if (events.length === 0) {\r\n                delete this._settingEvents[key];\r\n            }\r\n        });\r\n    }\r\n    // TODO code duplication with Properties\r\n    onPrivate(key, callback) {\r\n        this._checkDisposed();\r\n        let events = this._privateSettingEvents[key];\r\n        if (events === undefined) {\r\n            events = this._privateSettingEvents[key] = [];\r\n        }\r\n        events.push(callback);\r\n        return new _Disposer__WEBPACK_IMPORTED_MODULE_2__.Disposer(() => {\r\n            _Array__WEBPACK_IMPORTED_MODULE_3__.removeFirst(events, callback);\r\n            if (events.length === 0) {\r\n                delete this._privateSettingEvents[key];\r\n            }\r\n        });\r\n    }\r\n    _apply(entity, state) {\r\n        this._checkDisposed();\r\n        const disposers = [];\r\n        _Object__WEBPACK_IMPORTED_MODULE_0__.each(this._settingEvents, (key, events) => {\r\n            _Array__WEBPACK_IMPORTED_MODULE_3__.each(events, (event) => {\r\n                disposers.push(entity.on(key, event));\r\n            });\r\n        });\r\n        _Object__WEBPACK_IMPORTED_MODULE_0__.each(this._privateSettingEvents, (key, events) => {\r\n            _Array__WEBPACK_IMPORTED_MODULE_3__.each(events, (event) => {\r\n                disposers.push(entity.onPrivate(key, event));\r\n            });\r\n        });\r\n        this.states._apply(entity, state);\r\n        disposers.push(this.adapters._apply(entity));\r\n        disposers.push(entity.events.copyFrom(this.events));\r\n        return new _Disposer__WEBPACK_IMPORTED_MODULE_2__.MultiDisposer(disposers);\r\n    }\r\n    _setObjectTemplate(entity) {\r\n        this._checkDisposed();\r\n        this._entities.push(entity);\r\n    }\r\n    _removeObjectTemplate(entity) {\r\n        //this._checkDisposed();\r\n        _Array__WEBPACK_IMPORTED_MODULE_3__.remove(this._entities, entity);\r\n    }\r\n    _stateChanged(name) {\r\n        this._checkDisposed();\r\n        this._entities.forEach((entity) => {\r\n            entity._applyStateByKey(name);\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=Template.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Template.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/TextFormatter.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/core/util/TextFormatter.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TextFormatter: () => (/* binding */ TextFormatter)\n/* harmony export */ });\n/* harmony import */ var _Color__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Color */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Color.js\");\n/* harmony import */ var _Type__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Type */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Type.js\");\n\r\n\r\nclass TextFormatter {\r\n    /**\r\n     * Replaces brackets with temporary placeholders.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Input text\r\n     * @return Escaped text\r\n     */\r\n    static escape(text) {\r\n        return text.\r\n            replace(/\\[\\[/g, this.prefix + \"1\").\r\n            replace(/([^\\/\\]]{1})\\]\\]/g, \"$1\" + this.prefix + \"2\").\r\n            replace(/\\]\\]/g, this.prefix + \"2\").\r\n            replace(/\\{\\{/g, this.prefix + \"3\").\r\n            replace(/\\}\\}/g, this.prefix + \"4\").\r\n            replace(/\\'\\'/g, this.prefix + \"5\");\r\n    }\r\n    /**\r\n     * Replaces placeholders back to brackets.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Escaped text\r\n     * @return Unescaped text\r\n     */\r\n    static unescape(text) {\r\n        return text.\r\n            replace(new RegExp(this.prefix + \"1\", \"g\"), \"[[\").\r\n            replace(new RegExp(this.prefix + \"2\", \"g\"), \"]]\").\r\n            replace(new RegExp(this.prefix + \"3\", \"g\"), \"{{\").\r\n            replace(new RegExp(this.prefix + \"4\", \"g\"), \"}}\").\r\n            replace(new RegExp(this.prefix + \"5\", \"g\"), \"''\");\r\n    }\r\n    /**\r\n     * Cleans up the text text for leftover double square brackets.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Input text\r\n     * @return Cleaned up text\r\n     */\r\n    static cleanUp(text) {\r\n        return text.\r\n            replace(/\\[\\[/g, \"[\").\r\n            replace(/\\]\\]/g, \"]\").\r\n            replace(/\\{\\{/g, \"{\").\r\n            replace(/\\}\\}/g, \"}\").\r\n            replace(/\\'\\'/g, \"'\");\r\n    }\r\n    /**\r\n     * Splits string into chunks. (style blocks, quoted blocks, regular blocks)\r\n     *\r\n     * If the second parameter `quotedBlocks` is set to `true` this method will\r\n     * also single out text blocks enclosed within single quotes that no\r\n     * formatting should be applied to, and they should be displayed as is.\r\n     *\r\n     * Default for the above is `false`, so that you can use single quote in text\r\n     * without escaping it.\r\n     *\r\n     * If enabled, single quotes can be escaped by doubling it - adding two\r\n     * single quotes, which will be replaced by a one single quote in the final\r\n     * output.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text          Text to chunk\r\n     * @param quotedBlocks  Use quoted blocks\r\n     * @param noFormatting  Formatting blocks will be treated as regular text\r\n     * @return Array of string chunks\r\n     */\r\n    static chunk(text, quotedBlocks = false, noFormatting = false) {\r\n        // Init result\r\n        let res = [];\r\n        // Replace double (escaped) square spaces and quotes with temporary codes\r\n        text = this.escape(text);\r\n        // Deal with style blocks\r\n        let chunks = quotedBlocks ? text.split(\"'\") : [text];\r\n        for (let i = 0; i < chunks.length; i++) {\r\n            let chunk = chunks[i];\r\n            // Empty?\r\n            if (chunk === \"\") {\r\n                continue;\r\n            }\r\n            if ((i % 2) === 0) {\r\n                // Text outside quotes\r\n                // Parse for style blocks which are \"text\" chunks, the rest chunks are\r\n                // \"value\"\r\n                chunk = chunk.replace(/\\]\\[/g, \"]\" + _Type__WEBPACK_IMPORTED_MODULE_0__.PLACEHOLDER + \"[\");\r\n                chunk = chunk.replace(/\\[\\]/g, \"[ ]\");\r\n                let chunks2 = chunk.split(/[\\[\\]]+/);\r\n                for (let i2 = 0; i2 < chunks2.length; i2++) {\r\n                    let chunk2 = this.cleanUp(this.unescape(chunks2[i2]));\r\n                    // Placeholder?\r\n                    if (chunk2 === _Type__WEBPACK_IMPORTED_MODULE_0__.PLACEHOLDER) {\r\n                        continue;\r\n                    }\r\n                    // Empty?\r\n                    if (chunk2 === \"\") {\r\n                        continue;\r\n                    }\r\n                    // Block or value\r\n                    if ((i2 % 2) === 0) {\r\n                        res.push({\r\n                            \"type\": \"value\",\r\n                            \"text\": chunk2\r\n                        });\r\n                    }\r\n                    else {\r\n                        res.push({\r\n                            \"type\": noFormatting ? \"value\" : \"format\",\r\n                            \"text\": \"[\" + chunk2 + \"]\"\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // A text within doublequotes\r\n                // All chunks are \"text\"\r\n                let chunks2 = chunk.split(/[\\[\\]]+/);\r\n                for (let i2 = 0; i2 < chunks2.length; i2++) {\r\n                    let chunk2 = this.cleanUp(this.unescape(chunks2[i2]));\r\n                    // Empty?\r\n                    if (chunk2 === \"\") {\r\n                        continue;\r\n                    }\r\n                    // Block or text\r\n                    if ((i2 % 2) === 0) {\r\n                        res.push({\r\n                            \"type\": \"text\",\r\n                            \"text\": chunk2\r\n                        });\r\n                    }\r\n                    else if (this.isImage(chunk2)) {\r\n                        res.push({\r\n                            \"type\": \"image\",\r\n                            \"text\": \"[\" + chunk2 + \"]\"\r\n                        });\r\n                    }\r\n                    else {\r\n                        res.push({\r\n                            \"type\": \"format\",\r\n                            \"text\": \"[\" + chunk2 + \"]\"\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    /**\r\n     * Checks if supplied format contains image information and should be\r\n     * formatted as such.\r\n     * I.e.: `[img: myImage.png]`\r\n     *\r\n     * @ignore\r\n     * @param  text  Format\r\n     * @return true if it is an image\r\n     */\r\n    static isImage(text) {\r\n        return text.match(/img[ ]?:/) ? true : false;\r\n    }\r\n    static getTextStyle(style) {\r\n        // let textStyle: string[] = [];\r\n        // let textFill: string | undefined;\r\n        let format = {};\r\n        if (style == \"\" || style == \"[ ]\") {\r\n            return {};\r\n        }\r\n        // Pre-process quoted text\r\n        const q = style.match(/('[^']*')|(\"[^\"]*\")/gi);\r\n        if (q) {\r\n            for (let i = 0; i < q.length; i++) {\r\n                style = style.replace(q[i], q[i].replace(/['\"]*/g, \"\").replace(/[ ]+/g, \"+\"));\r\n            }\r\n        }\r\n        // Get style parts\r\n        let b = style.match(/([\\w\\-]*:[\\s]?[^;\\s\\]]*)|(\\#[\\w]{1,6})|([\\w\\-]+)|(\\/)/gi);\r\n        // Empty?\r\n        if (!b) {\r\n            return {};\r\n        }\r\n        // Check each part\r\n        for (let i = 0; i < b.length; i++) {\r\n            if (b[i].match(/^(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)$/i)) {\r\n                format.fontWeight = b[i];\r\n            }\r\n            else if (b[i].match(/^(underline|line-through)$/i)) {\r\n                format.textDecoration = b[i];\r\n            }\r\n            else if (b[i] == \"/\") {\r\n                // Just closing tag\r\n                // Do nothing\r\n            }\r\n            else if (!b[i].match(/:/)) {\r\n                // Color\r\n                format.fill = _Color__WEBPACK_IMPORTED_MODULE_1__.Color.fromString(b[i]);\r\n            }\r\n            else {\r\n                const p = b[i].replace(\"+\", \" \").split(/:[ ]*/);\r\n                format[p[0]] = p[1];\r\n                //textStyle.push(b[i].replace(/^[a-zA-Z]:[ ]*/, \"\"));\r\n                //b[i] = b[i].replace(/\\+/g, \" \");\r\n            }\r\n        }\r\n        return format;\r\n    }\r\n}\r\nObject.defineProperty(TextFormatter, \"prefix\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"__amcharts__\"\r\n});\r\n//# sourceMappingURL=TextFormatter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/TextFormatter.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Time.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/core/util/Time.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   add: () => (/* binding */ add),\n/* harmony export */   checkChange: () => (/* binding */ checkChange),\n/* harmony export */   chooseInterval: () => (/* binding */ chooseInterval),\n/* harmony export */   copy: () => (/* binding */ copy),\n/* harmony export */   getDateIntervalDuration: () => (/* binding */ getDateIntervalDuration),\n/* harmony export */   getDuration: () => (/* binding */ getDuration),\n/* harmony export */   getIntervalDuration: () => (/* binding */ getIntervalDuration),\n/* harmony export */   getNextUnit: () => (/* binding */ getNextUnit),\n/* harmony export */   getTime: () => (/* binding */ getTime),\n/* harmony export */   getUnitValue: () => (/* binding */ getUnitValue),\n/* harmony export */   now: () => (/* binding */ now),\n/* harmony export */   roun: () => (/* binding */ roun),\n/* harmony export */   round: () => (/* binding */ round),\n/* harmony export */   sleep: () => (/* binding */ sleep),\n/* harmony export */   timeUnitDurations: () => (/* binding */ timeUnitDurations)\n/* harmony export */ });\n/* harmony import */ var _Type__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Type */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Type.js\");\n/* harmony import */ var _Utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Utils */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Utils.js\");\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n/**\r\n * Returns a `Promise` which can be used to execute code after number of\r\n * milliseconds.\r\n *\r\n * @param   ms  Sleep duration in ms\r\n * @return      Promise\r\n */\r\nfunction sleep(ms) {\r\n    return new Promise((resolve, _reject) => {\r\n        setTimeout(resolve, ms);\r\n    });\r\n}\r\n/**\r\n * Maps time period names to their numeric representations in milliseconds.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nlet timeUnitDurations = {\r\n    millisecond: 1,\r\n    second: 1000,\r\n    minute: 60000,\r\n    hour: 3600000,\r\n    day: 86400000,\r\n    week: 604800000,\r\n    month: 365.242 / 12 * 86400000,\r\n    year: 31536000000\r\n};\r\n/**\r\n * Returns the next time unit that goes after source `unit`.\r\n *\r\n * E.g. \"hour\" is the next unit after \"minute\", etc.\r\n *\r\n * @ignore Exclude from docs\r\n * @param unit  Source time unit\r\n * @return Next time unit\r\n */\r\nfunction getNextUnit(unit) {\r\n    switch (unit) {\r\n        case \"year\":\r\n            return;\r\n        case \"month\":\r\n            return \"year\";\r\n        case \"week\":\r\n            return \"month\";\r\n        case \"day\":\r\n            return \"month\"; // not a mistake\r\n        case \"hour\":\r\n            return \"day\";\r\n        case \"minute\":\r\n            return \"hour\";\r\n        case \"second\":\r\n            return \"minute\";\r\n        case \"millisecond\":\r\n            return \"second\";\r\n    }\r\n}\r\n/**\r\n * Returns number of milliseconds in the `count` of time `unit`.\r\n *\r\n * Available units: \"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"week\",\r\n * \"month\", and \"year\".\r\n *\r\n * @param unit   Time unit\r\n * @param count  Number of units\r\n * @return Milliseconds\r\n */\r\nfunction getDuration(unit, count) {\r\n    if (count == null) {\r\n        count = 1;\r\n    }\r\n    return timeUnitDurations[unit] * count;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction getIntervalDuration(interval) {\r\n    if (interval) {\r\n        return timeUnitDurations[interval.timeUnit] * interval.count;\r\n    }\r\n    return 0;\r\n}\r\nfunction getDateIntervalDuration(interval, date, firstDateOfWeek, utc, timezone) {\r\n    const unit = interval.timeUnit;\r\n    const count = interval.count;\r\n    if (unit == \"hour\" || unit == \"minute\" || unit == \"second\" || unit == \"millisecond\") {\r\n        return timeUnitDurations[interval.timeUnit] * interval.count;\r\n    }\r\n    else {\r\n        const firstTime = round(new Date(date.getTime()), unit, count, firstDateOfWeek, utc, undefined, timezone).getTime();\r\n        let lastTime = firstTime + count * getDuration(unit) * 1.05;\r\n        lastTime = round(new Date(lastTime), unit, 1, firstDateOfWeek, utc, undefined, timezone).getTime();\r\n        return lastTime - firstTime;\r\n    }\r\n}\r\n/**\r\n * Returns current `Date` object.\r\n *\r\n * @return Current date\r\n */\r\nfunction now() {\r\n    return new Date();\r\n}\r\n/**\r\n * Returns current timestamp.\r\n *\r\n * @return Current timestamp\r\n */\r\nfunction getTime() {\r\n    return now().getTime();\r\n}\r\n/**\r\n * Returns a copy of the `Date` object.\r\n *\r\n * @param date  Source date\r\n * @return Copy\r\n */\r\nfunction copy(date) {\r\n    return new Date(date.getTime()); // todo: check if this is ok. new Date(date) used to strip milliseconds on FF in v3\r\n}\r\n/**\r\n * Checks if the `unit` part of two `Date` objects do not match. Two dates\r\n * represent a \"range\" of time, rather the same time date.\r\n *\r\n * @param timeOne  timestamp\r\n * @param timeTwo  timestamp\r\n * @param unit     Time unit to check\r\n * @return Range?\r\n */\r\nfunction checkChange(timeOne, timeTwo, unit, utc, timezone) {\r\n    // quick\r\n    if ((timeTwo - timeOne) > getDuration(unit, 1.2)) {\r\n        return true;\r\n    }\r\n    let dateOne = new Date(timeOne);\r\n    let dateTwo = new Date(timeTwo);\r\n    if (timezone) {\r\n        dateOne = timezone.convertLocal(dateOne);\r\n        dateTwo = timezone.convertLocal(dateTwo);\r\n    }\r\n    let timeZoneOffset1 = 0;\r\n    let timeZoneOffset2 = 0;\r\n    if (!utc && unit != \"millisecond\") {\r\n        timeZoneOffset1 = dateOne.getTimezoneOffset();\r\n        dateOne.setUTCMinutes(dateOne.getUTCMinutes() - timeZoneOffset1);\r\n        timeZoneOffset2 = dateTwo.getTimezoneOffset();\r\n        dateTwo.setUTCMinutes(dateTwo.getUTCMinutes() - timeZoneOffset2);\r\n    }\r\n    let changed = false;\r\n    switch (unit) {\r\n        case \"year\":\r\n            if (dateOne.getUTCFullYear() != dateTwo.getUTCFullYear()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"month\":\r\n            if (dateOne.getUTCFullYear() != dateTwo.getUTCFullYear()) {\r\n                changed = true;\r\n            }\r\n            else if (dateOne.getUTCMonth() != dateTwo.getUTCMonth()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"day\":\r\n            if (dateOne.getUTCMonth() != dateTwo.getUTCMonth()) {\r\n                changed = true;\r\n            }\r\n            else if (dateOne.getUTCDate() != dateTwo.getUTCDate()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"hour\":\r\n            if (dateOne.getUTCHours() != dateTwo.getUTCHours()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"minute\":\r\n            if (dateOne.getUTCMinutes() != dateTwo.getUTCMinutes()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"second\":\r\n            if (dateOne.getUTCSeconds() != dateTwo.getUTCSeconds()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"millisecond\":\r\n            if (dateOne.getTime() != dateTwo.getTime()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n    }\r\n    if (changed) {\r\n        return changed;\r\n    }\r\n    let nextUnit = getNextUnit(unit);\r\n    if (nextUnit) {\r\n        return checkChange(timeOne, timeTwo, nextUnit, utc, timezone);\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Adds `count` of time `unit` to the source date. Returns a modified `Date` object.\r\n *\r\n * @param date   Source date\r\n * @param unit   Time unit\r\n * @param count  Number of units to add\r\n * @return Modified date\r\n */\r\nfunction add(date, unit, count, utc, timezone) {\r\n    let timeZoneOffset = 0;\r\n    if (!utc && unit != \"millisecond\") {\r\n        timeZoneOffset = date.getTimezoneOffset();\r\n        if (timezone) {\r\n            timeZoneOffset -= timezone.offsetUTC(date);\r\n        }\r\n        date.setUTCMinutes(date.getUTCMinutes() - timeZoneOffset);\r\n    }\r\n    switch (unit) {\r\n        case \"day\":\r\n            let day = date.getUTCDate();\r\n            date.setUTCDate(day + count);\r\n            break;\r\n        case \"second\":\r\n            let seconds = date.getUTCSeconds();\r\n            date.setUTCSeconds(seconds + count);\r\n            break;\r\n        case \"millisecond\":\r\n            let milliseconds = date.getUTCMilliseconds();\r\n            date.setUTCMilliseconds(milliseconds + count);\r\n            break;\r\n        case \"hour\":\r\n            let hours = date.getUTCHours();\r\n            date.setUTCHours(hours + count);\r\n            break;\r\n        case \"minute\":\r\n            let minutes = date.getUTCMinutes();\r\n            date.setUTCMinutes(minutes + count);\r\n            break;\r\n        case \"year\":\r\n            let year = date.getUTCFullYear();\r\n            date.setUTCFullYear(year + count);\r\n            break;\r\n        case \"month\":\r\n            const endDays = date.getUTCDate();\r\n            const startDays = new Date(date.getUTCFullYear(), date.getUTCMonth(), 0).getUTCDate();\r\n            let month = date.getUTCMonth();\r\n            if (endDays > startDays) {\r\n                date.setUTCMonth(month + count, startDays);\r\n            }\r\n            else {\r\n                date.setUTCMonth(month + count);\r\n            }\r\n            break;\r\n        case \"week\":\r\n            let wday = date.getUTCDate();\r\n            date.setUTCDate(wday + count * 7);\r\n            break;\r\n    }\r\n    if (!utc && unit != \"millisecond\") {\r\n        date.setUTCMinutes(date.getUTCMinutes() + timeZoneOffset);\r\n        if (unit == \"day\" || unit == \"week\" || unit == \"month\" || unit == \"year\") {\r\n            let newTimeZoneOffset = date.getTimezoneOffset();\r\n            if (timezone) {\r\n                newTimeZoneOffset += timezone.offsetUTC(date);\r\n            }\r\n            if (newTimeZoneOffset != timeZoneOffset) {\r\n                let diff = newTimeZoneOffset - timeZoneOffset;\r\n                date.setUTCMinutes(date.getUTCMinutes() + diff);\r\n                // solves issues if new time falls back to old time zone\r\n                if (date.getTimezoneOffset() != newTimeZoneOffset) {\r\n                    date.setUTCMinutes(date.getUTCMinutes() - diff);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return date;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction roun(time, unit, count, root, firstTime) {\r\n    let firstDate;\r\n    if (firstTime != null) {\r\n        firstDate = new Date(firstTime);\r\n    }\r\n    return round(new Date(time), unit, count, root.locale.firstDayOfWeek, root.utc, firstDate, root.timezone).getTime();\r\n}\r\n/**\r\n * \"Rounds\" the date to specific time unit.\r\n *\r\n * @param date             Source date\r\n * @param unit             Time unit\r\n * @param count            Number of units to round to\r\n * @param firstDateOfWeek  First day of week\r\n * @param utc              Use UTC timezone\r\n * @param firstDate        First date to round to\r\n * @param roundMinutes     Minutes to round to (some timezones use non-whole hour)\r\n * @param timezone         Use specific named timezone when rounding\r\n * @return New date\r\n */\r\nfunction round(date, unit, count, firstDateOfWeek, utc, firstDate, timezone) {\r\n    if (!timezone || utc) {\r\n        let timeZoneOffset = 0;\r\n        if (!utc && unit != \"millisecond\") {\r\n            timeZoneOffset = date.getTimezoneOffset();\r\n            date.setUTCMinutes(date.getUTCMinutes() - timeZoneOffset);\r\n        }\r\n        switch (unit) {\r\n            case \"day\":\r\n                let day = date.getUTCDate();\r\n                if (count > 1) {\r\n                    //\tday = Math.floor(day / count) * count;\r\n                    if (firstDate) {\r\n                        firstDate = round(firstDate, \"day\", 1);\r\n                        let difference = date.getTime() - firstDate.getTime();\r\n                        let unitCount = Math.floor(difference / getDuration(\"day\") / count);\r\n                        let duration = getDuration(\"day\", unitCount * count);\r\n                        date.setTime(firstDate.getTime() + duration - timeZoneOffset * getDuration(\"minute\"));\r\n                    }\r\n                }\r\n                else {\r\n                    date.setUTCDate(day);\r\n                }\r\n                date.setUTCHours(0, 0, 0, 0);\r\n                break;\r\n            case \"second\":\r\n                let seconds = date.getUTCSeconds();\r\n                if (count > 1) {\r\n                    seconds = Math.floor(seconds / count) * count;\r\n                }\r\n                date.setUTCSeconds(seconds, 0);\r\n                break;\r\n            case \"millisecond\":\r\n                if (count == 1) {\r\n                    return date; // much better for perf!\r\n                }\r\n                let milliseconds = date.getUTCMilliseconds();\r\n                milliseconds = Math.floor(milliseconds / count) * count;\r\n                date.setUTCMilliseconds(milliseconds);\r\n                break;\r\n            case \"hour\":\r\n                let hours = date.getUTCHours();\r\n                if (count > 1) {\r\n                    hours = Math.floor(hours / count) * count;\r\n                }\r\n                date.setUTCHours(hours, 0, 0, 0);\r\n                break;\r\n            case \"minute\":\r\n                let minutes = date.getUTCMinutes();\r\n                if (count > 1) {\r\n                    minutes = Math.floor(minutes / count) * count;\r\n                }\r\n                date.setUTCMinutes(minutes, 0, 0);\r\n                break;\r\n            case \"month\":\r\n                let month = date.getUTCMonth();\r\n                if (count > 1) {\r\n                    month = Math.floor(month / count) * count;\r\n                }\r\n                date.setUTCMonth(month, 1);\r\n                date.setUTCHours(0, 0, 0, 0);\r\n                break;\r\n            case \"year\":\r\n                let year = date.getUTCFullYear();\r\n                if (count > 1) {\r\n                    year = Math.floor(year / count) * count;\r\n                }\r\n                date.setUTCFullYear(year, 0, 1);\r\n                date.setUTCHours(0, 0, 0, 0);\r\n                break;\r\n            case \"week\":\r\n                if (count > 1) {\r\n                    if (firstDate) {\r\n                        firstDate = round(firstDate, \"week\", 1);\r\n                        let difference = date.getTime() - firstDate.getTime();\r\n                        let unitCount = Math.floor(difference / getDuration(\"week\") / count);\r\n                        let duration = getDuration(\"week\", unitCount * count);\r\n                        date.setTime(firstDate.getTime() + duration - timeZoneOffset * getDuration(\"minute\"));\r\n                    }\r\n                }\r\n                let wday = date.getUTCDate();\r\n                let weekDay = date.getUTCDay();\r\n                if (!_Type__WEBPACK_IMPORTED_MODULE_0__.isNumber(firstDateOfWeek)) {\r\n                    firstDateOfWeek = 1;\r\n                }\r\n                if (weekDay >= firstDateOfWeek) {\r\n                    wday = wday - weekDay + firstDateOfWeek;\r\n                }\r\n                else {\r\n                    wday = wday - (7 + weekDay) + firstDateOfWeek;\r\n                }\r\n                date.setUTCDate(wday);\r\n                date.setUTCHours(0, 0, 0, 0);\r\n                break;\r\n        }\r\n        if (!utc && unit != \"millisecond\") {\r\n            date.setUTCMinutes(date.getUTCMinutes() + timeZoneOffset);\r\n            if (unit == \"day\" || unit == \"week\" || unit == \"month\" || unit == \"year\") {\r\n                let newTimeZoneOffset = date.getTimezoneOffset();\r\n                if (newTimeZoneOffset != timeZoneOffset) {\r\n                    let diff = newTimeZoneOffset - timeZoneOffset;\r\n                    date.setUTCMinutes(date.getUTCMinutes() + diff);\r\n                }\r\n            }\r\n        }\r\n        return date;\r\n    }\r\n    else {\r\n        if (isNaN(date.getTime())) {\r\n            return date;\r\n        }\r\n        let initialTime = date.getTime();\r\n        let tzoffset = timezone.offsetUTC(date);\r\n        let timeZoneOffset = date.getTimezoneOffset();\r\n        let parsedDate = timezone.parseDate(date);\r\n        let year = parsedDate.year;\r\n        let month = parsedDate.month;\r\n        let day = parsedDate.day;\r\n        let hour = parsedDate.hour;\r\n        let minute = parsedDate.minute;\r\n        let second = parsedDate.second;\r\n        let millisecond = parsedDate.millisecond;\r\n        let weekday = parsedDate.weekday;\r\n        let offsetDif = tzoffset - timeZoneOffset;\r\n        switch (unit) {\r\n            case \"day\":\r\n                if (count > 1 && firstDate) {\r\n                    firstDate = round(firstDate, \"day\", 1, firstDateOfWeek, utc, undefined, timezone);\r\n                    let difference = date.getTime() - firstDate.getTime();\r\n                    let unitCount = Math.floor(difference / getDuration(\"day\") / count);\r\n                    let duration = getDuration(\"day\", unitCount * count);\r\n                    date.setTime(firstDate.getTime() + duration);\r\n                    parsedDate = timezone.parseDate(date);\r\n                    year = parsedDate.year;\r\n                    month = parsedDate.month;\r\n                    day = parsedDate.day;\r\n                }\r\n                hour = 0;\r\n                minute = offsetDif;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"second\":\r\n                minute += offsetDif;\r\n                if (count > 1) {\r\n                    second = Math.floor(second / count) * count;\r\n                }\r\n                millisecond = 0;\r\n                break;\r\n            case \"millisecond\":\r\n                minute += offsetDif;\r\n                if (count > 1) {\r\n                    millisecond = Math.floor(millisecond / count) * count;\r\n                }\r\n                break;\r\n            case \"hour\":\r\n                if (count > 1) {\r\n                    hour = Math.floor(hour / count) * count;\r\n                }\r\n                minute = offsetDif;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"minute\":\r\n                if (count > 1) {\r\n                    minute = Math.floor(minute / count) * count;\r\n                }\r\n                minute += offsetDif;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"month\":\r\n                if (count > 1) {\r\n                    month = Math.floor(month / count) * count;\r\n                }\r\n                day = 1;\r\n                hour = 0;\r\n                minute = offsetDif;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"year\":\r\n                if (count > 1) {\r\n                    year = Math.floor(year / count) * count;\r\n                }\r\n                month = 0;\r\n                day = 1;\r\n                hour = 0;\r\n                minute = offsetDif;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"week\":\r\n                if (!_Type__WEBPACK_IMPORTED_MODULE_0__.isNumber(firstDateOfWeek)) {\r\n                    firstDateOfWeek = 1;\r\n                }\r\n                if (weekday >= firstDateOfWeek) {\r\n                    day = day - weekday + firstDateOfWeek;\r\n                }\r\n                else {\r\n                    day = day - (7 + weekday) + firstDateOfWeek;\r\n                }\r\n                hour = 0;\r\n                minute = offsetDif;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n        }\r\n        date = new Date(year, month, day, hour, minute, second, millisecond);\r\n        // fix to solve #101989\r\n        const newTime = date.getTime();\r\n        let hDuration = 3600000;\r\n        if (unit == \"hour\") {\r\n            hDuration = 3600000 * count;\r\n        }\r\n        if (newTime + hDuration <= initialTime) {\r\n            if (unit == \"hour\" || unit == \"minute\" || unit == \"second\" || unit == \"millisecond\") {\r\n                date = new Date(newTime + hDuration);\r\n            }\r\n        }\r\n        // end of fix\r\n        let newTimeZoneOffset = date.getTimezoneOffset();\r\n        let newTzoffset = timezone.offsetUTC(date);\r\n        let newDiff = newTzoffset - newTimeZoneOffset;\r\n        if (newDiff != offsetDif) {\r\n            date.setTime(date.getTime() + (newDiff - offsetDif) * 60000);\r\n        }\r\n        return date;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction chooseInterval(index, duration, gridCount, intervals) {\r\n    let gridInterval = intervals[index];\r\n    let intervalDuration = getIntervalDuration(gridInterval);\r\n    let lastIndex = intervals.length - 1;\r\n    if (index >= lastIndex) {\r\n        return Object.assign({}, intervals[lastIndex]);\r\n    }\r\n    let count = Math.ceil(duration / intervalDuration);\r\n    if (duration < intervalDuration && index > 0) {\r\n        return Object.assign({}, intervals[index - 1]);\r\n    }\r\n    if (count <= gridCount) {\r\n        return Object.assign({}, intervals[index]);\r\n    }\r\n    else {\r\n        if (index + 1 < intervals.length) {\r\n            return chooseInterval(index + 1, duration, gridCount, intervals);\r\n        }\r\n        else {\r\n            return Object.assign({}, intervals[index]);\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction getUnitValue(date, unit) {\r\n    switch (unit) {\r\n        case \"day\":\r\n            return date.getDate();\r\n        case \"second\":\r\n            return date.getSeconds();\r\n        case \"millisecond\":\r\n            return date.getMilliseconds();\r\n        case \"hour\":\r\n            return date.getHours();\r\n        case \"minute\":\r\n            return date.getMinutes();\r\n        case \"month\":\r\n            return date.getMonth();\r\n        case \"year\":\r\n            return date.getFullYear();\r\n        case \"week\":\r\n            return _Utils__WEBPACK_IMPORTED_MODULE_1__.getWeek(date);\r\n    }\r\n}\r\n//# sourceMappingURL=Time.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Time.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Timezone.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/core/util/Timezone.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Timezone: () => (/* binding */ Timezone)\n/* harmony export */ });\nfunction parseDate(timezone, date) {\r\n    let year = 0;\r\n    let month = 0;\r\n    let day = 1;\r\n    let hour = 0;\r\n    let minute = 0;\r\n    let second = 0;\r\n    let millisecond = 0;\r\n    let weekday = 0;\r\n    timezone.formatToParts(date).forEach((x) => {\r\n        switch (x.type) {\r\n            case \"year\":\r\n                year = +x.value;\r\n                break;\r\n            case \"month\":\r\n                month = (+x.value) - 1;\r\n                break;\r\n            case \"day\":\r\n                day = +x.value;\r\n                break;\r\n            case \"hour\":\r\n                hour = +x.value;\r\n                break;\r\n            case \"minute\":\r\n                minute = +x.value;\r\n                break;\r\n            case \"second\":\r\n                second = +x.value;\r\n                break;\r\n            case \"fractionalSecond\":\r\n                millisecond = +x.value;\r\n                break;\r\n            case \"weekday\":\r\n                switch (x.value) {\r\n                    case \"Sun\":\r\n                        weekday = 0;\r\n                        break;\r\n                    case \"Mon\":\r\n                        weekday = 1;\r\n                        break;\r\n                    case \"Tue\":\r\n                        weekday = 2;\r\n                        break;\r\n                    case \"Wed\":\r\n                        weekday = 3;\r\n                        break;\r\n                    case \"Thu\":\r\n                        weekday = 4;\r\n                        break;\r\n                    case \"Fri\":\r\n                        weekday = 5;\r\n                        break;\r\n                    case \"Sat\":\r\n                        weekday = 6;\r\n                        break;\r\n                }\r\n        }\r\n    });\r\n    if (hour === 24) {\r\n        hour = 0;\r\n    }\r\n    return { year, month, day, hour, minute, second, millisecond, weekday };\r\n}\r\nfunction toUTCDate(timezone, date) {\r\n    const { year, month, day, hour, minute, second, millisecond } = parseDate(timezone, date);\r\n    return Date.UTC(year, month, day, hour, minute, second, millisecond);\r\n}\r\nclass Timezone {\r\n    constructor(timezone, isReal) {\r\n        Object.defineProperty(this, \"_utc\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_dtf\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"name\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        if (!isReal) {\r\n            throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\r\n        }\r\n        this.name = timezone;\r\n        this._utc = new Intl.DateTimeFormat(\"en-US\", {\r\n            hour12: false,\r\n            timeZone: \"UTC\",\r\n            year: \"numeric\",\r\n            month: \"2-digit\",\r\n            day: \"2-digit\",\r\n            hour: \"2-digit\",\r\n            minute: \"2-digit\",\r\n            second: \"2-digit\",\r\n            weekday: \"short\",\r\n            fractionalSecondDigits: 3,\r\n        });\r\n        this._dtf = new Intl.DateTimeFormat(\"en-US\", {\r\n            hour12: false,\r\n            timeZone: timezone,\r\n            year: \"numeric\",\r\n            month: \"2-digit\",\r\n            day: \"2-digit\",\r\n            hour: \"2-digit\",\r\n            minute: \"2-digit\",\r\n            second: \"2-digit\",\r\n            weekday: \"short\",\r\n            fractionalSecondDigits: 3,\r\n        });\r\n    }\r\n    /**\r\n     * Use this method to create an instance of this class.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n     * @param   timezone  IANA timezone\r\n     * @return            Instantiated object\r\n     */\r\n    static new(timezone) {\r\n        return (new this(timezone, true));\r\n    }\r\n    convertLocal(date) {\r\n        const offset = this.offsetUTC(date);\r\n        const userOffset = date.getTimezoneOffset();\r\n        const output = new Date(date);\r\n        output.setUTCMinutes(output.getUTCMinutes() - (offset - userOffset));\r\n        const newUserOffset = output.getTimezoneOffset();\r\n        if (userOffset != newUserOffset) {\r\n            output.setUTCMinutes(output.getUTCMinutes() + newUserOffset - userOffset);\r\n        }\r\n        return output;\r\n    }\r\n    offsetUTC(date) {\r\n        const utc = toUTCDate(this._utc, date);\r\n        const dtf = toUTCDate(this._dtf, date);\r\n        return (utc - dtf) / 60000;\r\n    }\r\n    parseDate(date) {\r\n        return parseDate(this._dtf, date);\r\n    }\r\n}\r\n//# sourceMappingURL=Timezone.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Timezone.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Type.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/core/util/Type.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PLACEHOLDER: () => (/* binding */ PLACEHOLDER),\n/* harmony export */   PLACEHOLDER2: () => (/* binding */ PLACEHOLDER2),\n/* harmony export */   assert: () => (/* binding */ assert),\n/* harmony export */   getType: () => (/* binding */ getType),\n/* harmony export */   isArray: () => (/* binding */ isArray),\n/* harmony export */   isDate: () => (/* binding */ isDate),\n/* harmony export */   isNaN: () => (/* binding */ isNaN),\n/* harmony export */   isNumber: () => (/* binding */ isNumber),\n/* harmony export */   isObject: () => (/* binding */ isObject),\n/* harmony export */   isString: () => (/* binding */ isString),\n/* harmony export */   numberToString: () => (/* binding */ numberToString),\n/* harmony export */   repeat: () => (/* binding */ repeat),\n/* harmony export */   toDate: () => (/* binding */ toDate),\n/* harmony export */   toNumber: () => (/* binding */ toNumber)\n/* harmony export */ });\n/**\r\n * A collection of utility functions for various type checks and conversion\r\n * @hidden\r\n */\r\n/**\r\n * ============================================================================\r\n * TYPE CHECK\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Returns `true` if value is not a number (NaN).\r\n *\r\n * @param value Input value\r\n * @return Is NaN?\r\n */\r\nfunction isNaN(value) {\r\n    return Number(value) !== value;\r\n}\r\n/**\r\n * Returns a type of the value.\r\n *\r\n * @param value  Input value\r\n * @return Type of the value\r\n * @ignore\r\n */\r\nfunction getType(value) {\r\n    return ({}).toString.call(value);\r\n}\r\n/**\r\n * Asserts that the condition is true.\r\n *\r\n * @param condition  Condition to check\r\n * @param message    Message to display in the error\r\n * @ignore\r\n */\r\nfunction assert(condition, message = \"Assertion failed\") {\r\n    if (!condition) {\r\n        throw new Error(message);\r\n    }\r\n}\r\n/**\r\n * ============================================================================\r\n * QUICK CONVERSION\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Converts any value into a `number`.\r\n *\r\n * @param value  Source value\r\n * @return Number representation of value\r\n */\r\nfunction toNumber(value) {\r\n    if (value != null && !isNumber(value)) {\r\n        let converted = Number(value);\r\n        if (isNaN(converted) && isString(value) && value != \"\" && value.match(/[0-9]+/)) {\r\n            return toNumber(value.replace(/[^0-9.\\-]+/g, ''));\r\n        }\r\n        return converted;\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * Converts anything to Date object.\r\n *\r\n * @param value  A value of any type\r\n * @return Date object representing a value\r\n */\r\nfunction toDate(value) {\r\n    if (isDate(value)) {\r\n        // TODO maybe don't create a new Date ?\r\n        return new Date(value);\r\n    }\r\n    else if (isNumber(value)) {\r\n        return new Date(value);\r\n    }\r\n    else {\r\n        // Try converting to number (assuming timestamp)\r\n        let num = Number(value);\r\n        if (!isNumber(num)) {\r\n            return new Date(value);\r\n        }\r\n        else {\r\n            return new Date(num);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Converts numeric value into string. Deals with large or small numbers that\r\n * would otherwise use exponents.\r\n *\r\n * @param value  Numeric value\r\n * @return Numeric value as string\r\n */\r\nfunction numberToString(value) {\r\n    // TODO handle Infinity and -Infinity\r\n    if (isNaN(value)) {\r\n        return \"NaN\";\r\n    }\r\n    if (value === Infinity) {\r\n        return \"Infinity\";\r\n    }\r\n    if (value === -Infinity) {\r\n        return \"-Infinity\";\r\n    }\r\n    // Negative 0\r\n    if ((value === 0) && (1 / value === -Infinity)) {\r\n        return \"-0\";\r\n    }\r\n    // Preserve negative and deal with absoute values\r\n    let negative = value < 0;\r\n    value = Math.abs(value);\r\n    // TODO test this\r\n    let parsed = /^([0-9]+)(?:\\.([0-9]+))?(?:e[\\+\\-]([0-9]+))?$/.exec(\"\" + value);\r\n    let digits = parsed[1];\r\n    let decimals = parsed[2] || \"\";\r\n    let res;\r\n    // Leave the nummber as it is if it does not use exponents\r\n    if (parsed[3] === undefined) {\r\n        res = (decimals === \"\" ? digits : digits + \".\" + decimals);\r\n    }\r\n    else {\r\n        let exponent = +parsed[3];\r\n        // Deal with decimals\r\n        if (value < 1) {\r\n            let zeros = exponent - 1;\r\n            res = \"0.\" + repeat(\"0\", zeros) + digits + decimals;\r\n            // Deal with integers\r\n        }\r\n        else {\r\n            let zeros = exponent - decimals.length;\r\n            if (zeros === 0) {\r\n                res = digits + decimals;\r\n            }\r\n            else if (zeros < 0) {\r\n                res = digits + decimals.slice(0, zeros) + \".\" + decimals.slice(zeros);\r\n            }\r\n            else {\r\n                res = digits + decimals + repeat(\"0\", zeros);\r\n            }\r\n        }\r\n    }\r\n    return negative ? \"-\" + res : res;\r\n}\r\n/**\r\n * Repeats a `string` number of times as set in `amount`.\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Make this faster\r\n * @param string  Source string\r\n * @param amount  Number of times to repeat string\r\n * @return New string\r\n */\r\nfunction repeat(string, amount) {\r\n    return new Array(amount + 1).join(string);\r\n}\r\n/**\r\n * ============================================================================\r\n * TYPE CHECK\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Checks if parameter is `Date`.\r\n *\r\n * @param value  Input value\r\n * @return Is Date?\r\n */\r\nfunction isDate(value) {\r\n    return getType(value) === \"[object Date]\";\r\n}\r\n/**\r\n * Checks if parameter is `string`.\r\n *\r\n * @param value  Input value\r\n * @return Is string?\r\n */\r\nfunction isString(value) {\r\n    return typeof value === \"string\";\r\n}\r\n/**\r\n * Checks if parameter is `number`.\r\n *\r\n * @param value  Input value\r\n * @return Is number?\r\n */\r\nfunction isNumber(value) {\r\n    return typeof value === \"number\" && Number(value) == value;\r\n}\r\n/**\r\n * Checks if parameter is `object`.\r\n *\r\n * @param value  Input value\r\n * @return Is object?\r\n */\r\nfunction isObject(value) {\r\n    return typeof value === \"object\" && value !== null;\r\n}\r\n/**\r\n * Checks if parameter is `Array`.\r\n *\r\n * @param value  Input value\r\n * @return Is Array?\r\n */\r\nfunction isArray(value) {\r\n    return Array.isArray(value);\r\n}\r\n/**\r\n * ============================================================================\r\n * STATIC CONSTANTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * @ignore Exclude from docs\r\n */\r\nconst PLACEHOLDER = \"__§§§__\";\r\n/**\r\n * @ignore Exclude from docs\r\n */\r\nconst PLACEHOLDER2 = \"__§§§§__\";\r\n//# sourceMappingURL=Type.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Type.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Utils.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/core/util/Utils.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StyleRule: () => (/* binding */ StyleRule),\n/* harmony export */   StyleSheet: () => (/* binding */ StyleSheet),\n/* harmony export */   addClass: () => (/* binding */ addClass),\n/* harmony export */   addEventListener: () => (/* binding */ addEventListener),\n/* harmony export */   addSpacing: () => (/* binding */ addSpacing),\n/* harmony export */   alternativeColor: () => (/* binding */ alternativeColor),\n/* harmony export */   blur: () => (/* binding */ blur),\n/* harmony export */   brighten: () => (/* binding */ brighten),\n/* harmony export */   capitalizeFirst: () => (/* binding */ capitalizeFirst),\n/* harmony export */   cleanFormat: () => (/* binding */ cleanFormat),\n/* harmony export */   contains: () => (/* binding */ contains),\n/* harmony export */   decimalPlaces: () => (/* binding */ decimalPlaces),\n/* harmony export */   escapeForRgex: () => (/* binding */ escapeForRgex),\n/* harmony export */   focus: () => (/* binding */ focus),\n/* harmony export */   get12Hours: () => (/* binding */ get12Hours),\n/* harmony export */   getBrightnessStep: () => (/* binding */ getBrightnessStep),\n/* harmony export */   getDayFromWeek: () => (/* binding */ getDayFromWeek),\n/* harmony export */   getEventKey: () => (/* binding */ getEventKey),\n/* harmony export */   getEventTarget: () => (/* binding */ getEventTarget),\n/* harmony export */   getFormat: () => (/* binding */ getFormat),\n/* harmony export */   getLightnessStep: () => (/* binding */ getLightnessStep),\n/* harmony export */   getMonthWeek: () => (/* binding */ getMonthWeek),\n/* harmony export */   getPointerId: () => (/* binding */ getPointerId),\n/* harmony export */   getRendererEvent: () => (/* binding */ getRendererEvent),\n/* harmony export */   getSafeResolution: () => (/* binding */ getSafeResolution),\n/* harmony export */   getShadowRoot: () => (/* binding */ getShadowRoot),\n/* harmony export */   getStyle: () => (/* binding */ getStyle),\n/* harmony export */   getTimeZone: () => (/* binding */ getTimeZone),\n/* harmony export */   getTimezoneOffset: () => (/* binding */ getTimezoneOffset),\n/* harmony export */   getWeek: () => (/* binding */ getWeek),\n/* harmony export */   getWeekYear: () => (/* binding */ getWeekYear),\n/* harmony export */   getYearDay: () => (/* binding */ getYearDay),\n/* harmony export */   hslToHsv: () => (/* binding */ hslToHsv),\n/* harmony export */   hslToRgb: () => (/* binding */ hslToRgb),\n/* harmony export */   hsvToHsl: () => (/* binding */ hsvToHsl),\n/* harmony export */   iOS: () => (/* binding */ iOS),\n/* harmony export */   isLight: () => (/* binding */ isLight),\n/* harmony export */   isLocalEvent: () => (/* binding */ isLocalEvent),\n/* harmony export */   isTouchEvent: () => (/* binding */ isTouchEvent),\n/* harmony export */   lighten: () => (/* binding */ lighten),\n/* harmony export */   mergeTags: () => (/* binding */ mergeTags),\n/* harmony export */   onZoom: () => (/* binding */ onZoom),\n/* harmony export */   padString: () => (/* binding */ padString),\n/* harmony export */   plainText: () => (/* binding */ plainText),\n/* harmony export */   ready: () => (/* binding */ ready),\n/* harmony export */   relativeToValue: () => (/* binding */ relativeToValue),\n/* harmony export */   removeClass: () => (/* binding */ removeClass),\n/* harmony export */   removeElement: () => (/* binding */ removeElement),\n/* harmony export */   rgbToHsl: () => (/* binding */ rgbToHsl),\n/* harmony export */   sameBounds: () => (/* binding */ sameBounds),\n/* harmony export */   saturate: () => (/* binding */ saturate),\n/* harmony export */   setInteractive: () => (/* binding */ setInteractive),\n/* harmony export */   setStyle: () => (/* binding */ setStyle),\n/* harmony export */   splitString: () => (/* binding */ splitString),\n/* harmony export */   stripTags: () => (/* binding */ stripTags),\n/* harmony export */   supports: () => (/* binding */ supports),\n/* harmony export */   trim: () => (/* binding */ trim),\n/* harmony export */   trimLeft: () => (/* binding */ trimLeft),\n/* harmony export */   trimRight: () => (/* binding */ trimRight),\n/* harmony export */   truncateTextWithEllipsis: () => (/* binding */ truncateTextWithEllipsis)\n/* harmony export */ });\n/* harmony import */ var _Type__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Type */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Type.js\");\n/* harmony import */ var _Array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Array */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Array.js\");\n/* harmony import */ var _Object__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Object */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Object.js\");\n/* harmony import */ var _Disposer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Disposer */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Disposer.js\");\n\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DOM FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Execute a function when DOM is ready.\r\n *\r\n * @since 5.0.2\r\n * @param  f  Callback\r\n */\r\nfunction ready(f) {\r\n    if (document.readyState !== \"loading\") {\r\n        f();\r\n    }\r\n    else {\r\n        const listener = () => {\r\n            if (document.readyState !== \"loading\") {\r\n                document.removeEventListener(\"readystatechange\", listener);\r\n                f();\r\n            }\r\n        };\r\n        document.addEventListener(\"readystatechange\", listener);\r\n    }\r\n}\r\n/**\r\n * Removes a DOM element.\r\n * @param  el  Target element\r\n */\r\nfunction removeElement(el) {\r\n    if (el.parentNode) {\r\n        el.parentNode.removeChild(el);\r\n    }\r\n}\r\n/**\r\n * Function that adds a disposable event listener directly to a DOM element.\r\n *\r\n * @ignore Exclude from docs\r\n * @param dom       A DOM element to add event to\r\n * @param type      Event type\r\n * @param listener  Event listener\r\n * @returns Disposable event\r\n */\r\nfunction addEventListener(dom, type, listener, options) {\r\n    //@todo proper type check for options: EventListenerOptions | boolean (TS for some reason gives error on passive parameter)\r\n    dom.addEventListener(type, listener, options || false);\r\n    return new _Disposer__WEBPACK_IMPORTED_MODULE_0__.Disposer(() => {\r\n        dom.removeEventListener(type, listener, options || false);\r\n    });\r\n}\r\n/**\r\n * Function that adds an event listener which is triggered when the browser's zoom changes.\r\n *\r\n * @param listener  Event listener\r\n * @returns Disposable event\r\n */\r\nfunction onZoom(listener) {\r\n    // TODO use matchMedia instead ?\r\n    return addEventListener(window, \"resize\", (_ev) => {\r\n        listener();\r\n    });\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction supports(cap) {\r\n    switch (cap) {\r\n        case \"touchevents\":\r\n            //return \"ontouchstart\" in document.documentElement;\r\n            return window.hasOwnProperty(\"TouchEvent\");\r\n        case \"pointerevents\":\r\n            return window.hasOwnProperty(\"PointerEvent\");\r\n        case \"mouseevents\":\r\n            return window.hasOwnProperty(\"MouseEvent\");\r\n        case \"wheelevents\":\r\n            return window.hasOwnProperty(\"WheelEvent\");\r\n        case \"keyboardevents\":\r\n            return window.hasOwnProperty(\"KeyboardEvent\");\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction getPointerId(event) {\r\n    let id = event.pointerId || 0;\r\n    return id;\r\n}\r\n/**\r\n * Removes focus from any element by shifting focus to body.\r\n *\r\n * @ignore\r\n */\r\nfunction blur() {\r\n    if (document.activeElement && document.activeElement != document.body) {\r\n        if (document.activeElement.blur) {\r\n            document.activeElement.blur();\r\n        }\r\n        else {\r\n            let input = document.createElement(\"button\");\r\n            input.style.position = \"fixed\";\r\n            input.style.top = \"0px\";\r\n            input.style.left = \"-10000px\";\r\n            document.body.appendChild(input);\r\n            input.focus();\r\n            input.blur();\r\n            document.body.removeChild(input);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Focuses element.\r\n *\r\n * @ignore\r\n */\r\nfunction focus(el) {\r\n    if (el) {\r\n        el.focus();\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction getRendererEvent(key) {\r\n    if (supports(\"pointerevents\")) {\r\n        return key;\r\n    }\r\n    else if (supports(\"touchevents\")) {\r\n        switch (key) {\r\n            case \"pointerover\": return \"touchstart\";\r\n            case \"pointerout\": return \"touchend\";\r\n            case \"pointerleave\": return \"touchend\";\r\n            case \"pointerdown\": return \"touchstart\";\r\n            case \"pointermove\": return \"touchmove\";\r\n            case \"pointerup\": return \"touchend\";\r\n            case \"click\": return \"click\";\r\n            case \"dblclick\": return \"dblclick\";\r\n        }\r\n    }\r\n    else if (supports(\"mouseevents\")) {\r\n        switch (key) {\r\n            case \"pointerover\": return \"mouseover\";\r\n            case \"pointerout\": return \"mouseout\";\r\n            case \"pointerleave\": return \"mouseleave\";\r\n            case \"pointerdown\": return \"mousedown\";\r\n            case \"pointermove\": return \"mousemove\";\r\n            case \"pointerup\": return \"mouseup\";\r\n            case \"click\": return \"click\";\r\n            case \"dblclick\": return \"dblclick\";\r\n        }\r\n    }\r\n    return key;\r\n}\r\n/**\r\n * Determines if pointer event originated from a touch pointer or mouse.\r\n *\r\n * @param ev  Original event\r\n * @return Touch pointer?\r\n */\r\nfunction isTouchEvent(ev) {\r\n    if (typeof Touch !== \"undefined\" && ev instanceof Touch) {\r\n        return true;\r\n    }\r\n    else if (typeof PointerEvent !== \"undefined\" && ev instanceof PointerEvent && ev.pointerType != null) {\r\n        switch (ev.pointerType) {\r\n            case \"touch\":\r\n            case \"pen\":\r\n            case 2:\r\n                return true;\r\n            case \"mouse\":\r\n            case 4:\r\n                return false;\r\n            default:\r\n                return !(ev instanceof MouseEvent);\r\n        }\r\n    }\r\n    else if (ev.type != null) {\r\n        if (ev.type.match(/^mouse/)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Sets style property on DOM element.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nfunction setStyle(dom, property, value) {\r\n    dom.style[property] = value;\r\n}\r\nfunction getStyle(dom, property) {\r\n    return dom.style[property];\r\n}\r\n/**\r\n * Gets the target of the event, works for shadow DOM too.\r\n */\r\nfunction getEventTarget(event) {\r\n    if (event.composedPath) {\r\n        const path = event.composedPath();\r\n        if (path.length === 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return path[0];\r\n        }\r\n    }\r\n    else {\r\n        return event.target;\r\n    }\r\n}\r\n/**\r\n * Checks of element `a` contains element `b`.\r\n *\r\n * @param a  Aleged ascendant\r\n * @param b  Aleged descendant\r\n * @return Contains?\r\n */\r\nfunction contains(a, b) {\r\n    let cursor = b;\r\n    while (true) {\r\n        if (a === cursor) {\r\n            return true;\r\n        }\r\n        else if (cursor.parentNode === null) {\r\n            // TODO better ShadowRoot detection\r\n            if (cursor.host == null) {\r\n                return false;\r\n            }\r\n            else {\r\n                cursor = cursor.host;\r\n            }\r\n        }\r\n        else {\r\n            cursor = cursor.parentNode;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns `true` if pointer event originated on an element within Root.\r\n *\r\n * @since 5.2.8\r\n * @param  event   Event\r\n * @param  target  Target element\r\n */\r\nfunction isLocalEvent(event, target) {\r\n    return event.target && contains(target.root.dom, event.target);\r\n}\r\n/**\r\n * Disables or enables interactivity of a DOM element.\r\n *\r\n * @param  target       Target element\r\n * @param  interactive  Interactive?\r\n */\r\nfunction setInteractive(target, interactive) {\r\n    if (interactive) {\r\n        target.style.pointerEvents = \"auto\";\r\n    }\r\n    else {\r\n        target.style.pointerEvents = \"none\";\r\n    }\r\n}\r\nfunction getEventKey(event) {\r\n    if (event.key !== undefined) {\r\n        return event.key;\r\n    }\r\n    switch (event.keyCode) {\r\n        case 9: return \"Tab\";\r\n        case 13: return \"Enter\";\r\n        case 16: return \"Shift\";\r\n        case 17: return \"Control\";\r\n        case 27: return \"Escape\";\r\n        case 32: return \" \";\r\n        case 37: return \"ArrowLeft\";\r\n        case 38: return \"ArrowUp\";\r\n        case 39: return \"ArrowRight\";\r\n        case 40: return \"ArrowDown\";\r\n        case 46: return \"Delete\";\r\n    }\r\n    return \"\" + event.keyCode;\r\n}\r\n/**\r\n * Returns the shadow root of the element or null\r\n *\r\n * @param a  Node\r\n * @return Root\r\n */\r\nfunction getShadowRoot(a) {\r\n    let cursor = a;\r\n    while (true) {\r\n        if (cursor.parentNode === null) {\r\n            // TODO better ShadowRoot detection\r\n            if (cursor.host != null) {\r\n                return cursor;\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            cursor = cursor.parentNode;\r\n        }\r\n    }\r\n}\r\n/**\r\n * [rootStylesheet description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nlet rootStylesheet;\r\n/**\r\n * @ignore Exclude from docs\r\n */\r\nfunction createStylesheet(element, text, nonce = \"\") {\r\n    // TODO use createElementNS ?\r\n    const e = document.createElement(\"style\");\r\n    e.type = \"text/css\";\r\n    if (nonce != \"\") {\r\n        e.setAttribute(\"nonce\", nonce);\r\n    }\r\n    e.textContent = text;\r\n    if (element === null) {\r\n        document.head.appendChild(e);\r\n    }\r\n    else {\r\n        element.appendChild(e);\r\n    }\r\n    return e;\r\n}\r\n/**\r\n * [getStylesheet description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @return [description]\r\n */\r\nfunction getStylesheet(element, nonce = \"\") {\r\n    if (element === null) {\r\n        if (rootStylesheet == null) {\r\n            // TODO use createElementNS ?\r\n            const e = document.createElement(\"style\");\r\n            e.type = \"text/css\";\r\n            if (nonce != \"\") {\r\n                e.setAttribute(\"nonce\", nonce);\r\n            }\r\n            document.head.appendChild(e);\r\n            rootStylesheet = e.sheet;\r\n        }\r\n        return rootStylesheet;\r\n    }\r\n    else {\r\n        // TODO use createElementNS ?\r\n        const e = document.createElement(\"style\");\r\n        e.type = \"text/css\";\r\n        if (nonce != \"\") {\r\n            e.setAttribute(\"nonce\", nonce);\r\n        }\r\n        element.appendChild(e);\r\n        return e.sheet;\r\n    }\r\n}\r\n/**\r\n * [makeStylesheet description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param selector  [description]\r\n * @return [description]\r\n */\r\nfunction appendStylesheet(root, selector) {\r\n    const index = root.cssRules.length;\r\n    root.insertRule(selector + \"{}\", index);\r\n    return root.cssRules[index];\r\n}\r\n/**\r\n * Defines a class for a CSS rule.\r\n *\r\n * Can be used to dynamically add CSS to the document.\r\n */\r\nclass StyleRule extends _Disposer__WEBPACK_IMPORTED_MODULE_0__.DisposerClass {\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param selector  CSS selector\r\n     * @param styles    An object of style attribute - value pairs\r\n     */\r\n    constructor(element, selector, styles, nonce = \"\") {\r\n        super();\r\n        Object.defineProperty(this, \"_root\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * CSS rule.\r\n         */\r\n        Object.defineProperty(this, \"_rule\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._root = getStylesheet(element, nonce);\r\n        try {\r\n            this._rule = appendStylesheet(this._root, selector);\r\n        }\r\n        catch (err) {\r\n            // Create an empty rule on failed selectors\r\n            this._rule = appendStylesheet(this._root, \":not(*)\");\r\n        }\r\n        _Object__WEBPACK_IMPORTED_MODULE_1__.each(styles, (key, value) => {\r\n            this.setStyle(key, value);\r\n        });\r\n    }\r\n    /**\r\n     * A CSS selector text.\r\n     *\r\n     * E.g.: `.myClass p`\r\n     *\r\n     * @param selector  CSS selector\r\n     */\r\n    set selector(selector) {\r\n        this._rule.selectorText = selector;\r\n    }\r\n    /**\r\n     * @return CSS selector\r\n     */\r\n    get selector() {\r\n        return this._rule.selectorText;\r\n    }\r\n    // TODO test this\r\n    _dispose() {\r\n        // TODO a bit hacky\r\n        const index = _Array__WEBPACK_IMPORTED_MODULE_2__.indexOf(this._root.cssRules, this._rule);\r\n        if (index === -1) {\r\n            throw new Error(\"Could not dispose StyleRule\");\r\n        }\r\n        else {\r\n            // TODO if it's empty remove it from the DOM ?\r\n            this._root.deleteRule(index);\r\n        }\r\n    }\r\n    /**\r\n     * Sets the same style properties with browser-specific prefixes.\r\n     *\r\n     * @param name   Attribute name\r\n     * @param value  Attribute value\r\n     */\r\n    _setVendorPrefixName(name, value) {\r\n        const style = this._rule.style;\r\n        style.setProperty(\"-webkit-\" + name, value, \"\");\r\n        style.setProperty(\"-moz-\" + name, value, \"\");\r\n        style.setProperty(\"-ms-\" + name, value, \"\");\r\n        style.setProperty(\"-o-\" + name, value, \"\");\r\n        style.setProperty(name, value, \"\");\r\n    }\r\n    /**\r\n     * Sets a value for specific style attribute.\r\n     *\r\n     * @param name   Attribute\r\n     * @param value  Value\r\n     */\r\n    setStyle(name, value) {\r\n        if (name === \"transition\") {\r\n            this._setVendorPrefixName(name, value);\r\n        }\r\n        else {\r\n            this._rule.style.setProperty(name, value, \"\");\r\n        }\r\n    }\r\n}\r\n/**\r\n * Defines a class for an entire CSS style sheet.\r\n *\r\n * Can be used to dynamically add CSS to the document.\r\n */\r\nclass StyleSheet extends _Disposer__WEBPACK_IMPORTED_MODULE_0__.DisposerClass {\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param text  CSS stylesheet\r\n     */\r\n    constructor(element, text, nonce = \"\") {\r\n        super();\r\n        Object.defineProperty(this, \"_element\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._element = createStylesheet(element, text, nonce);\r\n    }\r\n    _dispose() {\r\n        if (this._element.parentNode) {\r\n            this._element.parentNode.removeChild(this._element);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Adds a class name to an HTML or SVG element.\r\n *\r\n * @ignore Exclude from docs\r\n * @param element    Element\r\n * @param className  Class name to add\r\n */\r\nfunction addClass(element, className) {\r\n    if (!element) {\r\n        return;\r\n    }\r\n    if (element.classList) {\r\n        const classes = className.split(\" \");\r\n        _Array__WEBPACK_IMPORTED_MODULE_2__.each(classes, (name) => {\r\n            element.classList.add(name);\r\n        });\r\n    }\r\n    else {\r\n        let currentClassName = element.getAttribute(\"class\");\r\n        if (currentClassName) {\r\n            element.setAttribute(\"class\", currentClassName.split(\" \").filter((item) => {\r\n                return item !== className;\r\n            }).join(\" \") + \" \" + className);\r\n        }\r\n        else {\r\n            element.setAttribute(\"class\", className);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Removes a class name from an HTML or SVG element.\r\n *\r\n * @ignore Exclude from docs\r\n * @param element    Element\r\n * @param className  Class name to add\r\n */\r\nfunction removeClass(element, className) {\r\n    if (!element) {\r\n        return;\r\n    }\r\n    if (element.classList) {\r\n        element.classList.remove(className);\r\n    }\r\n    else {\r\n        let currentClassName = element.getAttribute(\"class\");\r\n        if (currentClassName) {\r\n            element.setAttribute(\"class\", currentClassName.split(\" \").filter((item) => {\r\n                return item !== className;\r\n            }).join(\" \"));\r\n        }\r\n    }\r\n}\r\n// /**\r\n//  * Applies a set of styles to an element. Stores the original styles so they\r\n//  * can be restored later.\r\n//  *\r\n//  * @ignore\r\n//  * @param io      Element\r\n//   */\r\n// export function prepElementForDrag(dom: HTMLElement): void {\r\n// \t// @todo: save current values\r\n// \t// Define possible props\r\n// \tlet props = [\r\n// \t\t\"touchAction\", \"webkitTouchAction\", \"MozTouchAction\", \"MSTouchAction\", \"msTouchAction\", \"oTouchAction\",\r\n// \t\t\"userSelect\", \"webkitUserSelect\", \"MozUserSelect\", \"MSUserSelect\", \"msUserSelect\", \"oUserSelect\",\r\n// \t\t\"touchSelect\", \"webkitTouchSelect\", \"MozTouchSelect\", \"MSTouchSelect\", \"msTouchSelect\", \"oTouchSelect\",\r\n// \t\t\"touchCallout\", \"webkitTouchCallout\", \"MozTouchCallout\", \"MSTouchCallout\", \"msTouchCallout\", \"oTouchCallout\",\r\n// \t\t\"contentZooming\", \"webkitContentZooming\", \"MozContentZooming\", \"MSContentZooming\", \"msContentZooming\", \"oContentZooming\",\r\n// \t\t\"userDrag\", \"webkitUserDrag\", \"MozUserDrag\", \"MSUserDrag\", \"msUserDrag\", \"oUserDrag\"\r\n// \t];\r\n// \tfor (let i = 0; i < props.length; i++) {\r\n// \t\tif (props[i] in dom.style) {\r\n// \t\t\tsetStyle(dom, props[i], \"none\");\r\n// \t\t}\r\n// \t}\r\n// \t// Remove iOS-specific selection;\r\n// \tsetStyle(dom, \"tapHighlightColor\", \"rgba(0, 0, 0, 0)\");\r\n// }\r\n// /**\r\n//  * Restores replaced styles\r\n//  *\r\n//  * @ignore\r\n//  * @param  io  Element\r\n//  */\r\n// export function unprepElementForDrag(dom: HTMLElement): void {\r\n// \t// Define possible props\r\n// \tlet props = [\r\n// \t\t\"touchAction\", \"webkitTouchAction\", \"MozTouchAction\", \"MSTouchAction\", \"msTouchAction\", \"oTouchAction\",\r\n// \t\t\"userSelect\", \"webkitUserSelect\", \"MozUserSelect\", \"MSUserSelect\", \"msUserSelect\", \"oUserSelect\",\r\n// \t\t\"touchSelect\", \"webkitTouchSelect\", \"MozTouchSelect\", \"MSTouchSelect\", \"msTouchSelect\", \"oTouchSelect\",\r\n// \t\t\"touchCallout\", \"webkitTouchCallout\", \"MozTouchCallout\", \"MSTouchCallout\", \"msTouchCallout\", \"oTouchCallout\",\r\n// \t\t\"contentZooming\", \"webkitContentZooming\", \"MozContentZooming\", \"MSContentZooming\", \"msContentZooming\", \"oContentZooming\",\r\n// \t\t\"userDrag\", \"webkitUserDrag\", \"MozUserDrag\", \"MSUserDrag\", \"msUserDrag\", \"oUserDrag\"\r\n// \t];\r\n// \tfor (let i = 0; i < props.length; i++) {\r\n// \t\tif (props[i] in dom.style) {\r\n// \t\t\tsetStyle(dom, props[i], \"\");\r\n// \t\t}\r\n// \t}\r\n// \t// Remove iOS-specific selection;\r\n// \tsetStyle(dom, \"tapHighlightColor\", \"\");\r\n// }\r\nfunction iOS() {\r\n    return /apple/i.test(navigator.vendor) && \"ontouchend\" in document;\r\n}\r\nfunction getSafeResolution() {\r\n    return iOS() ? 1 : undefined;\r\n}\r\nfunction relativeToValue(percent, full) {\r\n    if (_Type__WEBPACK_IMPORTED_MODULE_3__.isNumber(percent)) {\r\n        return percent;\r\n    }\r\n    else if (percent != null && _Type__WEBPACK_IMPORTED_MODULE_3__.isNumber(percent.value) && _Type__WEBPACK_IMPORTED_MODULE_3__.isNumber(full)) {\r\n        return full * percent.value;\r\n    }\r\n    else {\r\n        return 0;\r\n    }\r\n}\r\n/**\r\n * Returns number of decimals\r\n *\r\n * @ignore Exclude from docs\r\n * @param number  Input number\r\n * @return Number of decimals\r\n */\r\nfunction decimalPlaces(number) {\r\n    let match = ('' + number).match(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);\r\n    if (!match) {\r\n        return 0;\r\n    }\r\n    return Math.max(0, (match[1] ? match[1].length : 0) - (match[2] ? +match[2] : 0));\r\n}\r\n/**\r\n * ============================================================================\r\n * STRING FORMATTING FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Pads a string with additional characters to certain length.\r\n *\r\n * @param value  A numeric value\r\n * @param len    Result string length in characters\r\n * @param char   A character to use for padding\r\n * @return Padded value as string\r\n */\r\nfunction padString(value, len = 0, char = \"0\") {\r\n    if (typeof value !== \"string\") {\r\n        value = value.toString();\r\n    }\r\n    return len > value.length ? Array(len - value.length + 1).join(char) + value : value;\r\n}\r\nfunction trimLeft(text) {\r\n    return text.replace(/^[\\s]*/, \"\");\r\n}\r\nfunction trimRight(text) {\r\n    return text.replace(/[\\s]*$/, \"\");\r\n}\r\nfunction trim(text) {\r\n    return trimLeft(trimRight(text));\r\n}\r\nfunction truncateTextWithEllipsis(text, maxLength, breakWords = false, ellipsis = \"...\") {\r\n    if (text.length > maxLength) {\r\n        // Find the last non-alphanumeric character before maxLength\r\n        let lastNonAlphanumericIndex = maxLength - 1;\r\n        while (lastNonAlphanumericIndex >= 0 && text.charAt(lastNonAlphanumericIndex).match(/\\w/)) {\r\n            lastNonAlphanumericIndex--;\r\n        }\r\n        if (lastNonAlphanumericIndex >= 0 && breakWords == false) {\r\n            return text.substring(0, lastNonAlphanumericIndex + 1) + '...';\r\n        }\r\n        else {\r\n            // If no non-alphanumeric character found, truncate without breaking words\r\n            return text.substring(0, maxLength) + ellipsis;\r\n        }\r\n    }\r\n    else {\r\n        return text;\r\n    }\r\n}\r\n/**\r\n * Tries to determine format type.\r\n *\r\n * @ignore Exclude from docs\r\n * @param format  Format string\r\n * @return Format type (\"string\" | \"number\" | \"date\" | \"duration\")\r\n */\r\nfunction getFormat(format) {\r\n    // Undefined?\r\n    if (typeof format === \"undefined\") {\r\n        return \"string\";\r\n    }\r\n    // Cleanup and lowercase format\r\n    format = format.toLowerCase().replace(/^\\[[^\\]]*\\]/, \"\");\r\n    // Remove style tags\r\n    format = format.replace(/\\[[^\\]]+\\]/, \"\");\r\n    // Trim\r\n    format = format.trim();\r\n    // Check for any explicit format hints (i.e. /Date)\r\n    let hints = format.match(/\\/(date|number|duration)$/);\r\n    if (hints) {\r\n        return hints[1];\r\n    }\r\n    // Check for explicit hints\r\n    if (format === \"number\") {\r\n        return \"number\";\r\n    }\r\n    if (format === \"date\") {\r\n        return \"date\";\r\n    }\r\n    if (format === \"duration\") {\r\n        return \"duration\";\r\n    }\r\n    // Detect number formatting symbols\r\n    if (format.match(/[#0]/)) {\r\n        return \"number\";\r\n    }\r\n    // Detect date formatting symbols\r\n    if (format.match(/[ymwdhnsqaxkzgtei]/)) {\r\n        return \"date\";\r\n    }\r\n    // Nothing? Let's display as string\r\n    return \"string\";\r\n}\r\n/**\r\n * Cleans up format:\r\n * * Strips out formatter hints\r\n *\r\n * @ignore Exclude from docs\r\n * @param format  Format\r\n * @return Cleaned format\r\n */\r\nfunction cleanFormat(format) {\r\n    return format.replace(/\\/(date|number|duration)$/i, \"\");\r\n}\r\n/**\r\n * Strips all tags from the string.\r\n *\r\n * @param text  Source string\r\n * @return String without tags\r\n */\r\nfunction stripTags(text) {\r\n    return text ? text.replace(/<[^>]*>/g, \"\") : text;\r\n}\r\n/**\r\n * Removes new lines and tags from a string.\r\n *\r\n * @param text  String to conver\r\n * @return Converted string\r\n */\r\nfunction plainText(text) {\r\n    return text ? stripTags((\"\" + text).replace(/[\\n\\r]+/g, \". \")) : text;\r\n}\r\n/**\r\n * Escapes string so it can safely be used in a Regex.\r\n *\r\n * @param value  Unsescaped string\r\n * @return Escaped string\r\n */\r\nfunction escapeForRgex(value) {\r\n    return value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\r\n}\r\n/**\r\n * Adds space before each uppercase letter.\r\n *\r\n * @param   str Input string\r\n * @return      Output string\r\n */\r\nfunction addSpacing(str) {\r\n    let result = \"\";\r\n    for (let i = 0; i < str.length; i++) {\r\n        const char = str.charAt(i);\r\n        if (char.toUpperCase() == char && i != 0) {\r\n            result += \" \";\r\n        }\r\n        result += char;\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Splits the string into separate characters. Keeps RTL words non-split.\r\n *\r\n * @param   source  Input\r\n * @return          Split text\r\n */\r\nfunction splitString(source) {\r\n    // Regular expression to identify RTL characters\r\n    const rtlChar = /[\\u0590-\\u05FF\\u0600-\\u06FF\\u0750-\\u077F\\u08A0-\\u08FF\\uFB50-\\uFDFF\\uFE70-\\uFEFF]/;\r\n    // Regular expression to capture segments ending with specific Arabic characters\r\n    const splitPattern = /([^اأدذرزو]*[اأدذرزو])/gi;\r\n    // Split input string into array of words or characters, including whitespace\r\n    let segments = source.split(/(\\s+)/); // Split by whitespace, capturing it\r\n    let result = [];\r\n    segments.forEach(segment => {\r\n        if (segment.match(/^\\s+$/)) {\r\n            // If the segment is purely whitespace\r\n            if (segment = \" \") {\r\n                segment = \"  \";\r\n            }\r\n            result.push(segment);\r\n        }\r\n        else if (rtlChar.test(segment)) {\r\n            // If the segment contains RTL characters, handle special splits\r\n            let parts = segment.split(splitPattern).filter(part => part !== '');\r\n            // Concatenate parts processed by the split pattern directly to result\r\n            result = result.concat(parts);\r\n        }\r\n        else {\r\n            // Treat this segment as LTR: split into characters\r\n            result = result.concat([...segment]);\r\n        }\r\n    });\r\n    return result;\r\n}\r\n/**\r\n * ============================================================================\r\n * DATE-RELATED FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Returns a year day.\r\n *\r\n * @param date  Date\r\n * @param utc   Assume UTC dates?\r\n * @return Year day\r\n * @todo Account for UTC\r\n */\r\nfunction getYearDay(date, utc = false) {\r\n    // TODO: utc needed?\r\n    utc;\r\n    const start = new Date(date.getFullYear(), 0, 0);\r\n    const diff = (date.getTime() - start.getTime()) + ((start.getTimezoneOffset() - date.getTimezoneOffset()) * 60 * 1000);\r\n    const oneDay = 1000 * 60 * 60 * 24;\r\n    return Math.floor(diff / oneDay);\r\n}\r\n/**\r\n * Returns week number for a given date.\r\n *\r\n * @param date  Date\r\n * @param utc   Assume UTC dates?\r\n * @return Week number\r\n * @todo Account for UTC\r\n */\r\nfunction getWeek(date, _utc = false) {\r\n    const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\r\n    const day = d.getUTCDay() || 7;\r\n    d.setUTCDate(d.getUTCDate() + 4 - day);\r\n    const firstDay = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\r\n    return Math.ceil((((d.getTime() - firstDay.getTime()) / 86400000) + 1) / 7);\r\n}\r\n/**\r\n * Returns a \"week year\" of the given date.\r\n *\r\n * @param date  Date\r\n * @param utc   Assume UTC dates?\r\n * @return Year of week\r\n * @since 5.3.0\r\n * @todo Account for UTC\r\n */\r\nfunction getWeekYear(date, _utc = false) {\r\n    const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\r\n    const day = d.getUTCDay() || 7;\r\n    d.setUTCDate(d.getUTCDate() + 4 - day);\r\n    const firstDay = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\r\n    return firstDay.getFullYear();\r\n}\r\n/**\r\n * Returns a week number in the month.\r\n *\r\n * @param date  Source Date\r\n * @param utc   Assume UTC dates?\r\n * @return Week number in month\r\n */\r\nfunction getMonthWeek(date, utc = false) {\r\n    const firstWeek = getWeek(new Date(date.getFullYear(), date.getMonth(), 1), utc);\r\n    let currentWeek = getWeek(date, utc);\r\n    if (currentWeek == 1) {\r\n        currentWeek = 53;\r\n    }\r\n    return currentWeek - firstWeek + 1;\r\n}\r\n/**\r\n * Returns a year day out of the given week number.\r\n *\r\n * @param week     Week\r\n * @param year     Year\r\n * @param weekday  Weekday\r\n * @param utc      Assume UTC dates\r\n * @return Day in a year\r\n */\r\nfunction getDayFromWeek(week, year, weekday = 1, utc = false) {\r\n    let date = new Date(year, 0, 4, 0, 0, 0, 0);\r\n    if (utc) {\r\n        date.setUTCFullYear(year);\r\n    }\r\n    let day = week * 7 + weekday - ((date.getDay() || 7) + 3);\r\n    return day;\r\n}\r\n/**\r\n * Returns 12-hour representation out of the 24-hour hours.\r\n *\r\n * @param hours  24-hour number\r\n * @return 12-hour number\r\n */\r\nfunction get12Hours(hours, base) {\r\n    if (hours > 12) {\r\n        hours -= 12;\r\n    }\r\n    else if (hours === 0) {\r\n        hours = 12;\r\n    }\r\n    return base != null ? hours + (base - 1) : hours;\r\n}\r\n/**\r\n * Returns a string name of the time zone.\r\n *\r\n * @param date     Date object\r\n * @param long     Should return long (\"Pacific Standard Time\") or short abbreviation (\"PST\")\r\n * @param savings  Include information if it's in daylight savings mode\r\n * @param utc      Assume UTC dates\r\n * @return Time zone name\r\n */\r\nfunction getTimeZone(date, long = false, savings = false, utc = false, timezone) {\r\n    if (utc) {\r\n        return long ? \"Coordinated Universal Time\" : \"UTC\";\r\n    }\r\n    else if (timezone) {\r\n        const d1 = date.toLocaleString(\"en-US\", { timeZone: timezone });\r\n        const d2 = date.toLocaleString(\"en-US\", { timeZone: timezone, timeZoneName: long ? \"long\" : \"short\" });\r\n        return trim(d2.substr(d1.length));\r\n    }\r\n    let wotz = date.toLocaleString(\"UTC\");\r\n    let wtz = date.toLocaleString(\"UTC\", { timeZoneName: long ? \"long\" : \"short\" }).substr(wotz.length);\r\n    //wtz = wtz.replace(/[+-]+[0-9]+$/, \"\");\r\n    if (savings === false) {\r\n        wtz = wtz.replace(/ (standard|daylight|summer|winter) /i, \" \");\r\n    }\r\n    return trim(wtz);\r\n}\r\nfunction getTimezoneOffset(timezone, targetDate) {\r\n    const date = targetDate || new Date(Date.UTC(2012, 0, 1, 0, 0, 0, 0));\r\n    const utcDate = new Date(date.toLocaleString(\"en-US\", { timeZone: \"UTC\" }));\r\n    const tzDate = new Date(date.toLocaleString(\"en-US\", { timeZone: timezone }));\r\n    return (tzDate.getTime() - utcDate.getTime()) / 6e4 * -1;\r\n}\r\nfunction capitalizeFirst(text) {\r\n    return text.charAt(0).toUpperCase() + text.slice(1);\r\n}\r\n/**\r\n * The functions below are taken and adapted from Garry Tan's blog post:\r\n * http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\r\n *\r\n * The further attributions go mjijackson.com, which now seems to be defunct.\r\n */\r\n/**\r\n * Converts an HSL color value to RGB. Conversion formula\r\n * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\r\n * Assumes h, s, and l are contained in the set [0, 1] and\r\n * returns r, g, and b in the set [0, 255].\r\n *\r\n * Function adapted from:\r\n * http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\r\n *\r\n * @param h       The hue\r\n * @param s       The saturation\r\n * @param l       The lightness\r\n * @return The RGB representation\r\n */\r\nfunction hslToRgb(color) {\r\n    let r, g, b;\r\n    let h = color.h;\r\n    let s = color.s;\r\n    let l = color.l;\r\n    if (s == 0) {\r\n        r = g = b = l; // achromatic\r\n    }\r\n    else {\r\n        let hue2rgb = function hue2rgb(p, q, t) {\r\n            if (t < 0) {\r\n                t += 1;\r\n            }\r\n            if (t > 1) {\r\n                t -= 1;\r\n            }\r\n            if (t < 1 / 6) {\r\n                return p + (q - p) * 6 * t;\r\n            }\r\n            if (t < 1 / 2) {\r\n                return q;\r\n            }\r\n            if (t < 2 / 3) {\r\n                return p + (q - p) * (2 / 3 - t) * 6;\r\n            }\r\n            return p;\r\n        };\r\n        let q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n        let p = 2 * l - q;\r\n        r = hue2rgb(p, q, h + 1 / 3);\r\n        g = hue2rgb(p, q, h);\r\n        b = hue2rgb(p, q, h - 1 / 3);\r\n    }\r\n    return {\r\n        r: Math.round(r * 255),\r\n        g: Math.round(g * 255),\r\n        b: Math.round(b * 255)\r\n    };\r\n}\r\n/**\r\n * Converts an RGB color value to HSL. Conversion formula\r\n * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\r\n * Assumes r, g, and b are contained in the set [0, 255] and\r\n * returns h, s, and l in the set [0, 1].\r\n *\r\n * Function adapted from:\r\n * http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\r\n *\r\n * @param r       The red color value\r\n * @param g       The green color value\r\n * @param b       The blue color value\r\n * @return The HSL representation\r\n */\r\nfunction rgbToHsl(color) {\r\n    let r = color.r / 255;\r\n    let g = color.g / 255;\r\n    let b = color.b / 255;\r\n    let max = Math.max(r, g, b);\r\n    let min = Math.min(r, g, b);\r\n    let h = 0;\r\n    let s = 0;\r\n    let l = (max + min) / 2;\r\n    if (max === min) {\r\n        h = s = 0; // achromatic\r\n    }\r\n    else {\r\n        let d = max - min;\r\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n        switch (max) {\r\n            case r:\r\n                h = (g - b) / d + (g < b ? 6 : 0);\r\n                break;\r\n            case g:\r\n                h = (b - r) / d + 2;\r\n                break;\r\n            case b:\r\n                h = (r - g) / d + 4;\r\n                break;\r\n        }\r\n        h /= 6;\r\n    }\r\n    return {\r\n        h: h,\r\n        s: s,\r\n        l: l,\r\n    };\r\n}\r\n/**\r\n * Converts HSV to HSL.\r\n *\r\n * https://en.wikipedia.org/wiki/HSL_and_HSV#HSV_to_HSL\r\n */\r\nfunction hsvToHsl(hsv) {\r\n    const l = hsv.v * (1 - (hsv.s / 2));\r\n    const s = (l === 0 || l === 1\r\n        ? 0\r\n        : (hsv.v - l) / Math.min(l, 1 - l));\r\n    return {\r\n        h: hsv.h,\r\n        s,\r\n        l,\r\n        a: hsv.a,\r\n    };\r\n}\r\n/**\r\n * Converts HSL to HSV.\r\n *\r\n * https://en.wikipedia.org/wiki/HSL_and_HSV#HSL_to_HSV\r\n */\r\nfunction hslToHsv(hsl) {\r\n    const v = hsl.l + (hsl.s * Math.min(hsl.l, 1 - hsl.l));\r\n    const s = (v === 0\r\n        ? 0\r\n        : 2 * (1 - (hsl.l / v)));\r\n    return {\r\n        h: hsl.h,\r\n        s,\r\n        v,\r\n        a: hsl.a,\r\n    };\r\n}\r\n/**\r\n * Returns a color that is `percent` brighter than the reference color.\r\n *\r\n * @param color    Reference color\r\n * @param percent  Brightness percent\r\n * @return Hex code of the new color\r\n */\r\nfunction lighten(rgb, percent) {\r\n    if (rgb) {\r\n        return {\r\n            r: Math.max(0, Math.min(255, rgb.r + getLightnessStep(rgb.r, percent))),\r\n            g: Math.max(0, Math.min(255, rgb.g + getLightnessStep(rgb.g, percent))),\r\n            b: Math.max(0, Math.min(255, rgb.b + getLightnessStep(rgb.b, percent))),\r\n            a: rgb.a\r\n        };\r\n    }\r\n    else {\r\n        // TODO is this correct ?\r\n        return rgb;\r\n    }\r\n}\r\n;\r\n/**\r\n * Gets lightness step.\r\n *\r\n * @param value    Value\r\n * @param percent  Percent\r\n * @return Step\r\n */\r\nfunction getLightnessStep(value, percent) {\r\n    let base = percent > 0 ? 255 - value : value;\r\n    return Math.round(base * percent);\r\n}\r\n/**\r\n * Returns a color that is `percent` brighter than the source `color`.\r\n *\r\n * @param color    Source color\r\n * @param percent  Brightness percent\r\n * @return New color\r\n */\r\nfunction brighten(rgb, percent) {\r\n    if (rgb) {\r\n        let base = Math.min(Math.max(rgb.r, rgb.g, rgb.b), 230);\r\n        //let base = Math.max(rgb.r, rgb.g, rgb.b);\r\n        let step = getLightnessStep(base, percent);\r\n        return {\r\n            r: Math.max(0, Math.min(255, Math.round(rgb.r + step))),\r\n            g: Math.max(0, Math.min(255, Math.round(rgb.g + step))),\r\n            b: Math.max(0, Math.min(255, Math.round(rgb.b + step))),\r\n            a: rgb.a\r\n        };\r\n    }\r\n    else {\r\n        // TODO is this correct ?\r\n        return rgb;\r\n    }\r\n}\r\n;\r\n/**\r\n * Returns brightness step.\r\n *\r\n * @ignore Exclude from docs\r\n * @param value    Value\r\n * @param percent  Percent\r\n * @return Step\r\n */\r\nfunction getBrightnessStep(_value, percent) {\r\n    let base = 255; //percent > 0 ? 255 - value : value;\r\n    return Math.round(base * percent);\r\n}\r\n/**\r\n * Returns `true` if color is \"light\". Useful indetermining which contrasting\r\n * color to use for elements over this color. E.g.: you would want to use\r\n * black text over light background, and vice versa.\r\n *\r\n * @param color  Source color\r\n * @return Light?\r\n */\r\nfunction isLight(color) {\r\n    return ((color.r * 299) + (color.g * 587) + (color.b * 114)) / 1000 >= 128;\r\n}\r\n/**\r\n * Returns a new [[iRGB]] object based on `rgb` parameter with specific\r\n * saturation applied.\r\n *\r\n * `saturation` can be in the range of 0 (fully desaturated) to 1 (fully\r\n * saturated).\r\n *\r\n * @param color       Base color\r\n * @param saturation  Saturation (0-1)\r\n * @return New color\r\n */\r\nfunction saturate(rgb, saturation) {\r\n    if (rgb === undefined || saturation == 1) {\r\n        return rgb;\r\n    }\r\n    let hsl = rgbToHsl(rgb);\r\n    hsl.s = saturation;\r\n    return hslToRgb(hsl);\r\n}\r\n/**\r\n * Returns a color which contrasts more with the source `color`.\r\n *\r\n * @param  color             Base color\r\n * @param  lightAlternative  Light option\r\n * @param  darkAlternative   Dark option\r\n * @return New color\r\n */\r\nfunction alternativeColor(color, lightAlternative = { r: 255, g: 255, b: 255 }, darkAlternative = { r: 255, g: 255, b: 255 }) {\r\n    let light = lightAlternative;\r\n    let dark = darkAlternative;\r\n    if (isLight(darkAlternative)) {\r\n        light = darkAlternative;\r\n        dark = lightAlternative;\r\n    }\r\n    return isLight(color) ? dark : light;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction mergeTags(tags1, tags2) {\r\n    if (!tags1) {\r\n        tags1 = [];\r\n    }\r\n    return [...tags1, ...tags2].filter((value, index, self) => {\r\n        return self.indexOf(value) === index;\r\n    });\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction sameBounds(a, b) {\r\n    if (!b) {\r\n        return false;\r\n    }\r\n    if (a.left != b.left) {\r\n        return false;\r\n    }\r\n    if (a.right != b.right) {\r\n        return false;\r\n    }\r\n    if (a.top != b.top) {\r\n        return false;\r\n    }\r\n    if (a.bottom != b.bottom) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n//# sourceMappingURL=Utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/.internal/themes/DefaultTheme.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/.internal/themes/DefaultTheme.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DefaultTheme: () => (/* binding */ DefaultTheme),\n/* harmony export */   setColor: () => (/* binding */ setColor)\n/* harmony export */ });\n/* harmony import */ var _core_Theme__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/Theme */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/Theme.js\");\n/* harmony import */ var _core_util_Percent__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/util/Percent */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Percent.js\");\n/* harmony import */ var _core_util_Color__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/util/Color */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Color.js\");\n/* harmony import */ var _core_render_GridLayout__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/render/GridLayout */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/render/GridLayout.js\");\n/* harmony import */ var _core_util_Ease__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/util/Ease */ \"(ssr)/./node_modules/@amcharts/amcharts5/.internal/core/util/Ease.js\");\n\r\n\r\n\r\n\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction setColor(rule, key, ic, name) {\r\n    // TODO this shouldn't use get, figure out a better way\r\n    rule.set(key, ic.get(name));\r\n    ic.on(name, (value) => {\r\n        rule.set(key, value);\r\n    });\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass DefaultTheme extends _core_Theme__WEBPACK_IMPORTED_MODULE_0__.Theme {\r\n    setupDefaultRules() {\r\n        super.setupDefaultRules();\r\n        const language = this._root.language;\r\n        const ic = this._root.interfaceColors;\r\n        const horizontalLayout = this._root.horizontalLayout;\r\n        const verticalLayout = this._root.verticalLayout;\r\n        const r = this.rule.bind(this);\r\n        /**\r\n         * ========================================================================\r\n         * core\r\n         * ========================================================================\r\n         */\r\n        r(\"InterfaceColors\").setAll({\r\n            stroke: _core_util_Color__WEBPACK_IMPORTED_MODULE_1__.Color.fromHex(0xe5e5e5),\r\n            fill: _core_util_Color__WEBPACK_IMPORTED_MODULE_1__.Color.fromHex(0xf3f3f3),\r\n            primaryButton: _core_util_Color__WEBPACK_IMPORTED_MODULE_1__.Color.fromHex(0x6794dc),\r\n            primaryButtonHover: _core_util_Color__WEBPACK_IMPORTED_MODULE_1__.Color.fromHex(0x6771dc),\r\n            primaryButtonDown: _core_util_Color__WEBPACK_IMPORTED_MODULE_1__.Color.fromHex(0x68dc76),\r\n            primaryButtonActive: _core_util_Color__WEBPACK_IMPORTED_MODULE_1__.Color.fromHex(0x68dc76),\r\n            primaryButtonDisabled: _core_util_Color__WEBPACK_IMPORTED_MODULE_1__.Color.fromHex(0xdadada),\r\n            primaryButtonTextDisabled: _core_util_Color__WEBPACK_IMPORTED_MODULE_1__.Color.fromHex(0xffffff),\r\n            primaryButtonText: _core_util_Color__WEBPACK_IMPORTED_MODULE_1__.Color.fromHex(0xffffff),\r\n            primaryButtonStroke: _core_util_Color__WEBPACK_IMPORTED_MODULE_1__.Color.fromHex(0xffffff),\r\n            secondaryButton: _core_util_Color__WEBPACK_IMPORTED_MODULE_1__.Color.fromHex(0xd9d9d9),\r\n            secondaryButtonHover: _core_util_Color__WEBPACK_IMPORTED_MODULE_1__.Color.fromHex(0xa3a3a3),\r\n            secondaryButtonDown: _core_util_Color__WEBPACK_IMPORTED_MODULE_1__.Color.fromHex(0x8d8d8d),\r\n            secondaryButtonActive: _core_util_Color__WEBPACK_IMPORTED_MODULE_1__.Color.fromHex(0xe6e6e6),\r\n            secondaryButtonText: _core_util_Color__WEBPACK_IMPORTED_MODULE_1__.Color.fromHex(0x000000),\r\n            secondaryButtonStroke: _core_util_Color__WEBPACK_IMPORTED_MODULE_1__.Color.fromHex(0xffffff),\r\n            grid: _core_util_Color__WEBPACK_IMPORTED_MODULE_1__.Color.fromHex(0x000000),\r\n            background: _core_util_Color__WEBPACK_IMPORTED_MODULE_1__.Color.fromHex(0xffffff),\r\n            alternativeBackground: _core_util_Color__WEBPACK_IMPORTED_MODULE_1__.Color.fromHex(0x000000),\r\n            text: _core_util_Color__WEBPACK_IMPORTED_MODULE_1__.Color.fromHex(0x000000),\r\n            alternativeText: _core_util_Color__WEBPACK_IMPORTED_MODULE_1__.Color.fromHex(0xffffff),\r\n            disabled: _core_util_Color__WEBPACK_IMPORTED_MODULE_1__.Color.fromHex(0xadadad),\r\n            positive: _core_util_Color__WEBPACK_IMPORTED_MODULE_1__.Color.fromHex(0x50b300),\r\n            negative: _core_util_Color__WEBPACK_IMPORTED_MODULE_1__.Color.fromHex(0xb30000)\r\n        });\r\n        {\r\n            const rule = r(\"ColorSet\");\r\n            rule.setAll({\r\n                passOptions: {\r\n                    hue: 0.05,\r\n                    saturation: 0,\r\n                    lightness: 0\r\n                },\r\n                colors: [\r\n                    _core_util_Color__WEBPACK_IMPORTED_MODULE_1__.Color.fromHex(0x67b7dc)\r\n                ],\r\n                step: 1,\r\n                //baseColor: Color.fromRGB(103, 183, 220),\r\n                //count: 20,\r\n                reuse: false,\r\n                startIndex: 0\r\n            });\r\n            rule.setPrivate(\"currentStep\", 0);\r\n            rule.setPrivate(\"currentPass\", 0);\r\n        }\r\n        r(\"Entity\").setAll({\r\n            stateAnimationDuration: 0,\r\n            stateAnimationEasing: _core_util_Ease__WEBPACK_IMPORTED_MODULE_2__.out(_core_util_Ease__WEBPACK_IMPORTED_MODULE_2__.cubic)\r\n        });\r\n        r(\"Component\").setAll({\r\n            interpolationDuration: 0,\r\n            interpolationEasing: _core_util_Ease__WEBPACK_IMPORTED_MODULE_2__.out(_core_util_Ease__WEBPACK_IMPORTED_MODULE_2__.cubic)\r\n        });\r\n        r(\"Sprite\").setAll({\r\n            visible: true,\r\n            scale: 1,\r\n            opacity: 1,\r\n            rotation: 0,\r\n            position: \"relative\",\r\n            tooltipX: _core_util_Percent__WEBPACK_IMPORTED_MODULE_3__.p50,\r\n            tooltipY: _core_util_Percent__WEBPACK_IMPORTED_MODULE_3__.p50,\r\n            tooltipPosition: \"fixed\",\r\n            isMeasured: true\r\n        });\r\n        r(\"Sprite\").states.create(\"default\", { \"visible\": true, opacity: 1 });\r\n        r(\"Container\").setAll({\r\n            interactiveChildren: true,\r\n            setStateOnChildren: false\r\n        });\r\n        r(\"Graphics\").setAll({\r\n            strokeWidth: 1\r\n        });\r\n        r(\"Chart\").setAll({\r\n            width: _core_util_Percent__WEBPACK_IMPORTED_MODULE_3__.p100,\r\n            height: _core_util_Percent__WEBPACK_IMPORTED_MODULE_3__.p100,\r\n            interactiveChildren: false\r\n        });\r\n        r(\"ZoomableContainer\").setAll({\r\n            width: _core_util_Percent__WEBPACK_IMPORTED_MODULE_3__.p100,\r\n            height: _core_util_Percent__WEBPACK_IMPORTED_MODULE_3__.p100,\r\n            wheelable: true,\r\n            pinchZoom: true,\r\n            maxZoomLevel: 32,\r\n            minZoomLevel: 1,\r\n            zoomStep: 2,\r\n            animationEasing: _core_util_Ease__WEBPACK_IMPORTED_MODULE_2__.out(_core_util_Ease__WEBPACK_IMPORTED_MODULE_2__.cubic),\r\n            animationDuration: 600,\r\n            maxPanOut: 0.4\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: alignment\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Sprite\", [\"horizontal\", \"center\"]).setAll({\r\n            centerX: _core_util_Percent__WEBPACK_IMPORTED_MODULE_3__.p50,\r\n            x: _core_util_Percent__WEBPACK_IMPORTED_MODULE_3__.p50\r\n        });\r\n        r(\"Sprite\", [\"vertical\", \"center\"]).setAll({\r\n            centerY: _core_util_Percent__WEBPACK_IMPORTED_MODULE_3__.p50,\r\n            y: _core_util_Percent__WEBPACK_IMPORTED_MODULE_3__.p50\r\n        });\r\n        r(\"Container\", [\"horizontal\", \"layout\"]).setAll({\r\n            layout: horizontalLayout\r\n        });\r\n        r(\"Container\", [\"vertical\", \"layout\"]).setAll({\r\n            layout: verticalLayout\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: patterns\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Pattern\").setAll({\r\n            repetition: \"repeat\",\r\n            width: 50,\r\n            height: 50,\r\n            rotation: 0,\r\n            fillOpacity: 1\r\n        });\r\n        r(\"LinePattern\").setAll({\r\n            gap: 6,\r\n            colorOpacity: 1,\r\n            width: 49,\r\n            height: 49\r\n        });\r\n        r(\"RectanglePattern\").setAll({\r\n            gap: 6,\r\n            checkered: false,\r\n            centered: true,\r\n            maxWidth: 5,\r\n            maxHeight: 5,\r\n            width: 48,\r\n            height: 48,\r\n            strokeWidth: 0\r\n        });\r\n        r(\"CirclePattern\").setAll({\r\n            gap: 5,\r\n            checkered: false,\r\n            centered: false,\r\n            radius: 3,\r\n            strokeWidth: 0,\r\n            width: 45,\r\n            height: 45\r\n        });\r\n        r(\"GrainPattern\").setAll({\r\n            width: 200,\r\n            height: 200,\r\n            colors: [_core_util_Color__WEBPACK_IMPORTED_MODULE_1__.Color.fromHex(0x000000)],\r\n            size: 1,\r\n            horizontalGap: 0,\r\n            verticalGap: 0,\r\n            density: 1,\r\n            minOpacity: 0,\r\n            maxOpacity: 0.2\r\n        });\r\n        {\r\n            const rule = r(\"PatternSet\");\r\n            rule.setAll({\r\n                step: 1\r\n            });\r\n            setColor(rule, \"color\", ic, \"stroke\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: gradients\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"LinearGradient\").setAll({\r\n            rotation: 90\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Legend\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Legend\").setAll({\r\n            fillField: \"fill\",\r\n            strokeField: \"stroke\",\r\n            nameField: \"name\",\r\n            layout: _core_render_GridLayout__WEBPACK_IMPORTED_MODULE_4__.GridLayout.new(this._root, {}),\r\n            layer: 30,\r\n            clickTarget: \"itemContainer\"\r\n        });\r\n        // Class: Container\r\n        r(\"Container\", [\"legend\", \"item\", \"itemcontainer\"]).setAll({\r\n            paddingLeft: 5,\r\n            paddingRight: 5,\r\n            paddingBottom: 5,\r\n            paddingTop: 5,\r\n            layout: horizontalLayout,\r\n            setStateOnChildren: true,\r\n            interactiveChildren: false,\r\n            ariaChecked: true,\r\n            focusable: true,\r\n            ariaLabel: language.translate(\"Press ENTER to toggle\"),\r\n            role: \"checkbox\"\r\n        });\r\n        {\r\n            const rule = r(\"Rectangle\", [\"legend\", \"item\", \"background\"]);\r\n            rule.setAll({\r\n                fillOpacity: 0,\r\n            });\r\n            setColor(rule, \"fill\", ic, \"background\");\r\n        }\r\n        r(\"Container\", [\"legend\", \"marker\"]).setAll({\r\n            setStateOnChildren: true,\r\n            centerY: _core_util_Percent__WEBPACK_IMPORTED_MODULE_3__.p50,\r\n            paddingLeft: 0,\r\n            paddingRight: 0,\r\n            paddingBottom: 0,\r\n            paddingTop: 0,\r\n            width: 18,\r\n            height: 18\r\n        });\r\n        r(\"RoundedRectangle\", [\"legend\", \"marker\", \"rectangle\"]).setAll({\r\n            width: _core_util_Percent__WEBPACK_IMPORTED_MODULE_3__.p100,\r\n            height: _core_util_Percent__WEBPACK_IMPORTED_MODULE_3__.p100,\r\n            cornerRadiusBL: 3,\r\n            cornerRadiusTL: 3,\r\n            cornerRadiusBR: 3,\r\n            cornerRadiusTR: 3\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"legend\", \"marker\", \"rectangle\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"fill\", ic, \"disabled\");\r\n            setColor(rule, \"stroke\", ic, \"disabled\");\r\n        }\r\n        r(\"Label\", [\"legend\", \"label\"]).setAll({\r\n            centerY: _core_util_Percent__WEBPACK_IMPORTED_MODULE_3__.p50,\r\n            marginLeft: 5,\r\n            paddingRight: 0,\r\n            paddingLeft: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0,\r\n            populateText: true\r\n        });\r\n        {\r\n            const rule = r(\"Label\", [\"legend\", \"label\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"fill\", ic, \"disabled\");\r\n        }\r\n        r(\"Label\", [\"legend\", \"value\", \"label\"]).setAll({\r\n            centerY: _core_util_Percent__WEBPACK_IMPORTED_MODULE_3__.p50,\r\n            marginLeft: 5,\r\n            paddingRight: 0,\r\n            paddingLeft: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0,\r\n            width: 50,\r\n            centerX: _core_util_Percent__WEBPACK_IMPORTED_MODULE_3__.p100,\r\n            populateText: true\r\n        });\r\n        {\r\n            const rule = r(\"Label\", [\"legend\", \"value\", \"label\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"fill\", ic, \"disabled\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: HeatLegend\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"HeatLegend\").setAll({\r\n            stepCount: 1\r\n        });\r\n        r(\"RoundedRectangle\", [\"heatlegend\", \"marker\"]).setAll({\r\n            cornerRadiusTR: 0,\r\n            cornerRadiusBR: 0,\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusBL: 0\r\n        });\r\n        r(\"RoundedRectangle\", [\"vertical\", \"heatlegend\", \"marker\"]).setAll({\r\n            height: _core_util_Percent__WEBPACK_IMPORTED_MODULE_3__.p100,\r\n            width: 15\r\n        });\r\n        r(\"RoundedRectangle\", [\"horizontal\", \"heatlegend\", \"marker\"]).setAll({\r\n            width: _core_util_Percent__WEBPACK_IMPORTED_MODULE_3__.p100,\r\n            height: 15\r\n        });\r\n        r(\"HeatLegend\", [\"vertical\"]).setAll({\r\n            height: _core_util_Percent__WEBPACK_IMPORTED_MODULE_3__.p100\r\n        });\r\n        r(\"HeatLegend\", [\"horizontal\"]).setAll({\r\n            width: _core_util_Percent__WEBPACK_IMPORTED_MODULE_3__.p100\r\n        });\r\n        r(\"Label\", [\"heatlegend\", \"start\"]).setAll({\r\n            paddingLeft: 5,\r\n            paddingRight: 5,\r\n            paddingTop: 5,\r\n            paddingBottom: 5\r\n        });\r\n        r(\"Label\", [\"heatlegend\", \"end\"]).setAll({\r\n            paddingLeft: 5,\r\n            paddingRight: 5,\r\n            paddingTop: 5,\r\n            paddingBottom: 5\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Labels\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        {\r\n            const rule = r(\"Label\");\r\n            rule.setAll({\r\n                paddingTop: 8,\r\n                paddingBottom: 8,\r\n                paddingLeft: 10,\r\n                paddingRight: 10,\r\n                fontFamily: \"-apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\"\",\r\n                fontSize: \"1em\",\r\n                populateText: false\r\n            });\r\n            setColor(rule, \"fill\", ic, \"text\");\r\n        }\r\n        r(\"RadialLabel\").setAll({\r\n            textType: \"regular\",\r\n            centerY: _core_util_Percent__WEBPACK_IMPORTED_MODULE_3__.p50,\r\n            centerX: _core_util_Percent__WEBPACK_IMPORTED_MODULE_3__.p50,\r\n            inside: false,\r\n            radius: 0,\r\n            baseRadius: _core_util_Percent__WEBPACK_IMPORTED_MODULE_3__.p100,\r\n            orientation: \"auto\",\r\n            textAlign: \"center\"\r\n        });\r\n        r(\"EditableLabel\").setAll({\r\n            editOn: \"click\",\r\n            //setStateOnChildren: true,\r\n            themeTags: [\"editablelabel\"],\r\n            multiLine: true\r\n        });\r\n        r(\"RoundedRectangle\", [\"editablelabel\", \"background\"]).setAll({\r\n            fillOpacity: 0,\r\n            fill: _core_util_Color__WEBPACK_IMPORTED_MODULE_1__.Color.fromHex(0x000000),\r\n            cornerRadiusBL: 3,\r\n            cornerRadiusBR: 3,\r\n            cornerRadiusTL: 3,\r\n            cornerRadiusTR: 3,\r\n            strokeOpacity: 0,\r\n            stroke: _core_util_Color__WEBPACK_IMPORTED_MODULE_1__.Color.fromHex(0x000000)\r\n        });\r\n        {\r\n            r(\"RoundedRectangle\", [\"editablelabel\", \"background\"]).states.create(\"active\", {\r\n                strokeOpacity: 0.2,\r\n            });\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Elements and shapes\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"RoundedRectangle\").setAll({\r\n            cornerRadiusTL: 8,\r\n            cornerRadiusBL: 8,\r\n            cornerRadiusTR: 8,\r\n            cornerRadiusBR: 8\r\n        });\r\n        r(\"PointedRectangle\").setAll({\r\n            pointerBaseWidth: 15,\r\n            pointerLength: 10,\r\n            cornerRadius: 8\r\n        });\r\n        r(\"Slice\").setAll({\r\n            shiftRadius: 0,\r\n            dRadius: 0,\r\n            dInnerRadius: 0\r\n        });\r\n        {\r\n            const rule = r(\"Tick\");\r\n            rule.setAll({\r\n                strokeOpacity: .15,\r\n                isMeasured: false,\r\n                length: 4.5,\r\n                position: \"absolute\",\r\n                crisp: true\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"grid\");\r\n        }\r\n        r(\"Bullet\").setAll({\r\n            locationX: 0.5,\r\n            locationY: 0.5\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Tooltip\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Tooltip\").setAll({\r\n            position: \"absolute\",\r\n            getFillFromSprite: true,\r\n            getStrokeFromSprite: false,\r\n            autoTextColor: true,\r\n            paddingTop: 9,\r\n            paddingBottom: 8,\r\n            paddingLeft: 10,\r\n            paddingRight: 10,\r\n            marginBottom: 5,\r\n            pointerOrientation: \"vertical\",\r\n            centerX: _core_util_Percent__WEBPACK_IMPORTED_MODULE_3__.p50,\r\n            centerY: _core_util_Percent__WEBPACK_IMPORTED_MODULE_3__.p50,\r\n            animationEasing: _core_util_Ease__WEBPACK_IMPORTED_MODULE_2__.out(_core_util_Ease__WEBPACK_IMPORTED_MODULE_2__.cubic),\r\n            exportable: false\r\n            //layer: 100\r\n        });\r\n        r(\"Polygon\").setAll({\r\n            animationEasing: _core_util_Ease__WEBPACK_IMPORTED_MODULE_2__.out(_core_util_Ease__WEBPACK_IMPORTED_MODULE_2__.cubic),\r\n        });\r\n        {\r\n            const rule = r(\"PointedRectangle\", [\"tooltip\", \"background\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0.9,\r\n                cornerRadius: 4,\r\n                pointerLength: 4,\r\n                pointerBaseWidth: 8,\r\n                fillOpacity: 0.9,\r\n                stroke: _core_util_Color__WEBPACK_IMPORTED_MODULE_1__.Color.fromHex(0xffffff)\r\n            });\r\n        }\r\n        {\r\n            const rule = r(\"Label\", [\"tooltip\"]);\r\n            rule.setAll({\r\n                role: \"tooltip\",\r\n                populateText: true,\r\n                paddingRight: 0,\r\n                paddingTop: 0,\r\n                paddingLeft: 0,\r\n                paddingBottom: 0\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeText\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Button\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Button\").setAll({\r\n            paddingTop: 8,\r\n            paddingBottom: 8,\r\n            paddingLeft: 10,\r\n            paddingRight: 10,\r\n            interactive: true,\r\n            layout: horizontalLayout,\r\n            interactiveChildren: false,\r\n            setStateOnChildren: true,\r\n            focusable: true\r\n        });\r\n        r(\"Button\").states.create(\"hover\", {});\r\n        r(\"Button\").states.create(\"down\", { stateAnimationDuration: 0 });\r\n        r(\"Button\").states.create(\"active\", {});\r\n        r(\"Button\").states.create(\"disabled\", {\r\n            forceInactive: true\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"button\", \"background\"]);\r\n            setColor(rule, \"fill\", ic, \"primaryButton\");\r\n            setColor(rule, \"stroke\", ic, \"primaryButtonStroke\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"button\", \"background\"]).states.create(\"hover\", {});\r\n            setColor(rule, \"fill\", ic, \"primaryButtonHover\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"button\", \"background\"]).states.create(\"down\", { stateAnimationDuration: 0 });\r\n            setColor(rule, \"fill\", ic, \"primaryButtonDown\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"button\", \"background\"]).states.create(\"active\", {});\r\n            setColor(rule, \"fill\", ic, \"primaryButtonActive\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"button\", \"background\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"fill\", ic, \"primaryButtonDisabled\");\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"button\", \"icon\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"fill\", ic, \"primaryButtonTextDisabled\");\r\n        }\r\n        {\r\n            const rule = r(\"Label\", [\"button\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"fill\", ic, \"primaryButtonTextDisabled\");\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"button\", \"icon\"]);\r\n            rule.setAll({\r\n                forceInactive: true\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"primaryButtonText\");\r\n        }\r\n        {\r\n            const rule = r(\"Label\", [\"button\"]);\r\n            setColor(rule, \"fill\", ic, \"primaryButtonText\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/xy: ZoomOutButton\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Button\", [\"zoom\"]).setAll({\r\n            paddingTop: 18,\r\n            paddingBottom: 18,\r\n            paddingLeft: 12,\r\n            paddingRight: 12,\r\n            centerX: 46,\r\n            centerY: -10,\r\n            y: 0,\r\n            x: _core_util_Percent__WEBPACK_IMPORTED_MODULE_3__.p100,\r\n            role: \"button\",\r\n            ariaLabel: language.translate(\"Zoom Out\"),\r\n            layer: 30\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"button\", \"zoom\"]);\r\n            rule.setAll({\r\n                cornerRadiusBL: 40,\r\n                cornerRadiusBR: 40,\r\n                cornerRadiusTL: 40,\r\n                cornerRadiusTR: 40\r\n            });\r\n            setColor(rule, \"fill\", ic, \"primaryButton\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"button\", \"zoom\"]).states.create(\"hover\", {});\r\n            setColor(rule, \"fill\", ic, \"primaryButtonHover\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"button\", \"zoom\"]).states.create(\"down\", { stateAnimationDuration: 0 });\r\n            setColor(rule, \"fill\", ic, \"primaryButtonDown\");\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"icon\", \"button\", \"zoom\"]);\r\n            rule.setAll({\r\n                crisp: true,\r\n                strokeOpacity: 0.7,\r\n                draw: (display) => {\r\n                    display.moveTo(0, 0);\r\n                    display.lineTo(12, 0);\r\n                }\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"primaryButtonText\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: ResizeButton\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Button\", [\"resize\"]).setAll({\r\n            paddingTop: 9,\r\n            paddingBottom: 9,\r\n            paddingLeft: 13,\r\n            paddingRight: 13,\r\n            draggable: true,\r\n            centerX: _core_util_Percent__WEBPACK_IMPORTED_MODULE_3__.p50,\r\n            centerY: _core_util_Percent__WEBPACK_IMPORTED_MODULE_3__.p50,\r\n            position: \"absolute\",\r\n            role: \"slider\",\r\n            ariaValueMin: \"0\",\r\n            ariaValueMax: \"100\",\r\n            ariaLabel: language.translate(\"Use up and down arrows to move selection\")\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"resize\", \"button\"]);\r\n            rule.setAll({\r\n                cornerRadiusBL: 40,\r\n                cornerRadiusBR: 40,\r\n                cornerRadiusTL: 40,\r\n                cornerRadiusTR: 40\r\n            });\r\n            setColor(rule, \"fill\", ic, \"secondaryButton\");\r\n            setColor(rule, \"stroke\", ic, \"secondaryButtonStroke\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"resize\", \"button\"]).states.create(\"hover\", {});\r\n            setColor(rule, \"fill\", ic, \"secondaryButtonHover\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"resize\", \"button\"]).states.create(\"down\", { stateAnimationDuration: 0 });\r\n            setColor(rule, \"fill\", ic, \"secondaryButtonDown\");\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"resize\", \"button\", \"icon\"]);\r\n            rule.setAll({\r\n                interactive: false,\r\n                crisp: true,\r\n                strokeOpacity: 0.5,\r\n                draw: (display) => {\r\n                    display.moveTo(0, 0.5);\r\n                    display.lineTo(0, 12.5);\r\n                    display.moveTo(4, 0.5);\r\n                    display.lineTo(4, 12.5);\r\n                }\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"secondaryButtonText\");\r\n        }\r\n        r(\"Button\", [\"resize\", \"vertical\"]).setAll({\r\n            rotation: 90,\r\n            cursorOverStyle: \"ns-resize\"\r\n        });\r\n        r(\"Button\", [\"resize\", \"horizontal\"]).setAll({\r\n            cursorOverStyle: \"ew-resize\"\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: PlayButton\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Button\", [\"play\"]).setAll({\r\n            paddingTop: 13,\r\n            paddingBottom: 13,\r\n            paddingLeft: 14,\r\n            paddingRight: 14,\r\n            ariaLabel: language.translate(\"Play\"),\r\n            toggleKey: \"active\"\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"play\", \"background\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0.5,\r\n                cornerRadiusBL: 100,\r\n                cornerRadiusBR: 100,\r\n                cornerRadiusTL: 100,\r\n                cornerRadiusTR: 100\r\n            });\r\n            setColor(rule, \"fill\", ic, \"primaryButton\");\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"play\", \"icon\"]);\r\n            rule.setAll({\r\n                stateAnimationDuration: 0,\r\n                dx: 1,\r\n                draw: (display) => {\r\n                    display.moveTo(0, -5);\r\n                    display.lineTo(8, 0);\r\n                    display.lineTo(0, 5);\r\n                    display.lineTo(0, -5);\r\n                }\r\n            });\r\n            setColor(rule, \"fill\", ic, \"primaryButtonText\");\r\n        }\r\n        r(\"Graphics\", [\"play\", \"icon\"]).states.create(\"default\", {\r\n            stateAnimationDuration: 0\r\n        });\r\n        r(\"Graphics\", [\"play\", \"icon\"]).states.create(\"active\", {\r\n            stateAnimationDuration: 0,\r\n            draw: (display) => {\r\n                display.moveTo(-4, -5);\r\n                display.lineTo(-1, -5);\r\n                display.lineTo(-1, 5);\r\n                display.lineTo(-4, 5);\r\n                display.lineTo(-4, -5);\r\n                display.moveTo(4, -5);\r\n                display.lineTo(1, -5);\r\n                display.lineTo(1, 5);\r\n                display.lineTo(4, 5);\r\n                display.lineTo(4, -5);\r\n            }\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: SwitchButton\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Button\", [\"switch\"]).setAll({\r\n            paddingTop: 4,\r\n            paddingBottom: 4,\r\n            paddingLeft: 4,\r\n            paddingRight: 4,\r\n            ariaLabel: language.translate(\"Press ENTER to toggle\"),\r\n            toggleKey: \"active\",\r\n            width: 40,\r\n            height: 24,\r\n            layout: null\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"switch\", \"background\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0.5,\r\n                cornerRadiusBL: 100,\r\n                cornerRadiusBR: 100,\r\n                cornerRadiusTL: 100,\r\n                cornerRadiusTR: 100\r\n            });\r\n            setColor(rule, \"fill\", ic, \"primaryButton\");\r\n        }\r\n        {\r\n            const rule = r(\"Circle\", [\"switch\", \"icon\"]);\r\n            rule.setAll({\r\n                radius: 8,\r\n                centerY: 0,\r\n                centerX: 0,\r\n                dx: 0\r\n            });\r\n            setColor(rule, \"fill\", ic, \"primaryButtonText\");\r\n        }\r\n        r(\"Graphics\", [\"switch\", \"icon\"]).states.create(\"active\", {\r\n            dx: 16\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Scrollbar\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Scrollbar\").setAll({\r\n            start: 0,\r\n            end: 1,\r\n            layer: 30,\r\n            animationEasing: _core_util_Ease__WEBPACK_IMPORTED_MODULE_2__.out(_core_util_Ease__WEBPACK_IMPORTED_MODULE_2__.cubic)\r\n        });\r\n        r(\"Scrollbar\", [\"vertical\"]).setAll({\r\n            marginRight: 13,\r\n            marginLeft: 13,\r\n            minWidth: 12,\r\n            height: _core_util_Percent__WEBPACK_IMPORTED_MODULE_3__.p100\r\n        });\r\n        r(\"Scrollbar\", [\"horizontal\"]).setAll({\r\n            marginTop: 13,\r\n            marginBottom: 13,\r\n            minHeight: 12,\r\n            width: _core_util_Percent__WEBPACK_IMPORTED_MODULE_3__.p100\r\n        });\r\n        this.rule(\"Button\", [\"scrollbar\"]).setAll({\r\n            exportable: false\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"scrollbar\", \"main\", \"background\"]);\r\n            rule.setAll({\r\n                cornerRadiusTL: 8,\r\n                cornerRadiusBL: 8,\r\n                cornerRadiusTR: 8,\r\n                cornerRadiusBR: 8,\r\n                fillOpacity: 0.8,\r\n            });\r\n            setColor(rule, \"fill\", ic, \"fill\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\"]);\r\n            rule.setAll({\r\n                role: \"slider\",\r\n                ariaLive: \"polite\",\r\n                position: \"absolute\",\r\n                draggable: true\r\n            });\r\n            setColor(rule, \"fill\", ic, \"secondaryButton\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\"]).states.create(\"hover\", {});\r\n            setColor(rule, \"fill\", ic, \"secondaryButtonHover\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\"]).states.create(\"down\", { stateAnimationDuration: 0 });\r\n            setColor(rule, \"fill\", ic, \"secondaryButtonDown\");\r\n        }\r\n        r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\", \"vertical\"]).setAll({\r\n            x: _core_util_Percent__WEBPACK_IMPORTED_MODULE_3__.p50,\r\n            width: _core_util_Percent__WEBPACK_IMPORTED_MODULE_3__.p100,\r\n            centerX: _core_util_Percent__WEBPACK_IMPORTED_MODULE_3__.p50,\r\n            ariaLabel: language.translate(\"Use up and down arrows to move selection\")\r\n        });\r\n        r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\", \"horizontal\"]).setAll({\r\n            y: _core_util_Percent__WEBPACK_IMPORTED_MODULE_3__.p50,\r\n            centerY: _core_util_Percent__WEBPACK_IMPORTED_MODULE_3__.p50,\r\n            height: _core_util_Percent__WEBPACK_IMPORTED_MODULE_3__.p100,\r\n            ariaLabel: language.translate(\"Use left and right arrows to move selection\")\r\n        });\r\n        // @todo: is this needed? used to be \"ContentScrollbar\"\r\n        // r(\"Scrollbar\", [\"content?\"]).setAll({\r\n        // \tmarginRight: 0,\r\n        // \tmarginLeft: 5,\r\n        // \tlayer: 5\r\n        // });\r\n        /**\r\n         * ========================================================================\r\n         * charts/xy\r\n         * ========================================================================\r\n         *\r\n         * This needs to be in DefaultTheme because it's the only theme that is\r\n         * automatically applied to Root, and tooltips different ancestors\r\n         * than actual charts using them.\r\n         */\r\n        {\r\n            const rule = r(\"PointedRectangle\", [\"axis\", \"tooltip\", \"background\"]);\r\n            rule.setAll({\r\n                cornerRadius: 0\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n        }\r\n        r(\"Label\", [\"axis\", \"tooltip\"]).setAll({\r\n            role: undefined\r\n        });\r\n        r(\"Label\", [\"axis\", \"tooltip\", \"y\"]).setAll({\r\n            textAlign: \"right\"\r\n        });\r\n        r(\"Label\", [\"axis\", \"tooltip\", \"y\", \"opposite\"]).setAll({\r\n            textAlign: \"left\"\r\n        });\r\n        r(\"Label\", [\"axis\", \"tooltip\", \"x\"]).setAll({\r\n            textAlign: \"center\"\r\n        });\r\n        r(\"Tooltip\", [\"categoryaxis\"]).setAll({\r\n            labelText: \"{category}\"\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * Shapes\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        // Class: Graphics\r\n        r(\"Star\").setAll({\r\n            spikes: 5,\r\n            innerRadius: 5,\r\n            radius: 10\r\n        });\r\n        // STOCK\r\n        r(\"Tooltip\", [\"stock\"]).setAll({\r\n            paddingTop: 6,\r\n            paddingBottom: 5,\r\n            paddingLeft: 7,\r\n            paddingRight: 7\r\n        });\r\n        r(\"Tooltip\", ['indicator']).setAll({\r\n            forceHidden: true\r\n        });\r\n        r(\"PointedRectangle\", [\"tooltip\", \"stock\", \"axis\"]).setAll({\r\n            pointerLength: 0,\r\n            pointerBaseWidth: 0,\r\n            cornerRadius: 3\r\n        });\r\n        r(\"Label\", [\"tooltip\", \"stock\"]).setAll({\r\n            fontSize: \"0.8em\"\r\n        });\r\n        // resizer\r\n        r(\"SpriteResizer\").setAll({\r\n            rotationStep: 10,\r\n            isMeasured: false\r\n        });\r\n        {\r\n            const rule = r(\"Container\", [\"resizer\", \"grip\"]);\r\n            rule.states.create(\"hover\", {});\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"resizer\", \"grip\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0.7,\r\n                strokeWidth: 1,\r\n                fillOpacity: 1,\r\n                width: 12,\r\n                height: 12\r\n            });\r\n            setColor(rule, \"fill\", ic, \"background\");\r\n            setColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"resizer\", \"grip\", \"outline\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0,\r\n                fillOpacity: 0,\r\n                width: 20,\r\n                height: 20\r\n            });\r\n            rule.states.create(\"hover\", {\r\n                fillOpacity: 0.3\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n        }\r\n        r(\"RoundedRectangle\", [\"resizer\", \"grip\", \"left\"]).setAll({\r\n            cornerRadiusBL: 0,\r\n            cornerRadiusBR: 0,\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusTR: 0\r\n        });\r\n        r(\"RoundedRectangle\", [\"resizer\", \"grip\", \"right\"]).setAll({\r\n            cornerRadiusBL: 0,\r\n            cornerRadiusBR: 0,\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusTR: 0\r\n        });\r\n        {\r\n            const rule = r(\"Rectangle\", [\"resizer\", \"rectangle\"]);\r\n            rule.setAll({\r\n                strokeDasharray: [2, 2],\r\n                strokeOpacity: 0.5,\r\n                strokeWidth: 1\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n        }\r\n        r(\"Graphics\", [\"button\", \"plus\", \"icon\"]).setAll({\r\n            x: _core_util_Percent__WEBPACK_IMPORTED_MODULE_3__.p50,\r\n            y: _core_util_Percent__WEBPACK_IMPORTED_MODULE_3__.p50,\r\n            draw: (display) => {\r\n                display.moveTo(-4, 0);\r\n                display.lineTo(4, 0);\r\n                display.moveTo(0, -4);\r\n                display.lineTo(0, 4);\r\n            }\r\n        });\r\n        r(\"Graphics\", [\"button\", \"minus\", \"icon\"]).setAll({\r\n            x: _core_util_Percent__WEBPACK_IMPORTED_MODULE_3__.p50,\r\n            y: _core_util_Percent__WEBPACK_IMPORTED_MODULE_3__.p50,\r\n            draw: (display) => {\r\n                display.moveTo(-4, 0);\r\n                display.lineTo(4, 0);\r\n            }\r\n        });\r\n        r(\"Graphics\", [\"button\", \"home\", \"icon\"]).setAll({\r\n            x: _core_util_Percent__WEBPACK_IMPORTED_MODULE_3__.p50,\r\n            y: _core_util_Percent__WEBPACK_IMPORTED_MODULE_3__.p50,\r\n            svgPath: \"M 8 -1 L 6 -1 L 6 7 L 2 7 L 2 1 L -2 1 L -2 7 L -6 7 L -6 -1 L -8 -1 L 0 -9 L 8 -1 Z M 8 -1\"\r\n        });\r\n        r(\"Button\", [\"zoomtools\"]).setAll({\r\n            marginTop: 1,\r\n            marginBottom: 2\r\n        });\r\n        r(\"ZoomTools\").setAll({\r\n            x: _core_util_Percent__WEBPACK_IMPORTED_MODULE_3__.p100,\r\n            centerX: _core_util_Percent__WEBPACK_IMPORTED_MODULE_3__.p100,\r\n            y: _core_util_Percent__WEBPACK_IMPORTED_MODULE_3__.p100,\r\n            centerY: _core_util_Percent__WEBPACK_IMPORTED_MODULE_3__.p100,\r\n            paddingRight: 10,\r\n            paddingBottom: 10\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=DefaultTheme.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/.internal/themes/DefaultTheme.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@amcharts/amcharts5/locales/en.js":
/*!********************************************************!*\
  !*** ./node_modules/@amcharts/amcharts5/locales/en.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/**\r\n * amCharts 5 locale\r\n *\r\n * Locale: en\r\n * Language: International English\r\n * Author: Martynas Majeris\r\n *\r\n * Follow instructions in [on this page](https://www.amcharts.com/docs/v5/tutorials/creating-translations/) to make corrections or add new translations.\r\n *\r\n * ---\r\n * Edit but leave the header section above this line. You can remove any\r\n * subsequent comment sections.\r\n * ---\r\n *\r\n * Use this file as a template to create translations. Leave the key part in\r\n * English intact. Fill the value with a translation.\r\n *\r\n * Empty string means no translation, so default \"International English\"\r\n * will be used.\r\n *\r\n * If you need the translation to literally be an empty string, use `null`\r\n * instead.\r\n *\r\n * IMPORTANT:\r\n * When translating make good effort to keep the translation length\r\n * at least the same chartcount as the English, especially for short prompts.\r\n *\r\n * Having significantly longer prompts may distort the actual charts.\r\n *\r\n * NOTE:\r\n * Some prompts - like months or weekdays - come in two versions: full and\r\n * shortened.\r\n *\r\n * If there's no official shortened version of these in your language, and it\r\n * would not be possible to invent such short versions that don't seem weird\r\n * to native speakers of that language, fill those with the same as full\r\n * version.\r\n *\r\n * PLACEHOLDERS:\r\n * Some prompts have placeholders like \"%1\". Those will be replaced by actual\r\n * values during translation and should be retained in the translated prompts.\r\n *\r\n * Placeholder positions may be changed to better suit structure of the\r\n * sentence.\r\n *\r\n * For example \"From %1 to %2\", when actually used will replace \"%1\" with an\r\n * actual value representing range start, and \"%2\" will be replaced by end\r\n * value.\r\n *\r\n * E.g. in a Scrollbar for Value axis \"From %1 to %2\" will become\r\n * \"From 100 to 200\". You may translate \"From\" and \"to\", as well as re-arrange\r\n * the order of the prompt itself, but make sure the \"%1\" and \"%2\" remain, in\r\n * places where they will make sense.\r\n *\r\n * Save the file as language_LOCALE, i.e. `en_GB.ts`, `fr_FR.ts`, etc.\r\n */\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\r\n    \"firstDayOfWeek\": 1,\r\n    // Number formatting options.\r\n    // \r\n    // Please check with the local standards which separator is accepted to be\r\n    // used for separating decimals, and which for thousands.\r\n    \"_decimalSeparator\": \".\",\r\n    \"_thousandSeparator\": \",\",\r\n    // Position of the percent sign in numbers\r\n    \"_percentPrefix\": null,\r\n    \"_percentSuffix\": \"%\",\r\n    // Suffixes for numbers\r\n    // When formatting numbers, big or small numers might be reformatted to\r\n    // shorter version, by applying a suffix.\r\n    // \r\n    // For example, 1000000 might become \"1m\".\r\n    // Or 1024 might become \"1KB\" if we're formatting byte numbers.\r\n    // \r\n    // This section defines such suffixes for all such cases.\r\n    \"_big_number_suffix_3\": \"k\",\r\n    \"_big_number_suffix_6\": \"M\",\r\n    \"_big_number_suffix_9\": \"G\",\r\n    \"_big_number_suffix_12\": \"T\",\r\n    \"_big_number_suffix_15\": \"P\",\r\n    \"_big_number_suffix_18\": \"E\",\r\n    \"_big_number_suffix_21\": \"Z\",\r\n    \"_big_number_suffix_24\": \"Y\",\r\n    \"_small_number_suffix_3\": \"m\",\r\n    \"_small_number_suffix_6\": \"μ\",\r\n    \"_small_number_suffix_9\": \"n\",\r\n    \"_small_number_suffix_12\": \"p\",\r\n    \"_small_number_suffix_15\": \"f\",\r\n    \"_small_number_suffix_18\": \"a\",\r\n    \"_small_number_suffix_21\": \"z\",\r\n    \"_small_number_suffix_24\": \"y\",\r\n    \"_byte_suffix_B\": \"B\",\r\n    \"_byte_suffix_KB\": \"KB\",\r\n    \"_byte_suffix_MB\": \"MB\",\r\n    \"_byte_suffix_GB\": \"GB\",\r\n    \"_byte_suffix_TB\": \"TB\",\r\n    \"_byte_suffix_PB\": \"PB\",\r\n    // Default date formats for various periods.\r\n    // \r\n    // This should reflect official or de facto formatting universally accepted\r\n    // in the country translation is being made for\r\n    // Available format codes here:\r\n    // https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/#Format_codes\r\n    // \r\n    // This will be used when formatting date/time for particular granularity,\r\n    // e.g. \"_date_hour\" will be shown whenever we need to show time as hours.\r\n    // \r\n    // \"date\" is used as in default date format when showing standalone dates.\r\n    \"_date\": \"yyyy-MM-dd\",\r\n    \"_date_millisecond\": \"mm:ss SSS\",\r\n    \"_date_millisecond_full\": \"HH:mm:ss SSS\",\r\n    \"_date_second\": \"HH:mm:ss\",\r\n    \"_date_second_full\": \"HH:mm:ss\",\r\n    \"_date_minute\": \"HH:mm\",\r\n    \"_date_minute_full\": \"HH:mm - MMM dd, yyyy\",\r\n    \"_date_hour\": \"HH:mm\",\r\n    \"_date_hour_full\": \"HH:mm - MMM dd, yyyy\",\r\n    \"_date_day\": \"MMM dd\",\r\n    \"_date_day_full\": \"MMM dd, yyyy\",\r\n    \"_date_week\": \"ww\",\r\n    \"_date_week_full\": \"MMM dd, yyyy\",\r\n    \"_date_month\": \"MMM\",\r\n    \"_date_month_full\": \"MMM, yyyy\",\r\n    \"_date_year\": \"yyyy\",\r\n    // Default duration formats for various base units.\r\n    // \r\n    // This will be used by DurationFormatter to format numeric values into\r\n    // duration.\r\n    // \r\n    // Notice how each duration unit comes in several versions. This is to ensure\r\n    // that each base unit is shown correctly.\r\n    // \r\n    // For example, if we have baseUnit set to \"second\", meaning our duration is\r\n    // in seconds.\r\n    // \r\n    // If we pass in `50` to formatter, it will know that we have just 50 seconds\r\n    // (less than a minute) so it will use format in `\"_duration_second\"` (\"ss\"),\r\n    // and the formatted result will be in like `\"50\"`.\r\n    // \r\n    // If we pass in `70`, which is more than a minute, the formatter will switch\r\n    // to `\"_duration_second_minute\"` (\"mm:ss\"), resulting in \"01:10\" formatted\r\n    // text.\r\n    // \r\n    // Available codes here:\r\n    // https://www.amcharts.com/docs/v4/concepts/formatters/formatting-duration/#Available_Codes\r\n    \"_duration_millisecond\": \"SSS\",\r\n    \"_duration_millisecond_second\": \"ss.SSS\",\r\n    \"_duration_millisecond_minute\": \"mm:ss SSS\",\r\n    \"_duration_millisecond_hour\": \"hh:mm:ss SSS\",\r\n    \"_duration_millisecond_day\": \"d'd' mm:ss SSS\",\r\n    \"_duration_millisecond_week\": \"d'd' mm:ss SSS\",\r\n    \"_duration_millisecond_month\": \"M'm' dd'd' mm:ss SSS\",\r\n    \"_duration_millisecond_year\": \"y'y' MM'm' dd'd' mm:ss SSS\",\r\n    \"_duration_second\": \"ss\",\r\n    \"_duration_second_minute\": \"mm:ss\",\r\n    \"_duration_second_hour\": \"hh:mm:ss\",\r\n    \"_duration_second_day\": \"d'd' hh:mm:ss\",\r\n    \"_duration_second_week\": \"d'd' hh:mm:ss\",\r\n    \"_duration_second_month\": \"M'm' dd'd' hh:mm:ss\",\r\n    \"_duration_second_year\": \"y'y' MM'm' dd'd' hh:mm:ss\",\r\n    \"_duration_minute\": \"mm\",\r\n    \"_duration_minute_hour\": \"hh:mm\",\r\n    \"_duration_minute_day\": \"d'd' hh:mm\",\r\n    \"_duration_minute_week\": \"d'd' hh:mm\",\r\n    \"_duration_minute_month\": \"M'm' dd'd' hh:mm\",\r\n    \"_duration_minute_year\": \"y'y' MM'm' dd'd' hh:mm\",\r\n    \"_duration_hour\": \"hh'h'\",\r\n    \"_duration_hour_day\": \"d'd' hh'h'\",\r\n    \"_duration_hour_week\": \"d'd' hh'h'\",\r\n    \"_duration_hour_month\": \"M'm' dd'd' hh'h'\",\r\n    \"_duration_hour_year\": \"y'y' MM'm' dd'd' hh'h'\",\r\n    \"_duration_day\": \"d'd'\",\r\n    \"_duration_day_week\": \"d'd'\",\r\n    \"_duration_day_month\": \"M'm' dd'd'\",\r\n    \"_duration_day_year\": \"y'y' MM'm' dd'd'\",\r\n    \"_duration_week\": \"w'w'\",\r\n    \"_duration_week_month\": \"w'w'\",\r\n    \"_duration_week_year\": \"w'w'\",\r\n    \"_duration_month\": \"M'm'\",\r\n    \"_duration_month_year\": \"y'y' MM'm'\",\r\n    \"_duration_year\": \"y'y'\",\r\n    // Era translations\r\n    \"_era_ad\": \"AD\",\r\n    \"_era_bc\": \"BC\",\r\n    // Day part, used in 12-hour formats, e.g. 5 P.M.\r\n    // Please note that these come in 3 variants:\r\n    // * one letter (e.g. \"A\")\r\n    // * two letters (e.g. \"AM\")\r\n    // * two letters with dots (e.g. \"A.M.\")\r\n    // \r\n    // All three need to to be translated even if they are all the same. Some\r\n    // users might use one, some the other.\r\n    \"A\": \"\",\r\n    \"P\": \"\",\r\n    \"AM\": \"\",\r\n    \"PM\": \"\",\r\n    \"A.M.\": \"\",\r\n    \"P.M.\": \"\",\r\n    // Date-related stuff.\r\n    // \r\n    // When translating months, if there's a difference, use the form which is\r\n    // best for a full date, e.g. as you would use it in \"2018 January 1\".\r\n    // \r\n    // Note that May is listed twice. This is because in English May is the same\r\n    // in both long and short forms, while in other languages it may not be the\r\n    // case. Translate \"May\" to full word, while \"May(short)\" to shortened\r\n    // version.\r\n    // \r\n    // Should month names and weekdays be capitalized or not?\r\n    // \r\n    // Rule of thumb is this: if the names should always be capitalized,\r\n    // regardless of name position within date (\"January\", \"21st January 2018\",\r\n    // etc.) use capitalized names. Otherwise enter all lowercase.\r\n    // \r\n    // The date formatter will automatically capitalize names if they are the\r\n    // first (or only) word in resulting date.\r\n    \"January\": \"\",\r\n    \"February\": \"\",\r\n    \"March\": \"\",\r\n    \"April\": \"\",\r\n    \"May\": \"\",\r\n    \"June\": \"\",\r\n    \"July\": \"\",\r\n    \"August\": \"\",\r\n    \"September\": \"\",\r\n    \"October\": \"\",\r\n    \"November\": \"\",\r\n    \"December\": \"\",\r\n    \"Jan\": \"\",\r\n    \"Feb\": \"\",\r\n    \"Mar\": \"\",\r\n    \"Apr\": \"\",\r\n    \"May(short)\": \"May\",\r\n    \"Jun\": \"\",\r\n    \"Jul\": \"\",\r\n    \"Aug\": \"\",\r\n    \"Sep\": \"\",\r\n    \"Oct\": \"\",\r\n    \"Nov\": \"\",\r\n    \"Dec\": \"\",\r\n    // Weekdays.\r\n    \"Sunday\": \"\",\r\n    \"Monday\": \"\",\r\n    \"Tuesday\": \"\",\r\n    \"Wednesday\": \"\",\r\n    \"Thursday\": \"\",\r\n    \"Friday\": \"\",\r\n    \"Saturday\": \"\",\r\n    \"Sun\": \"\",\r\n    \"Mon\": \"\",\r\n    \"Tue\": \"\",\r\n    \"Wed\": \"\",\r\n    \"Thu\": \"\",\r\n    \"Fri\": \"\",\r\n    \"Sat\": \"\",\r\n    // Date ordinal function.\r\n    // \r\n    // This is used when adding number ordinal when formatting days in dates.\r\n    // \r\n    // E.g. \"January 1st\", \"February 2nd\".\r\n    // \r\n    // The function accepts day number, and returns a string to be added to the\r\n    // day, like in default English translation, if we pass in 2, we will receive\r\n    // \"nd\" back.\r\n    \"_dateOrd\": function (day) {\r\n        let res = \"th\";\r\n        if ((day < 11) || (day > 13)) {\r\n            switch (day % 10) {\r\n                case 1:\r\n                    res = \"st\";\r\n                    break;\r\n                case 2:\r\n                    res = \"nd\";\r\n                    break;\r\n                case 3:\r\n                    res = \"rd\";\r\n                    break;\r\n            }\r\n        }\r\n        return res;\r\n    },\r\n    // Various chart controls.\r\n    // Shown as a tooltip on zoom out button.\r\n    \"Zoom Out\": \"\",\r\n    // Timeline buttons\r\n    \"Play\": \"\",\r\n    \"Stop\": \"\",\r\n    // Chart's Legend screen reader title.\r\n    \"Legend\": \"\",\r\n    // Legend's item screen reader indicator.\r\n    \"Press ENTER to toggle\": \"\",\r\n    // Shown when the chart is busy loading something.\r\n    \"Loading\": \"\",\r\n    // Shown as the first button in the breadcrumb navigation, e.g.:\r\n    // Home > First level > ...\r\n    \"Home\": \"\",\r\n    // Chart types.\r\n    // Those are used as default screen reader titles for the main chart element\r\n    // unless developer has set some more descriptive title.\r\n    \"Chart\": \"\",\r\n    \"Serial chart\": \"\",\r\n    \"X/Y chart\": \"\",\r\n    \"Pie chart\": \"\",\r\n    \"Gauge chart\": \"\",\r\n    \"Radar chart\": \"\",\r\n    \"Sankey diagram\": \"\",\r\n    \"Flow diagram\": \"\",\r\n    \"Chord diagram\": \"\",\r\n    \"TreeMap chart\": \"\",\r\n    \"Force directed tree\": \"\",\r\n    \"Sliced chart\": \"\",\r\n    // Series types.\r\n    // Used to name series by type for screen readers if they do not have their\r\n    // name set.\r\n    \"Series\": \"\",\r\n    \"Candlestick Series\": \"\",\r\n    \"OHLC Series\": \"\",\r\n    \"Column Series\": \"\",\r\n    \"Line Series\": \"\",\r\n    \"Pie Slice Series\": \"\",\r\n    \"Funnel Series\": \"\",\r\n    \"Pyramid Series\": \"\",\r\n    \"X/Y Series\": \"\",\r\n    // Map-related stuff.\r\n    \"Map\": \"\",\r\n    \"Press ENTER to zoom in\": \"\",\r\n    \"Press ENTER to zoom out\": \"\",\r\n    \"Use arrow keys to zoom in and out\": \"\",\r\n    \"Use plus and minus keys on your keyboard to zoom in and out\": \"\",\r\n    // Export-related stuff.\r\n    // These prompts are used in Export menu labels.\r\n    // \r\n    // \"Export\" is the top-level menu item.\r\n    // \r\n    // \"Image\", \"Data\", \"Print\" as second-level indicating type of export\r\n    // operation.\r\n    // \r\n    // Leave actual format untranslated, unless you absolutely know that they\r\n    // would convey more meaning in some other way.\r\n    \"Export\": \"\",\r\n    \"Image\": \"\",\r\n    \"Data\": \"\",\r\n    \"Print\": \"\",\r\n    \"Press ENTER or use arrow keys to navigate\": \"\",\r\n    \"Press ENTER to open\": \"\",\r\n    \"Press ENTER to print.\": \"\",\r\n    \"Press ENTER to export as %1.\": \"\",\r\n    \"(Press ESC to close this message)\": \"\",\r\n    \"Image Export Complete\": \"\",\r\n    \"Export operation took longer than expected. Something might have gone wrong.\": \"\",\r\n    \"Saved from\": \"\",\r\n    \"PNG\": \"\",\r\n    \"JPG\": \"\",\r\n    \"GIF\": \"\",\r\n    \"SVG\": \"\",\r\n    \"PDF\": \"\",\r\n    \"JSON\": \"\",\r\n    \"CSV\": \"\",\r\n    \"XLSX\": \"\",\r\n    \"HTML\": \"\",\r\n    // Scrollbar-related stuff.\r\n    // \r\n    // Scrollbar is a control which can zoom and pan the axes on the chart.\r\n    // \r\n    // Each scrollbar has two grips: left or right (for horizontal scrollbar) or\r\n    // upper and lower (for vertical one).\r\n    // \r\n    // Prompts change in relation to whether Scrollbar is vertical or horizontal.\r\n    // \r\n    // The final section is used to indicate the current range of selection.\r\n    \"Use TAB to select grip buttons or left and right arrows to change selection\": \"\",\r\n    \"Use left and right arrows to move selection\": \"\",\r\n    \"Use left and right arrows to move left selection\": \"\",\r\n    \"Use left and right arrows to move right selection\": \"\",\r\n    \"Use TAB select grip buttons or up and down arrows to change selection\": \"\",\r\n    \"Use up and down arrows to move selection\": \"\",\r\n    \"Use up and down arrows to move lower selection\": \"\",\r\n    \"Use up and down arrows to move upper selection\": \"\",\r\n    \"From %1 to %2\": \"\",\r\n    \"From %1\": \"\",\r\n    \"To %1\": \"\",\r\n    // Data loader-related.\r\n    \"No parser available for file: %1\": \"\",\r\n    \"Error parsing file: %1\": \"\",\r\n    \"Unable to load file: %1\": \"\",\r\n    \"Invalid date\": \"\",\r\n    // Common actions\r\n    \"Close\": \"\",\r\n    \"Minimize\": \"\"\r\n});\r\n//# sourceMappingURL=en.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@amcharts/amcharts5/locales/en.js\n");

/***/ })

};
;